import{$a as rg,Aa as M8,Ba as P8,Ca as t1,D as x2,Da as r1,Ea as Zi,Fa as Xe,Ga as tt,H as Qn,Ha as Vr,Ia as c4,Ja as w2,K as y2,Ka as un,La as T2,Ma as L8,Na as lr,Oa as Ko,Pa as Ji,Q as b2,Qa as z8,R as v2,Ra as B8,S as Xi,T as l4,Za as C2,ha as Ql,i as O8,ia as et,j as P0,la as Yi,n as a4,pa as e1,t as ju,ya as Xr,za as Yr}from"./chunk-EVS5LAQT.js";import"./chunk-KZAVUP2Y.js";import{b as f4,c as H8}from"./chunk-LGB3GLMH.js";import{c as tg}from"./chunk-T2NSUFSZ.js";import{c as eg}from"./chunk-32IAVZSY.js";import"./chunk-MFSGMIY7.js";import{a as G8,b as S2,c as u4}from"./chunk-ACEJN2MV.js";import{b as J8,c as Q8}from"./chunk-EEENIMDP.js";import{e as m4,i as Y8,n as Z8}from"./chunk-XQMGIZNC.js";import{a as V8,b as Yt,c as n1,f as tr,g as U8,k as W8,m as q8,t as eo,v as p4,w as K8,x as j8,z as X8}from"./chunk-DKJ7BJEZ.js";import{a as Is,b as g2,c as ke,d as ft,e as Vn,f as O}from"./chunk-EQVTEUXC.js";var dr=ke((Kne,og)=>{"use strict";og.exports={detecting:0,foundIt:1,notMe:2,start:0,error:1,itsMe:2,SHORTCUT_THRESHOLD:.95}});var ea=ke((jne,sg)=>{"use strict";var MO=dr();function PO(){this.reset=function(){this._mState=MO.detecting},this.getCharsetName=function(){return null},this.getSupportedCharsetNames=function(){throw new Error("Unimplemented method getSupportedCharsetNames()")},this.feed=function(r){},this.getState=function(){return this._mState},this.getConfidence=function(){return 0},this.filterHighBitOnly=function(r){return r=r.replace(/[\x00-\x7F]+/g," "),r},this.filterWithoutEnglishLetters=function(r){return r=r.replace(/[A-Za-z]+/g," "),r},this.removeXmlTags=function(r){for(var t="",e=!1,n=0,o=0;o<r.length;o++){var s=r[o];s==">"&&r[o-1]!=="?"?(n=o+1,e=!1):s=="<"&&r[o+1]!=="?"&&(o>n&&!e&&(t=t+r.substring(n,o)+" "),e=!0)}return e||(t=t+r.substring(n)),t}}sg.exports=PO});var ta=ke(Xu=>{"use strict";Xu.log=function(){};Xu.setLogger=function(t){Xu.enabled=!0,Xu.log=t}});var h4=ke((Yne,lg)=>{"use strict";var Yu=dr(),ag=ea(),ig=ta();function d4(){ag.apply(this);var r=this;function t(){r._mActiveNum=0,r._mProbers=[],r._mBestGuessProber=null}this.reset=function(){d4.prototype.reset.apply(this),this._mActiveNum=0;for(var e=0,n;n=this._mProbers[e];e++)n&&(n.reset(),n.active=!0,this._mActiveNum++);this._mBestGuessProber=null},this.getCharsetName=function(){return!this._mBestGuessProber&&(this.getConfidence(),!this._mBestGuessProber)?null:this._mBestGuessProber.getCharsetName()},this.getSupportedCharsetNames=function(){throw new Error("Unimplemented method getSupportedCharsetNames()")},this.feed=function(e){for(var n=0,o;o=this._mProbers[n];n++)if(!(!o||!o.active)){var s=o.feed(e);if(s){if(s==Yu.foundIt)return this._mBestGuessProber=o,this.getState();if(s==Yu.notMe&&(o.active=!1,this._mActiveNum--,this._mActiveNum<=0))return this._mState=Yu.notMe,this.getState()}}return this.getState()},this.getConfidence=function(){var e=this.getState();if(e==Yu.foundIt)return .99;if(e==Yu.notMe)return .01;var n=0;this._mBestGuessProber=null;for(var o=0,s;s=this._mProbers[o];o++)if(s){if(!s.active){ig.log(s.getCharsetName()+` not active
`);continue}var i=s.getConfidence();ig.log(s.getCharsetName()+" confidence = "+i+`
`),n<i&&(n=i,this._mBestGuessProber=s)}return this._mBestGuessProber?n:0},t()}d4.prototype=new ag;lg.exports=d4});var Ns=ke((Zne,ug)=>{"use strict";var cg=dr();function LO(r){var t=this;function e(n){t._mModel=n,t._mCurrentBytePos=0,t._mCurrentCharLen=0,t.reset()}this.reset=function(){this._mCurrentState=cg.start},this.nextState=function(n){var o=this._mModel.classTable[n.charCodeAt(0)];return this._mCurrentState==cg.start&&(this._mCurrentBytePos=0,this._mCurrentCharLen=this._mModel.charLenTable[o]),this._mCurrentState=this._mModel.stateTable[this._mCurrentState*this._mModel.classFactor+o],this._mCurrentBytePos++,this._mCurrentState},this.getCurrentCharLen=function(){return this._mCurrentCharLen},this.getCodingStateMachine=function(){return this._mModel.name},e(r)}ug.exports=LO});var L0=ke((Jne,mg)=>{"use strict";var pg=ea(),ra=dr(),zO=ta();function g4(){pg.apply(this);var r=this;function t(){r._mDistributionAnalyzer=null,r._mCodingSM=null,r._mLastChar=["\0","\0"]}this.reset=function(){g4.prototype.reset.apply(this),this._mCodingSM&&this._mCodingSM.reset(),this._mDistributionAnalyzer&&this._mDistributionAnalyzer.reset(),this._mLastChar=["\0","\0"]},this.getCharsetName=function(){},this.feed=function(e){for(var n=e.length,o=0;o<n;o++){var s=this._mCodingSM.nextState(e[o]);if(s==ra.error){zO.log(this.getCharsetName()+" prober hit error at byte "+o+`
`),this._mState=ra.notMe;break}else if(s==ra.itsMe){this._mState=ra.foundIt;break}else if(s==ra.start){var i=this._mCodingSM.getCurrentCharLen();o==0?(this._mLastChar[1]=e[0],this._mDistributionAnalyzer.feed(this._mLastChar.join(""),i)):this._mDistributionAnalyzer.feed(e.slice(o-1,o+1),i)}}return this._mLastChar[0]=e[n-1],this.getState()==ra.detecting&&this._mDistributionAnalyzer.gotEnoughData()&&this.getConfidence()>ra.SHORTCUT_THRESHOLD&&(this._mState=ra.foundIt),this.getState()},this.getConfidence=function(){return this._mDistributionAnalyzer.getConfidence()}}g4.prototype=new pg;mg.exports=g4});var dg=ke((Qne,fg)=>{"use strict";var rr=dr(),BO=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0],GO=[rr.error,rr.start,rr.start,3,rr.error,rr.error,rr.error,rr.error,rr.error,rr.error,rr.itsMe,rr.itsMe,rr.itsMe,rr.itsMe,rr.itsMe,rr.error,rr.error,rr.start,rr.start,rr.start,rr.start,rr.start,rr.start,rr.start],VO=[0,1,1,2,0];fg.exports={classTable:BO,classFactor:5,stateTable:GO,charLenTable:VO,name:"Big5"}});var hg=ke(k2=>{"use strict";k2.JIS_TYPICAL_DISTRIBUTION_RATIO=3;k2.JIS_TABLE_SIZE=4368;k2.JISCharToFreqOrder=[40,1,6,182,152,180,295,2127,285,381,3295,4304,3068,4606,3165,3510,3511,1822,2785,4607,1193,2226,5070,4608,171,2996,1247,18,179,5071,856,1661,1262,5072,619,127,3431,3512,3230,1899,1700,232,228,1294,1298,284,283,2041,2042,1061,1062,48,49,44,45,433,434,1040,1041,996,787,2997,1255,4305,2108,4609,1684,1648,5073,5074,5075,5076,5077,5078,3687,5079,4610,5080,3927,3928,5081,3296,3432,290,2285,1471,2187,5082,2580,2825,1303,2140,1739,1445,2691,3375,1691,3297,4306,4307,4611,452,3376,1182,2713,3688,3069,4308,5083,5084,5085,5086,5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,5111,5112,4097,5113,5114,5115,5116,5117,5118,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,5150,5151,5152,4612,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,1472,598,618,820,1205,1309,1412,1858,1307,1692,5176,5177,5178,5179,5180,5181,5182,1142,1452,1234,1172,1875,2043,2149,1793,1382,2973,925,2404,1067,1241,960,1377,2935,1491,919,1217,1865,2030,1406,1499,2749,4098,5183,5184,5185,5186,5187,5188,2561,4099,3117,1804,2049,3689,4309,3513,1663,5189,3166,3118,3298,1587,1561,3433,5190,3119,1625,2998,3299,4613,1766,3690,2786,4614,5191,5192,5193,5194,2161,26,3377,2,3929,20,3691,47,4100,50,17,16,35,268,27,243,42,155,24,154,29,184,4,91,14,92,53,396,33,289,9,37,64,620,21,39,321,5,12,11,52,13,3,208,138,0,7,60,526,141,151,1069,181,275,1591,83,132,1475,126,331,829,15,69,160,59,22,157,55,1079,312,109,38,23,25,10,19,79,5195,61,382,1124,8,30,5196,5197,5198,5199,5200,5201,5202,5203,5204,5205,5206,89,62,74,34,2416,112,139,196,271,149,84,607,131,765,46,88,153,683,76,874,101,258,57,80,32,364,121,1508,169,1547,68,235,145,2999,41,360,3027,70,63,31,43,259,262,1383,99,533,194,66,93,846,217,192,56,106,58,565,280,272,311,256,146,82,308,71,100,128,214,655,110,261,104,1140,54,51,36,87,67,3070,185,2618,2936,2020,28,1066,2390,2059,5207,5208,5209,5210,5211,5212,5213,5214,5215,5216,4615,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,3514,5237,5238,5239,5240,5241,5242,5243,5244,2297,2031,4616,4310,3692,5245,3071,5246,3598,5247,4617,3231,3515,5248,4101,4311,4618,3808,4312,4102,5249,4103,4104,3599,5250,5251,5252,5253,5254,5255,5256,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299,5300,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,363,642,2787,2878,2788,2789,2316,3232,2317,3434,2011,165,1942,3930,3931,3932,3933,5382,4619,5383,4620,5384,5385,5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,5413,5414,5415,5416,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,5439,5440,5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,5478,5479,5480,5481,5482,5483,5484,5485,5486,5487,5488,5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,5586,5587,5588,5589,5590,5591,5592,5593,5594,5595,5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632,5633,5634,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648,5649,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,5661,5662,5663,5664,5665,5666,5667,5668,5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,5699,5700,5701,5702,5703,5704,5705,5706,5707,5708,5709,5710,5711,5712,5713,5714,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,5726,5727,5728,5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5740,5741,5742,5743,5744,5745,5746,5747,5748,5749,5750,5751,5752,5753,5754,5755,5756,5757,5758,5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,5769,5770,5771,5772,5773,5774,5775,5776,5777,5778,5779,5780,5781,5782,5783,5784,5785,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,5801,5802,5803,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6e3,6001,6002,6003,6004,6005,6006,6007,6008,6009,6010,6011,6012,6013,6014,6015,6016,6017,6018,6019,6020,6021,6022,6023,6024,6025,6026,6027,6028,6029,6030,6031,6032,6033,6034,6035,6036,6037,6038,6039,6040,6041,6042,6043,6044,6045,6046,6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086,6087,6088,6089,6090,6091,6092,6093,6094,6095,6096,6097,6098,6099,6100,6101,6102,6103,6104,6105,6106,6107,6108,6109,6110,6111,6112,6113,6114,2044,2060,4621,997,1235,473,1186,4622,920,3378,6115,6116,379,1108,4313,2657,2735,3934,6117,3809,636,3233,573,1026,3693,3435,2974,3300,2298,4105,854,2937,2463,393,2581,2417,539,752,1280,2750,2480,140,1161,440,708,1569,665,2497,1746,1291,1523,3e3,164,1603,847,1331,537,1997,486,508,1693,2418,1970,2227,878,1220,299,1030,969,652,2751,624,1137,3301,2619,65,3302,2045,1761,1859,3120,1930,3694,3516,663,1767,852,835,3695,269,767,2826,2339,1305,896,1150,770,1616,6118,506,1502,2075,1012,2519,775,2520,2975,2340,2938,4314,3028,2086,1224,1943,2286,6119,3072,4315,2240,1273,1987,3935,1557,175,597,985,3517,2419,2521,1416,3029,585,938,1931,1007,1052,1932,1685,6120,3379,4316,4623,804,599,3121,1333,2128,2539,1159,1554,2032,3810,687,2033,2904,952,675,1467,3436,6121,2241,1096,1786,2440,1543,1924,980,1813,2228,781,2692,1879,728,1918,3696,4624,548,1950,4625,1809,1088,1356,3303,2522,1944,502,972,373,513,2827,586,2377,2391,1003,1976,1631,6122,2464,1084,648,1776,4626,2141,324,962,2012,2177,2076,1384,742,2178,1448,1173,1810,222,102,301,445,125,2420,662,2498,277,200,1476,1165,1068,224,2562,1378,1446,450,1880,659,791,582,4627,2939,3936,1516,1274,555,2099,3697,1020,1389,1526,3380,1762,1723,1787,2229,412,2114,1900,2392,3518,512,2597,427,1925,2341,3122,1653,1686,2465,2499,697,330,273,380,2162,951,832,780,991,1301,3073,965,2270,3519,668,2523,2636,1286,535,1407,518,671,957,2658,2378,267,611,2197,3030,6123,248,2299,967,1799,2356,850,1418,3437,1876,1256,1480,2828,1718,6124,6125,1755,1664,2405,6126,4628,2879,2829,499,2179,676,4629,557,2329,2214,2090,325,3234,464,811,3001,992,2342,2481,1232,1469,303,2242,466,1070,2163,603,1777,2091,4630,2752,4631,2714,322,2659,1964,1768,481,2188,1463,2330,2857,3600,2092,3031,2421,4632,2318,2070,1849,2598,4633,1302,2254,1668,1701,2422,3811,2905,3032,3123,2046,4106,1763,1694,4634,1604,943,1724,1454,917,868,2215,1169,2940,552,1145,1800,1228,1823,1955,316,1080,2510,361,1807,2830,4107,2660,3381,1346,1423,1134,4108,6127,541,1263,1229,1148,2540,545,465,1833,2880,3438,1901,3074,2482,816,3937,713,1788,2500,122,1575,195,1451,2501,1111,6128,859,374,1225,2243,2483,4317,390,1033,3439,3075,2524,1687,266,793,1440,2599,946,779,802,507,897,1081,528,2189,1292,711,1866,1725,1167,1640,753,398,2661,1053,246,348,4318,137,1024,3440,1600,2077,2129,825,4319,698,238,521,187,2300,1157,2423,1641,1605,1464,1610,1097,2541,1260,1436,759,2255,1814,2150,705,3235,409,2563,3304,561,3033,2005,2564,726,1956,2343,3698,4109,949,3812,3813,3520,1669,653,1379,2525,881,2198,632,2256,1027,778,1074,733,1957,514,1481,2466,554,2180,702,3938,1606,1017,1398,6129,1380,3521,921,993,1313,594,449,1489,1617,1166,768,1426,1360,495,1794,3601,1177,3602,1170,4320,2344,476,425,3167,4635,3168,1424,401,2662,1171,3382,1998,1089,4110,477,3169,474,6130,1909,596,2831,1842,494,693,1051,1028,1207,3076,606,2115,727,2790,1473,1115,743,3522,630,805,1532,4321,2021,366,1057,838,684,1114,2142,4322,2050,1492,1892,1808,2271,3814,2424,1971,1447,1373,3305,1090,1536,3939,3523,3306,1455,2199,336,369,2331,1035,584,2393,902,718,2600,6131,2753,463,2151,1149,1611,2467,715,1308,3124,1268,343,1413,3236,1517,1347,2663,2093,3940,2022,1131,1553,2100,2941,1427,3441,2942,1323,2484,6132,1980,872,2368,2441,2943,320,2369,2116,1082,679,1933,3941,2791,3815,625,1143,2023,422,2200,3816,6133,730,1695,356,2257,1626,2301,2858,2637,1627,1778,937,883,2906,2693,3002,1769,1086,400,1063,1325,3307,2792,4111,3077,456,2345,1046,747,6134,1524,884,1094,3383,1474,2164,1059,974,1688,2181,2258,1047,345,1665,1187,358,875,3170,305,660,3524,2190,1334,1135,3171,1540,1649,2542,1527,927,968,2793,885,1972,1850,482,500,2638,1218,1109,1085,2543,1654,2034,876,78,2287,1482,1277,861,1675,1083,1779,724,2754,454,397,1132,1612,2332,893,672,1237,257,2259,2370,135,3384,337,2244,547,352,340,709,2485,1400,788,1138,2511,540,772,1682,2260,2272,2544,2013,1843,1902,4636,1999,1562,2288,4637,2201,1403,1533,407,576,3308,1254,2071,978,3385,170,136,1201,3125,2664,3172,2394,213,912,873,3603,1713,2202,699,3604,3699,813,3442,493,531,1054,468,2907,1483,304,281,4112,1726,1252,2094,339,2319,2130,2639,756,1563,2944,748,571,2976,1588,2425,2715,1851,1460,2426,1528,1392,1973,3237,288,3309,685,3386,296,892,2716,2216,1570,2245,722,1747,2217,905,3238,1103,6135,1893,1441,1965,251,1805,2371,3700,2601,1919,1078,75,2182,1509,1592,1270,2640,4638,2152,6136,3310,3817,524,706,1075,292,3818,1756,2602,317,98,3173,3605,3525,1844,2218,3819,2502,814,567,385,2908,1534,6137,534,1642,3239,797,6138,1670,1529,953,4323,188,1071,538,178,729,3240,2109,1226,1374,2e3,2357,2977,731,2468,1116,2014,2051,6139,1261,1593,803,2859,2736,3443,556,682,823,1541,6140,1369,2289,1706,2794,845,462,2603,2665,1361,387,162,2358,1740,739,1770,1720,1304,1401,3241,1049,627,1571,2427,3526,1877,3942,1852,1500,431,1910,1503,677,297,2795,286,1433,1038,1198,2290,1133,1596,4113,4639,2469,1510,1484,3943,6141,2442,108,712,4640,2372,866,3701,2755,3242,1348,834,1945,1408,3527,2395,3243,1811,824,994,1179,2110,1548,1453,790,3003,690,4324,4325,2832,2909,3820,1860,3821,225,1748,310,346,1780,2470,821,1993,2717,2796,828,877,3528,2860,2471,1702,2165,2910,2486,1789,453,359,2291,1676,73,1164,1461,1127,3311,421,604,314,1037,589,116,2487,737,837,1180,111,244,735,6142,2261,1861,1362,986,523,418,581,2666,3822,103,855,503,1414,1867,2488,1091,657,1597,979,605,1316,4641,1021,2443,2078,2001,1209,96,587,2166,1032,260,1072,2153,173,94,226,3244,819,2006,4642,4114,2203,231,1744,782,97,2667,786,3387,887,391,442,2219,4326,1425,6143,2694,633,1544,1202,483,2015,592,2052,1958,2472,1655,419,129,4327,3444,3312,1714,1257,3078,4328,1518,1098,865,1310,1019,1885,1512,1734,469,2444,148,773,436,1815,1868,1128,1055,4329,1245,2756,3445,2154,1934,1039,4643,579,1238,932,2320,353,205,801,115,2428,944,2321,1881,399,2565,1211,678,766,3944,335,2101,1459,1781,1402,3945,2737,2131,1010,844,981,1326,1013,550,1816,1545,2620,1335,1008,371,2881,936,1419,1613,3529,1456,1395,2273,1834,2604,1317,2738,2503,416,1643,4330,806,1126,229,591,3946,1314,1981,1576,1837,1666,347,1790,977,3313,764,2861,1853,688,2429,1920,1462,77,595,415,2002,3034,798,1192,4115,6144,2978,4331,3035,2695,2582,2072,2566,430,2430,1727,842,1396,3947,3702,613,377,278,236,1417,3388,3314,3174,757,1869,107,3530,6145,1194,623,2262,207,1253,2167,3446,3948,492,1117,1935,536,1838,2757,1246,4332,696,2095,2406,1393,1572,3175,1782,583,190,253,1390,2230,830,3126,3389,934,3245,1703,1749,2979,1870,2545,1656,2204,869,2346,4116,3176,1817,496,1764,4644,942,1504,404,1903,1122,1580,3606,2945,1022,515,372,1735,955,2431,3036,6146,2797,1110,2302,2798,617,6147,441,762,1771,3447,3607,3608,1904,840,3037,86,939,1385,572,1370,2445,1336,114,3703,898,294,203,3315,703,1583,2274,429,961,4333,1854,1951,3390,2373,3704,4334,1318,1381,966,1911,2322,1006,1155,309,989,458,2718,1795,1372,1203,252,1689,1363,3177,517,1936,168,1490,562,193,3823,1042,4117,1835,551,470,4645,395,489,3448,1871,1465,2583,2641,417,1493,279,1295,511,1236,1119,72,1231,1982,1812,3004,871,1564,984,3449,1667,2696,2096,4646,2347,2833,1673,3609,695,3246,2668,807,1183,4647,890,388,2333,1801,1457,2911,1765,1477,1031,3316,3317,1278,3391,2799,2292,2526,163,3450,4335,2669,1404,1802,6148,2323,2407,1584,1728,1494,1824,1269,298,909,3318,1034,1632,375,776,1683,2061,291,210,1123,809,1249,1002,2642,3038,206,1011,2132,144,975,882,1565,342,667,754,1442,2143,1299,2303,2062,447,626,2205,1221,2739,2912,1144,1214,2206,2584,760,1715,614,950,1281,2670,2621,810,577,1287,2546,4648,242,2168,250,2643,691,123,2644,647,313,1029,689,1357,2946,1650,216,771,1339,1306,808,2063,549,913,1371,2913,2914,6149,1466,1092,1174,1196,1311,2605,2396,1783,1796,3079,406,2671,2117,3949,4649,487,1825,2220,6150,2915,448,2348,1073,6151,2397,1707,130,900,1598,329,176,1959,2527,1620,6152,2275,4336,3319,1983,2191,3705,3610,2155,3706,1912,1513,1614,6153,1988,646,392,2304,1589,3320,3039,1826,1239,1352,1340,2916,505,2567,1709,1437,2408,2547,906,6154,2672,384,1458,1594,1100,1329,710,423,3531,2064,2231,2622,1989,2673,1087,1882,333,841,3005,1296,2882,2379,580,1937,1827,1293,2585,601,574,249,1772,4118,2079,1120,645,901,1176,1690,795,2207,478,1434,516,1190,1530,761,2080,930,1264,355,435,1552,644,1791,987,220,1364,1163,1121,1538,306,2169,1327,1222,546,2645,218,241,610,1704,3321,1984,1839,1966,2528,451,6155,2586,3707,2568,907,3178,254,2947,186,1845,4650,745,432,1757,428,1633,888,2246,2221,2489,3611,2118,1258,1265,956,3127,1784,4337,2490,319,510,119,457,3612,274,2035,2007,4651,1409,3128,970,2758,590,2800,661,2247,4652,2008,3950,1420,1549,3080,3322,3951,1651,1375,2111,485,2491,1429,1156,6156,2548,2183,1495,831,1840,2529,2446,501,1657,307,1894,3247,1341,666,899,2156,1539,2549,1559,886,349,2208,3081,2305,1736,3824,2170,2759,1014,1913,1386,542,1397,2948,490,368,716,362,159,282,2569,1129,1658,1288,1750,2674,276,649,2016,751,1496,658,1818,1284,1862,2209,2087,2512,3451,622,2834,376,117,1060,2053,1208,1721,1101,1443,247,1250,3179,1792,3952,2760,2398,3953,6157,2144,3708,446,2432,1151,2570,3452,2447,2761,2835,1210,2448,3082,424,2222,1251,2449,2119,2836,504,1581,4338,602,817,857,3825,2349,2306,357,3826,1470,1883,2883,255,958,929,2917,3248,302,4653,1050,1271,1751,2307,1952,1430,2697,2719,2359,354,3180,777,158,2036,4339,1659,4340,4654,2308,2949,2248,1146,2232,3532,2720,1696,2623,3827,6158,3129,1550,2698,1485,1297,1428,637,931,2721,2145,914,2550,2587,81,2450,612,827,2646,1242,4655,1118,2884,472,1855,3181,3533,3534,569,1353,2699,1244,1758,2588,4119,2009,2762,2171,3709,1312,1531,6159,1152,1938,134,1830,471,3710,2276,1112,1535,3323,3453,3535,982,1337,2950,488,826,674,1058,1628,4120,2017,522,2399,211,568,1367,3454,350,293,1872,1139,3249,1399,1946,3006,1300,2360,3324,588,736,6160,2606,744,669,3536,3828,6161,1358,199,723,848,933,851,1939,1505,1514,1338,1618,1831,4656,1634,3613,443,2740,3829,717,1947,491,1914,6162,2551,1542,4121,1025,6163,1099,1223,198,3040,2722,370,410,1905,2589,998,1248,3182,2380,519,1449,4122,1710,947,928,1153,4341,2277,344,2624,1511,615,105,161,1212,1076,1960,3130,2054,1926,1175,1906,2473,414,1873,2801,6164,2309,315,1319,3325,318,2018,2146,2157,963,631,223,4342,4343,2675,479,3711,1197,2625,3712,2676,2361,6165,4344,4123,6166,2451,3183,1886,2184,1674,1330,1711,1635,1506,799,219,3250,3083,3954,1677,3713,3326,2081,3614,1652,2073,4657,1147,3041,1752,643,1961,147,1974,3955,6167,1716,2037,918,3007,1994,120,1537,118,609,3184,4345,740,3455,1219,332,1615,3830,6168,1621,2980,1582,783,212,553,2350,3714,1349,2433,2082,4124,889,6169,2310,1275,1410,973,166,1320,3456,1797,1215,3185,2885,1846,2590,2763,4658,629,822,3008,763,940,1990,2862,439,2409,1566,1240,1622,926,1282,1907,2764,654,2210,1607,327,1130,3956,1678,1623,6170,2434,2192,686,608,3831,3715,903,3957,3042,6171,2741,1522,1915,1105,1555,2552,1359,323,3251,4346,3457,738,1354,2553,2311,2334,1828,2003,3832,1753,2351,1227,6172,1887,4125,1478,6173,2410,1874,1712,1847,520,1204,2607,264,4659,836,2677,2102,600,4660,3833,2278,3084,6174,4347,3615,1342,640,532,543,2608,1888,2400,2591,1009,4348,1497,341,1737,3616,2723,1394,529,3252,1321,983,4661,1515,2120,971,2592,924,287,1662,3186,4349,2700,4350,1519,908,1948,2452,156,796,1629,1486,2223,2055,694,4126,1259,1036,3392,1213,2249,2742,1889,1230,3958,1015,910,408,559,3617,4662,746,725,935,4663,3959,3009,1289,563,867,4664,3960,1567,2981,2038,2626,988,2263,2381,4351,143,2374,704,1895,6175,1188,3716,2088,673,3085,2362,4352,484,1608,1921,2765,2918,215,904,3618,3537,894,509,976,3043,2701,3961,4353,2837,2982,498,6176,6177,1102,3538,1332,3393,1487,1636,1637,233,245,3962,383,650,995,3044,460,1520,1206,2352,749,3327,530,700,389,1438,1560,1773,3963,2264,719,2951,2724,3834,870,1832,1644,1e3,839,2474,3717,197,1630,3394,365,2886,3964,1285,2133,734,922,818,1106,732,480,2083,1774,3458,923,2279,1350,221,3086,85,2233,2234,3835,1585,3010,2147,1387,1705,2382,1619,2475,133,239,2802,1991,1016,2084,2383,411,2838,1113,651,1985,1160,3328,990,1863,3087,1048,1276,2647,265,2627,1599,3253,2056,150,638,2019,656,853,326,1479,680,1439,4354,1001,1759,413,3459,3395,2492,1431,459,4355,1125,3329,2265,1953,1450,2065,2863,849,351,2678,3131,3254,3255,1104,1577,227,1351,1645,2453,2193,1421,2887,812,2121,634,95,2435,201,2312,4665,1646,1671,2743,1601,2554,2702,2648,2280,1315,1366,2089,3132,1573,3718,3965,1729,1189,328,2679,1077,1940,1136,558,1283,964,1195,621,2074,1199,1743,3460,3619,1896,1916,1890,3836,2952,1154,2112,1064,862,378,3011,2066,2113,2803,1568,2839,6178,3088,2919,1941,1660,2004,1992,2194,142,707,1590,1708,1624,1922,1023,1836,1233,1004,2313,789,741,3620,6179,1609,2411,1200,4127,3719,3720,4666,2057,3721,593,2840,367,2920,1878,6180,3461,1521,628,1168,692,2211,2649,300,720,2067,2571,2953,3396,959,2504,3966,3539,3462,1977,701,6181,954,1043,800,681,183,3722,1803,1730,3540,4128,2103,815,2314,174,467,230,2454,1093,2134,755,3541,3397,1141,1162,6182,1738,2039,270,3256,2513,1005,1647,2185,3837,858,1679,1897,1719,2954,2324,1806,402,670,167,4129,1498,2158,2104,750,6183,915,189,1680,1551,455,4356,1501,2455,405,1095,2955,338,1586,1266,1819,570,641,1324,237,1556,2650,1388,3723,6184,1368,2384,1343,1978,3089,2436,879,3724,792,1191,758,3012,1411,2135,1322,4357,240,4667,1848,3725,1574,6185,420,3045,1546,1391,714,4358,1967,941,1864,863,664,426,560,1731,2680,1785,2864,1949,2363,403,3330,1415,1279,2136,1697,2335,204,721,2097,3838,90,6186,2085,2505,191,3967,124,2148,1376,1798,1178,1107,1898,1405,860,4359,1243,1272,2375,2983,1558,2456,1638,113,3621,578,1923,2609,880,386,4130,784,2186,2266,1422,2956,2172,1722,497,263,2514,1267,2412,2610,177,2703,3542,774,1927,1344,616,1432,1595,1018,172,4360,2325,911,4361,438,1468,3622,794,3968,2024,2173,1681,1829,2957,945,895,3090,575,2212,2476,475,2401,2681,785,2744,1745,2293,2555,1975,3133,2865,394,4668,3839,635,4131,639,202,1507,2195,2766,1345,1435,2572,3726,1908,1184,1181,2457,3727,3134,4362,843,2611,437,916,4669,234,769,1884,3046,3047,3623,833,6187,1639,2250,2402,1355,1185,2010,2047,999,525,1732,1290,1488,2612,948,1578,3728,2413,2477,1216,2725,2159,334,3840,1328,3624,2921,1525,4132,564,1056,891,4363,1444,1698,2385,2251,3729,1365,2281,2235,1717,6188,864,3841,2515,444,527,2767,2922,3625,544,461,6189,566,209,2437,3398,2098,1065,2068,3331,3626,3257,2137,2138,2122,3730,2888,1995,1820,1044,6190,6191,6192,6193,6194,6195,6196,6197,6198,6199,6200,6201,6202,6203,6204,6205,4670,6206,6207,6208,6209,6210,6211,6212,6213,6214,6215,6216,6217,6218,6219,6220,6221,6222,6223,6224,6225,6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,3187,6238,6239,3969,6240,6241,6242,6243,6244,4671,6245,6246,4672,6247,6248,4133,6249,6250,4364,6251,2923,2556,2613,4673,4365,3970,6252,6253,6254,6255,4674,6256,6257,6258,2768,2353,4366,4675,4676,3188,4367,3463,6259,4134,4677,4678,6260,2267,6261,3842,3332,4368,3543,6262,6263,6264,3013,1954,1928,4135,4679,6265,6266,2478,3091,6267,4680,4369,6268,6269,1699,6270,3544,4136,4681,6271,4137,6272,4370,2804,6273,6274,2593,3971,3972,4682,6275,2236,4683,6276,6277,4684,6278,6279,4138,3973,4685,6280,6281,3258,6282,6283,6284,6285,3974,4686,2841,3975,6286,6287,3545,6288,6289,4139,4687,4140,6290,4141,6291,4142,6292,6293,3333,6294,6295,6296,4371,6297,3399,6298,6299,4372,3976,6300,6301,6302,4373,6303,6304,3843,3731,6305,4688,4374,6306,6307,3259,2294,6308,3732,2530,4143,6309,4689,6310,6311,6312,3048,6313,6314,4690,3733,2237,6315,6316,2282,3334,6317,6318,3844,6319,6320,4691,6321,3400,4692,6322,4693,6323,3049,6324,4375,6325,3977,6326,6327,6328,3546,6329,4694,3335,6330,4695,4696,6331,6332,6333,6334,4376,3978,6335,4697,3979,4144,6336,3980,4698,6337,6338,6339,6340,6341,4699,4700,4701,6342,6343,4702,6344,6345,4703,6346,6347,4704,6348,4705,4706,3135,6349,4707,6350,4708,6351,4377,6352,4709,3734,4145,6353,2506,4710,3189,6354,3050,4711,3981,6355,3547,3014,4146,4378,3735,2651,3845,3260,3136,2224,1986,6356,3401,6357,4712,2594,3627,3137,2573,3736,3982,4713,3628,4714,4715,2682,3629,4716,6358,3630,4379,3631,6359,6360,6361,3983,6362,6363,6364,6365,4147,3846,4717,6366,6367,3737,2842,6368,4718,2628,6369,3261,6370,2386,6371,6372,3738,3984,4719,3464,4720,3402,6373,2924,3336,4148,2866,6374,2805,3262,4380,2704,2069,2531,3138,2806,2984,6375,2769,6376,4721,4722,3403,6377,6378,3548,6379,6380,2705,3092,1979,4149,2629,3337,2889,6381,3338,4150,2557,3339,4381,6382,3190,3263,3739,6383,4151,4723,4152,2558,2574,3404,3191,6384,6385,4153,6386,4724,4382,6387,6388,4383,6389,6390,4154,6391,4725,3985,6392,3847,4155,6393,6394,6395,6396,6397,3465,6398,4384,6399,6400,6401,6402,6403,6404,4156,6405,6406,6407,6408,2123,6409,6410,2326,3192,4726,6411,6412,6413,6414,4385,4157,6415,6416,4158,6417,3093,3848,6418,3986,6419,6420,3849,6421,6422,6423,4159,6424,6425,4160,6426,3740,6427,6428,6429,6430,3987,6431,4727,6432,2238,6433,6434,4386,3988,6435,6436,3632,6437,6438,2843,6439,6440,6441,6442,3633,6443,2958,6444,6445,3466,6446,2364,4387,3850,6447,4388,2959,3340,6448,3851,6449,4728,6450,6451,3264,4729,6452,3193,6453,4389,4390,2706,3341,4730,6454,3139,6455,3194,6456,3051,2124,3852,1602,4391,4161,3853,1158,3854,4162,3989,4392,3990,4731,4732,4393,2040,4163,4394,3265,6457,2807,3467,3855,6458,6459,6460,3991,3468,4733,4734,6461,3140,2960,6462,4735,6463,6464,6465,6466,4736,4737,4738,4739,6467,6468,4164,2403,3856,6469,6470,2770,2844,6471,4740,6472,6473,6474,6475,6476,6477,6478,3195,6479,4741,4395,6480,2867,6481,4742,2808,6482,2493,4165,6483,6484,6485,6486,2295,4743,6487,6488,6489,3634,6490,6491,6492,6493,6494,6495,6496,2985,4744,6497,6498,4745,6499,6500,2925,3141,4166,6501,6502,4746,6503,6504,4747,6505,6506,6507,2890,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,3469,4167,6520,6521,6522,4748,4396,3741,4397,4749,4398,3342,2125,4750,6523,4751,4752,4753,3052,6524,2961,4168,6525,4754,6526,4755,4399,2926,4169,6527,3857,6528,4400,4170,6529,4171,6530,6531,2595,6532,6533,6534,6535,3635,6536,6537,6538,6539,6540,6541,6542,4756,6543,6544,6545,6546,6547,6548,4401,6549,6550,6551,6552,4402,3405,4757,4403,6553,6554,6555,4172,3742,6556,6557,6558,3992,3636,6559,6560,3053,2726,6561,3549,4173,3054,4404,6562,6563,3993,4405,3266,3550,2809,4406,6564,6565,6566,4758,4759,6567,3743,6568,4760,3744,4761,3470,6569,6570,6571,4407,6572,3745,4174,6573,4175,2810,4176,3196,4762,6574,4177,6575,6576,2494,2891,3551,6577,6578,3471,6579,4408,6580,3015,3197,6581,3343,2532,3994,3858,6582,3094,3406,4409,6583,2892,4178,4763,4410,3016,4411,6584,3995,3142,3017,2683,6585,4179,6586,6587,4764,4412,6588,6589,4413,6590,2986,6591,2962,3552,6592,2963,3472,6593,6594,4180,4765,6595,6596,2225,3267,4414,6597,3407,3637,4766,6598,6599,3198,6600,4415,6601,3859,3199,6602,3473,4767,2811,4416,1856,3268,3200,2575,3996,3997,3201,4417,6603,3095,2927,6604,3143,6605,2268,6606,3998,3860,3096,2771,6607,6608,3638,2495,4768,6609,3861,6610,3269,2745,4769,4181,3553,6611,2845,3270,6612,6613,6614,3862,6615,6616,4770,4771,6617,3474,3999,4418,4419,6618,3639,3344,6619,4772,4182,6620,2126,6621,6622,6623,4420,4773,6624,3018,6625,4774,3554,6626,4183,2025,3746,6627,4184,2707,6628,4421,4422,3097,1775,4185,3555,6629,6630,2868,6631,6632,4423,6633,6634,4424,2414,2533,2928,6635,4186,2387,6636,4775,6637,4187,6638,1891,4425,3202,3203,6639,6640,4776,6641,3345,6642,6643,3640,6644,3475,3346,3641,4e3,6645,3144,6646,3098,2812,4188,3642,3204,6647,3863,3476,6648,3864,6649,4426,4001,6650,6651,6652,2576,6653,4189,4777,6654,6655,6656,2846,6657,3477,3205,4002,6658,4003,6659,3347,2252,6660,6661,6662,4778,6663,6664,6665,6666,6667,6668,6669,4779,4780,2048,6670,3478,3099,6671,3556,3747,4004,6672,6673,6674,3145,4005,3748,6675,6676,6677,6678,6679,3408,6680,6681,6682,6683,3206,3207,6684,6685,4781,4427,6686,4782,4783,4784,6687,6688,6689,4190,6690,6691,3479,6692,2746,6693,4428,6694,6695,6696,6697,6698,6699,4785,6700,6701,3208,2727,6702,3146,6703,6704,3409,2196,6705,4429,6706,6707,6708,2534,1996,6709,6710,6711,2747,6712,6713,6714,4786,3643,6715,4430,4431,6716,3557,6717,4432,4433,6718,6719,6720,6721,3749,6722,4006,4787,6723,6724,3644,4788,4434,6725,6726,4789,2772,6727,6728,6729,6730,6731,2708,3865,2813,4435,6732,6733,4790,4791,3480,6734,6735,6736,6737,4436,3348,6738,3410,4007,6739,6740,4008,6741,6742,4792,3411,4191,6743,6744,6745,6746,6747,3866,6748,3750,6749,6750,6751,6752,6753,6754,6755,3867,6756,4009,6757,4793,4794,6758,2814,2987,6759,6760,6761,4437,6762,6763,6764,6765,3645,6766,6767,3481,4192,6768,3751,6769,6770,2174,6771,3868,3752,6772,6773,6774,4193,4795,4438,3558,4796,4439,6775,4797,6776,6777,4798,6778,4799,3559,4800,6779,6780,6781,3482,6782,2893,6783,6784,4194,4801,4010,6785,6786,4440,6787,4011,6788,6789,6790,6791,6792,6793,4802,6794,6795,6796,4012,6797,6798,6799,6800,3349,4803,3483,6801,4804,4195,6802,4013,6803,6804,4196,6805,4014,4015,6806,2847,3271,2848,6807,3484,6808,6809,6810,4441,6811,4442,4197,4443,3272,4805,6812,3412,4016,1579,6813,6814,4017,6815,3869,6816,2964,6817,4806,6818,6819,4018,3646,6820,6821,4807,4019,4020,6822,6823,3560,6824,6825,4021,4444,6826,4198,6827,6828,4445,6829,6830,4199,4808,6831,6832,6833,3870,3019,2458,6834,3753,3413,3350,6835,4809,3871,4810,3561,4446,6836,6837,4447,4811,4812,6838,2459,4448,6839,4449,6840,6841,4022,3872,6842,4813,4814,6843,6844,4815,4200,4201,4202,6845,4023,6846,6847,4450,3562,3873,6848,6849,4816,4817,6850,4451,4818,2139,6851,3563,6852,6853,3351,6854,6855,3352,4024,2709,3414,4203,4452,6856,4204,6857,6858,3874,3875,6859,6860,4819,6861,6862,6863,6864,4453,3647,6865,6866,4820,6867,6868,6869,6870,4454,6871,2869,6872,6873,4821,6874,3754,6875,4822,4205,6876,6877,6878,3648,4206,4455,6879,4823,6880,4824,3876,6881,3055,4207,6882,3415,6883,6884,6885,4208,4209,6886,4210,3353,6887,3354,3564,3209,3485,2652,6888,2728,6889,3210,3755,6890,4025,4456,6891,4825,6892,6893,6894,6895,4211,6896,6897,6898,4826,6899,6900,4212,6901,4827,6902,2773,3565,6903,4828,6904,6905,6906,6907,3649,3650,6908,2849,3566,6909,3567,3100,6910,6911,6912,6913,6914,6915,4026,6916,3355,4829,3056,4457,3756,6917,3651,6918,4213,3652,2870,6919,4458,6920,2438,6921,6922,3757,2774,4830,6923,3356,4831,4832,6924,4833,4459,3653,2507,6925,4834,2535,6926,6927,3273,4027,3147,6928,3568,6929,6930,6931,4460,6932,3877,4461,2729,3654,6933,6934,6935,6936,2175,4835,2630,4214,4028,4462,4836,4215,6937,3148,4216,4463,4837,4838,4217,6938,6939,2850,4839,6940,4464,6941,6942,6943,4840,6944,4218,3274,4465,6945,6946,2710,6947,4841,4466,6948,6949,2894,6950,6951,4842,6952,4219,3057,2871,6953,6954,6955,6956,4467,6957,2711,6958,6959,6960,3275,3101,4843,6961,3357,3569,6962,4844,6963,6964,4468,4845,3570,6965,3102,4846,3758,6966,4847,3878,4848,4849,4029,6967,2929,3879,4850,4851,6968,6969,1733,6970,4220,6971,6972,6973,6974,6975,6976,4852,6977,6978,6979,6980,6981,6982,3759,6983,6984,6985,3486,3487,6986,3488,3416,6987,6988,6989,6990,6991,6992,6993,6994,6995,6996,6997,4853,6998,6999,4030,7ee3,7530,7531,5001,4275,3794,7532,7533,7534,3066,5002,4566,3161,7535,7536,4080,7537,3162,7538,7539,4567,7540,7541,7542,7543,7544,7545,5003,7546,4568,7547,7548,7549,7550,7551,7552,7553,7554,7555,7556,5004,7557,7558,7559,5005,7560,3795,7561,4569,7562,7563,7564,2821,3796,4276,4277,4081,7565,2876,7566,5006,7567,7568,2900,7569,3797,3912,7570,7571,7572,4278,7573,7574,7575,5007,7576,7577,5008,7578,7579,4279,2934,7580,7581,5009,7582,4570,7583,4280,7584,7585,7586,4571,4572,3913,7587,4573,3505,7588,5010,7589,7590,7591,7592,3798,4574,7593,7594,5011,7595,4281,7596,7597,7598,4282,5012,7599,7600,5013,3163,7601,5014,7602,3914,7603,7604,2734,4575,4576,4577,7605,7606,7607,7608,7609,3506,5015,4578,7610,4082,7611,2822,2901,2579,3683,3024,4579,3507,7612,4580,7613,3226,3799,5016,7614,7615,7616,7617,7618,7619,7620,2995,3290,7621,4083,7622,5017,7623,7624,7625,7626,7627,4581,3915,7628,3291,7629,5018,7630,7631,7632,7633,4084,7634,7635,3427,3800,7636,7637,4582,7638,5019,4583,5020,7639,3916,7640,3801,5021,4584,4283,7641,7642,3428,3591,2269,7643,2617,7644,4585,3592,7645,4586,2902,7646,7647,3227,5022,7648,4587,7649,4284,7650,7651,7652,4588,2284,7653,5023,7654,7655,7656,4589,5024,3802,7657,7658,5025,3508,4590,7659,7660,7661,1969,5026,7662,7663,3684,1821,2688,7664,2028,2509,4285,7665,2823,1841,7666,2689,3114,7667,3917,4085,2160,5027,5028,2972,7668,5029,7669,7670,7671,3593,4086,7672,4591,4087,5030,3803,7673,7674,7675,7676,7677,7678,7679,4286,2366,4592,4593,3067,2328,7680,7681,4594,3594,3918,2029,4287,7682,5031,3919,3370,4288,4595,2856,7683,3509,7684,7685,5032,5033,7686,7687,3804,2784,7688,7689,7690,7691,3371,7692,7693,2877,5034,7694,7695,3920,4289,4088,7696,7697,7698,5035,7699,5036,4290,5037,5038,5039,7700,7701,7702,5040,5041,3228,7703,1760,7704,5042,3229,4596,2106,4089,7705,4597,2824,5043,2107,3372,7706,4291,4090,5044,7707,4091,7708,5045,3025,3805,4598,4292,4293,4294,3373,7709,4599,7710,5046,7711,7712,5047,5048,3806,7713,7714,7715,5049,7716,7717,7718,7719,4600,5050,7720,7721,7722,5051,7723,4295,3429,7724,7725,7726,7727,3921,7728,3292,5052,4092,7729,7730,7731,7732,7733,7734,7735,5053,5054,7736,7737,7738,7739,3922,3685,7740,7741,7742,7743,2635,5055,7744,5056,4601,7745,7746,2560,7747,7748,7749,7750,3923,7751,7752,7753,7754,7755,4296,2903,7756,7757,7758,7759,7760,3924,7761,5057,4297,7762,7763,5058,4298,7764,4093,7765,7766,5059,3925,7767,7768,7769,7770,7771,7772,7773,7774,7775,7776,3595,7777,4299,5060,4094,7778,3293,5061,7779,7780,4300,7781,7782,4602,7783,3596,7784,7785,3430,2367,7786,3164,5062,5063,4301,7787,7788,4095,5064,5065,7789,3374,3115,7790,7791,7792,7793,7794,7795,7796,3597,4603,7797,7798,3686,3116,3807,5066,7799,7800,5067,7801,7802,4604,4302,5068,4303,4096,7803,7804,3294,7805,7806,5069,4605,2690,7807,3026,7808,7809,7810,7811,7812,7813,7814,7815,7816,7817,7818,7819,7820,7821,7822,7823,7824,7825,7826,7827,7828,7829,7830,7831,7832,7833,7834,7835,7836,7837,7838,7839,7840,7841,7842,7843,7844,7845,7846,7847,7848,7849,7850,7851,7852,7853,7854,7855,7856,7857,7858,7859,7860,7861,7862,7863,7864,7865,7866,7867,7868,7869,7870,7871,7872,7873,7874,7875,7876,7877,7878,7879,7880,7881,7882,7883,7884,7885,7886,7887,7888,7889,7890,7891,7892,7893,7894,7895,7896,7897,7898,7899,7900,7901,7902,7903,7904,7905,7906,7907,7908,7909,7910,7911,7912,7913,7914,7915,7916,7917,7918,7919,7920,7921,7922,7923,7924,3926,7925,7926,7927,7928,7929,7930,7931,7932,7933,7934,7935,7936,7937,7938,7939,7940,7941,7942,7943,7944,7945,7946,7947,7948,7949,7950,7951,7952,7953,7954,7955,7956,7957,7958,7959,7960,7961,7962,7963,7964,7965,7966,7967,7968,7969,7970,7971,7972,7973,7974,7975,7976,7977,7978,7979,7980,7981,7982,7983,7984,7985,7986,7987,7988,7989,7990,7991,7992,7993,7994,7995,7996,7997,7998,7999,8e});var gg=ke(A2=>{"use strict";A2.EUCTW_TYPICAL_DISTRIBUTION_RATIO=.75;A2.EUCTW_TABLE_SIZE=8102;A2.EUCTWCharToFreqOrder=[1,1800,1506,255,1431,198,9,82,6,7310,177,202,3615,1256,2808,110,3735,33,3241,261,76,44,2113,16,2931,2184,1176,659,3868,26,3404,2643,1198,3869,3313,4060,410,2211,302,590,361,1963,8,204,58,4296,7311,1931,63,7312,7313,317,1614,75,222,159,4061,2412,1480,7314,3500,3068,224,2809,3616,3,10,3870,1471,29,2774,1135,2852,1939,873,130,3242,1123,312,7315,4297,2051,507,252,682,7316,142,1914,124,206,2932,34,3501,3173,64,604,7317,2494,1976,1977,155,1990,645,641,1606,7318,3405,337,72,406,7319,80,630,238,3174,1509,263,939,1092,2644,756,1440,1094,3406,449,69,2969,591,179,2095,471,115,2034,1843,60,50,2970,134,806,1868,734,2035,3407,180,995,1607,156,537,2893,688,7320,319,1305,779,2144,514,2374,298,4298,359,2495,90,2707,1338,663,11,906,1099,2545,20,2436,182,532,1716,7321,732,1376,4062,1311,1420,3175,25,2312,1056,113,399,382,1949,242,3408,2467,529,3243,475,1447,3617,7322,117,21,656,810,1297,2295,2329,3502,7323,126,4063,706,456,150,613,4299,71,1118,2036,4064,145,3069,85,835,486,2114,1246,1426,428,727,1285,1015,800,106,623,303,1281,7324,2127,2354,347,3736,221,3503,3110,7325,1955,1153,4065,83,296,1199,3070,192,624,93,7326,822,1897,2810,3111,795,2064,991,1554,1542,1592,27,43,2853,859,139,1456,860,4300,437,712,3871,164,2392,3112,695,211,3017,2096,195,3872,1608,3504,3505,3618,3873,234,811,2971,2097,3874,2229,1441,3506,1615,2375,668,2076,1638,305,228,1664,4301,467,415,7327,262,2098,1593,239,108,300,200,1033,512,1247,2077,7328,7329,2173,3176,3619,2673,593,845,1062,3244,88,1723,2037,3875,1950,212,266,152,149,468,1898,4066,4302,77,187,7330,3018,37,5,2972,7331,3876,7332,7333,39,2517,4303,2894,3177,2078,55,148,74,4304,545,483,1474,1029,1665,217,1869,1531,3113,1104,2645,4067,24,172,3507,900,3877,3508,3509,4305,32,1408,2811,1312,329,487,2355,2247,2708,784,2674,4,3019,3314,1427,1788,188,109,499,7334,3620,1717,1789,888,1217,3020,4306,7335,3510,7336,3315,1520,3621,3878,196,1034,775,7337,7338,929,1815,249,439,38,7339,1063,7340,794,3879,1435,2296,46,178,3245,2065,7341,2376,7342,214,1709,4307,804,35,707,324,3622,1601,2546,140,459,4068,7343,7344,1365,839,272,978,2257,2572,3409,2128,1363,3623,1423,697,100,3071,48,70,1231,495,3114,2193,7345,1294,7346,2079,462,586,1042,3246,853,256,988,185,2377,3410,1698,434,1084,7347,3411,314,2615,2775,4308,2330,2331,569,2280,637,1816,2518,757,1162,1878,1616,3412,287,1577,2115,768,4309,1671,2854,3511,2519,1321,3737,909,2413,7348,4069,933,3738,7349,2052,2356,1222,4310,765,2414,1322,786,4311,7350,1919,1462,1677,2895,1699,7351,4312,1424,2437,3115,3624,2590,3316,1774,1940,3413,3880,4070,309,1369,1130,2812,364,2230,1653,1299,3881,3512,3882,3883,2646,525,1085,3021,902,2e3,1475,964,4313,421,1844,1415,1057,2281,940,1364,3116,376,4314,4315,1381,7,2520,983,2378,336,1710,2675,1845,321,3414,559,1131,3022,2742,1808,1132,1313,265,1481,1857,7352,352,1203,2813,3247,167,1089,420,2814,776,792,1724,3513,4071,2438,3248,7353,4072,7354,446,229,333,2743,901,3739,1200,1557,4316,2647,1920,395,2744,2676,3740,4073,1835,125,916,3178,2616,4317,7355,7356,3741,7357,7358,7359,4318,3117,3625,1133,2547,1757,3415,1510,2313,1409,3514,7360,2145,438,2591,2896,2379,3317,1068,958,3023,461,311,2855,2677,4074,1915,3179,4075,1978,383,750,2745,2617,4076,274,539,385,1278,1442,7361,1154,1964,384,561,210,98,1295,2548,3515,7362,1711,2415,1482,3416,3884,2897,1257,129,7363,3742,642,523,2776,2777,2648,7364,141,2231,1333,68,176,441,876,907,4077,603,2592,710,171,3417,404,549,18,3118,2393,1410,3626,1666,7365,3516,4319,2898,4320,7366,2973,368,7367,146,366,99,871,3627,1543,748,807,1586,1185,22,2258,379,3743,3180,7368,3181,505,1941,2618,1991,1382,2314,7369,380,2357,218,702,1817,1248,3418,3024,3517,3318,3249,7370,2974,3628,930,3250,3744,7371,59,7372,585,601,4078,497,3419,1112,1314,4321,1801,7373,1223,1472,2174,7374,749,1836,690,1899,3745,1772,3885,1476,429,1043,1790,2232,2116,917,4079,447,1086,1629,7375,556,7376,7377,2020,1654,844,1090,105,550,966,1758,2815,1008,1782,686,1095,7378,2282,793,1602,7379,3518,2593,4322,4080,2933,2297,4323,3746,980,2496,544,353,527,4324,908,2678,2899,7380,381,2619,1942,1348,7381,1341,1252,560,3072,7382,3420,2856,7383,2053,973,886,2080,143,4325,7384,7385,157,3886,496,4081,57,840,540,2038,4326,4327,3421,2117,1445,970,2259,1748,1965,2081,4082,3119,1234,1775,3251,2816,3629,773,1206,2129,1066,2039,1326,3887,1738,1725,4083,279,3120,51,1544,2594,423,1578,2130,2066,173,4328,1879,7386,7387,1583,264,610,3630,4329,2439,280,154,7388,7389,7390,1739,338,1282,3073,693,2857,1411,1074,3747,2440,7391,4330,7392,7393,1240,952,2394,7394,2900,1538,2679,685,1483,4084,2468,1436,953,4085,2054,4331,671,2395,79,4086,2441,3252,608,567,2680,3422,4087,4088,1691,393,1261,1791,2396,7395,4332,7396,7397,7398,7399,1383,1672,3748,3182,1464,522,1119,661,1150,216,675,4333,3888,1432,3519,609,4334,2681,2397,7400,7401,7402,4089,3025,0,7403,2469,315,231,2442,301,3319,4335,2380,7404,233,4090,3631,1818,4336,4337,7405,96,1776,1315,2082,7406,257,7407,1809,3632,2709,1139,1819,4091,2021,1124,2163,2778,1777,2649,7408,3074,363,1655,3183,7409,2975,7410,7411,7412,3889,1567,3890,718,103,3184,849,1443,341,3320,2934,1484,7413,1712,127,67,339,4092,2398,679,1412,821,7414,7415,834,738,351,2976,2146,846,235,1497,1880,418,1992,3749,2710,186,1100,2147,2746,3520,1545,1355,2935,2858,1377,583,3891,4093,2573,2977,7416,1298,3633,1078,2549,3634,2358,78,3750,3751,267,1289,2099,2001,1594,4094,348,369,1274,2194,2175,1837,4338,1820,2817,3635,2747,2283,2002,4339,2936,2748,144,3321,882,4340,3892,2749,3423,4341,2901,7417,4095,1726,320,7418,3893,3026,788,2978,7419,2818,1773,1327,2859,3894,2819,7420,1306,4342,2003,1700,3752,3521,2359,2650,787,2022,506,824,3636,534,323,4343,1044,3322,2023,1900,946,3424,7421,1778,1500,1678,7422,1881,4344,165,243,4345,3637,2521,123,683,4096,764,4346,36,3895,1792,589,2902,816,626,1667,3027,2233,1639,1555,1622,3753,3896,7423,3897,2860,1370,1228,1932,891,2083,2903,304,4097,7424,292,2979,2711,3522,691,2100,4098,1115,4347,118,662,7425,611,1156,854,2381,1316,2861,2,386,515,2904,7426,7427,3253,868,2234,1486,855,2651,785,2212,3028,7428,1040,3185,3523,7429,3121,448,7430,1525,7431,2164,4348,7432,3754,7433,4099,2820,3524,3122,503,818,3898,3123,1568,814,676,1444,306,1749,7434,3755,1416,1030,197,1428,805,2821,1501,4349,7435,7436,7437,1993,7438,4350,7439,7440,2195,13,2779,3638,2980,3124,1229,1916,7441,3756,2131,7442,4100,4351,2399,3525,7443,2213,1511,1727,1120,7444,7445,646,3757,2443,307,7446,7447,1595,3186,7448,7449,7450,3639,1113,1356,3899,1465,2522,2523,7451,519,7452,128,2132,92,2284,1979,7453,3900,1512,342,3125,2196,7454,2780,2214,1980,3323,7455,290,1656,1317,789,827,2360,7456,3758,4352,562,581,3901,7457,401,4353,2248,94,4354,1399,2781,7458,1463,2024,4355,3187,1943,7459,828,1105,4101,1262,1394,7460,4102,605,4356,7461,1783,2862,7462,2822,819,2101,578,2197,2937,7463,1502,436,3254,4103,3255,2823,3902,2905,3425,3426,7464,2712,2315,7465,7466,2332,2067,23,4357,193,826,3759,2102,699,1630,4104,3075,390,1793,1064,3526,7467,1579,3076,3077,1400,7468,4105,1838,1640,2863,7469,4358,4359,137,4106,598,3078,1966,780,104,974,2938,7470,278,899,253,402,572,504,493,1339,7471,3903,1275,4360,2574,2550,7472,3640,3029,3079,2249,565,1334,2713,863,41,7473,7474,4361,7475,1657,2333,19,463,2750,4107,606,7476,2981,3256,1087,2084,1323,2652,2982,7477,1631,1623,1750,4108,2682,7478,2864,791,2714,2653,2334,232,2416,7479,2983,1498,7480,2654,2620,755,1366,3641,3257,3126,2025,1609,119,1917,3427,862,1026,4109,7481,3904,3760,4362,3905,4363,2260,1951,2470,7482,1125,817,4110,4111,3906,1513,1766,2040,1487,4112,3030,3258,2824,3761,3127,7483,7484,1507,7485,2683,733,40,1632,1106,2865,345,4113,841,2524,230,4364,2984,1846,3259,3428,7486,1263,986,3429,7487,735,879,254,1137,857,622,1300,1180,1388,1562,3907,3908,2939,967,2751,2655,1349,592,2133,1692,3324,2985,1994,4114,1679,3909,1901,2185,7488,739,3642,2715,1296,1290,7489,4115,2198,2199,1921,1563,2595,2551,1870,2752,2986,7490,435,7491,343,1108,596,17,1751,4365,2235,3430,3643,7492,4366,294,3527,2940,1693,477,979,281,2041,3528,643,2042,3644,2621,2782,2261,1031,2335,2134,2298,3529,4367,367,1249,2552,7493,3530,7494,4368,1283,3325,2004,240,1762,3326,4369,4370,836,1069,3128,474,7495,2148,2525,268,3531,7496,3188,1521,1284,7497,1658,1546,4116,7498,3532,3533,7499,4117,3327,2684,1685,4118,961,1673,2622,190,2005,2200,3762,4371,4372,7500,570,2497,3645,1490,7501,4373,2623,3260,1956,4374,584,1514,396,1045,1944,7502,4375,1967,2444,7503,7504,4376,3910,619,7505,3129,3261,215,2006,2783,2553,3189,4377,3190,4378,763,4119,3763,4379,7506,7507,1957,1767,2941,3328,3646,1174,452,1477,4380,3329,3130,7508,2825,1253,2382,2186,1091,2285,4120,492,7509,638,1169,1824,2135,1752,3911,648,926,1021,1324,4381,520,4382,997,847,1007,892,4383,3764,2262,1871,3647,7510,2400,1784,4384,1952,2942,3080,3191,1728,4121,2043,3648,4385,2007,1701,3131,1551,30,2263,4122,7511,2026,4386,3534,7512,501,7513,4123,594,3431,2165,1821,3535,3432,3536,3192,829,2826,4124,7514,1680,3132,1225,4125,7515,3262,4387,4126,3133,2336,7516,4388,4127,7517,3912,3913,7518,1847,2383,2596,3330,7519,4389,374,3914,652,4128,4129,375,1140,798,7520,7521,7522,2361,4390,2264,546,1659,138,3031,2445,4391,7523,2250,612,1848,910,796,3765,1740,1371,825,3766,3767,7524,2906,2554,7525,692,444,3032,2624,801,4392,4130,7526,1491,244,1053,3033,4131,4132,340,7527,3915,1041,2987,293,1168,87,1357,7528,1539,959,7529,2236,721,694,4133,3768,219,1478,644,1417,3331,2656,1413,1401,1335,1389,3916,7530,7531,2988,2362,3134,1825,730,1515,184,2827,66,4393,7532,1660,2943,246,3332,378,1457,226,3433,975,3917,2944,1264,3537,674,696,7533,163,7534,1141,2417,2166,713,3538,3333,4394,3918,7535,7536,1186,15,7537,1079,1070,7538,1522,3193,3539,276,1050,2716,758,1126,653,2945,3263,7539,2337,889,3540,3919,3081,2989,903,1250,4395,3920,3434,3541,1342,1681,1718,766,3264,286,89,2946,3649,7540,1713,7541,2597,3334,2990,7542,2947,2215,3194,2866,7543,4396,2498,2526,181,387,1075,3921,731,2187,3335,7544,3265,310,313,3435,2299,770,4134,54,3034,189,4397,3082,3769,3922,7545,1230,1617,1849,355,3542,4135,4398,3336,111,4136,3650,1350,3135,3436,3035,4137,2149,3266,3543,7546,2784,3923,3924,2991,722,2008,7547,1071,247,1207,2338,2471,1378,4399,2009,864,1437,1214,4400,373,3770,1142,2216,667,4401,442,2753,2555,3771,3925,1968,4138,3267,1839,837,170,1107,934,1336,1882,7548,7549,2118,4139,2828,743,1569,7550,4402,4140,582,2384,1418,3437,7551,1802,7552,357,1395,1729,3651,3268,2418,1564,2237,7553,3083,3772,1633,4403,1114,2085,4141,1532,7554,482,2446,4404,7555,7556,1492,833,1466,7557,2717,3544,1641,2829,7558,1526,1272,3652,4142,1686,1794,416,2556,1902,1953,1803,7559,3773,2785,3774,1159,2316,7560,2867,4405,1610,1584,3036,2419,2754,443,3269,1163,3136,7561,7562,3926,7563,4143,2499,3037,4406,3927,3137,2103,1647,3545,2010,1872,4144,7564,4145,431,3438,7565,250,97,81,4146,7566,1648,1850,1558,160,848,7567,866,740,1694,7568,2201,2830,3195,4147,4407,3653,1687,950,2472,426,469,3196,3654,3655,3928,7569,7570,1188,424,1995,861,3546,4148,3775,2202,2685,168,1235,3547,4149,7571,2086,1674,4408,3337,3270,220,2557,1009,7572,3776,670,2992,332,1208,717,7573,7574,3548,2447,3929,3338,7575,513,7576,1209,2868,3339,3138,4409,1080,7577,7578,7579,7580,2527,3656,3549,815,1587,3930,3931,7581,3550,3439,3777,1254,4410,1328,3038,1390,3932,1741,3933,3778,3934,7582,236,3779,2448,3271,7583,7584,3657,3780,1273,3781,4411,7585,308,7586,4412,245,4413,1851,2473,1307,2575,430,715,2136,2449,7587,270,199,2869,3935,7588,3551,2718,1753,761,1754,725,1661,1840,4414,3440,3658,7589,7590,587,14,3272,227,2598,326,480,2265,943,2755,3552,291,650,1883,7591,1702,1226,102,1547,62,3441,904,4415,3442,1164,4150,7592,7593,1224,1548,2756,391,498,1493,7594,1386,1419,7595,2055,1177,4416,813,880,1081,2363,566,1145,4417,2286,1001,1035,2558,2599,2238,394,1286,7596,7597,2068,7598,86,1494,1730,3936,491,1588,745,897,2948,843,3340,3937,2757,2870,3273,1768,998,2217,2069,397,1826,1195,1969,3659,2993,3341,284,7599,3782,2500,2137,2119,1903,7600,3938,2150,3939,4151,1036,3443,1904,114,2559,4152,209,1527,7601,7602,2949,2831,2625,2385,2719,3139,812,2560,7603,3274,7604,1559,737,1884,3660,1210,885,28,2686,3553,3783,7605,4153,1004,1779,4418,7606,346,1981,2218,2687,4419,3784,1742,797,1642,3940,1933,1072,1384,2151,896,3941,3275,3661,3197,2871,3554,7607,2561,1958,4420,2450,1785,7608,7609,7610,3942,4154,1005,1308,3662,4155,2720,4421,4422,1528,2600,161,1178,4156,1982,987,4423,1101,4157,631,3943,1157,3198,2420,1343,1241,1016,2239,2562,372,877,2339,2501,1160,555,1934,911,3944,7611,466,1170,169,1051,2907,2688,3663,2474,2994,1182,2011,2563,1251,2626,7612,992,2340,3444,1540,2721,1201,2070,2401,1996,2475,7613,4424,528,1922,2188,1503,1873,1570,2364,3342,3276,7614,557,1073,7615,1827,3445,2087,2266,3140,3039,3084,767,3085,2786,4425,1006,4158,4426,2341,1267,2176,3664,3199,778,3945,3200,2722,1597,2657,7616,4427,7617,3446,7618,7619,7620,3277,2689,1433,3278,131,95,1504,3946,723,4159,3141,1841,3555,2758,2189,3947,2027,2104,3665,7621,2995,3948,1218,7622,3343,3201,3949,4160,2576,248,1634,3785,912,7623,2832,3666,3040,3786,654,53,7624,2996,7625,1688,4428,777,3447,1032,3950,1425,7626,191,820,2120,2833,971,4429,931,3202,135,664,783,3787,1997,772,2908,1935,3951,3788,4430,2909,3203,282,2723,640,1372,3448,1127,922,325,3344,7627,7628,711,2044,7629,7630,3952,2219,2787,1936,3953,3345,2220,2251,3789,2300,7631,4431,3790,1258,3279,3954,3204,2138,2950,3955,3956,7632,2221,258,3205,4432,101,1227,7633,3280,1755,7634,1391,3281,7635,2910,2056,893,7636,7637,7638,1402,4161,2342,7639,7640,3206,3556,7641,7642,878,1325,1780,2788,4433,259,1385,2577,744,1183,2267,4434,7643,3957,2502,7644,684,1024,4162,7645,472,3557,3449,1165,3282,3958,3959,322,2152,881,455,1695,1152,1340,660,554,2153,4435,1058,4436,4163,830,1065,3346,3960,4437,1923,7646,1703,1918,7647,932,2268,122,7648,4438,947,677,7649,3791,2627,297,1905,1924,2269,4439,2317,3283,7650,7651,4164,7652,4165,84,4166,112,989,7653,547,1059,3961,701,3558,1019,7654,4167,7655,3450,942,639,457,2301,2451,993,2951,407,851,494,4440,3347,927,7656,1237,7657,2421,3348,573,4168,680,921,2911,1279,1874,285,790,1448,1983,719,2167,7658,7659,4441,3962,3963,1649,7660,1541,563,7661,1077,7662,3349,3041,3451,511,2997,3964,3965,3667,3966,1268,2564,3350,3207,4442,4443,7663,535,1048,1276,1189,2912,2028,3142,1438,1373,2834,2952,1134,2012,7664,4169,1238,2578,3086,1259,7665,700,7666,2953,3143,3668,4170,7667,4171,1146,1875,1906,4444,2601,3967,781,2422,132,1589,203,147,273,2789,2402,898,1786,2154,3968,3969,7668,3792,2790,7669,7670,4445,4446,7671,3208,7672,1635,3793,965,7673,1804,2690,1516,3559,1121,1082,1329,3284,3970,1449,3794,65,1128,2835,2913,2759,1590,3795,7674,7675,12,2658,45,976,2579,3144,4447,517,2528,1013,1037,3209,7676,3796,2836,7677,3797,7678,3452,7679,2602,614,1998,2318,3798,3087,2724,2628,7680,2580,4172,599,1269,7681,1810,3669,7682,2691,3088,759,1060,489,1805,3351,3285,1358,7683,7684,2386,1387,1215,2629,2252,490,7685,7686,4173,1759,2387,2343,7687,4448,3799,1907,3971,2630,1806,3210,4449,3453,3286,2760,2344,874,7688,7689,3454,3670,1858,91,2914,3671,3042,3800,4450,7690,3145,3972,2659,7691,3455,1202,1403,3801,2954,2529,1517,2503,4451,3456,2504,7692,4452,7693,2692,1885,1495,1731,3973,2365,4453,7694,2029,7695,7696,3974,2693,1216,237,2581,4174,2319,3975,3802,4454,4455,2694,3560,3457,445,4456,7697,7698,7699,7700,2761,61,3976,3672,1822,3977,7701,687,2045,935,925,405,2660,703,1096,1859,2725,4457,3978,1876,1367,2695,3352,918,2105,1781,2476,334,3287,1611,1093,4458,564,3146,3458,3673,3353,945,2631,2057,4459,7702,1925,872,4175,7703,3459,2696,3089,349,4176,3674,3979,4460,3803,4177,3675,2155,3980,4461,4462,4178,4463,2403,2046,782,3981,400,251,4179,1624,7704,7705,277,3676,299,1265,476,1191,3804,2121,4180,4181,1109,205,7706,2582,1e3,2156,3561,1860,7707,7708,7709,4464,7710,4465,2565,107,2477,2157,3982,3460,3147,7711,1533,541,1301,158,753,4182,2872,3562,7712,1696,370,1088,4183,4466,3563,579,327,440,162,2240,269,1937,1374,3461,968,3043,56,1396,3090,2106,3288,3354,7713,1926,2158,4467,2998,7714,3564,7715,7716,3677,4468,2478,7717,2791,7718,1650,4469,7719,2603,7720,7721,3983,2661,3355,1149,3356,3984,3805,3985,7722,1076,49,7723,951,3211,3289,3290,450,2837,920,7724,1811,2792,2366,4184,1908,1138,2367,3806,3462,7725,3212,4470,1909,1147,1518,2423,4471,3807,7726,4472,2388,2604,260,1795,3213,7727,7728,3808,3291,708,7729,3565,1704,7730,3566,1351,1618,3357,2999,1886,944,4185,3358,4186,3044,3359,4187,7731,3678,422,413,1714,3292,500,2058,2345,4188,2479,7732,1344,1910,954,7733,1668,7734,7735,3986,2404,4189,3567,3809,4190,7736,2302,1318,2505,3091,133,3092,2873,4473,629,31,2838,2697,3810,4474,850,949,4475,3987,2955,1732,2088,4191,1496,1852,7737,3988,620,3214,981,1242,3679,3360,1619,3680,1643,3293,2139,2452,1970,1719,3463,2168,7738,3215,7739,7740,3361,1828,7741,1277,4476,1565,2047,7742,1636,3568,3093,7743,869,2839,655,3811,3812,3094,3989,3e3,3813,1310,3569,4477,7744,7745,7746,1733,558,4478,3681,335,1549,3045,1756,4192,3682,1945,3464,1829,1291,1192,470,2726,2107,2793,913,1054,3990,7747,1027,7748,3046,3991,4479,982,2662,3362,3148,3465,3216,3217,1946,2794,7749,571,4480,7750,1830,7751,3570,2583,1523,2424,7752,2089,984,4481,3683,1959,7753,3684,852,923,2795,3466,3685,969,1519,999,2048,2320,1705,7754,3095,615,1662,151,597,3992,2405,2321,1049,275,4482,3686,4193,568,3687,3571,2480,4194,3688,7755,2425,2270,409,3218,7756,1566,2874,3467,1002,769,2840,194,2090,3149,3689,2222,3294,4195,628,1505,7757,7758,1763,2177,3001,3993,521,1161,2584,1787,2203,2406,4483,3994,1625,4196,4197,412,42,3096,464,7759,2632,4484,3363,1760,1571,2875,3468,2530,1219,2204,3814,2633,2140,2368,4485,4486,3295,1651,3364,3572,7760,7761,3573,2481,3469,7762,3690,7763,7764,2271,2091,460,7765,4487,7766,3002,962,588,3574,289,3219,2634,1116,52,7767,3047,1796,7768,7769,7770,1467,7771,1598,1143,3691,4198,1984,1734,1067,4488,1280,3365,465,4489,1572,510,7772,1927,2241,1812,1644,3575,7773,4490,3692,7774,7775,2663,1573,1534,7776,7777,4199,536,1807,1761,3470,3815,3150,2635,7778,7779,7780,4491,3471,2915,1911,2796,7781,3296,1122,377,3220,7782,360,7783,7784,4200,1529,551,7785,2059,3693,1769,2426,7786,2916,4201,3297,3097,2322,2108,2030,4492,1404,136,1468,1479,672,1171,3221,2303,271,3151,7787,2762,7788,2049,678,2727,865,1947,4493,7789,2013,3995,2956,7790,2728,2223,1397,3048,3694,4494,4495,1735,2917,3366,3576,7791,3816,509,2841,2453,2876,3817,7792,7793,3152,3153,4496,4202,2531,4497,2304,1166,1010,552,681,1887,7794,7795,2957,2958,3996,1287,1596,1861,3154,358,453,736,175,478,1117,905,1167,1097,7796,1853,1530,7797,1706,7798,2178,3472,2287,3695,3473,3577,4203,2092,4204,7799,3367,1193,2482,4205,1458,2190,2205,1862,1888,1421,3298,2918,3049,2179,3474,595,2122,7800,3997,7801,7802,4206,1707,2636,223,3696,1359,751,3098,183,3475,7803,2797,3003,419,2369,633,704,3818,2389,241,7804,7805,7806,838,3004,3697,2272,2763,2454,3819,1938,2050,3998,1309,3099,2242,1181,7807,1136,2206,3820,2370,1446,4207,2305,4498,7808,7809,4208,1055,2605,484,3698,7810,3999,625,4209,2273,3368,1499,4210,4e3,7811,4001,4211,3222,2274,2275,3476,7812,7813,2764,808,2606,3699,3369,4002,4212,3100,2532,526,3370,3821,4213,955,7814,1620,4214,2637,2427,7815,1429,3700,1669,1831,994,928,7816,3578,1260,7817,7818,7819,1948,2288,741,2919,1626,4215,2729,2455,867,1184,362,3371,1392,7820,7821,4003,4216,1770,1736,3223,2920,4499,4500,1928,2698,1459,1158,7822,3050,3372,2877,1292,1929,2506,2842,3701,1985,1187,2071,2014,2607,4217,7823,2566,2507,2169,3702,2483,3299,7824,3703,4501,7825,7826,666,1003,3005,1022,3579,4218,7827,4502,1813,2253,574,3822,1603,295,1535,705,3823,4219,283,858,417,7828,7829,3224,4503,4504,3051,1220,1889,1046,2276,2456,4004,1393,1599,689,2567,388,4220,7830,2484,802,7831,2798,3824,2060,1405,2254,7832,4505,3825,2109,1052,1345,3225,1585,7833,809,7834,7835,7836,575,2730,3477,956,1552,1469,1144,2323,7837,2324,1560,2457,3580,3226,4005,616,2207,3155,2180,2289,7838,1832,7839,3478,4506,7840,1319,3704,3705,1211,3581,1023,3227,1293,2799,7841,7842,7843,3826,607,2306,3827,762,2878,1439,4221,1360,7844,1485,3052,7845,4507,1038,4222,1450,2061,2638,4223,1379,4508,2585,7846,7847,4224,1352,1414,2325,2921,1172,7848,7849,3828,3829,7850,1797,1451,7851,7852,7853,7854,2922,4006,4007,2485,2346,411,4008,4009,3582,3300,3101,4509,1561,2664,1452,4010,1375,7855,7856,47,2959,316,7857,1406,1591,2923,3156,7858,1025,2141,3102,3157,354,2731,884,2224,4225,2407,508,3706,726,3583,996,2428,3584,729,7859,392,2191,1453,4011,4510,3707,7860,7861,2458,3585,2608,1675,2800,919,2347,2960,2348,1270,4511,4012,73,7862,7863,647,7864,3228,2843,2255,1550,1346,3006,7865,1332,883,3479,7866,7867,7868,7869,3301,2765,7870,1212,831,1347,4226,4512,2326,3830,1863,3053,720,3831,4513,4514,3832,7871,4227,7872,7873,4515,7874,7875,1798,4516,3708,2609,4517,3586,1645,2371,7876,7877,2924,669,2208,2665,2429,7878,2879,7879,7880,1028,3229,7881,4228,2408,7882,2256,1353,7883,7884,4518,3158,518,7885,4013,7886,4229,1960,7887,2142,4230,7888,7889,3007,2349,2350,3833,516,1833,1454,4014,2699,4231,4519,2225,2610,1971,1129,3587,7890,2766,7891,2961,1422,577,1470,3008,1524,3373,7892,7893,432,4232,3054,3480,7894,2586,1455,2508,2226,1972,1175,7895,1020,2732,4015,3481,4520,7896,2733,7897,1743,1361,3055,3482,2639,4016,4233,4521,2290,895,924,4234,2170,331,2243,3056,166,1627,3057,1098,7898,1232,2880,2227,3374,4522,657,403,1196,2372,542,3709,3375,1600,4235,3483,7899,4523,2767,3230,576,530,1362,7900,4524,2533,2666,3710,4017,7901,842,3834,7902,2801,2031,1014,4018,213,2700,3376,665,621,4236,7903,3711,2925,2430,7904,2431,3302,3588,3377,7905,4237,2534,4238,4525,3589,1682,4239,3484,1380,7906,724,2277,600,1670,7907,1337,1233,4526,3103,2244,7908,1621,4527,7909,651,4240,7910,1612,4241,2611,7911,2844,7912,2734,2307,3058,7913,716,2459,3059,174,1255,2701,4019,3590,548,1320,1398,728,4020,1574,7914,1890,1197,3060,4021,7915,3061,3062,3712,3591,3713,747,7916,635,4242,4528,7917,7918,7919,4243,7920,7921,4529,7922,3378,4530,2432,451,7923,3714,2535,2072,4244,2735,4245,4022,7924,1764,4531,7925,4246,350,7926,2278,2390,2486,7927,4247,4023,2245,1434,4024,488,4532,458,4248,4025,3715,771,1330,2391,3835,2568,3159,2159,2409,1553,2667,3160,4249,7928,2487,2881,2612,1720,2702,4250,3379,4533,7929,2536,4251,7930,3231,4252,2768,7931,2015,2736,7932,1155,1017,3716,3836,7933,3303,2308,201,1864,4253,1430,7934,4026,7935,7936,7937,7938,7939,4254,1604,7940,414,1865,371,2587,4534,4535,3485,2016,3104,4536,1708,960,4255,887,389,2171,1536,1663,1721,7941,2228,4027,2351,2926,1580,7942,7943,7944,1744,7945,2537,4537,4538,7946,4539,7947,2073,7948,7949,3592,3380,2882,4256,7950,4257,2640,3381,2802,673,2703,2460,709,3486,4028,3593,4258,7951,1148,502,634,7952,7953,1204,4540,3594,1575,4541,2613,3717,7954,3718,3105,948,3232,121,1745,3837,1110,7955,4259,3063,2509,3009,4029,3719,1151,1771,3838,1488,4030,1986,7956,2433,3487,7957,7958,2093,7959,4260,3839,1213,1407,2803,531,2737,2538,3233,1011,1537,7960,2769,4261,3106,1061,7961,3720,3721,1866,2883,7962,2017,120,4262,4263,2062,3595,3234,2309,3840,2668,3382,1954,4542,7963,7964,3488,1047,2704,1266,7965,1368,4543,2845,649,3383,3841,2539,2738,1102,2846,2669,7966,7967,1999,7968,1111,3596,2962,7969,2488,3842,3597,2804,1854,3384,3722,7970,7971,3385,2410,2884,3304,3235,3598,7972,2569,7973,3599,2805,4031,1460,856,7974,3600,7975,2885,2963,7976,2886,3843,7977,4264,632,2510,875,3844,1697,3845,2291,7978,7979,4544,3010,1239,580,4545,4265,7980,914,936,2074,1190,4032,1039,2123,7981,7982,7983,3386,1473,7984,1354,4266,3846,7985,2172,3064,4033,915,3305,4267,4268,3306,1605,1834,7986,2739,398,3601,4269,3847,4034,328,1912,2847,4035,3848,1331,4270,3011,937,4271,7987,3602,4036,4037,3387,2160,4546,3388,524,742,538,3065,1012,7988,7989,3849,2461,7990,658,1103,225,3850,7991,7992,4547,7993,4548,7994,3236,1243,7995,4038,963,2246,4549,7996,2705,3603,3161,7997,7998,2588,2327,7999,4550,8e3,8001,8002,3489,3307,957,3389,2540,2032,1930,2927,2462,870,2018,3604,1746,2770,2771,2434,2463,8003,3851,8004,3723,3107,3724,3490,3390,3725,8005,1179,3066,8006,3162,2373,4272,3726,2541,3163,3108,2740,4039,8007,3391,1556,2542,2292,977,2887,2033,4040,1205,3392,8008,1765,3393,3164,2124,1271,1689,714,4551,3491,8009,2328,3852,533,4273,3605,2181,617,8010,2464,3308,3492,2310,8011,8012,3165,8013,8014,3853,1987,618,427,2641,3493,3394,8015,8016,1244,1690,8017,2806,4274,4552,8018,3494,8019,8020,2279,1576,473,3606,4275,3395,972,8021,3607,8022,3067,8023,8024,4553,4554,8025,3727,4041,4042,8026,153,4555,356,8027,1891,2888,4276,2143,408,803,2352,8028,3854,8029,4277,1646,2570,2511,4556,4557,3855,8030,3856,4278,8031,2411,3396,752,8032,8033,1961,2964,8034,746,3012,2465,8035,4279,3728,698,4558,1892,4280,3608,2543,4559,3609,3857,8036,3166,3397,8037,1823,1302,4043,2706,3858,1973,4281,8038,4282,3167,823,1303,1288,1236,2848,3495,4044,3398,774,3859,8039,1581,4560,1304,2849,3860,4561,8040,2435,2161,1083,3237,4283,4045,4284,344,1173,288,2311,454,1683,8041,8042,1461,4562,4046,2589,8043,8044,4563,985,894,8045,3399,3168,8046,1913,2928,3729,1988,8047,2110,1974,8048,4047,8049,2571,1194,425,8050,4564,3169,1245,3730,4285,8051,8052,2850,8053,636,4565,1855,3861,760,1799,8054,4286,2209,1508,4566,4048,1893,1684,2293,8055,8056,8057,4287,4288,2210,479,8058,8059,832,8060,4049,2489,8061,2965,2490,3731,990,3109,627,1814,2642,4289,1582,4290,2125,2111,3496,4567,8062,799,4291,3170,8063,4568,2112,1737,3013,1018,543,754,4292,3309,1676,4569,4570,4050,8064,1489,8065,3497,8066,2614,2889,4051,8067,8068,2966,8069,8070,8071,8072,3171,4571,4572,2182,1722,8073,3238,3239,1842,3610,1715,481,365,1975,1856,8074,8075,1962,2491,4573,8076,2126,3611,3240,433,1894,2063,2075,8077,602,2741,8078,8079,8080,8081,8082,3014,1628,3400,8083,3172,4574,4052,2890,4575,2512,8084,2544,2772,8085,8086,8087,3310,4576,2891,8088,4577,8089,2851,4578,4579,1221,2967,4053,2513,8090,8091,8092,1867,1989,8093,8094,8095,1895,8096,8097,4580,1896,4054,318,8098,2094,4055,4293,8099,8100,485,8101,938,3862,553,2670,116,8102,3863,3612,8103,3498,2671,2773,3401,3311,2807,8104,3613,2929,4056,1747,2930,2968,8105,8106,207,8107,8108,2672,4581,2514,8109,3015,890,3614,3864,8110,1877,3732,3402,8111,2183,2353,3403,1652,8112,8113,8114,941,2294,208,3499,4057,2019,330,4294,3865,2892,2492,3733,4295,8115,8116,8117,8118,2515,1613,4582,8119,3312,3866,2516,8120,4058,8121,1637,4059,2466,4583,3867,8122,2493,3016,3734,8123,8124,2192,8125,8126,2162,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741]});var xg=ke(E2=>{"use strict";E2.EUCKR_TYPICAL_DISTRIBUTION_RATIO=6;E2.EUCKR_TABLE_SIZE=2352;E2.EUCKRCharToFreqOrder=[13,130,120,1396,481,1719,1720,328,609,212,1721,707,400,299,1722,87,1397,1723,104,536,1117,1203,1724,1267,685,1268,508,1725,1726,1727,1728,1398,1399,1729,1730,1731,141,621,326,1057,368,1732,267,488,20,1733,1269,1734,945,1400,1735,47,904,1270,1736,1737,773,248,1738,409,313,786,429,1739,116,987,813,1401,683,75,1204,145,1740,1741,1742,1743,16,847,667,622,708,1744,1745,1746,966,787,304,129,1747,60,820,123,676,1748,1749,1750,1751,617,1752,626,1753,1754,1755,1756,653,1757,1758,1759,1760,1761,1762,856,344,1763,1764,1765,1766,89,401,418,806,905,848,1767,1768,1769,946,1205,709,1770,1118,1771,241,1772,1773,1774,1271,1775,569,1776,999,1777,1778,1779,1780,337,751,1058,28,628,254,1781,177,906,270,349,891,1079,1782,19,1783,379,1784,315,1785,629,754,1402,559,1786,636,203,1206,1787,710,567,1788,935,814,1789,1790,1207,766,528,1791,1792,1208,1793,1794,1795,1796,1797,1403,1798,1799,533,1059,1404,1405,1156,1406,936,884,1080,1800,351,1801,1802,1803,1804,1805,801,1806,1807,1808,1119,1809,1157,714,474,1407,1810,298,899,885,1811,1120,802,1158,1812,892,1813,1814,1408,659,1815,1816,1121,1817,1818,1819,1820,1821,1822,319,1823,594,545,1824,815,937,1209,1825,1826,573,1409,1022,1827,1210,1828,1829,1830,1831,1832,1833,556,722,807,1122,1060,1834,697,1835,900,557,715,1836,1410,540,1411,752,1159,294,597,1211,976,803,770,1412,1837,1838,39,794,1413,358,1839,371,925,1840,453,661,788,531,723,544,1023,1081,869,91,1841,392,430,790,602,1414,677,1082,457,1415,1416,1842,1843,475,327,1024,1417,795,121,1844,733,403,1418,1845,1846,1847,300,119,711,1212,627,1848,1272,207,1849,1850,796,1213,382,1851,519,1852,1083,893,1853,1854,1855,367,809,487,671,1856,663,1857,1858,956,471,306,857,1859,1860,1160,1084,1861,1862,1863,1864,1865,1061,1866,1867,1868,1869,1870,1871,282,96,574,1872,502,1085,1873,1214,1874,907,1875,1876,827,977,1419,1420,1421,268,1877,1422,1878,1879,1880,308,1881,2,537,1882,1883,1215,1884,1885,127,791,1886,1273,1423,1887,34,336,404,643,1888,571,654,894,840,1889,0,886,1274,122,575,260,908,938,1890,1275,410,316,1891,1892,100,1893,1894,1123,48,1161,1124,1025,1895,633,901,1276,1896,1897,115,816,1898,317,1899,694,1900,909,734,1424,572,866,1425,691,85,524,1010,543,394,841,1901,1902,1903,1026,1904,1905,1906,1907,1908,1909,30,451,651,988,310,1910,1911,1426,810,1216,93,1912,1913,1277,1217,1914,858,759,45,58,181,610,269,1915,1916,131,1062,551,443,1e3,821,1427,957,895,1086,1917,1918,375,1919,359,1920,687,1921,822,1922,293,1923,1924,40,662,118,692,29,939,887,640,482,174,1925,69,1162,728,1428,910,1926,1278,1218,1279,386,870,217,854,1163,823,1927,1928,1929,1930,834,1931,78,1932,859,1933,1063,1934,1935,1936,1937,438,1164,208,595,1938,1939,1940,1941,1219,1125,1942,280,888,1429,1430,1220,1431,1943,1944,1945,1946,1947,1280,150,510,1432,1948,1949,1950,1951,1952,1953,1954,1011,1087,1955,1433,1043,1956,881,1957,614,958,1064,1065,1221,1958,638,1001,860,967,896,1434,989,492,553,1281,1165,1959,1282,1002,1283,1222,1960,1961,1962,1963,36,383,228,753,247,454,1964,876,678,1965,1966,1284,126,464,490,835,136,672,529,940,1088,1435,473,1967,1968,467,50,390,227,587,279,378,598,792,968,240,151,160,849,882,1126,1285,639,1044,133,140,288,360,811,563,1027,561,142,523,1969,1970,1971,7,103,296,439,407,506,634,990,1972,1973,1974,1975,645,1976,1977,1978,1979,1980,1981,236,1982,1436,1983,1984,1089,192,828,618,518,1166,333,1127,1985,818,1223,1986,1987,1988,1989,1990,1991,1992,1993,342,1128,1286,746,842,1994,1995,560,223,1287,98,8,189,650,978,1288,1996,1437,1997,17,345,250,423,277,234,512,226,97,289,42,167,1998,201,1999,2e3,843,836,824,532,338,783,1090,182,576,436,1438,1439,527,500,2001,947,889,2002,2003,2004,2005,262,600,314,447,2006,547,2007,693,738,1129,2008,71,1440,745,619,688,2009,829,2010,2011,147,2012,33,948,2013,2014,74,224,2015,61,191,918,399,637,2016,1028,1130,257,902,2017,2018,2019,2020,2021,2022,2023,2024,2025,2026,837,2027,2028,2029,2030,179,874,591,52,724,246,2031,2032,2033,2034,1167,969,2035,1289,630,605,911,1091,1168,2036,2037,2038,1441,912,2039,623,2040,2041,253,1169,1290,2042,1442,146,620,611,577,433,2043,1224,719,1170,959,440,437,534,84,388,480,1131,159,220,198,679,2044,1012,819,1066,1443,113,1225,194,318,1003,1029,2045,2046,2047,2048,1067,2049,2050,2051,2052,2053,59,913,112,2054,632,2055,455,144,739,1291,2056,273,681,499,2057,448,2058,2059,760,2060,2061,970,384,169,245,1132,2062,2063,414,1444,2064,2065,41,235,2066,157,252,877,568,919,789,580,2067,725,2068,2069,1292,2070,2071,1445,2072,1446,2073,2074,55,588,66,1447,271,1092,2075,1226,2076,960,1013,372,2077,2078,2079,2080,2081,1293,2082,2083,2084,2085,850,2086,2087,2088,2089,2090,186,2091,1068,180,2092,2093,2094,109,1227,522,606,2095,867,1448,1093,991,1171,926,353,1133,2096,581,2097,2098,2099,1294,1449,1450,2100,596,1172,1014,1228,2101,1451,1295,1173,1229,2102,2103,1296,1134,1452,949,1135,2104,2105,1094,1453,1454,1455,2106,1095,2107,2108,2109,2110,2111,2112,2113,2114,2115,2116,2117,804,2118,2119,1230,1231,805,1456,405,1136,2120,2121,2122,2123,2124,720,701,1297,992,1457,927,1004,2125,2126,2127,2128,2129,2130,22,417,2131,303,2132,385,2133,971,520,513,2134,1174,73,1096,231,274,962,1458,673,2135,1459,2136,152,1137,2137,2138,2139,2140,1005,1138,1460,1139,2141,2142,2143,2144,11,374,844,2145,154,1232,46,1461,2146,838,830,721,1233,106,2147,90,428,462,578,566,1175,352,2148,2149,538,1234,124,1298,2150,1462,761,565,2151,686,2152,649,2153,72,173,2154,460,415,2155,1463,2156,1235,305,2157,2158,2159,2160,2161,2162,579,2163,2164,2165,2166,2167,747,2168,2169,2170,2171,1464,669,2172,2173,2174,2175,2176,1465,2177,23,530,285,2178,335,729,2179,397,2180,2181,2182,1030,2183,2184,698,2185,2186,325,2187,2188,369,2189,799,1097,1015,348,2190,1069,680,2191,851,1466,2192,2193,10,2194,613,424,2195,979,108,449,589,27,172,81,1031,80,774,281,350,1032,525,301,582,1176,2196,674,1045,2197,2198,1467,730,762,2199,2200,2201,2202,1468,2203,993,2204,2205,266,1070,963,1140,2206,2207,2208,664,1098,972,2209,2210,2211,1177,1469,1470,871,2212,2213,2214,2215,2216,1471,2217,2218,2219,2220,2221,2222,2223,2224,2225,2226,2227,1472,1236,2228,2229,2230,2231,2232,2233,2234,2235,1299,2236,2237,200,2238,477,373,2239,2240,731,825,777,2241,2242,2243,521,486,548,2244,2245,2246,1473,1300,53,549,137,875,76,158,2247,1301,1474,469,396,1016,278,712,2248,321,442,503,767,744,941,1237,1178,1475,2249,82,178,1141,1179,973,2250,1302,2251,297,2252,2253,570,2254,2255,2256,18,450,206,2257,290,292,1142,2258,511,162,99,346,164,735,2259,1476,1477,4,554,343,798,1099,2260,1100,2261,43,171,1303,139,215,2262,2263,717,775,2264,1033,322,216,2265,831,2266,149,2267,1304,2268,2269,702,1238,135,845,347,309,2270,484,2271,878,655,238,1006,1478,2272,67,2273,295,2274,2275,461,2276,478,942,412,2277,1034,2278,2279,2280,265,2281,541,2282,2283,2284,2285,2286,70,852,1071,2287,2288,2289,2290,21,56,509,117,432,2291,2292,331,980,552,1101,148,284,105,393,1180,1239,755,2293,187,2294,1046,1479,2295,340,2296,63,1047,230,2297,2298,1305,763,1306,101,800,808,494,2299,2300,2301,903,2302,37,1072,14,5,2303,79,675,2304,312,2305,2306,2307,2308,2309,1480,6,1307,2310,2311,2312,1,470,35,24,229,2313,695,210,86,778,15,784,592,779,32,77,855,964,2314,259,2315,501,380,2316,2317,83,981,153,689,1308,1481,1482,1483,2318,2319,716,1484,2320,2321,2322,2323,2324,2325,1485,2326,2327,128,57,68,261,1048,211,170,1240,31,2328,51,435,742,2329,2330,2331,635,2332,264,456,2333,2334,2335,425,2336,1486,143,507,263,943,2337,363,920,1487,256,1488,1102,243,601,1489,2338,2339,2340,2341,2342,2343,2344,861,2345,2346,2347,2348,2349,2350,395,2351,1490,1491,62,535,166,225,2352,2353,668,419,1241,138,604,928,2354,1181,2355,1492,1493,2356,2357,2358,1143,2359,696,2360,387,307,1309,682,476,2361,2362,332,12,222,156,2363,232,2364,641,276,656,517,1494,1495,1035,416,736,1496,2365,1017,586,2366,2367,2368,1497,2369,242,2370,2371,2372,1498,2373,965,713,2374,2375,2376,2377,740,982,1499,944,1500,1007,2378,2379,1310,1501,2380,2381,2382,785,329,2383,2384,1502,2385,2386,2387,932,2388,1503,2389,2390,2391,2392,1242,2393,2394,2395,2396,2397,994,950,2398,2399,2400,2401,1504,1311,2402,2403,2404,2405,1049,749,2406,2407,853,718,1144,1312,2408,1182,1505,2409,2410,255,516,479,564,550,214,1506,1507,1313,413,239,444,339,1145,1036,1508,1509,1314,1037,1510,1315,2411,1511,2412,2413,2414,176,703,497,624,593,921,302,2415,341,165,1103,1512,2416,1513,2417,2418,2419,376,2420,700,2421,2422,2423,258,768,1316,2424,1183,2425,995,608,2426,2427,2428,2429,221,2430,2431,2432,2433,2434,2435,2436,2437,195,323,726,188,897,983,1317,377,644,1050,879,2438,452,2439,2440,2441,2442,2443,2444,914,2445,2446,2447,2448,915,489,2449,1514,1184,2450,2451,515,64,427,495,2452,583,2453,483,485,1038,562,213,1515,748,666,2454,2455,2456,2457,334,2458,780,996,1008,705,1243,2459,2460,2461,2462,2463,114,2464,493,1146,366,163,1516,961,1104,2465,291,2466,1318,1105,2467,1517,365,2468,355,951,1244,2469,1319,2470,631,2471,2472,218,1320,364,320,756,1518,1519,1321,1520,1322,2473,2474,2475,2476,997,2477,2478,2479,2480,665,1185,2481,916,1521,2482,2483,2484,584,684,2485,2486,797,2487,1051,1186,2488,2489,2490,1522,2491,2492,370,2493,1039,1187,65,2494,434,205,463,1188,2495,125,812,391,402,826,699,286,398,155,781,771,585,2496,590,505,1073,2497,599,244,219,917,1018,952,646,1523,2498,1323,2499,2500,49,984,354,741,2501,625,2502,1324,2503,1019,190,357,757,491,95,782,868,2504,2505,2506,2507,2508,2509,134,1524,1074,422,1525,898,2510,161,2511,2512,2513,2514,769,2515,1526,2516,2517,411,1325,2518,472,1527,2519,2520,2521,2522,2523,2524,985,2525,2526,2527,2528,2529,2530,764,2531,1245,2532,2533,25,204,311,2534,496,2535,1052,2536,2537,2538,2539,2540,2541,2542,199,704,504,468,758,657,1528,196,44,839,1246,272,750,2543,765,862,2544,2545,1326,2546,132,615,933,2547,732,2548,2549,2550,1189,1529,2551,283,1247,1053,607,929,2552,2553,2554,930,183,872,616,1040,1147,2555,1148,1020,441,249,1075,2556,2557,2558,466,743,2559,2560,2561,92,514,426,420,526,2562,2563,2564,2565,2566,2567,2568,185,2569,2570,2571,2572,776,1530,658,2573,362,2574,361,922,1076,793,2575,2576,2577,2578,2579,2580,1531,251,2581,2582,2583,2584,1532,54,612,237,1327,2585,2586,275,408,647,111,2587,1533,1106,465,3,458,9,38,2588,107,110,890,209,26,737,498,2589,1534,2590,431,202,88,1535,356,287,1107,660,1149,2591,381,1536,986,1150,445,1248,1151,974,2592,2593,846,2594,446,953,184,1249,1250,727,2595,923,193,883,2596,2597,2598,102,324,539,817,2599,421,1041,2600,832,2601,94,175,197,406,2602,459,2603,2604,2605,2606,2607,330,555,2608,2609,2610,706,1108,389,2611,2612,2613,2614,233,2615,833,558,931,954,1251,2616,2617,1537,546,2618,2619,1009,2620,2621,2622,1538,690,1328,2623,955,2624,1539,2625,2626,772,2627,2628,2629,2630,2631,924,648,863,603,2632,2633,934,1540,864,865,2634,642,1042,670,1190,2635,2636,2637,2638,168,2639,652,873,542,1054,1541,2640,2641,2642,2643,2644,2645,2646,2647,2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667,2668,2669,2670,2671,2672,2673,2674,2675,2676,2677,2678,2679,2680,2681,2682,2683,2684,2685,2686,2687,2688,2689,2690,2691,2692,2693,2694,2695,2696,2697,2698,2699,1542,880,2700,2701,2702,2703,2704,2705,2706,2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724,2725,1543,2726,2727,2728,2729,2730,2731,2732,1544,2733,2734,2735,2736,2737,2738,2739,2740,2741,2742,2743,2744,2745,2746,2747,2748,2749,2750,2751,2752,2753,2754,1545,2755,2756,2757,2758,2759,2760,2761,2762,2763,2764,2765,2766,1546,2767,1547,2768,2769,2770,2771,2772,2773,2774,2775,2776,2777,2778,2779,2780,2781,2782,2783,2784,2785,2786,1548,2787,2788,2789,1109,2790,2791,2792,2793,2794,2795,2796,2797,2798,2799,2800,2801,2802,2803,2804,2805,2806,2807,2808,2809,2810,2811,2812,1329,2813,2814,2815,2816,2817,2818,2819,2820,2821,2822,2823,2824,2825,2826,2827,2828,2829,2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849,2850,2851,2852,2853,2854,2855,2856,1549,2857,2858,2859,2860,1550,2861,2862,1551,2863,2864,2865,2866,2867,2868,2869,2870,2871,2872,2873,2874,1110,1330,2875,2876,2877,2878,2879,2880,2881,2882,2883,2884,2885,2886,2887,2888,2889,2890,2891,2892,2893,2894,2895,2896,2897,2898,2899,2900,2901,2902,2903,2904,2905,2906,2907,2908,2909,2910,2911,2912,2913,2914,2915,2916,2917,2918,2919,2920,2921,2922,2923,2924,2925,2926,2927,2928,2929,2930,1331,2931,2932,2933,2934,2935,2936,2937,2938,2939,2940,2941,2942,2943,1552,2944,2945,2946,2947,2948,2949,2950,2951,2952,2953,2954,2955,2956,2957,2958,2959,2960,2961,2962,2963,2964,1252,2965,2966,2967,2968,2969,2970,2971,2972,2973,2974,2975,2976,2977,2978,2979,2980,2981,2982,2983,2984,2985,2986,2987,2988,2989,2990,2991,2992,2993,2994,2995,2996,2997,2998,2999,3e3,3001,3002,3003,3004,3005,3006,3007,3008,3009,3010,3011,3012,1553,3013,3014,3015,3016,3017,1554,3018,1332,3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046,3047,3048,3049,3050,1555,3051,3052,3053,1556,1557,3054,3055,3056,3057,3058,3059,3060,3061,3062,3063,3064,3065,3066,3067,1558,3068,3069,3070,3071,3072,3073,3074,3075,3076,1559,3077,3078,3079,3080,3081,3082,3083,1253,3084,3085,3086,3087,3088,3089,3090,3091,3092,3093,3094,3095,3096,3097,3098,3099,3100,3101,3102,3103,3104,3105,3106,3107,3108,1152,3109,3110,3111,3112,3113,1560,3114,3115,3116,3117,1111,3118,3119,3120,3121,3122,3123,3124,3125,3126,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3138,3139,3140,3141,3142,3143,3144,3145,3146,3147,3148,3149,3150,3151,3152,3153,3154,3155,3156,3157,3158,3159,3160,3161,3162,3163,3164,3165,3166,3167,3168,3169,3170,3171,3172,3173,3174,3175,3176,1333,3177,3178,3179,3180,3181,3182,3183,3184,3185,3186,3187,3188,3189,1561,3190,3191,1334,3192,3193,3194,3195,3196,3197,3198,3199,3200,3201,3202,3203,3204,3205,3206,3207,3208,3209,3210,3211,3212,3213,3214,3215,3216,3217,3218,3219,3220,3221,3222,3223,3224,3225,3226,3227,3228,3229,3230,3231,3232,3233,3234,1562,3235,3236,3237,3238,3239,3240,3241,3242,3243,3244,3245,3246,3247,3248,3249,3250,3251,3252,3253,3254,3255,3256,3257,3258,3259,3260,3261,3262,3263,3264,3265,3266,3267,3268,3269,3270,3271,3272,3273,3274,3275,3276,3277,1563,3278,3279,3280,3281,3282,3283,3284,3285,3286,3287,3288,3289,3290,3291,3292,3293,3294,3295,3296,3297,3298,3299,3300,3301,3302,3303,3304,3305,3306,3307,3308,3309,3310,3311,3312,3313,3314,3315,3316,3317,3318,3319,3320,3321,3322,3323,3324,3325,3326,3327,3328,3329,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,1335,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3377,3378,3379,3380,3381,3382,3383,3384,3385,3386,3387,1336,3388,3389,3390,3391,3392,3393,3394,3395,3396,3397,3398,3399,3400,3401,3402,3403,3404,3405,3406,3407,3408,3409,3410,3411,3412,3413,3414,1337,3415,3416,3417,3418,3419,1338,3420,3421,3422,1564,1565,3423,3424,3425,3426,3427,3428,3429,3430,3431,1254,3432,3433,3434,1339,3435,3436,3437,3438,3439,1566,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,1255,3455,3456,3457,3458,3459,1567,1191,3460,1568,1569,3461,3462,3463,1570,3464,3465,3466,3467,3468,1571,3469,3470,3471,3472,3473,1572,3474,3475,3476,3477,3478,3479,3480,3481,3482,3483,3484,3485,3486,1340,3487,3488,3489,3490,3491,3492,1021,3493,3494,3495,3496,3497,3498,1573,3499,1341,3500,3501,3502,3503,3504,3505,3506,3507,3508,3509,3510,3511,1342,3512,3513,3514,3515,3516,1574,1343,3517,3518,3519,1575,3520,1576,3521,3522,3523,3524,3525,3526,3527,3528,3529,3530,3531,3532,3533,3534,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578,3579,3580,1577,3581,3582,1578,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,1579,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,1580,3630,3631,1581,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,3643,3644,3645,3646,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,1582,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,3676,3677,3678,3679,3680,3681,3682,3683,3684,3685,3686,3687,3688,3689,3690,3691,3692,3693,3694,3695,3696,3697,3698,3699,3700,1192,3701,3702,3703,3704,1256,3705,3706,3707,3708,1583,1257,3709,3710,3711,3712,3713,3714,3715,3716,1584,3717,3718,3719,3720,3721,3722,3723,3724,3725,3726,3727,3728,3729,3730,3731,3732,3733,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3744,3745,1344,3746,3747,3748,3749,3750,3751,3752,3753,3754,3755,3756,1585,3757,3758,3759,3760,3761,3762,3763,3764,3765,3766,1586,3767,3768,3769,3770,3771,3772,3773,3774,3775,3776,3777,3778,1345,3779,3780,3781,3782,3783,3784,3785,3786,3787,3788,3789,3790,3791,3792,3793,3794,3795,1346,1587,3796,3797,1588,3798,3799,3800,3801,3802,3803,3804,3805,3806,1347,3807,3808,3809,3810,3811,1589,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,1590,3822,3823,1591,1348,3824,3825,3826,3827,3828,3829,3830,1592,3831,3832,1593,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,1349,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,1594,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,1595,3870,3871,3872,3873,1596,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,1597,3887,3888,3889,3890,3891,3892,3893,3894,3895,1598,3896,3897,3898,1599,1600,3899,1350,3900,1351,3901,3902,1352,3903,3904,3905,3906,3907,3908,3909,3910,3911,3912,3913,3914,3915,3916,3917,3918,3919,3920,3921,3922,3923,3924,1258,3925,3926,3927,3928,3929,3930,3931,1193,3932,1601,3933,3934,3935,3936,3937,3938,3939,3940,3941,3942,3943,1602,3944,3945,3946,3947,3948,1603,3949,3950,3951,3952,3953,3954,3955,3956,3957,3958,3959,3960,3961,3962,3963,3964,3965,1604,3966,3967,3968,3969,3970,3971,3972,3973,3974,3975,3976,3977,1353,3978,3979,3980,3981,3982,3983,3984,3985,3986,3987,3988,3989,3990,3991,1354,3992,3993,3994,3995,3996,3997,3998,3999,4ee3,5001,5002,5003,5004,5005,1647,5006,1648,5007,5008,5009,5010,5011,5012,1078,5013,5014,5015,5016,5017,5018,5019,5020,5021,5022,5023,5024,5025,5026,5027,5028,1365,5029,5030,5031,5032,5033,5034,5035,5036,5037,5038,5039,1649,5040,5041,5042,5043,5044,5045,1366,5046,5047,5048,5049,5050,5051,5052,5053,5054,5055,1650,5056,5057,5058,5059,5060,5061,5062,5063,5064,5065,5066,5067,5068,5069,5070,5071,5072,5073,5074,5075,5076,5077,1651,5078,5079,5080,5081,5082,5083,5084,5085,5086,5087,5088,5089,5090,5091,5092,5093,5094,5095,5096,5097,5098,5099,5100,5101,5102,5103,5104,5105,5106,5107,5108,5109,5110,1652,5111,5112,5113,5114,5115,5116,5117,5118,1367,5119,5120,5121,5122,5123,5124,5125,5126,5127,5128,5129,1653,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,1368,5150,1654,5151,1369,5152,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171,5172,5173,5174,5175,5176,5177,5178,1370,5179,5180,5181,5182,5183,5184,5185,5186,5187,5188,5189,5190,5191,5192,5193,5194,5195,5196,5197,5198,1655,5199,5200,5201,5202,1656,5203,5204,5205,5206,1371,5207,1372,5208,5209,5210,5211,1373,5212,5213,1374,5214,5215,5216,5217,5218,5219,5220,5221,5222,5223,5224,5225,5226,5227,5228,5229,5230,5231,5232,5233,5234,5235,5236,5237,5238,5239,5240,5241,5242,5243,5244,5245,5246,5247,1657,5248,5249,5250,5251,1658,1263,5252,5253,5254,5255,5256,1375,5257,5258,5259,5260,5261,5262,5263,5264,5265,5266,5267,5268,5269,5270,5271,5272,5273,5274,5275,5276,5277,5278,5279,5280,5281,5282,5283,1659,5284,5285,5286,5287,5288,5289,5290,5291,5292,5293,5294,5295,5296,5297,5298,5299,5300,1660,5301,5302,5303,5304,5305,5306,5307,5308,5309,5310,5311,5312,5313,5314,5315,5316,5317,5318,5319,5320,5321,1376,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,1198,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,1661,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358,5359,5360,5361,5362,5363,5364,5365,5366,5367,5368,5369,5370,5371,5372,5373,5374,5375,5376,5377,5378,5379,5380,5381,5382,5383,5384,5385,5386,5387,5388,5389,5390,5391,5392,5393,5394,5395,5396,5397,5398,1264,5399,5400,5401,5402,5403,5404,5405,5406,5407,5408,5409,5410,5411,5412,1662,5413,5414,5415,5416,1663,5417,5418,5419,5420,5421,5422,5423,5424,5425,5426,5427,5428,5429,5430,5431,5432,5433,5434,5435,5436,5437,5438,1664,5439,5440,5441,5442,5443,5444,5445,5446,5447,5448,5449,5450,5451,5452,5453,5454,5455,5456,5457,5458,5459,5460,5461,5462,5463,5464,5465,5466,5467,5468,5469,5470,5471,5472,5473,5474,5475,5476,5477,5478,1154,5479,5480,5481,5482,5483,5484,5485,1665,5486,5487,5488,5489,5490,5491,5492,5493,5494,5495,5496,5497,5498,5499,5500,5501,5502,5503,5504,5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5516,5517,5518,5519,5520,5521,5522,5523,5524,5525,5526,5527,5528,5529,5530,5531,5532,5533,5534,5535,5536,5537,5538,5539,5540,5541,5542,5543,5544,5545,5546,5547,5548,1377,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,5560,5561,5562,5563,5564,5565,5566,5567,5568,5569,5570,1114,5571,5572,5573,5574,5575,5576,5577,5578,5579,5580,5581,5582,5583,5584,5585,5586,5587,5588,5589,5590,5591,5592,1378,5593,5594,5595,5596,5597,5598,5599,5600,5601,5602,5603,5604,5605,5606,5607,5608,5609,5610,5611,5612,5613,5614,1379,5615,5616,5617,5618,5619,5620,5621,5622,5623,5624,5625,5626,5627,5628,5629,5630,5631,5632,5633,5634,1380,5635,5636,5637,5638,5639,5640,5641,5642,5643,5644,5645,5646,5647,5648,5649,1381,1056,5650,5651,5652,5653,5654,5655,5656,5657,5658,5659,5660,1666,5661,5662,5663,5664,5665,5666,5667,5668,1667,5669,1668,5670,5671,5672,5673,5674,5675,5676,5677,5678,1155,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696,5697,5698,1669,5699,5700,5701,5702,5703,5704,5705,1670,5706,5707,5708,5709,5710,1671,5711,5712,5713,5714,1382,5715,5716,5717,5718,5719,5720,5721,5722,5723,5724,5725,1672,5726,5727,1673,1674,5728,5729,5730,5731,5732,5733,5734,5735,5736,1675,5737,5738,5739,5740,5741,5742,5743,5744,1676,5745,5746,5747,5748,5749,5750,5751,1383,5752,5753,5754,5755,5756,5757,5758,5759,5760,5761,5762,5763,5764,5765,5766,5767,5768,1677,5769,5770,5771,5772,5773,1678,5774,5775,5776,998,5777,5778,5779,5780,5781,5782,5783,5784,5785,1384,5786,5787,5788,5789,5790,5791,5792,5793,5794,5795,5796,5797,5798,5799,5800,1679,5801,5802,5803,1115,1116,5804,5805,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,1680,5856,5857,5858,5859,5860,5861,5862,5863,5864,1681,5865,5866,5867,1682,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,1683,5880,1684,5881,5882,5883,5884,1685,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,1686,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,1687,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,1688,1689,5953,1199,5954,5955,5956,5957,5958,5959,5960,5961,1690,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,1385,5982,1386,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6eee3,8001,8002,8003,8004,8005,8006,8007,8008,8009,8010,8011,8012,8013,8014,8015,8016,8017,8018,8019,8020,8021,8022,8023,8024,8025,8026,8027,8028,8029,8030,8031,8032,8033,8034,8035,8036,8037,8038,8039,8040,8041,8042,8043,8044,8045,8046,8047,8048,8049,8050,8051,8052,8053,8054,8055,8056,8057,8058,8059,8060,8061,8062,8063,8064,8065,8066,8067,8068,8069,8070,8071,8072,8073,8074,8075,8076,8077,8078,8079,8080,8081,8082,8083,8084,8085,8086,8087,8088,8089,8090,8091,8092,8093,8094,8095,8096,8097,8098,8099,8100,8101,8102,8103,8104,8105,8106,8107,8108,8109,8110,8111,8112,8113,8114,8115,8116,8117,8118,8119,8120,8121,8122,8123,8124,8125,8126,8127,8128,8129,8130,8131,8132,8133,8134,8135,8136,8137,8138,8139,8140,8141,8142,8143,8144,8145,8146,8147,8148,8149,8150,8151,8152,8153,8154,8155,8156,8157,8158,8159,8160,8161,8162,8163,8164,8165,8166,8167,8168,8169,8170,8171,8172,8173,8174,8175,8176,8177,8178,8179,8180,8181,8182,8183,8184,8185,8186,8187,8188,8189,8190,8191,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8208,8209,8210,8211,8212,8213,8214,8215,8216,8217,8218,8219,8220,8221,8222,8223,8224,8225,8226,8227,8228,8229,8230,8231,8232,8233,8234,8235,8236,8237,8238,8239,8240,8241,8242,8243,8244,8245,8246,8247,8248,8249,8250,8251,8252,8253,8254,8255,8256,8257,8258,8259,8260,8261,8262,8263,8264,8265,8266,8267,8268,8269,8270,8271,8272,8273,8274,8275,8276,8277,8278,8279,8280,8281,8282,8283,8284,8285,8286,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,8304,8305,8306,8307,8308,8309,8310,8311,8312,8313,8314,8315,8316,8317,8318,8319,8320,8321,8322,8323,8324,8325,8326,8327,8328,8329,8330,8331,8332,8333,8334,8335,8336,8337,8338,8339,8340,8341,8342,8343,8344,8345,8346,8347,8348,8349,8350,8351,8352,8353,8354,8355,8356,8357,8358,8359,8360,8361,8362,8363,8364,8365,8366,8367,8368,8369,8370,8371,8372,8373,8374,8375,8376,8377,8378,8379,8380,8381,8382,8383,8384,8385,8386,8387,8388,8389,8390,8391,8392,8393,8394,8395,8396,8397,8398,8399,8400,8401,8402,8403,8404,8405,8406,8407,8408,8409,8410,8411,8412,8413,8414,8415,8416,8417,8418,8419,8420,8421,8422,8423,8424,8425,8426,8427,8428,8429,8430,8431,8432,8433,8434,8435,8436,8437,8438,8439,8440,8441,8442,8443,8444,8445,8446,8447,8448,8449,8450,8451,8452,8453,8454,8455,8456,8457,8458,8459,8460,8461,8462,8463,8464,8465,8466,8467,8468,8469,8470,8471,8472,8473,8474,8475,8476,8477,8478,8479,8480,8481,8482,8483,8484,8485,8486,8487,8488,8489,8490,8491,8492,8493,8494,8495,8496,8497,8498,8499,8500,8501,8502,8503,8504,8505,8506,8507,8508,8509,8510,8511,8512,8513,8514,8515,8516,8517,8518,8519,8520,8521,8522,8523,8524,8525,8526,8527,8528,8529,8530,8531,8532,8533,8534,8535,8536,8537,8538,8539,8540,8541,8542,8543,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,8556,8557,8558,8559,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8570,8571,8572,8573,8574,8575,8576,8577,8578,8579,8580,8581,8582,8583,8584,8585,8586,8587,8588,8589,8590,8591,8592,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8607,8608,8609,8610,8611,8612,8613,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8633,8634,8635,8636,8637,8638,8639,8640,8641,8642,8643,8644,8645,8646,8647,8648,8649,8650,8651,8652,8653,8654,8655,8656,8657,8658,8659,8660,8661,8662,8663,8664,8665,8666,8667,8668,8669,8670,8671,8672,8673,8674,8675,8676,8677,8678,8679,8680,8681,8682,8683,8684,8685,8686,8687,8688,8689,8690,8691,8692,8693,8694,8695,8696,8697,8698,8699,8700,8701,8702,8703,8704,8705,8706,8707,8708,8709,8710,8711,8712,8713,8714,8715,8716,8717,8718,8719,8720,8721,8722,8723,8724,8725,8726,8727,8728,8729,8730,8731,8732,8733,8734,8735,8736,8737,8738,8739,8740,8741]});var yg=ke(_2=>{"use strict";_2.GB2312_TYPICAL_DISTRIBUTION_RATIO=.9;_2.GB2312_TABLE_SIZE=3760;_2.GB2312CharToFreqOrder=[1671,749,1443,2364,3924,3807,2330,3921,1704,3463,2691,1511,1515,572,3191,2205,2361,224,2558,479,1711,963,3162,440,4060,1905,2966,2947,3580,2647,3961,3842,2204,869,4207,970,2678,5626,2944,2956,1479,4048,514,3595,588,1346,2820,3409,249,4088,1746,1873,2047,1774,581,1813,358,1174,3590,1014,1561,4844,2245,670,1636,3112,889,1286,953,556,2327,3060,1290,3141,613,185,3477,1367,850,3820,1715,2428,2642,2303,2732,3041,2562,2648,3566,3946,1349,388,3098,2091,1360,3585,152,1687,1539,738,1559,59,1232,2925,2267,1388,1249,1741,1679,2960,151,1566,1125,1352,4271,924,4296,385,3166,4459,310,1245,2850,70,3285,2729,3534,3575,2398,3298,3466,1960,2265,217,3647,864,1909,2084,4401,2773,1010,3269,5152,853,3051,3121,1244,4251,1895,364,1499,1540,2313,1180,3655,2268,562,715,2417,3061,544,336,3768,2380,1752,4075,950,280,2425,4382,183,2759,3272,333,4297,2155,1688,2356,1444,1039,4540,736,1177,3349,2443,2368,2144,2225,565,196,1482,3406,927,1335,4147,692,878,1311,1653,3911,3622,1378,4200,1840,2969,3149,2126,1816,2534,1546,2393,2760,737,2494,13,447,245,2747,38,2765,2129,2589,1079,606,360,471,3755,2890,404,848,699,1785,1236,370,2221,1023,3746,2074,2026,2023,2388,1581,2119,812,1141,3091,2536,1519,804,2053,406,1596,1090,784,548,4414,1806,2264,2936,1100,343,4114,5096,622,3358,743,3668,1510,1626,5020,3567,2513,3195,4115,5627,2489,2991,24,2065,2697,1087,2719,48,1634,315,68,985,2052,198,2239,1347,1107,1439,597,2366,2172,871,3307,919,2487,2790,1867,236,2570,1413,3794,906,3365,3381,1701,1982,1818,1524,2924,1205,616,2586,2072,2004,575,253,3099,32,1365,1182,197,1714,2454,1201,554,3388,3224,2748,756,2587,250,2567,1507,1517,3529,1922,2761,2337,3416,1961,1677,2452,2238,3153,615,911,1506,1474,2495,1265,1906,2749,3756,3280,2161,898,2714,1759,3450,2243,2444,563,26,3286,2266,3769,3344,2707,3677,611,1402,531,1028,2871,4548,1375,261,2948,835,1190,4134,353,840,2684,1900,3082,1435,2109,1207,1674,329,1872,2781,4055,2686,2104,608,3318,2423,2957,2768,1108,3739,3512,3271,3985,2203,1771,3520,1418,2054,1681,1153,225,1627,2929,162,2050,2511,3687,1954,124,1859,2431,1684,3032,2894,585,4805,3969,2869,2704,2088,2032,2095,3656,2635,4362,2209,256,518,2042,2105,3777,3657,643,2298,1148,1779,190,989,3544,414,11,2135,2063,2979,1471,403,3678,126,770,1563,671,2499,3216,2877,600,1179,307,2805,4937,1268,1297,2694,252,4032,1448,1494,1331,1394,127,2256,222,1647,1035,1481,3056,1915,1048,873,3651,210,33,1608,2516,200,1520,415,102,0,3389,1287,817,91,3299,2940,836,1814,549,2197,1396,1669,2987,3582,2297,2848,4528,1070,687,20,1819,121,1552,1364,1461,1968,2617,3540,2824,2083,177,948,4938,2291,110,4549,2066,648,3359,1755,2110,2114,4642,4845,1693,3937,3308,1257,1869,2123,208,1804,3159,2992,2531,2549,3361,2418,1350,2347,2800,2568,1291,2036,2680,72,842,1990,212,1233,1154,1586,75,2027,3410,4900,1823,1337,2710,2676,728,2810,1522,3026,4995,157,755,1050,4022,710,785,1936,2194,2085,1406,2777,2400,150,1250,4049,1206,807,1910,534,529,3309,1721,1660,274,39,2827,661,2670,1578,925,3248,3815,1094,4278,4901,4252,41,1150,3747,2572,2227,4501,3658,4902,3813,3357,3617,2884,2258,887,538,4187,3199,1294,2439,3042,2329,2343,2497,1255,107,543,1527,521,3478,3568,194,5062,15,961,3870,1241,1192,2664,66,5215,3260,2111,1295,1127,2152,3805,4135,901,1164,1976,398,1278,530,1460,748,904,1054,1966,1426,53,2909,509,523,2279,1534,536,1019,239,1685,460,2353,673,1065,2401,3600,4298,2272,1272,2363,284,1753,3679,4064,1695,81,815,2677,2757,2731,1386,859,500,4221,2190,2566,757,1006,2519,2068,1166,1455,337,2654,3203,1863,1682,1914,3025,1252,1409,1366,847,714,2834,2038,3209,964,2970,1901,885,2553,1078,1756,3049,301,1572,3326,688,2130,1996,2429,1805,1648,2930,3421,2750,3652,3088,262,1158,1254,389,1641,1812,526,1719,923,2073,1073,1902,468,489,4625,1140,857,2375,3070,3319,2863,380,116,1328,2693,1161,2244,273,1212,1884,2769,3011,1775,1142,461,3066,1200,2147,2212,790,702,2695,4222,1601,1058,434,2338,5153,3640,67,2360,4099,2502,618,3472,1329,416,1132,830,2782,1807,2653,3211,3510,1662,192,2124,296,3979,1739,1611,3684,23,118,324,446,1239,1225,293,2520,3814,3795,2535,3116,17,1074,467,2692,2201,387,2922,45,1326,3055,1645,3659,2817,958,243,1903,2320,1339,2825,1784,3289,356,576,865,2315,2381,3377,3916,1088,3122,1713,1655,935,628,4689,1034,1327,441,800,720,894,1979,2183,1528,5289,2702,1071,4046,3572,2399,1571,3281,79,761,1103,327,134,758,1899,1371,1615,879,442,215,2605,2579,173,2048,2485,1057,2975,3317,1097,2253,3801,4263,1403,1650,2946,814,4968,3487,1548,2644,1567,1285,2,295,2636,97,946,3576,832,141,4257,3273,760,3821,3521,3156,2607,949,1024,1733,1516,1803,1920,2125,2283,2665,3180,1501,2064,3560,2171,1592,803,3518,1416,732,3897,4258,1363,1362,2458,119,1427,602,1525,2608,1605,1639,3175,694,3064,10,465,76,2e3,4846,4208,444,3781,1619,3353,2206,1273,3796,740,2483,320,1723,2377,3660,2619,1359,1137,1762,1724,2345,2842,1850,1862,912,821,1866,612,2625,1735,2573,3369,1093,844,89,937,930,1424,3564,2413,2972,1004,3046,3019,2011,711,3171,1452,4178,428,801,1943,432,445,2811,206,4136,1472,730,349,73,397,2802,2547,998,1637,1167,789,396,3217,154,1218,716,1120,1780,2819,4826,1931,3334,3762,2139,1215,2627,552,3664,3628,3232,1405,2383,3111,1356,2652,3577,3320,3101,1703,640,1045,1370,1246,4996,371,1575,2436,1621,2210,984,4033,1734,2638,16,4529,663,2755,3255,1451,3917,2257,1253,1955,2234,1263,2951,214,1229,617,485,359,1831,1969,473,2310,750,2058,165,80,2864,2419,361,4344,2416,2479,1134,796,3726,1266,2943,860,2715,938,390,2734,1313,1384,248,202,877,1064,2854,522,3907,279,1602,297,2357,395,3740,137,2075,944,4089,2584,1267,3802,62,1533,2285,178,176,780,2440,201,3707,590,478,1560,4354,2117,1075,30,74,4643,4004,1635,1441,2745,776,2596,238,1077,1692,1912,2844,605,499,1742,3947,241,3053,980,1749,936,2640,4511,2582,515,1543,2162,5322,2892,2993,890,2148,1924,665,1827,3581,1032,968,3163,339,1044,1896,270,583,1791,1720,4367,1194,3488,3669,43,2523,1657,163,2167,290,1209,1622,3378,550,634,2508,2510,695,2634,2384,2512,1476,1414,220,1469,2341,2138,2852,3183,2900,4939,2865,3502,1211,3680,854,3227,1299,2976,3172,186,2998,1459,443,1067,3251,1495,321,1932,3054,909,753,1410,1828,436,2441,1119,1587,3164,2186,1258,227,231,1425,1890,3200,3942,247,959,725,5254,2741,577,2158,2079,929,120,174,838,2813,591,1115,417,2024,40,3240,1536,1037,291,4151,2354,632,1298,2406,2500,3535,1825,1846,3451,205,1171,345,4238,18,1163,811,685,2208,1217,425,1312,1508,1175,4308,2552,1033,587,1381,3059,2984,3482,340,1316,4023,3972,792,3176,519,777,4690,918,933,4130,2981,3741,90,3360,2911,2200,5184,4550,609,3079,2030,272,3379,2736,363,3881,1130,1447,286,779,357,1169,3350,3137,1630,1220,2687,2391,747,1277,3688,2618,2682,2601,1156,3196,5290,4034,3102,1689,3596,3128,874,219,2783,798,508,1843,2461,269,1658,1776,1392,1913,2983,3287,2866,2159,2372,829,4076,46,4253,2873,1889,1894,915,1834,1631,2181,2318,298,664,2818,3555,2735,954,3228,3117,527,3511,2173,681,2712,3033,2247,2346,3467,1652,155,2164,3382,113,1994,450,899,494,994,1237,2958,1875,2336,1926,3727,545,1577,1550,633,3473,204,1305,3072,2410,1956,2471,707,2134,841,2195,2196,2663,3843,1026,4940,990,3252,4997,368,1092,437,3212,3258,1933,1829,675,2977,2893,412,943,3723,4644,3294,3283,2230,2373,5154,2389,2241,2661,2323,1404,2524,593,787,677,3008,1275,2059,438,2709,2609,2240,2269,2246,1446,36,1568,1373,3892,1574,2301,1456,3962,693,2276,5216,2035,1143,2720,1919,1797,1811,2763,4137,2597,1830,1699,1488,1198,2090,424,1694,312,3634,3390,4179,3335,2252,1214,561,1059,3243,2295,2561,975,5155,2321,2751,3772,472,1537,3282,3398,1047,2077,2348,2878,1323,3340,3076,690,2906,51,369,170,3541,1060,2187,2688,3670,2541,1083,1683,928,3918,459,109,4427,599,3744,4286,143,2101,2730,2490,82,1588,3036,2121,281,1860,477,4035,1238,2812,3020,2716,3312,1530,2188,2055,1317,843,636,1808,1173,3495,649,181,1002,147,3641,1159,2414,3750,2289,2795,813,3123,2610,1136,4368,5,3391,4541,2174,420,429,1728,754,1228,2115,2219,347,2223,2733,735,1518,3003,2355,3134,1764,3948,3329,1888,2424,1001,1234,1972,3321,3363,1672,1021,1450,1584,226,765,655,2526,3404,3244,2302,3665,731,594,2184,319,1576,621,658,2656,4299,2099,3864,1279,2071,2598,2739,795,3086,3699,3908,1707,2352,2402,1382,3136,2475,1465,4847,3496,3865,1085,3004,2591,1084,213,2287,1963,3565,2250,822,793,4574,3187,1772,1789,3050,595,1484,1959,2770,1080,2650,456,422,2996,940,3322,4328,4345,3092,2742,965,2784,739,4124,952,1358,2498,2949,2565,332,2698,2378,660,2260,2473,4194,3856,2919,535,1260,2651,1208,1428,1300,1949,1303,2942,433,2455,2450,1251,1946,614,1269,641,1306,1810,2737,3078,2912,564,2365,1419,1415,1497,4460,2367,2185,1379,3005,1307,3218,2175,1897,3063,682,1157,4040,4005,1712,1160,1941,1399,394,402,2952,1573,1151,2986,2404,862,299,2033,1489,3006,346,171,2886,3401,1726,2932,168,2533,47,2507,1030,3735,1145,3370,1395,1318,1579,3609,4560,2857,4116,1457,2529,1965,504,1036,2690,2988,2405,745,5871,849,2397,2056,3081,863,2359,3857,2096,99,1397,1769,2300,4428,1643,3455,1978,1757,3718,1440,35,4879,3742,1296,4228,2280,160,5063,1599,2013,166,520,3479,1646,3345,3012,490,1937,1545,1264,2182,2505,1096,1188,1369,1436,2421,1667,2792,2460,1270,2122,727,3167,2143,806,1706,1012,1800,3037,960,2218,1882,805,139,2456,1139,1521,851,1052,3093,3089,342,2039,744,5097,1468,1502,1585,2087,223,939,326,2140,2577,892,2481,1623,4077,982,3708,135,2131,87,2503,3114,2326,1106,876,1616,547,2997,2831,2093,3441,4530,4314,9,3256,4229,4148,659,1462,1986,1710,2046,2913,2231,4090,4880,5255,3392,3274,1368,3689,4645,1477,705,3384,3635,1068,1529,2941,1458,3782,1509,100,1656,2548,718,2339,408,1590,2780,3548,1838,4117,3719,1345,3530,717,3442,2778,3220,2898,1892,4590,3614,3371,2043,1998,1224,3483,891,635,584,2559,3355,733,1766,1729,1172,3789,1891,2307,781,2982,2271,1957,1580,5773,2633,2005,4195,3097,1535,3213,1189,1934,5693,3262,586,3118,1324,1598,517,1564,2217,1868,1893,4445,3728,2703,3139,1526,1787,1992,3882,2875,1549,1199,1056,2224,1904,2711,5098,4287,338,1993,3129,3489,2689,1809,2815,1997,957,1855,3898,2550,3275,3057,1105,1319,627,1505,1911,1883,3526,698,3629,3456,1833,1431,746,77,1261,2017,2296,1977,1885,125,1334,1600,525,1798,1109,2222,1470,1945,559,2236,1186,3443,2476,1929,1411,2411,3135,1777,3372,2621,1841,1613,3229,668,1430,1839,2643,2916,195,1989,2671,2358,1387,629,3205,2293,5256,4439,123,1310,888,1879,4300,3021,3605,1003,1162,3192,2910,2010,140,2395,2859,55,1082,2012,2901,662,419,2081,1438,680,2774,4654,3912,1620,1731,1625,5035,4065,2328,512,1344,802,5443,2163,2311,2537,524,3399,98,1155,2103,1918,2606,3925,2816,1393,2465,1504,3773,2177,3963,1478,4346,180,1113,4655,3461,2028,1698,833,2696,1235,1322,1594,4408,3623,3013,3225,2040,3022,541,2881,607,3632,2029,1665,1219,639,1385,1686,1099,2803,3231,1938,3188,2858,427,676,2772,1168,2025,454,3253,2486,3556,230,1950,580,791,1991,1280,1086,1974,2034,630,257,3338,2788,4903,1017,86,4790,966,2789,1995,1696,1131,259,3095,4188,1308,179,1463,5257,289,4107,1248,42,3413,1725,2288,896,1947,774,4474,4254,604,3430,4264,392,2514,2588,452,237,1408,3018,988,4531,1970,3034,3310,540,2370,1562,1288,2990,502,4765,1147,4,1853,2708,207,294,2814,4078,2902,2509,684,34,3105,3532,2551,644,709,2801,2344,573,1727,3573,3557,2021,1081,3100,4315,2100,3681,199,2263,1837,2385,146,3484,1195,2776,3949,997,1939,3973,1008,1091,1202,1962,1847,1149,4209,5444,1076,493,117,5400,2521,972,1490,2934,1796,4542,2374,1512,2933,2657,413,2888,1135,2762,2314,2156,1355,2369,766,2007,2527,2170,3124,2491,2593,2632,4757,2437,234,3125,3591,1898,1750,1376,1942,3468,3138,570,2127,2145,3276,4131,962,132,1445,4196,19,941,3624,3480,3366,1973,1374,4461,3431,2629,283,2415,2275,808,2887,3620,2112,2563,1353,3610,955,1089,3103,1053,96,88,4097,823,3808,1583,399,292,4091,3313,421,1128,642,4006,903,2539,1877,2082,596,29,4066,1790,722,2157,130,995,1569,769,1485,464,513,2213,288,1923,1101,2453,4316,133,486,2445,50,625,487,2207,57,423,481,2962,159,3729,1558,491,303,482,501,240,2837,112,3648,2392,1783,362,8,3433,3422,610,2793,3277,1390,1284,1654,21,3823,734,367,623,193,287,374,1009,1483,816,476,313,2255,2340,1262,2150,2899,1146,2581,782,2116,1659,2018,1880,255,3586,3314,1110,2867,2137,2564,986,2767,5185,2006,650,158,926,762,881,3157,2717,2362,3587,306,3690,3245,1542,3077,2427,1691,2478,2118,2985,3490,2438,539,2305,983,129,1754,355,4201,2386,827,2923,104,1773,2838,2771,411,2905,3919,376,767,122,1114,828,2422,1817,3506,266,3460,1007,1609,4998,945,2612,4429,2274,726,1247,1964,2914,2199,2070,4002,4108,657,3323,1422,579,455,2764,4737,1222,2895,1670,824,1223,1487,2525,558,861,3080,598,2659,2515,1967,752,2583,2376,2214,4180,977,704,2464,4999,2622,4109,1210,2961,819,1541,142,2284,44,418,457,1126,3730,4347,4626,1644,1876,3671,1864,302,1063,5694,624,723,1984,3745,1314,1676,2488,1610,1449,3558,3569,2166,2098,409,1011,2325,3704,2306,818,1732,1383,1824,1844,3757,999,2705,3497,1216,1423,2683,2426,2954,2501,2726,2229,1475,2554,5064,1971,1794,1666,2014,1343,783,724,191,2434,1354,2220,5065,1763,2752,2472,4152,131,175,2885,3434,92,1466,4920,2616,3871,3872,3866,128,1551,1632,669,1854,3682,4691,4125,1230,188,2973,3290,1302,1213,560,3266,917,763,3909,3249,1760,868,1958,764,1782,2097,145,2277,3774,4462,64,1491,3062,971,2132,3606,2442,221,1226,1617,218,323,1185,3207,3147,571,619,1473,1005,1744,2281,449,1887,2396,3685,275,375,3816,1743,3844,3731,845,1983,2350,4210,1377,773,967,3499,3052,3743,2725,4007,1697,1022,3943,1464,3264,2855,2722,1952,1029,2839,2467,84,4383,2215,820,1391,2015,2448,3672,377,1948,2168,797,2545,3536,2578,2645,94,2874,1678,405,1259,3071,771,546,1315,470,1243,3083,895,2468,981,969,2037,846,4181,653,1276,2928,14,2594,557,3007,2474,156,902,1338,1740,2574,537,2518,973,2282,2216,2433,1928,138,2903,1293,2631,1612,646,3457,839,2935,111,496,2191,2847,589,3186,149,3994,2060,4031,2641,4067,3145,1870,37,3597,2136,1025,2051,3009,3383,3549,1121,1016,3261,1301,251,2446,2599,2153,872,3246,637,334,3705,831,884,921,3065,3140,4092,2198,1944,246,2964,108,2045,1152,1921,2308,1031,203,3173,4170,1907,3890,810,1401,2003,1690,506,647,1242,2828,1761,1649,3208,2249,1589,3709,2931,5156,1708,498,666,2613,834,3817,1231,184,2851,1124,883,3197,2261,3710,1765,1553,2658,1178,2639,2351,93,1193,942,2538,2141,4402,235,1821,870,1591,2192,1709,1871,3341,1618,4126,2595,2334,603,651,69,701,268,2662,3411,2555,1380,1606,503,448,254,2371,2646,574,1187,2309,1770,322,2235,1292,1801,305,566,1133,229,2067,2057,706,167,483,2002,2672,3295,1820,3561,3067,316,378,2746,3452,1112,136,1981,507,1651,2917,1117,285,4591,182,2580,3522,1304,335,3303,1835,2504,1795,1792,2248,674,1018,2106,2449,1857,2292,2845,976,3047,1781,2600,2727,1389,1281,52,3152,153,265,3950,672,3485,3951,4463,430,1183,365,278,2169,27,1407,1336,2304,209,1340,1730,2202,1852,2403,2883,979,1737,1062,631,2829,2542,3876,2592,825,2086,2226,3048,3625,352,1417,3724,542,991,431,1351,3938,1861,2294,826,1361,2927,3142,3503,1738,463,2462,2723,582,1916,1595,2808,400,3845,3891,2868,3621,2254,58,2492,1123,910,2160,2614,1372,1603,1196,1072,3385,1700,3267,1980,696,480,2430,920,799,1570,2920,1951,2041,4047,2540,1321,4223,2469,3562,2228,1271,2602,401,2833,3351,2575,5157,907,2312,1256,410,263,3507,1582,996,678,1849,2316,1480,908,3545,2237,703,2322,667,1826,2849,1531,2604,2999,2407,3146,2151,2630,1786,3711,469,3542,497,3899,2409,858,837,4446,3393,1274,786,620,1845,2001,3311,484,308,3367,1204,1815,3691,2332,1532,2557,1842,2020,2724,1927,2333,4440,567,22,1673,2728,4475,1987,1858,1144,1597,101,1832,3601,12,974,3783,4391,951,1412,1,3720,453,4608,4041,528,1041,1027,3230,2628,1129,875,1051,3291,1203,2262,1069,2860,2799,2149,2615,3278,144,1758,3040,31,475,1680,366,2685,3184,311,1642,4008,2466,5036,1593,1493,2809,216,1420,1668,233,304,2128,3284,232,1429,1768,1040,2008,3407,2740,2967,2543,242,2133,778,1565,2022,2620,505,2189,2756,1098,2273,372,1614,708,553,2846,2094,2278,169,3626,2835,4161,228,2674,3165,809,1454,1309,466,1705,1095,900,3423,880,2667,3751,5258,2317,3109,2571,4317,2766,1503,1342,866,4447,1118,63,2076,314,1881,1348,1061,172,978,3515,1747,532,511,3970,6,601,905,2699,3300,1751,276,1467,3725,2668,65,4239,2544,2779,2556,1604,578,2451,1802,992,2331,2624,1320,3446,713,1513,1013,103,2786,2447,1661,886,1702,916,654,3574,2031,1556,751,2178,2821,2179,1498,1538,2176,271,914,2251,2080,1325,638,1953,2937,3877,2432,2754,95,3265,1716,260,1227,4083,775,106,1357,3254,426,1607,555,2480,772,1985,244,2546,474,495,1046,2611,1851,2061,71,2089,1675,2590,742,3758,2843,3222,1433,267,2180,2576,2826,2233,2092,3913,2435,956,1745,3075,856,2113,1116,451,3,1988,2896,1398,993,2463,1878,2049,1341,2718,2721,2870,2108,712,2904,4363,2753,2324,277,2872,2349,2649,384,987,435,691,3e3,922,164,3939,652,1500,1184,4153,2482,3373,2165,4848,2335,3775,3508,3154,2806,2830,1554,2102,1664,2530,1434,2408,893,1547,2623,3447,2832,2242,2532,3169,2856,3223,2078,49,3770,3469,462,318,656,2259,3250,3069,679,1629,2758,344,1138,1104,3120,1836,1283,3115,2154,1437,4448,934,759,1999,794,2862,1038,533,2560,1722,2342,855,2626,1197,1663,4476,3127,85,4240,2528,25,1111,1181,3673,407,3470,4561,2679,2713,768,1925,2841,3986,1544,1165,932,373,1240,2146,1930,2673,721,4766,354,4333,391,2963,187,61,3364,1442,1102,330,1940,1767,341,3809,4118,393,2496,2062,2211,105,331,300,439,913,1332,626,379,3304,1557,328,689,3952,309,1555,931,317,2517,3027,325,569,686,2107,3084,60,1042,1333,2794,264,3177,4014,1628,258,3712,7,4464,1176,1043,1778,683,114,1975,78,1492,383,1886,510,386,645,5291,2891,2069,3305,4138,3867,2939,2603,2493,1935,1066,1848,3588,1015,1282,1289,4609,697,1453,3044,2666,3611,1856,2412,54,719,1330,568,3778,2459,1748,788,492,551,1191,1e3,488,3394,3763,282,1799,348,2016,1523,3155,2390,1049,382,2019,1788,1170,729,2968,3523,897,3926,2785,2938,3292,350,2319,3238,1718,1717,2655,3453,3143,4465,161,2889,2980,2009,1421,56,1908,1640,2387,2232,1917,1874,2477,4921,148,83,3438,592,4245,2882,1822,1055,741,115,1496,1624,381,1638,4592,1020,516,3214,458,947,4575,1432,211,1514,2926,1865,2142,189,852,1221,1400,1486,882,2299,4036,351,28,1122,700,6479,6480,6481,6482,6483,5508,6484,3900,3414,3974,4441,4024,3537,4037,5628,5099,3633,6485,3148,6486,3636,5509,3257,5510,5973,5445,5872,4941,4403,3174,4627,5873,6276,2286,4230,5446,5874,5122,6102,6103,4162,5447,5123,5323,4849,6277,3980,3851,5066,4246,5774,5067,6278,3001,2807,5695,3346,5775,5974,5158,5448,6487,5975,5976,5776,3598,6279,5696,4806,4211,4154,6280,6488,6489,6490,6281,4212,5037,3374,4171,6491,4562,4807,4722,4827,5977,6104,4532,4079,5159,5324,5160,4404,3858,5359,5875,3975,4288,4610,3486,4512,5325,3893,5360,6282,6283,5560,2522,4231,5978,5186,5449,2569,3878,6284,5401,3578,4415,6285,4656,5124,5979,2506,4247,4449,3219,3417,4334,4969,4329,6492,4576,4828,4172,4416,4829,5402,6286,3927,3852,5361,4369,4830,4477,4867,5876,4173,6493,6105,4657,6287,6106,5877,5450,6494,4155,4868,5451,3700,5629,4384,6288,6289,5878,3189,4881,6107,6290,6495,4513,6496,4692,4515,4723,5100,3356,6497,6291,3810,4080,5561,3570,4430,5980,6498,4355,5697,6499,4724,6108,6109,3764,4050,5038,5879,4093,3226,6292,5068,5217,4693,3342,5630,3504,4831,4377,4466,4309,5698,4431,5777,6293,5778,4272,3706,6110,5326,3752,4676,5327,4273,5403,4767,5631,6500,5699,5880,3475,5039,6294,5562,5125,4348,4301,4482,4068,5126,4593,5700,3380,3462,5981,5563,3824,5404,4970,5511,3825,4738,6295,6501,5452,4516,6111,5881,5564,6502,6296,5982,6503,4213,4163,3454,6504,6112,4009,4450,6113,4658,6297,6114,3035,6505,6115,3995,4904,4739,4563,4942,4110,5040,3661,3928,5362,3674,6506,5292,3612,4791,5565,4149,5983,5328,5259,5021,4725,4577,4564,4517,4364,6298,5405,4578,5260,4594,4156,4157,5453,3592,3491,6507,5127,5512,4709,4922,5984,5701,4726,4289,6508,4015,6116,5128,4628,3424,4241,5779,6299,4905,6509,6510,5454,5702,5780,6300,4365,4923,3971,6511,5161,3270,3158,5985,4100,867,5129,5703,6117,5363,3695,3301,5513,4467,6118,6512,5455,4232,4242,4629,6513,3959,4478,6514,5514,5329,5986,4850,5162,5566,3846,4694,6119,5456,4869,5781,3779,6301,5704,5987,5515,4710,6302,5882,6120,4392,5364,5705,6515,6121,6516,6517,3736,5988,5457,5989,4695,2457,5883,4551,5782,6303,6304,6305,5130,4971,6122,5163,6123,4870,3263,5365,3150,4871,6518,6306,5783,5069,5706,3513,3498,4409,5330,5632,5366,5458,5459,3991,5990,4502,3324,5991,5784,3696,4518,5633,4119,6519,4630,5634,4417,5707,4832,5992,3418,6124,5993,5567,4768,5218,6520,4595,3458,5367,6125,5635,6126,4202,6521,4740,4924,6307,3981,4069,4385,6308,3883,2675,4051,3834,4302,4483,5568,5994,4972,4101,5368,6309,5164,5884,3922,6127,6522,6523,5261,5460,5187,4164,5219,3538,5516,4111,3524,5995,6310,6311,5369,3181,3386,2484,5188,3464,5569,3627,5708,6524,5406,5165,4677,4492,6312,4872,4851,5885,4468,5996,6313,5709,5710,6128,2470,5886,6314,5293,4882,5785,3325,5461,5101,6129,5711,5786,6525,4906,6526,6527,4418,5887,5712,4808,2907,3701,5713,5888,6528,3765,5636,5331,6529,6530,3593,5889,3637,4943,3692,5714,5787,4925,6315,6130,5462,4405,6131,6132,6316,5262,6531,6532,5715,3859,5716,5070,4696,5102,3929,5788,3987,4792,5997,6533,6534,3920,4809,5e3,5998,6535,2974,5370,6317,5189,5263,5717,3826,6536,3953,5001,4883,3190,5463,5890,4973,5999,4741,6133,6134,3607,5570,6e3,4711,3362,3630,4552,5041,6318,6001,2950,2953,5637,4646,5371,4944,6002,2044,4120,3429,6319,6537,5103,4833,6538,6539,4884,4647,3884,6003,6004,4758,3835,5220,5789,4565,5407,6540,6135,5294,4697,4852,6320,6321,3206,4907,6541,6322,4945,6542,6136,6543,6323,6005,4631,3519,6544,5891,6545,5464,3784,5221,6546,5571,4659,6547,6324,6137,5190,6548,3853,6549,4016,4834,3954,6138,5332,3827,4017,3210,3546,4469,5408,5718,3505,4648,5790,5131,5638,5791,5465,4727,4318,6325,6326,5792,4553,4010,4698,3439,4974,3638,4335,3085,6006,5104,5042,5166,5892,5572,6327,4356,4519,5222,5573,5333,5793,5043,6550,5639,5071,4503,6328,6139,6551,6140,3914,3901,5372,6007,5640,4728,4793,3976,3836,4885,6552,4127,6553,4451,4102,5002,6554,3686,5105,6555,5191,5072,5295,4611,5794,5296,6556,5893,5264,5894,4975,5466,5265,4699,4976,4370,4056,3492,5044,4886,6557,5795,4432,4769,4357,5467,3940,4660,4290,6141,4484,4770,4661,3992,6329,4025,4662,5022,4632,4835,4070,5297,4663,4596,5574,5132,5409,5895,6142,4504,5192,4664,5796,5896,3885,5575,5797,5023,4810,5798,3732,5223,4712,5298,4084,5334,5468,6143,4052,4053,4336,4977,4794,6558,5335,4908,5576,5224,4233,5024,4128,5469,5225,4873,6008,5045,4729,4742,4633,3675,4597,6559,5897,5133,5577,5003,5641,5719,6330,6560,3017,2382,3854,4406,4811,6331,4393,3964,4946,6561,2420,3722,6562,4926,4378,3247,1736,4442,6332,5134,6333,5226,3996,2918,5470,4319,4003,4598,4743,4744,4485,3785,3902,5167,5004,5373,4394,5898,6144,4874,1793,3997,6334,4085,4214,5106,5642,4909,5799,6009,4419,4189,3330,5899,4165,4420,5299,5720,5227,3347,6145,4081,6335,2876,3930,6146,3293,3786,3910,3998,5900,5300,5578,2840,6563,5901,5579,6147,3531,5374,6564,6565,5580,4759,5375,6566,6148,3559,5643,6336,6010,5517,6337,6338,5721,5902,3873,6011,6339,6567,5518,3868,3649,5722,6568,4771,4947,6569,6149,4812,6570,2853,5471,6340,6341,5644,4795,6342,6012,5723,6343,5724,6013,4349,6344,3160,6150,5193,4599,4514,4493,5168,4320,6345,4927,3666,4745,5169,5903,5005,4928,6346,5725,6014,4730,4203,5046,4948,3395,5170,6015,4150,6016,5726,5519,6347,5047,3550,6151,6348,4197,4310,5904,6571,5581,2965,6152,4978,3960,4291,5135,6572,5301,5727,4129,4026,5905,4853,5728,5472,6153,6349,4533,2700,4505,5336,4678,3583,5073,2994,4486,3043,4554,5520,6350,6017,5800,4487,6351,3931,4103,5376,6352,4011,4321,4311,4190,5136,6018,3988,3233,4350,5906,5645,4198,6573,5107,3432,4191,3435,5582,6574,4139,5410,6353,5411,3944,5583,5074,3198,6575,6354,4358,6576,5302,4600,5584,5194,5412,6577,6578,5585,5413,5303,4248,5414,3879,4433,6579,4479,5025,4854,5415,6355,4760,4772,3683,2978,4700,3797,4452,3965,3932,3721,4910,5801,6580,5195,3551,5907,3221,3471,3029,6019,3999,5908,5909,5266,5267,3444,3023,3828,3170,4796,5646,4979,4259,6356,5647,5337,3694,6357,5648,5338,4520,4322,5802,3031,3759,4071,6020,5586,4836,4386,5048,6581,3571,4679,4174,4949,6154,4813,3787,3402,3822,3958,3215,3552,5268,4387,3933,4950,4359,6021,5910,5075,3579,6358,4234,4566,5521,6359,3613,5049,6022,5911,3375,3702,3178,4911,5339,4521,6582,6583,4395,3087,3811,5377,6023,6360,6155,4027,5171,5649,4421,4249,2804,6584,2270,6585,4e});var bg=ke(D2=>{"use strict";D2.BIG5_TYPICAL_DISTRIBUTION_RATIO=.75;D2.BIG5_TABLE_SIZE=5376;D2.Big5CharToFreqOrder=[1,1801,1506,255,1431,198,9,82,6,5008,177,202,3681,1256,2821,110,3814,33,3274,261,76,44,2114,16,2946,2187,1176,659,3971,26,3451,2653,1198,3972,3350,4202,410,2215,302,590,361,1964,8,204,58,4510,5009,1932,63,5010,5011,317,1614,75,222,159,4203,2417,1480,5012,3555,3091,224,2822,3682,3,10,3973,1471,29,2787,1135,2866,1940,873,130,3275,1123,312,5013,4511,2052,507,252,682,5014,142,1915,124,206,2947,34,3556,3204,64,604,5015,2501,1977,1978,155,1991,645,641,1606,5016,3452,337,72,406,5017,80,630,238,3205,1509,263,939,1092,2654,756,1440,1094,3453,449,69,2987,591,179,2096,471,115,2035,1844,60,50,2988,134,806,1869,734,2036,3454,180,995,1607,156,537,2907,688,5018,319,1305,779,2145,514,2379,298,4512,359,2502,90,2716,1338,663,11,906,1099,2553,20,2441,182,532,1716,5019,732,1376,4204,1311,1420,3206,25,2317,1056,113,399,382,1950,242,3455,2474,529,3276,475,1447,3683,5020,117,21,656,810,1297,2300,2334,3557,5021,126,4205,706,456,150,613,4513,71,1118,2037,4206,145,3092,85,835,486,2115,1246,1426,428,727,1285,1015,800,106,623,303,1281,5022,2128,2359,347,3815,221,3558,3135,5023,1956,1153,4207,83,296,1199,3093,192,624,93,5024,822,1898,2823,3136,795,2065,991,1554,1542,1592,27,43,2867,859,139,1456,860,4514,437,712,3974,164,2397,3137,695,211,3037,2097,195,3975,1608,3559,3560,3684,3976,234,811,2989,2098,3977,2233,1441,3561,1615,2380,668,2077,1638,305,228,1664,4515,467,415,5025,262,2099,1593,239,108,300,200,1033,512,1247,2078,5026,5027,2176,3207,3685,2682,593,845,1062,3277,88,1723,2038,3978,1951,212,266,152,149,468,1899,4208,4516,77,187,5028,3038,37,5,2990,5029,3979,5030,5031,39,2524,4517,2908,3208,2079,55,148,74,4518,545,483,1474,1029,1665,217,1870,1531,3138,1104,2655,4209,24,172,3562,900,3980,3563,3564,4519,32,1408,2824,1312,329,487,2360,2251,2717,784,2683,4,3039,3351,1427,1789,188,109,499,5032,3686,1717,1790,888,1217,3040,4520,5033,3565,5034,3352,1520,3687,3981,196,1034,775,5035,5036,929,1816,249,439,38,5037,1063,5038,794,3982,1435,2301,46,178,3278,2066,5039,2381,5040,214,1709,4521,804,35,707,324,3688,1601,2554,140,459,4210,5041,5042,1365,839,272,978,2262,2580,3456,2129,1363,3689,1423,697,100,3094,48,70,1231,495,3139,2196,5043,1294,5044,2080,462,586,1042,3279,853,256,988,185,2382,3457,1698,434,1084,5045,3458,314,2625,2788,4522,2335,2336,569,2285,637,1817,2525,757,1162,1879,1616,3459,287,1577,2116,768,4523,1671,2868,3566,2526,1321,3816,909,2418,5046,4211,933,3817,4212,2053,2361,1222,4524,765,2419,1322,786,4525,5047,1920,1462,1677,2909,1699,5048,4526,1424,2442,3140,3690,2600,3353,1775,1941,3460,3983,4213,309,1369,1130,2825,364,2234,1653,1299,3984,3567,3985,3986,2656,525,1085,3041,902,2001,1475,964,4527,421,1845,1415,1057,2286,940,1364,3141,376,4528,4529,1381,7,2527,983,2383,336,1710,2684,1846,321,3461,559,1131,3042,2752,1809,1132,1313,265,1481,1858,5049,352,1203,2826,3280,167,1089,420,2827,776,792,1724,3568,4214,2443,3281,5050,4215,5051,446,229,333,2753,901,3818,1200,1557,4530,2657,1921,395,2754,2685,3819,4216,1836,125,916,3209,2626,4531,5052,5053,3820,5054,5055,5056,4532,3142,3691,1133,2555,1757,3462,1510,2318,1409,3569,5057,2146,438,2601,2910,2384,3354,1068,958,3043,461,311,2869,2686,4217,1916,3210,4218,1979,383,750,2755,2627,4219,274,539,385,1278,1442,5058,1154,1965,384,561,210,98,1295,2556,3570,5059,1711,2420,1482,3463,3987,2911,1257,129,5060,3821,642,523,2789,2790,2658,5061,141,2235,1333,68,176,441,876,907,4220,603,2602,710,171,3464,404,549,18,3143,2398,1410,3692,1666,5062,3571,4533,2912,4534,5063,2991,368,5064,146,366,99,871,3693,1543,748,807,1586,1185,22,2263,379,3822,3211,5065,3212,505,1942,2628,1992,1382,2319,5066,380,2362,218,702,1818,1248,3465,3044,3572,3355,3282,5067,2992,3694,930,3283,3823,5068,59,5069,585,601,4221,497,3466,1112,1314,4535,1802,5070,1223,1472,2177,5071,749,1837,690,1900,3824,1773,3988,1476,429,1043,1791,2236,2117,917,4222,447,1086,1629,5072,556,5073,5074,2021,1654,844,1090,105,550,966,1758,2828,1008,1783,686,1095,5075,2287,793,1602,5076,3573,2603,4536,4223,2948,2302,4537,3825,980,2503,544,353,527,4538,908,2687,2913,5077,381,2629,1943,1348,5078,1341,1252,560,3095,5079,3467,2870,5080,2054,973,886,2081,143,4539,5081,5082,157,3989,496,4224,57,840,540,2039,4540,4541,3468,2118,1445,970,2264,1748,1966,2082,4225,3144,1234,1776,3284,2829,3695,773,1206,2130,1066,2040,1326,3990,1738,1725,4226,279,3145,51,1544,2604,423,1578,2131,2067,173,4542,1880,5083,5084,1583,264,610,3696,4543,2444,280,154,5085,5086,5087,1739,338,1282,3096,693,2871,1411,1074,3826,2445,5088,4544,5089,5090,1240,952,2399,5091,2914,1538,2688,685,1483,4227,2475,1436,953,4228,2055,4545,671,2400,79,4229,2446,3285,608,567,2689,3469,4230,4231,1691,393,1261,1792,2401,5092,4546,5093,5094,5095,5096,1383,1672,3827,3213,1464,522,1119,661,1150,216,675,4547,3991,1432,3574,609,4548,2690,2402,5097,5098,5099,4232,3045,0,5100,2476,315,231,2447,301,3356,4549,2385,5101,233,4233,3697,1819,4550,4551,5102,96,1777,1315,2083,5103,257,5104,1810,3698,2718,1139,1820,4234,2022,1124,2164,2791,1778,2659,5105,3097,363,1655,3214,5106,2993,5107,5108,5109,3992,1567,3993,718,103,3215,849,1443,341,3357,2949,1484,5110,1712,127,67,339,4235,2403,679,1412,821,5111,5112,834,738,351,2994,2147,846,235,1497,1881,418,1993,3828,2719,186,1100,2148,2756,3575,1545,1355,2950,2872,1377,583,3994,4236,2581,2995,5113,1298,3699,1078,2557,3700,2363,78,3829,3830,267,1289,2100,2002,1594,4237,348,369,1274,2197,2178,1838,4552,1821,2830,3701,2757,2288,2003,4553,2951,2758,144,3358,882,4554,3995,2759,3470,4555,2915,5114,4238,1726,320,5115,3996,3046,788,2996,5116,2831,1774,1327,2873,3997,2832,5117,1306,4556,2004,1700,3831,3576,2364,2660,787,2023,506,824,3702,534,323,4557,1044,3359,2024,1901,946,3471,5118,1779,1500,1678,5119,1882,4558,165,243,4559,3703,2528,123,683,4239,764,4560,36,3998,1793,589,2916,816,626,1667,3047,2237,1639,1555,1622,3832,3999,5120,4e3,2874,1370,1228,1933,891,2084,2917,304,4240,5121,292,2997,2720,3577,691,2101,4241,1115,4561,118,662,5122,611,1156,854,2386,1316,2875,2,386,515,2918,5123,5124,3286,868,2238,1486,855,2661,785,2216,3048,5125,1040,3216,3578,5126,3146,448,5127,1525,5128,2165,4562,5129,3833,5130,4242,2833,3579,3147,503,818,4001,3148,1568,814,676,1444,306,1749,5131,3834,1416,1030,197,1428,805,2834,1501,4563,5132,5133,5134,1994,5135,4564,5136,5137,2198,13,2792,3704,2998,3149,1229,1917,5138,3835,2132,5139,4243,4565,2404,3580,5140,2217,1511,1727,1120,5141,5142,646,3836,2448,307,5143,5144,1595,3217,5145,5146,5147,3705,1113,1356,4002,1465,2529,2530,5148,519,5149,128,2133,92,2289,1980,5150,4003,1512,342,3150,2199,5151,2793,2218,1981,3360,4244,290,1656,1317,789,827,2365,5152,3837,4566,562,581,4004,5153,401,4567,2252,94,4568,5154,1399,2794,5155,1463,2025,4569,3218,1944,5156,828,1105,4245,1262,1394,5157,4246,605,4570,5158,1784,2876,5159,2835,819,2102,578,2200,2952,5160,1502,436,3287,4247,3288,2836,4005,2919,3472,3473,5161,2721,2320,5162,5163,2337,2068,23,4571,193,826,3838,2103,699,1630,4248,3098,390,1794,1064,3581,5164,1579,3099,3100,1400,5165,4249,1839,1640,2877,5166,4572,4573,137,4250,598,3101,1967,780,104,974,2953,5167,278,899,253,402,572,504,493,1339,5168,4006,1275,4574,2582,2558,5169,3706,3049,3102,2253,565,1334,2722,863,41,5170,5171,4575,5172,1657,2338,19,463,2760,4251,606,5173,2999,3289,1087,2085,1323,2662,3e3,5174,1631,1623,1750,4252,2691,5175,2878,791,2723,2663,2339,232,2421,5176,3001,1498,5177,2664,2630,755,1366,3707,3290,3151,2026,1609,119,1918,3474,862,1026,4253,5178,4007,3839,4576,4008,4577,2265,1952,2477,5179,1125,817,4254,4255,4009,1513,1766,2041,1487,4256,3050,3291,2837,3840,3152,5180,5181,1507,5182,2692,733,40,1632,1106,2879,345,4257,841,2531,230,4578,3002,1847,3292,3475,5183,1263,986,3476,5184,735,879,254,1137,857,622,1300,1180,1388,1562,4010,4011,2954,967,2761,2665,1349,592,2134,1692,3361,3003,1995,4258,1679,4012,1902,2188,5185,739,3708,2724,1296,1290,5186,4259,2201,2202,1922,1563,2605,2559,1871,2762,3004,5187,435,5188,343,1108,596,17,1751,4579,2239,3477,3709,5189,4580,294,3582,2955,1693,477,979,281,2042,3583,643,2043,3710,2631,2795,2266,1031,2340,2135,2303,3584,4581,367,1249,2560,5190,3585,5191,4582,1283,3362,2005,240,1762,3363,4583,4584,836,1069,3153,474,5192,2149,2532,268,3586,5193,3219,1521,1284,5194,1658,1546,4260,5195,3587,3588,5196,4261,3364,2693,1685,4262,961,1673,2632,190,2006,2203,3841,4585,4586,5197,570,2504,3711,1490,5198,4587,2633,3293,1957,4588,584,1514,396,1045,1945,5199,4589,1968,2449,5200,5201,4590,4013,619,5202,3154,3294,215,2007,2796,2561,3220,4591,3221,4592,763,4263,3842,4593,5203,5204,1958,1767,2956,3365,3712,1174,452,1477,4594,3366,3155,5205,2838,1253,2387,2189,1091,2290,4264,492,5206,638,1169,1825,2136,1752,4014,648,926,1021,1324,4595,520,4596,997,847,1007,892,4597,3843,2267,1872,3713,2405,1785,4598,1953,2957,3103,3222,1728,4265,2044,3714,4599,2008,1701,3156,1551,30,2268,4266,5207,2027,4600,3589,5208,501,5209,4267,594,3478,2166,1822,3590,3479,3591,3223,829,2839,4268,5210,1680,3157,1225,4269,5211,3295,4601,4270,3158,2341,5212,4602,4271,5213,4015,4016,5214,1848,2388,2606,3367,5215,4603,374,4017,652,4272,4273,375,1140,798,5216,5217,5218,2366,4604,2269,546,1659,138,3051,2450,4605,5219,2254,612,1849,910,796,3844,1740,1371,825,3845,3846,5220,2920,2562,5221,692,444,3052,2634,801,4606,4274,5222,1491,244,1053,3053,4275,4276,340,5223,4018,1041,3005,293,1168,87,1357,5224,1539,959,5225,2240,721,694,4277,3847,219,1478,644,1417,3368,2666,1413,1401,1335,1389,4019,5226,5227,3006,2367,3159,1826,730,1515,184,2840,66,4607,5228,1660,2958,246,3369,378,1457,226,3480,975,4020,2959,1264,3592,674,696,5229,163,5230,1141,2422,2167,713,3593,3370,4608,4021,5231,5232,1186,15,5233,1079,1070,5234,1522,3224,3594,276,1050,2725,758,1126,653,2960,3296,5235,2342,889,3595,4022,3104,3007,903,1250,4609,4023,3481,3596,1342,1681,1718,766,3297,286,89,2961,3715,5236,1713,5237,2607,3371,3008,5238,2962,2219,3225,2880,5239,4610,2505,2533,181,387,1075,4024,731,2190,3372,5240,3298,310,313,3482,2304,770,4278,54,3054,189,4611,3105,3848,4025,5241,1230,1617,1850,355,3597,4279,4612,3373,111,4280,3716,1350,3160,3483,3055,4281,2150,3299,3598,5242,2797,4026,4027,3009,722,2009,5243,1071,247,1207,2343,2478,1378,4613,2010,864,1437,1214,4614,373,3849,1142,2220,667,4615,442,2763,2563,3850,4028,1969,4282,3300,1840,837,170,1107,934,1336,1883,5244,5245,2119,4283,2841,743,1569,5246,4616,4284,582,2389,1418,3484,5247,1803,5248,357,1395,1729,3717,3301,2423,1564,2241,5249,3106,3851,1633,4617,1114,2086,4285,1532,5250,482,2451,4618,5251,5252,1492,833,1466,5253,2726,3599,1641,2842,5254,1526,1272,3718,4286,1686,1795,416,2564,1903,1954,1804,5255,3852,2798,3853,1159,2321,5256,2881,4619,1610,1584,3056,2424,2764,443,3302,1163,3161,5257,5258,4029,5259,4287,2506,3057,4620,4030,3162,2104,1647,3600,2011,1873,4288,5260,4289,431,3485,5261,250,97,81,4290,5262,1648,1851,1558,160,848,5263,866,740,1694,5264,2204,2843,3226,4291,4621,3719,1687,950,2479,426,469,3227,3720,3721,4031,5265,5266,1188,424,1996,861,3601,4292,3854,2205,2694,168,1235,3602,4293,5267,2087,1674,4622,3374,3303,220,2565,1009,5268,3855,670,3010,332,1208,717,5269,5270,3603,2452,4032,3375,5271,513,5272,1209,2882,3376,3163,4623,1080,5273,5274,5275,5276,2534,3722,3604,815,1587,4033,4034,5277,3605,3486,3856,1254,4624,1328,3058,1390,4035,1741,4036,3857,4037,5278,236,3858,2453,3304,5279,5280,3723,3859,1273,3860,4625,5281,308,5282,4626,245,4627,1852,2480,1307,2583,430,715,2137,2454,5283,270,199,2883,4038,5284,3606,2727,1753,761,1754,725,1661,1841,4628,3487,3724,5285,5286,587,14,3305,227,2608,326,480,2270,943,2765,3607,291,650,1884,5287,1702,1226,102,1547,62,3488,904,4629,3489,1164,4294,5288,5289,1224,1548,2766,391,498,1493,5290,1386,1419,5291,2056,1177,4630,813,880,1081,2368,566,1145,4631,2291,1001,1035,2566,2609,2242,394,1286,5292,5293,2069,5294,86,1494,1730,4039,491,1588,745,897,2963,843,3377,4040,2767,2884,3306,1768,998,2221,2070,397,1827,1195,1970,3725,3011,3378,284,5295,3861,2507,2138,2120,1904,5296,4041,2151,4042,4295,1036,3490,1905,114,2567,4296,209,1527,5297,5298,2964,2844,2635,2390,2728,3164,812,2568,5299,3307,5300,1559,737,1885,3726,1210,885,28,2695,3608,3862,5301,4297,1004,1780,4632,5302,346,1982,2222,2696,4633,3863,1742,797,1642,4043,1934,1072,1384,2152,896,4044,3308,3727,3228,2885,3609,5303,2569,1959,4634,2455,1786,5304,5305,5306,4045,4298,1005,1308,3728,4299,2729,4635,4636,1528,2610,161,1178,4300,1983,987,4637,1101,4301,631,4046,1157,3229,2425,1343,1241,1016,2243,2570,372,877,2344,2508,1160,555,1935,911,4047,5307,466,1170,169,1051,2921,2697,3729,2481,3012,1182,2012,2571,1251,2636,5308,992,2345,3491,1540,2730,1201,2071,2406,1997,2482,5309,4638,528,1923,2191,1503,1874,1570,2369,3379,3309,5310,557,1073,5311,1828,3492,2088,2271,3165,3059,3107,767,3108,2799,4639,1006,4302,4640,2346,1267,2179,3730,3230,778,4048,3231,2731,1597,2667,5312,4641,5313,3493,5314,5315,5316,3310,2698,1433,3311,131,95,1504,4049,723,4303,3166,1842,3610,2768,2192,4050,2028,2105,3731,5317,3013,4051,1218,5318,3380,3232,4052,4304,2584,248,1634,3864,912,5319,2845,3732,3060,3865,654,53,5320,3014,5321,1688,4642,777,3494,1032,4053,1425,5322,191,820,2121,2846,971,4643,931,3233,135,664,783,3866,1998,772,2922,1936,4054,3867,4644,2923,3234,282,2732,640,1372,3495,1127,922,325,3381,5323,5324,711,2045,5325,5326,4055,2223,2800,1937,4056,3382,2224,2255,3868,2305,5327,4645,3869,1258,3312,4057,3235,2139,2965,4058,4059,5328,2225,258,3236,4646,101,1227,5329,3313,1755,5330,1391,3314,5331,2924,2057,893,5332,5333,5334,1402,4305,2347,5335,5336,3237,3611,5337,5338,878,1325,1781,2801,4647,259,1385,2585,744,1183,2272,4648,5339,4060,2509,5340,684,1024,4306,5341,472,3612,3496,1165,3315,4061,4062,322,2153,881,455,1695,1152,1340,660,554,2154,4649,1058,4650,4307,830,1065,3383,4063,4651,1924,5342,1703,1919,5343,932,2273,122,5344,4652,947,677,5345,3870,2637,297,1906,1925,2274,4653,2322,3316,5346,5347,4308,5348,4309,84,4310,112,989,5349,547,1059,4064,701,3613,1019,5350,4311,5351,3497,942,639,457,2306,2456,993,2966,407,851,494,4654,3384,927,5352,1237,5353,2426,3385,573,4312,680,921,2925,1279,1875,285,790,1448,1984,719,2168,5354,5355,4655,4065,4066,1649,5356,1541,563,5357,1077,5358,3386,3061,3498,511,3015,4067,4068,3733,4069,1268,2572,3387,3238,4656,4657,5359,535,1048,1276,1189,2926,2029,3167,1438,1373,2847,2967,1134,2013,5360,4313,1238,2586,3109,1259,5361,700,5362,2968,3168,3734,4314,5363,4315,1146,1876,1907,4658,2611,4070,781,2427,132,1589,203,147,273,2802,2407,898,1787,2155,4071,4072,5364,3871,2803,5365,5366,4659,4660,5367,3239,5368,1635,3872,965,5369,1805,2699,1516,3614,1121,1082,1329,3317,4073,1449,3873,65,1128,2848,2927,2769,1590,3874,5370,5371,12,2668,45,976,2587,3169,4661,517,2535,1013,1037,3240,5372,3875,2849,5373,3876,5374,3499,5375,2612,614,1999,2323,3877,3110,2733,2638,5376,2588,4316,599,1269,5377,1811,3735,5378,2700,3111,759,1060,489,1806,3388,3318,1358,5379,5380,2391,1387,1215,2639,2256,490,5381,5382,4317,1759,2392,2348,5383,4662,3878,1908,4074,2640,1807,3241,4663,3500,3319,2770,2349,874,5384,5385,3501,3736,1859,91,2928,3737,3062,3879,4664,5386,3170,4075,2669,5387,3502,1202,1403,3880,2969,2536,1517,2510,4665,3503,2511,5388,4666,5389,2701,1886,1495,1731,4076,2370,4667,5390,2030,5391,5392,4077,2702,1216,237,2589,4318,2324,4078,3881,4668,4669,2703,3615,3504,445,4670,5393,5394,5395,5396,2771,61,4079,3738,1823,4080,5397,687,2046,935,925,405,2670,703,1096,1860,2734,4671,4081,1877,1367,2704,3389,918,2106,1782,2483,334,3320,1611,1093,4672,564,3171,3505,3739,3390,945,2641,2058,4673,5398,1926,872,4319,5399,3506,2705,3112,349,4320,3740,4082,4674,3882,4321,3741,2156,4083,4675,4676,4322,4677,2408,2047,782,4084,400,251,4323,1624,5400,5401,277,3742,299,1265,476,1191,3883,2122,4324,4325,1109,205,5402,2590,1e3,2157,3616,1861,5403,5404,5405,4678,5406,4679,2573,107,2484,2158,4085,3507,3172,5407,1533,541,1301,158,753,4326,2886,3617,5408,1696,370,1088,4327,4680,3618,579,327,440,162,2244,269,1938,1374,3508,968,3063,56,1396,3113,2107,3321,3391,5409,1927,2159,4681,3016,5410,3619,5411,5412,3743,4682,2485,5413,2804,5414,1650,4683,5415,2613,5416,5417,4086,2671,3392,1149,3393,4087,3884,4088,5418,1076,49,5419,951,3242,3322,3323,450,2850,920,5420,1812,2805,2371,4328,1909,1138,2372,3885,3509,5421,3243,4684,1910,1147,1518,2428,4685,3886,5422,4686,2393,2614,260,1796,3244,5423,5424,3887,3324,708,5425,3620,1704,5426,3621,1351,1618,3394,3017,1887,944,4329,3395,4330,3064,3396,4331,5427,3744,422,413,1714,3325,500,2059,2350,4332,2486,5428,1344,1911,954,5429,1668,5430,5431,4089,2409,4333,3622,3888,4334,5432,2307,1318,2512,3114,133,3115,2887,4687,629,31,2851,2706,3889,4688,850,949,4689,4090,2970,1732,2089,4335,1496,1853,5433,4091,620,3245,981,1242,3745,3397,1619,3746,1643,3326,2140,2457,1971,1719,3510,2169,5434,3246,5435,5436,3398,1829,5437,1277,4690,1565,2048,5438,1636,3623,3116,5439,869,2852,655,3890,3891,3117,4092,3018,3892,1310,3624,4691,5440,5441,5442,1733,558,4692,3747,335,1549,3065,1756,4336,3748,1946,3511,1830,1291,1192,470,2735,2108,2806,913,1054,4093,5443,1027,5444,3066,4094,4693,982,2672,3399,3173,3512,3247,3248,1947,2807,5445,571,4694,5446,1831,5447,3625,2591,1523,2429,5448,2090,984,4695,3749,1960,5449,3750,852,923,2808,3513,3751,969,1519,999,2049,2325,1705,5450,3118,615,1662,151,597,4095,2410,2326,1049,275,4696,3752,4337,568,3753,3626,2487,4338,3754,5451,2430,2275,409,3249,5452,1566,2888,3514,1002,769,2853,194,2091,3174,3755,2226,3327,4339,628,1505,5453,5454,1763,2180,3019,4096,521,1161,2592,1788,2206,2411,4697,4097,1625,4340,4341,412,42,3119,464,5455,2642,4698,3400,1760,1571,2889,3515,2537,1219,2207,3893,2643,2141,2373,4699,4700,3328,1651,3401,3627,5456,5457,3628,2488,3516,5458,3756,5459,5460,2276,2092,460,5461,4701,5462,3020,962,588,3629,289,3250,2644,1116,52,5463,3067,1797,5464,5465,5466,1467,5467,1598,1143,3757,4342,1985,1734,1067,4702,1280,3402,465,4703,1572,510,5468,1928,2245,1813,1644,3630,5469,4704,3758,5470,5471,2673,1573,1534,5472,5473,536,1808,1761,3517,3894,3175,2645,5474,5475,5476,4705,3518,2929,1912,2809,5477,3329,1122,377,3251,5478,360,5479,5480,4343,1529,551,5481,2060,3759,1769,2431,5482,2930,4344,3330,3120,2327,2109,2031,4706,1404,136,1468,1479,672,1171,3252,2308,271,3176,5483,2772,5484,2050,678,2736,865,1948,4707,5485,2014,4098,2971,5486,2737,2227,1397,3068,3760,4708,4709,1735,2931,3403,3631,5487,3895,509,2854,2458,2890,3896,5488,5489,3177,3178,4710,4345,2538,4711,2309,1166,1010,552,681,1888,5490,5491,2972,2973,4099,1287,1596,1862,3179,358,453,736,175,478,1117,905,1167,1097,5492,1854,1530,5493,1706,5494,2181,3519,2292,3761,3520,3632,4346,2093,4347,5495,3404,1193,2489,4348,1458,2193,2208,1863,1889,1421,3331,2932,3069,2182,3521,595,2123,5496,4100,5497,5498,4349,1707,2646,223,3762,1359,751,3121,183,3522,5499,2810,3021,419,2374,633,704,3897,2394,241,5500,5501,5502,838,3022,3763,2277,2773,2459,3898,1939,2051,4101,1309,3122,2246,1181,5503,1136,2209,3899,2375,1446,4350,2310,4712,5504,5505,4351,1055,2615,484,3764,5506,4102,625,4352,2278,3405,1499,4353,4103,5507,4104,4354,3253,2279,2280,3523,5508,5509,2774,808,2616,3765,3406,4105,4355,3123,2539,526,3407,3900,4356,955,5510,1620,4357,2647,2432,5511,1429,3766,1669,1832,994,928,5512,3633,1260,5513,5514,5515,1949,2293,741,2933,1626,4358,2738,2460,867,1184,362,3408,1392,5516,5517,4106,4359,1770,1736,3254,2934,4713,4714,1929,2707,1459,1158,5518,3070,3409,2891,1292,1930,2513,2855,3767,1986,1187,2072,2015,2617,4360,5519,2574,2514,2170,3768,2490,3332,5520,3769,4715,5521,5522,666,1003,3023,1022,3634,4361,5523,4716,1814,2257,574,3901,1603,295,1535,705,3902,4362,283,858,417,5524,5525,3255,4717,4718,3071,1220,1890,1046,2281,2461,4107,1393,1599,689,2575,388,4363,5526,2491,802,5527,2811,3903,2061,1405,2258,5528,4719,3904,2110,1052,1345,3256,1585,5529,809,5530,5531,5532,575,2739,3524,956,1552,1469,1144,2328,5533,2329,1560,2462,3635,3257,4108,616,2210,4364,3180,2183,2294,5534,1833,5535,3525,4720,5536,1319,3770,3771,1211,3636,1023,3258,1293,2812,5537,5538,5539,3905,607,2311,3906,762,2892,1439,4365,1360,4721,1485,3072,5540,4722,1038,4366,1450,2062,2648,4367,1379,4723,2593,5541,5542,4368,1352,1414,2330,2935,1172,5543,5544,3907,3908,4724,1798,1451,5545,5546,5547,5548,2936,4109,4110,2492,2351,411,4111,4112,3637,3333,3124,4725,1561,2674,1452,4113,1375,5549,5550,47,2974,316,5551,1406,1591,2937,3181,5552,1025,2142,3125,3182,354,2740,884,2228,4369,2412,508,3772,726,3638,996,2433,3639,729,5553,392,2194,1453,4114,4726,3773,5554,5555,2463,3640,2618,1675,2813,919,2352,2975,2353,1270,4727,4115,73,5556,5557,647,5558,3259,2856,2259,1550,1346,3024,5559,1332,883,3526,5560,5561,5562,5563,3334,2775,5564,1212,831,1347,4370,4728,2331,3909,1864,3073,720,3910,4729,4730,3911,5565,4371,5566,5567,4731,5568,5569,1799,4732,3774,2619,4733,3641,1645,2376,4734,5570,2938,669,2211,2675,2434,5571,2893,5572,5573,1028,3260,5574,4372,2413,5575,2260,1353,5576,5577,4735,3183,518,5578,4116,5579,4373,1961,5580,2143,4374,5581,5582,3025,2354,2355,3912,516,1834,1454,4117,2708,4375,4736,2229,2620,1972,1129,3642,5583,2776,5584,2976,1422,577,1470,3026,1524,3410,5585,5586,432,4376,3074,3527,5587,2594,1455,2515,2230,1973,1175,5588,1020,2741,4118,3528,4737,5589,2742,5590,1743,1361,3075,3529,2649,4119,4377,4738,2295,895,924,4378,2171,331,2247,3076,166,1627,3077,1098,5591,1232,2894,2231,3411,4739,657,403,1196,2377,542,3775,3412,1600,4379,3530,5592,4740,2777,3261,576,530,1362,4741,4742,2540,2676,3776,4120,5593,842,3913,5594,2814,2032,1014,4121,213,2709,3413,665,621,4380,5595,3777,2939,2435,5596,2436,3335,3643,3414,4743,4381,2541,4382,4744,3644,1682,4383,3531,1380,5597,724,2282,600,1670,5598,1337,1233,4745,3126,2248,5599,1621,4746,5600,651,4384,5601,1612,4385,2621,5602,2857,5603,2743,2312,3078,5604,716,2464,3079,174,1255,2710,4122,3645,548,1320,1398,728,4123,1574,5605,1891,1197,3080,4124,5606,3081,3082,3778,3646,3779,747,5607,635,4386,4747,5608,5609,5610,4387,5611,5612,4748,5613,3415,4749,2437,451,5614,3780,2542,2073,4388,2744,4389,4125,5615,1764,4750,5616,4390,350,4751,2283,2395,2493,5617,4391,4126,2249,1434,4127,488,4752,458,4392,4128,3781,771,1330,2396,3914,2576,3184,2160,2414,1553,2677,3185,4393,5618,2494,2895,2622,1720,2711,4394,3416,4753,5619,2543,4395,5620,3262,4396,2778,5621,2016,2745,5622,1155,1017,3782,3915,5623,3336,2313,201,1865,4397,1430,5624,4129,5625,5626,5627,5628,5629,4398,1604,5630,414,1866,371,2595,4754,4755,3532,2017,3127,4756,1708,960,4399,887,389,2172,1536,1663,1721,5631,2232,4130,2356,2940,1580,5632,5633,1744,4757,2544,4758,4759,5634,4760,5635,2074,5636,4761,3647,3417,2896,4400,5637,4401,2650,3418,2815,673,2712,2465,709,3533,4131,3648,4402,5638,1148,502,634,5639,5640,1204,4762,3649,1575,4763,2623,3783,5641,3784,3128,948,3263,121,1745,3916,1110,5642,4403,3083,2516,3027,4132,3785,1151,1771,3917,1488,4133,1987,5643,2438,3534,5644,5645,2094,5646,4404,3918,1213,1407,2816,531,2746,2545,3264,1011,1537,4764,2779,4405,3129,1061,5647,3786,3787,1867,2897,5648,2018,120,4406,4407,2063,3650,3265,2314,3919,2678,3419,1955,4765,4134,5649,3535,1047,2713,1266,5650,1368,4766,2858,649,3420,3920,2546,2747,1102,2859,2679,5651,5652,2e3,5653,1111,3651,2977,5654,2495,3921,3652,2817,1855,3421,3788,5655,5656,3422,2415,2898,3337,3266,3653,5657,2577,5658,3654,2818,4135,1460,856,5659,3655,5660,2899,2978,5661,2900,3922,5662,4408,632,2517,875,3923,1697,3924,2296,5663,5664,4767,3028,1239,580,4768,4409,5665,914,936,2075,1190,4136,1039,2124,5666,5667,5668,5669,3423,1473,5670,1354,4410,3925,4769,2173,3084,4137,915,3338,4411,4412,3339,1605,1835,5671,2748,398,3656,4413,3926,4138,328,1913,2860,4139,3927,1331,4414,3029,937,4415,5672,3657,4140,4141,3424,2161,4770,3425,524,742,538,3085,1012,5673,5674,3928,2466,5675,658,1103,225,3929,5676,5677,4771,5678,4772,5679,3267,1243,5680,4142,963,2250,4773,5681,2714,3658,3186,5682,5683,2596,2332,5684,4774,5685,5686,5687,3536,957,3426,2547,2033,1931,2941,2467,870,2019,3659,1746,2780,2781,2439,2468,5688,3930,5689,3789,3130,3790,3537,3427,3791,5690,1179,3086,5691,3187,2378,4416,3792,2548,3188,3131,2749,4143,5692,3428,1556,2549,2297,977,2901,2034,4144,1205,3429,5693,1765,3430,3189,2125,1271,714,1689,4775,3538,5694,2333,3931,533,4417,3660,2184,617,5695,2469,3340,3539,2315,5696,5697,3190,5698,5699,3932,1988,618,427,2651,3540,3431,5700,5701,1244,1690,5702,2819,4418,4776,5703,3541,4777,5704,2284,1576,473,3661,4419,3432,972,5705,3662,5706,3087,5707,5708,4778,4779,5709,3793,4145,4146,5710,153,4780,356,5711,1892,2902,4420,2144,408,803,2357,5712,3933,5713,4421,1646,2578,2518,4781,4782,3934,5714,3935,4422,5715,2416,3433,752,5716,5717,1962,3341,2979,5718,746,3030,2470,4783,4423,3794,698,4784,1893,4424,3663,2550,4785,3664,3936,5719,3191,3434,5720,1824,1302,4147,2715,3937,1974,4425,5721,4426,3192,823,1303,1288,1236,2861,3542,4148,3435,774,3938,5722,1581,4786,1304,2862,3939,4787,5723,2440,2162,1083,3268,4427,4149,4428,344,1173,288,2316,454,1683,5724,5725,1461,4788,4150,2597,5726,5727,4789,985,894,5728,3436,3193,5729,1914,2942,3795,1989,5730,2111,1975,5731,4151,5732,2579,1194,425,5733,4790,3194,1245,3796,4429,5734,5735,2863,5736,636,4791,1856,3940,760,1800,5737,4430,2212,1508,4792,4152,1894,1684,2298,5738,5739,4793,4431,4432,2213,479,5740,5741,832,5742,4153,2496,5743,2980,2497,3797,990,3132,627,1815,2652,4433,1582,4434,2126,2112,3543,4794,5744,799,4435,3195,5745,4795,2113,1737,3031,1018,543,754,4436,3342,1676,4796,4797,4154,4798,1489,5746,3544,5747,2624,2903,4155,5748,5749,2981,5750,5751,5752,5753,3196,4799,4800,2185,1722,5754,3269,3270,1843,3665,1715,481,365,1976,1857,5755,5756,1963,2498,4801,5757,2127,3666,3271,433,1895,2064,2076,5758,602,2750,5759,5760,5761,5762,5763,3032,1628,3437,5764,3197,4802,4156,2904,4803,2519,5765,2551,2782,5766,5767,5768,3343,4804,2905,5769,4805,5770,2864,4806,4807,1221,2982,4157,2520,5771,5772,5773,1868,1990,5774,5775,5776,1896,5777,5778,4808,1897,4158,318,5779,2095,4159,4437,5780,5781,485,5782,938,3941,553,2680,116,5783,3942,3667,5784,3545,2681,2783,3438,3344,2820,5785,3668,2943,4160,1747,2944,2983,5786,5787,207,5788,4809,5789,4810,2521,5790,3033,890,3669,3943,5791,1878,3798,3439,5792,2186,2358,3440,1652,5793,5794,5795,941,2299,208,3546,4161,2020,330,4438,3944,2906,2499,3799,4439,4811,5796,5797,5798,2522,1613,4812,5799,3345,3945,2523,5800,4162,5801,1637,4163,2471,4813,3946,5802,2500,3034,3800,5803,5804,2195,4814,5805,2163,5806,5807,5808,5809,5810,5811,5812,5813,5814,5815,5816,5817,5818,5819,5820,5821,5822,5823,5824,5825,5826,5827,5828,5829,5830,5831,5832,5833,5834,5835,5836,5837,5838,5839,5840,5841,5842,5843,5844,5845,5846,5847,5848,5849,5850,5851,5852,5853,5854,5855,5856,5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892,5893,5894,5895,5896,5897,5898,5899,5900,5901,5902,5903,5904,5905,5906,5907,5908,5909,5910,5911,5912,5913,5914,5915,5916,5917,5918,5919,5920,5921,5922,5923,5924,5925,5926,5927,5928,5929,5930,5931,5932,5933,5934,5935,5936,5937,5938,5939,5940,5941,5942,5943,5944,5945,5946,5947,5948,5949,5950,5951,5952,5953,5954,5955,5956,5957,5958,5959,5960,5961,5962,5963,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5978,5979,5980,5981,5982,5983,5984,5985,5986,5987,5988,5989,5990,5991,5992,5993,5994,5995,5996,5997,5998,5999,6eeeee4,10001,10002,10003,10004,10005,10006,10007,10008,10009,10010,10011,10012,10013,10014,10015,10016,10017,10018,10019,10020,10021,4922,10022,4923,10023,10024,10025,10026,10027,10028,10029,10030,10031,10032,10033,10034,10035,10036,10037,10038,10039,10040,10041,10042,10043,10044,10045,10046,10047,10048,4924,10049,10050,10051,10052,10053,10054,10055,10056,10057,10058,10059,10060,10061,10062,10063,10064,10065,10066,10067,10068,10069,10070,10071,10072,10073,10074,10075,10076,10077,10078,10079,10080,10081,10082,10083,10084,10085,10086,10087,4475,10088,10089,10090,10091,10092,10093,10094,10095,10096,10097,4476,10098,10099,10100,10101,10102,10103,10104,10105,10106,10107,10108,10109,10110,10111,2174,10112,10113,10114,10115,10116,10117,10118,10119,10120,10121,10122,10123,10124,10125,10126,10127,10128,10129,10130,10131,10132,10133,10134,10135,10136,10137,10138,10139,10140,3807,4186,4925,10141,10142,10143,10144,10145,10146,10147,4477,4187,10148,10149,10150,10151,10152,10153,4188,10154,10155,10156,10157,10158,10159,10160,10161,4926,10162,10163,10164,10165,10166,10167,10168,10169,10170,10171,10172,10173,10174,10175,10176,10177,10178,10179,10180,10181,10182,10183,10184,10185,10186,10187,10188,10189,10190,10191,10192,3203,10193,10194,10195,10196,10197,10198,10199,10200,4478,10201,10202,10203,10204,4479,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,4927,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252,10253,10254,10255,10256,10257,10258,10259,10260,10261,10262,10263,10264,10265,10266,10267,10268,10269,10270,10271,10272,10273,4480,4928,4929,10274,10275,10276,10277,10278,10279,10280,10281,10282,10283,10284,10285,10286,10287,10288,10289,10290,10291,10292,10293,10294,10295,10296,10297,10298,10299,10300,10301,10302,10303,10304,10305,10306,10307,10308,10309,10310,10311,10312,10313,10314,10315,10316,10317,10318,10319,10320,10321,10322,10323,10324,10325,10326,10327,10328,10329,10330,10331,10332,10333,10334,4930,10335,10336,10337,10338,10339,10340,10341,10342,4931,10343,10344,10345,10346,10347,10348,10349,10350,10351,10352,10353,10354,10355,3088,10356,2786,10357,10358,10359,10360,4189,10361,10362,10363,10364,10365,10366,10367,10368,10369,10370,10371,10372,10373,10374,10375,4932,10376,10377,10378,10379,10380,10381,10382,10383,10384,10385,10386,10387,10388,10389,10390,10391,10392,4933,10393,10394,10395,4934,10396,10397,10398,10399,10400,10401,10402,10403,10404,10405,10406,10407,10408,10409,10410,10411,10412,3446,10413,10414,10415,10416,10417,10418,10419,10420,10421,10422,10423,4935,10424,10425,10426,10427,10428,10429,10430,4936,10431,10432,10433,10434,10435,10436,10437,10438,10439,10440,10441,10442,10443,4937,10444,10445,10446,10447,4481,10448,10449,10450,10451,10452,10453,10454,10455,10456,10457,10458,10459,10460,10461,10462,10463,10464,10465,10466,10467,10468,10469,10470,10471,10472,10473,10474,10475,10476,10477,10478,10479,10480,10481,10482,10483,10484,10485,10486,10487,10488,10489,10490,10491,10492,10493,10494,10495,10496,10497,10498,10499,10500,10501,10502,10503,10504,10505,4938,10506,10507,10508,10509,10510,2552,10511,10512,10513,10514,10515,10516,3447,10517,10518,10519,10520,10521,10522,10523,10524,10525,10526,10527,10528,10529,10530,10531,10532,10533,10534,10535,10536,10537,10538,10539,10540,10541,10542,10543,4482,10544,4939,10545,10546,10547,10548,10549,10550,10551,10552,10553,10554,10555,10556,10557,10558,10559,10560,10561,10562,10563,10564,10565,10566,10567,3676,4483,10568,10569,10570,10571,10572,3448,10573,10574,10575,10576,10577,10578,10579,10580,10581,10582,10583,10584,10585,10586,10587,10588,10589,10590,10591,10592,10593,10594,10595,10596,10597,10598,10599,10600,10601,10602,10603,10604,10605,10606,10607,10608,10609,10610,10611,10612,10613,10614,10615,10616,10617,10618,10619,10620,10621,10622,10623,10624,10625,10626,10627,4484,10628,10629,10630,10631,10632,4940,10633,10634,10635,10636,10637,10638,10639,10640,10641,10642,10643,10644,10645,10646,10647,10648,10649,10650,10651,10652,10653,10654,10655,10656,4941,10657,10658,10659,2599,10660,10661,10662,10663,10664,10665,10666,3089,10667,10668,10669,10670,10671,10672,10673,10674,10675,10676,10677,10678,10679,10680,4942,10681,10682,10683,10684,10685,10686,10687,10688,10689,10690,10691,10692,10693,10694,10695,10696,10697,4485,10698,10699,10700,10701,10702,10703,10704,4943,10705,3677,10706,10707,10708,10709,10710,10711,10712,4944,10713,10714,10715,10716,10717,10718,10719,10720,10721,10722,10723,10724,10725,10726,10727,10728,4945,10729,10730,10731,10732,10733,10734,10735,10736,10737,10738,10739,10740,10741,10742,10743,10744,10745,10746,10747,10748,10749,10750,10751,10752,10753,10754,10755,10756,10757,10758,10759,10760,10761,4946,10762,10763,10764,10765,10766,10767,4947,4948,10768,10769,10770,10771,10772,10773,10774,10775,10776,10777,10778,10779,10780,10781,10782,10783,10784,10785,10786,10787,10788,10789,10790,10791,10792,10793,10794,10795,10796,10797,10798,10799,10800,10801,10802,10803,10804,10805,10806,10807,10808,10809,10810,10811,10812,10813,10814,10815,10816,10817,10818,10819,10820,10821,10822,10823,10824,10825,10826,10827,10828,10829,10830,10831,10832,10833,10834,10835,10836,10837,10838,10839,10840,10841,10842,10843,10844,10845,10846,10847,10848,10849,10850,10851,10852,10853,10854,10855,10856,10857,10858,10859,10860,10861,10862,10863,10864,10865,10866,10867,10868,10869,10870,10871,10872,10873,10874,10875,10876,10877,10878,4486,10879,10880,10881,10882,10883,10884,10885,4949,10886,10887,10888,10889,10890,10891,10892,10893,10894,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10905,10906,10907,10908,10909,10910,10911,10912,10913,10914,10915,10916,10917,10918,10919,4487,10920,10921,10922,10923,10924,10925,10926,10927,10928,10929,10930,10931,10932,4950,10933,10934,10935,10936,10937,10938,10939,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,4488,10950,10951,10952,10953,10954,10955,10956,10957,10958,10959,4190,10960,10961,10962,10963,10964,10965,10966,10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,10981,10982,10983,10984,10985,10986,10987,10988,10989,10990,10991,10992,10993,10994,10995,10996,10997,10998,10999,11e3,11001,11002,11003,11004,11005,11006,3960,11007,11008,11009,11010,11011,11012,11013,11014,11015,11016,11017,11018,11019,11020,11021,11022,11023,11024,11025,11026,11027,11028,11029,11030,11031,11032,4951,11033,11034,11035,11036,11037,11038,11039,11040,11041,11042,11043,11044,11045,11046,11047,4489,11048,11049,11050,11051,4952,11052,11053,11054,11055,11056,11057,11058,4953,11059,11060,11061,11062,11063,11064,11065,11066,11067,11068,11069,11070,11071,4954,11072,11073,11074,11075,11076,11077,11078,11079,11080,11081,11082,11083,11084,11085,11086,11087,11088,11089,11090,11091,11092,11093,11094,11095,11096,11097,11098,11099,11100,11101,11102,11103,11104,11105,11106,11107,11108,11109,11110,11111,11112,11113,11114,11115,3808,11116,11117,11118,11119,11120,11121,11122,11123,11124,11125,11126,11127,11128,11129,11130,11131,11132,11133,11134,4955,11135,11136,11137,11138,11139,11140,11141,11142,11143,11144,11145,11146,11147,11148,11149,11150,11151,11152,11153,11154,11155,11156,11157,11158,11159,11160,11161,4956,11162,11163,11164,11165,11166,11167,11168,11169,11170,11171,11172,11173,11174,11175,11176,11177,11178,11179,11180,4957,11181,11182,11183,11184,11185,11186,4958,11187,11188,11189,11190,11191,11192,11193,11194,11195,11196,11197,11198,11199,11200,3678,11201,11202,11203,11204,11205,11206,4191,11207,11208,11209,11210,11211,11212,11213,11214,11215,11216,11217,11218,11219,11220,11221,11222,11223,11224,11225,11226,11227,11228,11229,11230,11231,11232,11233,11234,11235,11236,11237,11238,11239,11240,11241,11242,11243,11244,11245,11246,11247,11248,11249,11250,11251,4959,11252,11253,11254,11255,11256,11257,11258,11259,11260,11261,11262,11263,11264,11265,11266,11267,11268,11269,11270,11271,11272,11273,11274,11275,11276,11277,11278,11279,11280,11281,11282,11283,11284,11285,11286,11287,11288,11289,11290,11291,11292,11293,11294,11295,11296,11297,11298,11299,11300,11301,11302,11303,11304,11305,11306,11307,11308,11309,11310,11311,11312,11313,11314,3679,11315,11316,11317,11318,4490,11319,11320,11321,11322,11323,11324,11325,11326,11327,11328,11329,11330,11331,11332,11333,11334,11335,11336,11337,11338,11339,11340,11341,11342,11343,11344,11345,11346,11347,4960,11348,11349,11350,11351,11352,11353,11354,11355,11356,11357,11358,11359,11360,11361,11362,11363,11364,11365,11366,11367,11368,11369,11370,11371,11372,11373,11374,11375,11376,11377,3961,4961,11378,11379,11380,11381,11382,11383,11384,11385,11386,11387,11388,11389,11390,11391,11392,11393,11394,11395,11396,11397,4192,11398,11399,11400,11401,11402,11403,11404,11405,11406,11407,11408,11409,11410,11411,4962,11412,11413,11414,11415,11416,11417,11418,11419,11420,11421,11422,11423,11424,11425,11426,11427,11428,11429,11430,11431,11432,11433,11434,11435,11436,11437,11438,11439,11440,11441,11442,11443,11444,11445,11446,11447,11448,11449,11450,11451,11452,11453,11454,11455,11456,11457,11458,11459,11460,11461,11462,11463,11464,11465,11466,11467,11468,11469,4963,11470,11471,4491,11472,11473,11474,11475,4964,11476,11477,11478,11479,11480,11481,11482,11483,11484,11485,11486,11487,11488,11489,11490,11491,11492,4965,11493,11494,11495,11496,11497,11498,11499,11500,11501,11502,11503,11504,11505,11506,11507,11508,11509,11510,11511,11512,11513,11514,11515,11516,11517,11518,11519,11520,11521,11522,11523,11524,11525,11526,11527,11528,11529,3962,11530,11531,11532,11533,11534,11535,11536,11537,11538,11539,11540,11541,11542,11543,11544,11545,11546,11547,11548,11549,11550,11551,11552,11553,11554,11555,11556,11557,11558,11559,11560,11561,11562,11563,11564,4193,4194,11565,11566,11567,11568,11569,11570,11571,11572,11573,11574,11575,11576,11577,11578,11579,11580,11581,11582,11583,11584,11585,11586,11587,11588,11589,11590,11591,4966,4195,11592,11593,11594,11595,11596,11597,11598,11599,11600,11601,11602,11603,11604,3090,11605,11606,11607,11608,11609,11610,4967,11611,11612,11613,11614,11615,11616,11617,11618,11619,11620,11621,11622,11623,11624,11625,11626,11627,11628,11629,11630,11631,11632,11633,11634,11635,11636,11637,11638,11639,11640,11641,11642,11643,11644,11645,11646,11647,11648,11649,11650,11651,11652,11653,11654,11655,11656,11657,11658,11659,11660,11661,11662,11663,11664,11665,11666,11667,11668,11669,11670,11671,11672,11673,11674,4968,11675,11676,11677,11678,11679,11680,11681,11682,11683,11684,11685,11686,11687,11688,11689,11690,11691,11692,11693,3809,11694,11695,11696,11697,11698,11699,11700,11701,11702,11703,11704,11705,11706,11707,11708,11709,11710,11711,11712,11713,11714,11715,11716,11717,11718,3553,11719,11720,11721,11722,11723,11724,11725,11726,11727,11728,11729,11730,4969,11731,11732,11733,11734,11735,11736,11737,11738,11739,11740,4492,11741,11742,11743,11744,11745,11746,11747,11748,11749,11750,11751,11752,4970,11753,11754,11755,11756,11757,11758,11759,11760,11761,11762,11763,11764,11765,11766,11767,11768,11769,11770,11771,11772,11773,11774,11775,11776,11777,11778,11779,11780,11781,11782,11783,11784,11785,11786,11787,11788,11789,11790,4971,11791,11792,11793,11794,11795,11796,11797,4972,11798,11799,11800,11801,11802,11803,11804,11805,11806,11807,11808,11809,11810,4973,11811,11812,11813,11814,11815,11816,11817,11818,11819,11820,11821,11822,11823,11824,11825,11826,11827,11828,11829,11830,11831,11832,11833,11834,3680,3810,11835,11836,4974,11837,11838,11839,11840,11841,11842,11843,11844,11845,11846,11847,11848,11849,11850,11851,11852,11853,11854,11855,11856,11857,11858,11859,11860,11861,11862,11863,11864,11865,11866,11867,11868,11869,11870,11871,11872,11873,11874,11875,11876,11877,11878,11879,11880,11881,11882,11883,11884,4493,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,11913,11914,11915,4975,11916,11917,11918,11919,11920,11921,11922,11923,11924,11925,11926,11927,11928,11929,11930,11931,11932,11933,11934,11935,11936,11937,11938,11939,11940,11941,11942,11943,11944,11945,11946,11947,11948,11949,4976,11950,11951,11952,11953,11954,11955,11956,11957,11958,11959,11960,11961,11962,11963,11964,11965,11966,11967,11968,11969,11970,11971,11972,11973,11974,11975,11976,11977,11978,11979,11980,11981,11982,11983,11984,11985,11986,11987,4196,11988,11989,11990,11991,11992,4977,11993,11994,11995,11996,11997,11998,11999,12e3,12001,12002,12003,12004,12005,12006,12007,12008,12009,12010,12011,12012,12013,12014,12015,12016,12017,12018,12019,12020,12021,12022,12023,12024,12025,12026,12027,12028,12029,12030,12031,12032,12033,12034,12035,12036,12037,12038,12039,12040,12041,12042,12043,12044,12045,12046,12047,12048,12049,12050,12051,12052,12053,12054,12055,12056,12057,12058,12059,12060,12061,4978,12062,12063,12064,12065,12066,12067,12068,12069,12070,12071,12072,12073,12074,12075,12076,12077,12078,12079,12080,12081,12082,12083,12084,12085,12086,12087,12088,12089,12090,12091,12092,12093,12094,12095,12096,12097,12098,12099,12100,12101,12102,12103,12104,12105,12106,12107,12108,12109,12110,12111,12112,12113,12114,12115,12116,12117,12118,12119,12120,12121,12122,12123,4979,12124,12125,12126,12127,12128,4197,12129,12130,12131,12132,12133,12134,12135,12136,12137,12138,12139,12140,12141,12142,12143,12144,12145,12146,12147,12148,12149,12150,12151,12152,12153,12154,4980,12155,12156,12157,12158,12159,12160,4494,12161,12162,12163,12164,3811,12165,12166,12167,12168,12169,4495,12170,12171,4496,12172,12173,12174,12175,12176,3812,12177,12178,12179,12180,12181,12182,12183,12184,12185,12186,12187,12188,12189,12190,12191,12192,12193,12194,12195,12196,12197,12198,12199,12200,12201,12202,12203,12204,12205,12206,12207,12208,12209,12210,12211,12212,12213,12214,12215,12216,12217,12218,12219,12220,12221,4981,12222,12223,12224,12225,12226,12227,12228,12229,12230,12231,12232,12233,12234,12235,4982,12236,12237,12238,12239,12240,12241,12242,12243,12244,12245,4983,12246,12247,12248,12249,4984,12250,12251,12252,12253,12254,12255,12256,12257,12258,12259,12260,12261,12262,12263,12264,4985,12265,4497,12266,12267,12268,12269,12270,12271,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12284,12285,12286,12287,4986,12288,12289,12290,12291,12292,12293,12294,12295,12296,2473,12297,12298,12299,12300,12301,12302,12303,12304,12305,12306,12307,12308,12309,12310,12311,12312,12313,12314,12315,12316,12317,12318,12319,3963,12320,12321,12322,12323,12324,12325,12326,12327,12328,12329,12330,12331,12332,4987,12333,12334,12335,12336,12337,12338,12339,12340,12341,12342,12343,12344,12345,12346,12347,12348,12349,12350,12351,12352,12353,12354,12355,12356,12357,12358,12359,3964,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,3965,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,4988,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12436,12437,12438,3554,12439,12440,12441,12442,12443,12444,12445,12446,12447,12448,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,4989,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,4990,12481,12482,12483,12484,12485,12486,12487,12488,12489,4498,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,12535,12536,12537,12538,12539,12540,12541,12542,12543,12544,12545,12546,12547,12548,12549,12550,12551,4991,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,3036,12579,12580,12581,12582,12583,3966,12584,12585,12586,12587,12588,12589,12590,12591,12592,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,4499,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,12687,12688,12689,12690,12691,12692,12693,12694,12695,12696,12697,12698,4992,12699,12700,12701,12702,12703,12704,12705,12706,12707,12708,12709,12710,12711,12712,12713,12714,12715,12716,12717,12718,12719,12720,12721,12722,12723,12724,12725,12726,12727,12728,12729,12730,12731,12732,12733,12734,12735,12736,12737,12738,12739,12740,12741,12742,12743,12744,12745,12746,12747,12748,12749,12750,12751,12752,12753,12754,12755,12756,12757,12758,12759,12760,12761,12762,12763,12764,12765,12766,12767,12768,12769,12770,12771,12772,12773,12774,12775,12776,12777,12778,4993,2175,12779,12780,12781,12782,12783,12784,12785,12786,4500,12787,12788,12789,12790,12791,12792,12793,12794,12795,12796,12797,12798,12799,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,4198,3967,12827,12828,12829,12830,12831,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,12842,12843,12844,12845,12846,12847,12848,12849,12850,12851,12852,12853,12854,12855,12856,12857,12858,12859,12860,12861,4199,12862,12863,12864,12865,12866,12867,12868,12869,12870,12871,12872,12873,12874,12875,12876,12877,12878,12879,12880,12881,12882,12883,12884,12885,12886,12887,4501,12888,12889,12890,12891,12892,12893,12894,12895,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,4994,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,12924,12925,12926,12927,12928,12929,12930,12931,12932,12933,12934,12935,12936,12937,12938,12939,12940,12941,12942,12943,12944,12945,12946,12947,12948,12949,12950,12951,12952,12953,12954,12955,12956,1772,12957,12958,12959,12960,12961,12962,12963,12964,12965,12966,12967,12968,12969,12970,12971,12972,12973,12974,12975,12976,12977,12978,12979,12980,12981,12982,12983,12984,12985,12986,12987,12988,12989,12990,12991,12992,12993,12994,12995,12996,12997,4502,12998,4503,12999,13e3,13001,13002,13003,4504,13004,13005,13006,13007,13008,13009,13010,13011,13012,13013,13014,13015,13016,13017,13018,13019,13020,13021,13022,13023,13024,13025,13026,13027,13028,13029,3449,13030,13031,13032,13033,13034,13035,13036,13037,13038,13039,13040,13041,13042,13043,13044,13045,13046,13047,13048,13049,13050,13051,13052,13053,13054,13055,13056,13057,13058,13059,13060,13061,13062,13063,13064,13065,13066,13067,13068,13069,13070,13071,13072,13073,13074,13075,13076,13077,13078,13079,13080,13081,13082,13083,13084,13085,13086,13087,13088,13089,13090,13091,13092,13093,13094,13095,13096,13097,13098,13099,13100,13101,13102,13103,13104,13105,13106,13107,13108,13109,13110,13111,13112,13113,13114,13115,13116,13117,13118,3968,13119,4995,13120,13121,13122,13123,13124,13125,13126,13127,4505,13128,13129,13130,13131,13132,13133,13134,4996,4506,13135,13136,13137,13138,13139,4997,13140,13141,13142,13143,13144,13145,13146,13147,13148,13149,13150,13151,13152,13153,13154,13155,13156,13157,13158,13159,4998,13160,13161,13162,13163,13164,13165,13166,13167,13168,13169,13170,13171,13172,13173,13174,13175,13176,4999,13177,13178,13179,13180,13181,13182,13183,13184,13185,13186,13187,13188,13189,13190,13191,13192,13193,13194,13195,13196,13197,13198,13199,13200,13201,13202,13203,13204,13205,13206,5e3,13207,13208,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13219,13220,13221,13222,13223,13224,13225,13226,13227,4200,5001,13228,13229,13230,13231,13232,13233,13234,13235,13236,13237,13238,13239,13240,3969,13241,13242,13243,13244,3970,13245,13246,13247,13248,13249,13250,13251,13252,13253,13254,13255,13256,13257,13258,13259,13260,13261,13262,13263,13264,13265,13266,13267,13268,3450,13269,13270,13271,13272,13273,13274,13275,13276,5002,13277,13278,13279,13280,13281,13282,13283,13284,13285,13286,13287,13288,13289,13290,13291,13292,13293,13294,13295,13296,13297,13298,13299,13300,13301,13302,3813,13303,13304,13305,13306,13307,13308,13309,13310,13311,13312,13313,13314,13315,13316,13317,13318,13319,13320,13321,13322,13323,13324,13325,13326,13327,13328,4507,13329,13330,13331,13332,13333,13334,13335,13336,13337,13338,13339,13340,13341,5003,13342,13343,13344,13345,13346,13347,13348,13349,13350,13351,13352,13353,13354,13355,13356,13357,13358,13359,13360,13361,13362,13363,13364,13365,13366,13367,5004,13368,13369,13370,13371,13372,13373,13374,13375,13376,13377,13378,13379,13380,13381,13382,13383,13384,13385,13386,13387,13388,13389,13390,13391,13392,13393,13394,13395,13396,13397,13398,13399,13400,13401,13402,13403,13404,13405,13406,13407,13408,13409,13410,13411,13412,13413,13414,13415,13416,13417,13418,13419,13420,13421,13422,13423,13424,13425,13426,13427,13428,13429,13430,13431,13432,4508,13433,13434,13435,4201,13436,13437,13438,13439,13440,13441,13442,13443,13444,13445,13446,13447,13448,13449,13450,13451,13452,13453,13454,13455,13456,13457,5005,13458,13459,13460,13461,13462,13463,13464,13465,13466,13467,13468,13469,13470,4509,13471,13472,13473,13474,13475,13476,13477,13478,13479,13480,13481,13482,13483,13484,13485,13486,13487,13488,13489,13490,13491,13492,13493,13494,13495,13496,13497,13498,13499,13500,13501,13502,13503,13504,13505,13506,13507,13508,13509,13510,13511,13512,13513,13514,13515,13516,13517,13518,13519,13520,13521,13522,13523,13524,13525,13526,13527,13528,13529,13530,13531,13532,13533,13534,13535,13536,13537,13538,13539,13540,13541,13542,13543,13544,13545,13546,13547,13548,13549,13550,13551,13552,13553,13554,13555,13556,13557,13558,13559,13560,13561,13562,13563,13564,13565,13566,13567,13568,13569,13570,13571,13572,13573,13574,13575,13576,13577,13578,13579,13580,13581,13582,13583,13584,13585,13586,13587,13588,13589,13590,13591,13592,13593,13594,13595,13596,13597,13598,13599,13600,13601,13602,13603,13604,13605,13606,13607,13608,13609,13610,13611,13612,13613,13614,13615,13616,13617,13618,13619,13620,13621,13622,13623,13624,13625,13626,13627,13628,13629,13630,13631,13632,13633,13634,13635,13636,13637,13638,13639,13640,13641,13642,5006,13643,13644,13645,13646,13647,13648,13649,13650,13651,5007,13652,13653,13654,13655,13656,13657,13658,13659,13660,13661,13662,13663,13664,13665,13666,13667,13668,13669,13670,13671,13672,13673,13674,13675,13676,13677,13678,13679,13680,13681,13682,13683,13684,13685,13686,13687,13688,13689,13690,13691,13692,13693,13694,13695,13696,13697,13698,13699,13700,13701,13702,13703,13704,13705,13706,13707,13708,13709,13710,13711,13712,13713,13714,13715,13716,13717,13718,13719,13720,13721,13722,13723,13724,13725,13726,13727,13728,13729,13730,13731,13732,13733,13734,13735,13736,13737,13738,13739,13740,13741,13742,13743,13744,13745,13746,13747,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760,13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,3273,13775,13776,13777,13778,13779,13780,13781,13782,13783,13784,13785,13786,13787,13788,13789,13790,13791,13792,13793,13794,13795,13796,13797,13798,13799,13800,13801,13802,13803,13804,13805,13806,13807,13808,13809,13810,13811,13812,13813,13814,13815,13816,13817,13818,13819,13820,13821,13822,13823,13824,13825,13826,13827,13828,13829,13830,13831,13832,13833,13834,13835,13836,13837,13838,13839,13840,13841,13842,13843,13844,13845,13846,13847,13848,13849,13850,13851,13852,13853,13854,13855,13856,13857,13858,13859,13860,13861,13862,13863,13864,13865,13866,13867,13868,13869,13870,13871,13872,13873,13874,13875,13876,13877,13878,13879,13880,13881,13882,13883,13884,13885,13886,13887,13888,13889,13890,13891,13892,13893,13894,13895,13896,13897,13898,13899,13900,13901,13902,13903,13904,13905,13906,13907,13908,13909,13910,13911,13912,13913,13914,13915,13916,13917,13918,13919,13920,13921,13922,13923,13924,13925,13926,13927,13928,13929,13930,13931,13932,13933,13934,13935,13936,13937,13938,13939,13940,13941,13942,13943,13944,13945,13946,13947,13948,13949,13950,13951,13952,13953,13954,13955,13956,13957,13958,13959,13960,13961,13962,13963,13964,13965,13966,13967,13968,13969,13970,13971,13972]});var z0=ke(na=>{"use strict";var o1=hg(),x4=gg(),y4=xg(),b4=yg(),v4=bg();function Un(){var r=1024,t=.99,e=.01,n=3,o=this;function s(){o._mCharToFreqOrder=null,o._mTableSize=null,o._mTypicalDistributionRatio=null,o.reset()}this.reset=function(){this._mDone=!1,this._mTotalChars=0,this._mFreqChars=0},this.feed=function(i,a){if(a==2)var l=this.getOrder(i);else l=-1;l>=0&&(this._mTotalChars++,l<this._mTableSize&&512>this._mCharToFreqOrder[l]&&this._mFreqChars++)},this.getConfidence=function(){if(this._mTotalChars<=0||this._mFreqChars<=n)return e;if(this._mTotalChars!=this._mFreqChars){var i=this._mFreqChars/((this._mTotalChars-this._mFreqChars)*this._mTypicalDistributionRatio);if(i<t)return i}return t},this.gotEnoughData=function(){return this._mTotalChars>r},this.getOrder=function(i){return-1},s()}na.CharDistributionAnalysis=Un;function vg(){Un.apply(this);var r=this;function t(){r._mCharToFreqOrder=x4.EUCTWCharToFreqOrder,r._mTableSize=x4.EUCTW_TABLE_SIZE,r._mTypicalDistributionRatio=x4.EUCTW_TYPICAL_DISTRIBUTION_RATIO}this.getOrder=function(e){return e.charCodeAt(0)>=196?94*(e.charCodeAt(0)-196)+e.charCodeAt(1)-161:-1},t()}vg.prototype=new Un;na.EUCTWDistributionAnalysis=vg;function wg(){Un.apply(this);var r=this;function t(){r._mCharToFreqOrder=y4.EUCKRCharToFreqOrder,r._mTableSize=y4.EUCKR_TABLE_SIZE,r._mTypicalDistributionRatio=y4.EUCKR_TYPICAL_DISTRIBUTION_RATIO}this.getOrder=function(e){return e.charCodeAt(0)>=176?94*(e.charCodeAt(0)-176)+e.charCodeAt(1)-161:-1},t()}wg.prototype=new Un;na.EUCKRDistributionAnalysis=wg;function Tg(){Un.apply(this);var r=this;function t(){r._mCharToFreqOrder=b4.GB2312CharToFreqOrder,r._mTableSize=b4.GB2312_TABLE_SIZE,r._mTypicalDistributionRatio=b4.GB2312_TYPICAL_DISTRIBUTION_RATIO}this.getOrder=function(e){return e.charCodeAt(0)>=176&&e.charCodeAt(1)>=161?94*(e.charCodeAt(0)-176)+e.charCodeAt(1)-161:-1},t()}Tg.prototype=new Un;na.GB2312DistributionAnalysis=Tg;function Cg(){Un.apply(this);var r=this;function t(){r._mCharToFreqOrder=v4.Big5CharToFreqOrder,r._mTableSize=v4.BIG5_TABLE_SIZE,r._mTypicalDistributionRatio=v4.BIG5_TYPICAL_DISTRIBUTION_RATIO}this.getOrder=function(e){return e.charCodeAt(0)>=164?e.charCodeAt(1)>=161?157*(e.charCodeAt(0)-164)+e.charCodeAt(1)-161+63:157*(e.charCodeAt(0)-164)+e.charCodeAt(1)-64:-1},t()}Cg.prototype=new Un;na.Big5DistributionAnalysis=Cg;function Sg(){Un.apply(this);var r=this;function t(){r._mCharToFreqOrder=o1.JISCharToFreqOrder,r._mTableSize=o1.JIS_TABLE_SIZE,r._mTypicalDistributionRatio=o1.JIS_TYPICAL_DISTRIBUTION_RATIO}this.getOrder=function(e){if(e.charCodeAt(0)>=129&&e.charCodeAt(0)<=159)var n=188*(e.charCodeAt(0)-129);else if(e.charCodeAt(0)>=224&&e.charCodeAt(0)<=239)n=188*(e.charCodeAt(0)-224+31);else return-1;return n+=e.charCodeAt(1)-64,(e.charCodeAt(1)<64||e.charCodeAt(1)===127||e.charCodeAt(1)>252)&&(n=-1),n},t()}Sg.prototype=new Un;na.SJISDistributionAnalysis=Sg;function Ig(){Un.apply(this);var r=this;function t(){r._mCharToFreqOrder=o1.JISCharToFreqOrder,r._mTableSize=o1.JIS_TABLE_SIZE,r._mTypicalDistributionRatio=o1.JIS_TYPICAL_DISTRIBUTION_RATIO}this.getOrder=function(e){return e[0]>="\xA0"?94*(e.charCodeAt(0)-161)+e.charCodeAt(1)-161:-1},t()}Ig.prototype=new Un;na.EUCJPDistributionAnalysis=Ig});var Eg=ke((ioe,Ag)=>{"use strict";var UO=Ns(),Ng=L0(),WO=dg(),qO=z0().Big5DistributionAnalysis;function kg(){Ng.apply(this);var r=this;function t(){r._mCodingSM=new UO(WO),r._mDistributionAnalyzer=new qO,r.reset()}this.getCharsetName=function(){return"Big5"},t()}kg.prototype=new Ng;Ag.exports=kg});var Dg=ke((aoe,_g)=>{"use strict";var W=dr(),HO=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,8,8,8,8,8,8,8,8,8,8,8,8,9,8,8,10,11,11,11,11,11,11,11,12,13,13,13,14,15,0,0],KO=[W.error,W.start,W.error,W.error,W.error,W.error,12,10,9,11,8,7,6,5,4,3,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.itsMe,W.error,W.error,5,5,5,5,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,5,5,5,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,7,7,7,7,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,7,7,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,9,9,9,9,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,9,9,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,12,12,12,12,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,12,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,12,12,12,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.start,W.start,W.start,W.start,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error,W.error],jO=[0,1,0,0,0,0,2,3,3,3,4,4,5,5,6,6];_g.exports={classTable:HO,classFactor:16,stateTable:KO,charLenTable:jO,name:"UTF-8"}});var Fg=ke((loe,$g)=>{"use strict";var XO=Ns(),Rg=ea(),oa=dr(),YO=Dg();function w4(){Rg.apply(this);var r=.5,t=this;function e(){t._mCodingSM=new XO(YO),t.reset()}this.reset=function(){w4.prototype.reset.apply(this),this._mCodingSM.reset(),this._mNumOfMBChar=0,this._mMBCharLen=0,this._mFullLen=0,this._mBasicAsciiLen=0},this.getCharsetName=function(){return"UTF-8"},this.feed=function(n){this._mFullLen+=n.length;for(var o=0,s;o<n.length;o++){s=n[o];var i=this._mCodingSM.nextState(s);if(i==oa.error){this._mState=oa.notMe;break}else if(i==oa.itsMe){this._mState=oa.foundIt;break}else i==oa.start&&(this._mCodingSM.getCurrentCharLen()>=2?(this._mNumOfMBChar++,this._mMBCharLen+=this._mCodingSM.getCurrentCharLen()):s.charCodeAt(0)<128&&this._mBasicAsciiLen++)}return this.getState()==oa.detecting&&this.getConfidence()>oa.SHORTCUT_THRESHOLD&&(this._mState=oa.foundIt),this.getState()},this.getConfidence=function(){var n=.99,o=0,s=this._mFullLen-this._mBasicAsciiLen;return s>0&&(o=this._mMBCharLen/s),this._mNumOfMBChar<6&&o<=.6?(n*=Math.pow(r,this._mNumOfMBChar),1-n):n},e()}w4.prototype=new Rg;$g.exports=w4});var Mg=ke((coe,Og)=>{"use strict";var nr=dr(),ZO=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0],JO=[nr.error,nr.start,nr.start,3,nr.error,nr.error,nr.error,nr.error,nr.error,nr.error,nr.error,nr.error,nr.itsMe,nr.itsMe,nr.itsMe,nr.itsMe,nr.itsMe,nr.itsMe,nr.error,nr.error,nr.start,nr.start,nr.start,nr.start],QO=[0,1,1,2,0,0];Og.exports={classTable:ZO,classFactor:6,stateTable:JO,charLenTable:QO,name:"Shift_JIS"}});var T4=ke(Zu=>{"use strict";Zu.jp2CharContext=[[0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1],[2,4,0,4,0,3,0,4,0,3,4,4,4,2,4,3,3,4,3,2,3,3,4,2,3,3,3,2,4,1,4,3,3,1,5,4,3,4,3,4,3,5,3,0,3,5,4,2,0,3,1,0,3,3,0,3,3,0,1,1,0,4,3,0,3,3,0,4,0,2,0,3,5,5,5,5,4,0,4,1,0,3,4],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[0,4,0,5,0,5,0,4,0,4,5,4,4,3,5,3,5,1,5,3,4,3,4,4,3,4,3,3,4,3,5,4,4,3,5,5,3,5,5,5,3,5,5,3,4,5,5,3,1,3,2,0,3,4,0,4,2,0,4,2,1,5,3,2,3,5,0,4,0,2,0,5,4,4,5,4,5,0,4,0,0,4,4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,3,0,4,0,3,0,3,0,4,5,4,3,3,3,3,4,3,5,4,4,3,5,4,4,3,4,3,4,4,4,4,5,3,4,4,3,4,5,5,4,5,5,1,4,5,4,3,0,3,3,1,3,3,0,4,4,0,3,3,1,5,3,3,3,5,0,4,0,3,0,4,4,3,4,3,3,0,4,1,1,3,4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,4,0,3,0,3,0,4,0,3,4,4,3,2,2,1,2,1,3,1,3,3,3,3,3,4,3,1,3,3,5,3,3,0,4,3,0,5,4,3,3,5,4,4,3,4,4,5,0,1,2,0,1,2,0,2,2,0,1,0,0,5,2,2,1,4,0,3,0,1,0,4,4,3,5,4,3,0,2,1,0,4,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,3,0,5,0,4,0,2,1,4,4,2,4,1,4,2,4,2,4,3,3,3,4,3,3,3,3,1,4,2,3,3,3,1,4,4,1,1,1,4,3,3,2,0,2,4,3,2,0,3,3,0,3,1,1,0,0,0,3,3,0,4,2,2,3,4,0,4,0,3,0,4,4,5,3,4,4,0,3,0,0,1,4],[1,4,0,4,0,4,0,4,0,3,5,4,4,3,4,3,5,4,3,3,4,3,5,4,4,4,4,3,4,2,4,3,3,1,5,4,3,2,4,5,4,5,5,4,4,5,4,4,0,3,2,2,3,3,0,4,3,1,3,2,1,4,3,3,4,5,0,3,0,2,0,4,5,5,4,5,4,0,4,0,0,5,4],[0,5,0,5,0,4,0,3,0,4,4,3,4,3,3,3,4,0,4,4,4,3,4,3,4,3,3,1,4,2,4,3,4,0,5,4,1,4,5,4,4,5,3,2,4,3,4,3,2,4,1,3,3,3,2,3,2,0,4,3,3,4,3,3,3,4,0,4,0,3,0,4,5,4,4,4,3,0,4,1,0,1,3],[0,3,1,4,0,3,0,2,0,3,4,4,3,1,4,2,3,3,4,3,4,3,4,3,4,4,3,2,3,1,5,4,4,1,4,4,3,5,4,4,3,5,5,4,3,4,4,3,1,2,3,1,2,2,0,3,2,0,3,1,0,5,3,3,3,4,3,3,3,3,4,4,4,4,5,4,2,0,3,3,2,4,3],[0,2,0,3,0,1,0,1,0,0,3,2,0,0,2,0,1,0,2,1,3,3,3,1,2,3,1,0,1,0,4,2,1,1,3,3,0,4,3,3,1,4,3,3,0,3,3,2,0,0,0,0,1,0,0,2,0,0,0,0,0,4,1,0,2,3,2,2,2,1,3,3,3,4,4,3,2,0,3,1,0,3,3],[0,4,0,4,0,3,0,3,0,4,4,4,3,3,3,3,3,3,4,3,4,2,4,3,4,3,3,2,4,3,4,5,4,1,4,5,3,5,4,5,3,5,4,0,3,5,5,3,1,3,3,2,2,3,0,3,4,1,3,3,2,4,3,3,3,4,0,4,0,3,0,4,5,4,4,5,3,0,4,1,0,3,4],[0,2,0,3,0,3,0,0,0,2,2,2,1,0,1,0,0,0,3,0,3,0,3,0,1,3,1,0,3,1,3,3,3,1,3,3,3,0,1,3,1,3,4,0,0,3,1,1,0,3,2,0,0,0,0,1,3,0,1,0,0,3,3,2,0,3,0,0,0,0,0,3,4,3,4,3,3,0,3,0,0,2,3],[2,3,0,3,0,2,0,1,0,3,3,4,3,1,3,1,1,1,3,1,4,3,4,3,3,3,0,0,3,1,5,4,3,1,4,3,2,5,5,4,4,4,4,3,3,4,4,4,0,2,1,1,3,2,0,1,2,0,0,1,0,4,1,3,3,3,0,3,0,1,0,4,4,4,5,5,3,0,2,0,0,4,4],[0,2,0,1,0,3,1,3,0,2,3,3,3,0,3,1,0,0,3,0,3,2,3,1,3,2,1,1,0,0,4,2,1,0,2,3,1,4,3,2,0,4,4,3,1,3,1,3,0,1,0,0,1,0,0,0,1,0,0,0,0,4,1,1,1,2,0,3,0,0,0,3,4,2,4,3,2,0,1,0,0,3,3],[0,1,0,4,0,5,0,4,0,2,4,4,2,3,3,2,3,3,5,3,3,3,4,3,4,2,3,0,4,3,3,3,4,1,4,3,2,1,5,5,3,4,5,1,3,5,4,2,0,3,3,0,1,3,0,4,2,0,1,3,1,4,3,3,3,3,0,3,0,1,0,3,4,4,4,5,5,0,3,0,1,4,5],[0,2,0,3,0,3,0,0,0,2,3,1,3,0,4,0,1,1,3,0,3,4,3,2,3,1,0,3,3,2,3,1,3,0,2,3,0,2,1,4,1,2,2,0,0,3,3,0,0,2,0,0,0,1,0,0,0,0,2,2,0,3,2,1,3,3,0,2,0,2,0,0,3,3,1,2,4,0,3,0,2,2,3],[2,4,0,5,0,4,0,4,0,2,4,4,4,3,4,3,3,3,1,2,4,3,4,3,4,4,5,0,3,3,3,3,2,0,4,3,1,4,3,4,1,4,4,3,3,4,4,3,1,2,3,0,4,2,0,4,1,0,3,3,0,4,3,3,3,4,0,4,0,2,0,3,5,3,4,5,2,0,3,0,0,4,5],[0,3,0,4,0,1,0,1,0,1,3,2,2,1,3,0,3,0,2,0,2,0,3,0,2,0,0,0,1,0,1,1,0,0,3,1,0,0,0,4,0,3,1,0,2,1,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,4,2,2,3,1,0,3,0,0,0,1,4,4,4,3,0,0,4,0,0,1,4],[1,4,1,5,0,3,0,3,0,4,5,4,4,3,5,3,3,4,4,3,4,1,3,3,3,3,2,1,4,1,5,4,3,1,4,4,3,5,4,4,3,5,4,3,3,4,4,4,0,3,3,1,2,3,0,3,1,0,3,3,0,5,4,4,4,4,4,4,3,3,5,4,4,3,3,5,4,0,3,2,0,4,4],[0,2,0,3,0,1,0,0,0,1,3,3,3,2,4,1,3,0,3,1,3,0,2,2,1,1,0,0,2,0,4,3,1,0,4,3,0,4,4,4,1,4,3,1,1,3,3,1,0,2,0,0,1,3,0,0,0,0,2,0,0,4,3,2,4,3,5,4,3,3,3,4,3,3,4,3,3,0,2,1,0,3,3],[0,2,0,4,0,3,0,2,0,2,5,5,3,4,4,4,4,1,4,3,3,0,4,3,4,3,1,3,3,2,4,3,0,3,4,3,0,3,4,4,2,4,4,0,4,5,3,3,2,2,1,1,1,2,0,1,5,0,3,3,2,4,3,3,3,4,0,3,0,2,0,4,4,3,5,5,0,0,3,0,2,3,3],[0,3,0,4,0,3,0,1,0,3,4,3,3,1,3,3,3,0,3,1,3,0,4,3,3,1,1,0,3,0,3,3,0,0,4,4,0,1,5,4,3,3,5,0,3,3,4,3,0,2,0,1,1,1,0,1,3,0,1,2,1,3,3,2,3,3,0,3,0,1,0,1,3,3,4,4,1,0,1,2,2,1,3],[0,1,0,4,0,4,0,3,0,1,3,3,3,2,3,1,1,0,3,0,3,3,4,3,2,4,2,0,1,0,4,3,2,0,4,3,0,5,3,3,2,4,4,4,3,3,3,4,0,1,3,0,0,1,0,0,1,0,0,0,0,4,2,3,3,3,0,3,0,0,0,4,4,4,5,3,2,0,3,3,0,3,5],[0,2,0,3,0,0,0,3,0,1,3,0,2,0,0,0,1,0,3,1,1,3,3,0,0,3,0,0,3,0,2,3,1,0,3,1,0,3,3,2,0,4,2,2,0,2,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,1,0,1,0,0,0,1,3,1,2,0,0,0,1,0,0,1,4],[0,3,0,3,0,5,0,1,0,2,4,3,1,3,3,2,1,1,5,2,1,0,5,1,2,0,0,0,3,3,2,2,3,2,4,3,0,0,3,3,1,3,3,0,2,5,3,4,0,3,3,0,1,2,0,2,2,0,3,2,0,2,2,3,3,3,0,2,0,1,0,3,4,4,2,5,4,0,3,0,0,3,5],[0,3,0,3,0,3,0,1,0,3,3,3,3,0,3,0,2,0,2,1,1,0,2,0,1,0,0,0,2,1,0,0,1,0,3,2,0,0,3,3,1,2,3,1,0,3,3,0,0,1,0,0,0,0,0,2,0,0,0,0,0,2,3,1,2,3,0,3,0,1,0,3,2,1,0,4,3,0,1,1,0,3,3],[0,4,0,5,0,3,0,3,0,4,5,5,4,3,5,3,4,3,5,3,3,2,5,3,4,4,4,3,4,3,4,5,5,3,4,4,3,4,4,5,4,4,4,3,4,5,5,4,2,3,4,2,3,4,0,3,3,1,4,3,2,4,3,3,5,5,0,3,0,3,0,5,5,5,5,4,4,0,4,0,1,4,4],[0,4,0,4,0,3,0,3,0,3,5,4,4,2,3,2,5,1,3,2,5,1,4,2,3,2,3,3,4,3,3,3,3,2,5,4,1,3,3,5,3,4,4,0,4,4,3,1,1,3,1,0,2,3,0,2,3,0,3,0,0,4,3,1,3,4,0,3,0,2,0,4,4,4,3,4,5,0,4,0,0,3,4],[0,3,0,3,0,3,1,2,0,3,4,4,3,3,3,0,2,2,4,3,3,1,3,3,3,1,1,0,3,1,4,3,2,3,4,4,2,4,4,4,3,4,4,3,2,4,4,3,1,3,3,1,3,3,0,4,1,0,2,2,1,4,3,2,3,3,5,4,3,3,5,4,4,3,3,0,4,0,3,2,2,4,4],[0,2,0,1,0,0,0,0,0,1,2,1,3,0,0,0,0,0,2,0,1,2,1,0,0,1,0,0,0,0,3,0,0,1,0,1,1,3,1,0,0,0,1,1,0,1,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,2,2,0,3,4,0,0,0,1,1,0,0,1,0,0,0,0,0,1,1],[0,1,0,0,0,1,0,0,0,0,4,0,4,1,4,0,3,0,4,0,3,0,4,0,3,0,3,0,4,1,5,1,4,0,0,3,0,5,0,5,2,0,1,0,0,0,2,1,4,0,1,3,0,0,3,0,0,3,1,1,4,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[1,4,0,5,0,3,0,2,0,3,5,4,4,3,4,3,5,3,4,3,3,0,4,3,3,3,3,3,3,2,4,4,3,1,3,4,4,5,4,4,3,4,4,1,3,5,4,3,3,3,1,2,2,3,3,1,3,1,3,3,3,5,3,3,4,5,0,3,0,3,0,3,4,3,4,4,3,0,3,0,2,4,3],[0,1,0,4,0,0,0,0,0,1,4,0,4,1,4,2,4,0,3,0,1,0,1,0,0,0,0,0,2,0,3,1,1,1,0,3,0,0,0,1,2,1,0,0,1,1,1,1,0,1,0,0,0,1,0,0,3,0,0,0,0,3,2,0,2,2,0,1,0,0,0,2,3,2,3,3,0,0,0,0,2,1,0],[0,5,1,5,0,3,0,3,0,5,4,4,5,1,5,3,3,0,4,3,4,3,5,3,4,3,3,2,4,3,4,3,3,0,3,3,1,4,4,3,4,4,4,3,4,5,5,3,2,3,1,1,3,3,1,3,1,1,3,3,2,4,5,3,3,5,0,4,0,3,0,4,4,3,5,3,3,0,3,4,0,4,3],[0,5,0,5,0,3,0,2,0,4,4,3,5,2,4,3,3,3,4,4,4,3,5,3,5,3,3,1,4,0,4,3,3,0,3,3,0,4,4,4,4,5,4,3,3,5,5,3,2,3,1,2,3,2,0,1,0,0,3,2,2,4,4,3,1,5,0,4,0,3,0,4,3,1,3,2,1,0,3,3,0,3,3],[0,4,0,5,0,5,0,4,0,4,5,5,5,3,4,3,3,2,5,4,4,3,5,3,5,3,4,0,4,3,4,4,3,2,4,4,3,4,5,4,4,5,5,0,3,5,5,4,1,3,3,2,3,3,1,3,1,0,4,3,1,4,4,3,4,5,0,4,0,2,0,4,3,4,4,3,3,0,4,0,0,5,5],[0,4,0,4,0,5,0,1,1,3,3,4,4,3,4,1,3,0,5,1,3,0,3,1,3,1,1,0,3,0,3,3,4,0,4,3,0,4,4,4,3,4,4,0,3,5,4,1,0,3,0,0,2,3,0,3,1,0,3,1,0,3,2,1,3,5,0,3,0,1,0,3,2,3,3,4,4,0,2,2,0,4,4],[2,4,0,5,0,4,0,3,0,4,5,5,4,3,5,3,5,3,5,3,5,2,5,3,4,3,3,4,3,4,5,3,2,1,5,4,3,2,3,4,5,3,4,1,2,5,4,3,0,3,3,0,3,2,0,2,3,0,4,1,0,3,4,3,3,5,0,3,0,1,0,4,5,5,5,4,3,0,4,2,0,3,5],[0,5,0,4,0,4,0,2,0,5,4,3,4,3,4,3,3,3,4,3,4,2,5,3,5,3,4,1,4,3,4,4,4,0,3,5,0,4,4,4,4,5,3,1,3,4,5,3,3,3,3,3,3,3,0,2,2,0,3,3,2,4,3,3,3,5,3,4,1,3,3,5,3,2,0,0,0,0,4,3,1,3,3],[0,1,0,3,0,3,0,1,0,1,3,3,3,2,3,3,3,0,3,0,0,0,3,1,3,0,0,0,2,2,2,3,0,0,3,2,0,1,2,4,1,3,3,0,0,3,3,3,0,1,0,0,2,1,0,0,3,0,3,1,0,3,0,0,1,3,0,2,0,1,0,3,3,1,3,3,0,0,1,1,0,3,3],[0,2,0,3,0,2,1,4,0,2,2,3,1,1,3,1,1,0,2,0,3,1,2,3,1,3,0,0,1,0,4,3,2,3,3,3,1,4,2,3,3,3,3,1,0,3,1,4,0,1,1,0,1,2,0,1,1,0,1,1,0,3,1,3,2,2,0,1,0,0,0,2,3,3,3,1,0,0,0,0,0,2,3],[0,5,0,4,0,5,0,2,0,4,5,5,3,3,4,3,3,1,5,4,4,2,4,4,4,3,4,2,4,3,5,5,4,3,3,4,3,3,5,5,4,5,5,1,3,4,5,3,1,4,3,1,3,3,0,3,3,1,4,3,1,4,5,3,3,5,0,4,0,3,0,5,3,3,1,4,3,0,4,0,1,5,3],[0,5,0,5,0,4,0,2,0,4,4,3,4,3,3,3,3,3,5,4,4,4,4,4,4,5,3,3,5,2,4,4,4,3,4,4,3,3,4,4,5,5,3,3,4,3,4,3,3,4,3,3,3,3,1,2,2,1,4,3,3,5,4,4,3,4,0,4,0,3,0,4,4,4,4,4,1,0,4,2,0,2,4],[0,4,0,4,0,3,0,1,0,3,5,2,3,0,3,0,2,1,4,2,3,3,4,1,4,3,3,2,4,1,3,3,3,0,3,3,0,0,3,3,3,5,3,3,3,3,3,2,0,2,0,0,2,0,0,2,0,0,1,0,0,3,1,2,2,3,0,3,0,2,0,4,4,3,3,4,1,0,3,0,0,2,4],[0,0,0,4,0,0,0,0,0,0,1,0,1,0,2,0,0,0,0,0,1,0,2,0,1,0,0,0,0,0,3,1,3,0,3,2,0,0,0,1,0,3,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,0,2,0,0,0,0,0,0,2],[0,2,1,3,0,2,0,2,0,3,3,3,3,1,3,1,3,3,3,3,3,3,4,2,2,1,2,1,4,0,4,3,1,3,3,3,2,4,3,5,4,3,3,3,3,3,3,3,0,1,3,0,2,0,0,1,0,0,1,0,0,4,2,0,2,3,0,3,3,0,3,3,4,2,3,1,4,0,1,2,0,2,3],[0,3,0,3,0,1,0,3,0,2,3,3,3,0,3,1,2,0,3,3,2,3,3,2,3,2,3,1,3,0,4,3,2,0,3,3,1,4,3,3,2,3,4,3,1,3,3,1,1,0,1,1,0,1,0,1,0,1,0,0,0,4,1,1,0,3,0,3,1,0,2,3,3,3,3,3,1,0,0,2,0,3,3],[0,0,0,0,0,0,0,0,0,0,3,0,2,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,3,0,3,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,2,3,0,0,0,0,0,0,0,0,3],[0,2,0,3,1,3,0,3,0,2,3,3,3,1,3,1,3,1,3,1,3,3,3,1,3,0,2,3,1,1,4,3,3,2,3,3,1,2,2,4,1,3,3,0,1,4,2,3,0,1,3,0,3,0,0,1,3,0,2,0,0,3,3,2,1,3,0,3,0,2,0,3,4,4,4,3,1,0,3,0,0,3,3],[0,2,0,1,0,2,0,0,0,1,3,2,2,1,3,0,1,1,3,0,3,2,3,1,2,0,2,0,1,1,3,3,3,0,3,3,1,1,2,3,2,3,3,1,2,3,2,0,0,1,0,0,0,0,0,0,3,0,1,0,0,2,1,2,1,3,0,3,0,0,0,3,4,4,4,3,2,0,2,0,0,2,4],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3],[0,3,0,3,0,2,0,3,0,3,3,3,2,3,2,2,2,0,3,1,3,3,3,2,3,3,0,0,3,0,3,2,2,0,2,3,1,4,3,4,3,3,2,3,1,5,4,4,0,3,1,2,1,3,0,3,1,1,2,0,2,3,1,3,1,3,0,3,0,1,0,3,3,4,4,2,1,0,2,1,0,2,4],[0,1,0,3,0,1,0,2,0,1,4,2,5,1,4,0,2,0,2,1,3,1,4,0,2,1,0,0,2,1,4,1,1,0,3,3,0,5,1,3,2,3,3,1,0,3,2,3,0,1,0,0,0,0,0,0,1,0,0,0,0,4,0,1,0,3,0,2,0,1,0,3,3,3,4,3,3,0,0,0,0,2,3],[0,0,0,1,0,0,0,0,0,0,2,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,0,0,0,0,3],[0,1,0,3,0,4,0,3,0,2,4,3,1,0,3,2,2,1,3,1,2,2,3,1,1,1,2,1,3,0,1,2,0,1,3,2,1,3,0,5,5,1,0,0,1,3,2,1,0,3,0,0,1,0,0,0,0,0,3,4,0,1,1,1,3,2,0,2,0,1,0,2,3,3,1,2,3,0,1,0,1,0,4],[0,0,0,1,0,3,0,3,0,2,2,1,0,0,4,0,3,0,3,1,3,0,3,0,3,0,1,0,3,0,3,1,3,0,3,3,0,0,1,2,1,1,1,0,1,2,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,2,2,1,2,0,0,2,0,0,0,0,2,3,3,3,3,0,0,0,0,1,4],[0,0,0,3,0,3,0,0,0,0,3,1,1,0,3,0,1,0,2,0,1,0,0,0,0,0,0,0,1,0,3,0,2,0,2,3,0,0,2,2,3,1,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,2,3],[2,4,0,5,0,5,0,4,0,3,4,3,3,3,4,3,3,3,4,3,4,4,5,4,5,5,5,2,3,0,5,5,4,1,5,4,3,1,5,4,3,4,4,3,3,4,3,3,0,3,2,0,2,3,0,3,0,0,3,3,0,5,3,2,3,3,0,3,0,3,0,3,4,5,4,5,3,0,4,3,0,3,4],[0,3,0,3,0,3,0,3,0,3,3,4,3,2,3,2,3,0,4,3,3,3,3,3,3,3,3,0,3,2,4,3,3,1,3,4,3,4,4,4,3,4,4,3,2,4,4,1,0,2,0,0,1,1,0,2,0,0,3,1,0,5,3,2,1,3,0,3,0,1,2,4,3,2,4,3,3,0,3,2,0,4,4],[0,3,0,3,0,1,0,0,0,1,4,3,3,2,3,1,3,1,4,2,3,2,4,2,3,4,3,0,2,2,3,3,3,0,3,3,3,0,3,4,1,3,3,0,3,4,3,3,0,1,1,0,1,0,0,0,4,0,3,0,0,3,1,2,1,3,0,4,0,1,0,4,3,3,4,3,3,0,2,0,0,3,3],[0,3,0,4,0,1,0,3,0,3,4,3,3,0,3,3,3,1,3,1,3,3,4,3,3,3,0,0,3,1,5,3,3,1,3,3,2,5,4,3,3,4,5,3,2,5,3,4,0,1,0,0,0,0,0,2,0,0,1,1,0,4,2,2,1,3,0,3,0,2,0,4,4,3,5,3,2,0,1,1,0,3,4],[0,5,0,4,0,5,0,2,0,4,4,3,3,2,3,3,3,1,4,3,4,1,5,3,4,3,4,0,4,2,4,3,4,1,5,4,0,4,4,4,4,5,4,1,3,5,4,2,1,4,1,1,3,2,0,3,1,0,3,2,1,4,3,3,3,4,0,4,0,3,0,4,4,4,3,3,3,0,4,2,0,3,4],[1,4,0,4,0,3,0,1,0,3,3,3,1,1,3,3,2,2,3,3,1,0,3,2,2,1,2,0,3,1,2,1,2,0,3,2,0,2,2,3,3,4,3,0,3,3,1,2,0,1,1,3,1,2,0,0,3,0,1,1,0,3,2,2,3,3,0,3,0,0,0,2,3,3,4,3,3,0,1,0,0,1,4],[0,4,0,4,0,4,0,0,0,3,4,4,3,1,4,2,3,2,3,3,3,1,4,3,4,0,3,0,4,2,3,3,2,2,5,4,2,1,3,4,3,4,3,1,3,3,4,2,0,2,1,0,3,3,0,0,2,0,3,1,0,4,4,3,4,3,0,4,0,1,0,2,4,4,4,4,4,0,3,2,0,3,3],[0,0,0,1,0,4,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,3,2,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,2],[0,2,0,3,0,4,0,4,0,1,3,3,3,0,4,0,2,1,2,1,1,1,2,0,3,1,1,0,1,0,3,1,0,0,3,3,2,0,1,1,0,0,0,0,0,1,0,2,0,2,2,0,3,1,0,0,1,0,1,1,0,1,2,0,3,0,0,0,0,1,0,0,3,3,4,3,1,0,1,0,3,0,2],[0,0,0,3,0,5,0,0,0,0,1,0,2,0,3,1,0,1,3,0,0,0,2,0,0,0,1,0,0,0,1,1,0,0,4,0,0,0,2,3,0,1,4,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,3,0,0,0,0,0,3],[0,2,0,5,0,5,0,1,0,2,4,3,3,2,5,1,3,2,3,3,3,0,4,1,2,0,3,0,4,0,2,2,1,1,5,3,0,0,1,4,2,3,2,0,3,3,3,2,0,2,4,1,1,2,0,1,1,0,3,1,0,1,3,1,2,3,0,2,0,0,0,1,3,5,4,4,4,0,3,0,0,1,3],[0,4,0,5,0,4,0,4,0,4,5,4,3,3,4,3,3,3,4,3,4,4,5,3,4,5,4,2,4,2,3,4,3,1,4,4,1,3,5,4,4,5,5,4,4,5,5,5,2,3,3,1,4,3,1,3,3,0,3,3,1,4,3,4,4,4,0,3,0,4,0,3,3,4,4,5,0,0,4,3,0,4,5],[0,4,0,4,0,3,0,3,0,3,4,4,4,3,3,2,4,3,4,3,4,3,5,3,4,3,2,1,4,2,4,4,3,1,3,4,2,4,5,5,3,4,5,4,1,5,4,3,0,3,2,2,3,2,1,3,1,0,3,3,3,5,3,3,3,5,4,4,2,3,3,4,3,3,3,2,1,0,3,2,1,4,3],[0,4,0,5,0,4,0,3,0,3,5,5,3,2,4,3,4,0,5,4,4,1,4,4,4,3,3,3,4,3,5,5,2,3,3,4,1,2,5,5,3,5,5,2,3,5,5,4,0,3,2,0,3,3,1,1,5,1,4,1,0,4,3,2,3,5,0,4,0,3,0,5,4,3,4,3,0,0,4,1,0,4,4],[1,3,0,4,0,2,0,2,0,2,5,5,3,3,3,3,3,0,4,2,3,4,4,4,3,4,0,0,3,4,5,4,3,3,3,3,2,5,5,4,5,5,5,4,3,5,5,5,1,3,1,0,1,0,0,3,2,0,4,2,0,5,2,3,2,4,1,3,0,3,0,4,5,4,5,4,3,0,4,2,0,5,4],[0,3,0,4,0,5,0,3,0,3,4,4,3,2,3,2,3,3,3,3,3,2,4,3,3,2,2,0,3,3,3,3,3,1,3,3,3,0,4,4,3,4,4,1,1,4,4,2,0,3,1,0,1,1,0,4,1,0,2,3,1,3,3,1,3,4,0,3,0,1,0,3,1,3,0,0,1,0,2,0,0,4,4],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,3,0,3,0,2,0,3,0,1,5,4,3,3,3,1,4,2,1,2,3,4,4,2,4,4,5,0,3,1,4,3,4,0,4,3,3,3,2,3,2,5,3,4,3,2,2,3,0,0,3,0,2,1,0,1,2,0,0,0,0,2,1,1,3,1,0,2,0,4,0,3,4,4,4,5,2,0,2,0,0,1,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,0,0,1,1,0,0,0,4,2,1,1,0,1,0,3,2,0,0,3,1,1,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,2,0,0,0,1,4,0,4,2,1,0,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,0,3,1,0,0,0,2,0,2,1,0,0,1,2,1,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,1,0,0,2,1,0,0,0,0,0,0,0,0,2],[0,4,0,4,0,4,0,3,0,4,4,3,4,2,4,3,2,0,4,4,4,3,5,3,5,3,3,2,4,2,4,3,4,3,1,4,0,2,3,4,4,4,3,3,3,4,4,4,3,4,1,3,4,3,2,1,2,1,3,3,3,4,4,3,3,5,0,4,0,3,0,4,3,3,3,2,1,0,3,0,0,3,3],[0,4,0,3,0,3,0,3,0,3,5,5,3,3,3,3,4,3,4,3,3,3,4,4,4,3,3,3,3,4,3,5,3,3,1,3,2,4,5,5,5,5,4,3,4,5,5,3,2,2,3,3,3,3,2,3,3,1,2,3,2,4,3,3,3,4,0,4,0,2,0,4,3,2,2,1,2,0,3,0,0,4,1]];function Pg(){var r=6,t=-1,e=100,n=1e3,o=4,s=this;function i(){s.reset()}this.reset=function(){this._mTotalRel=0,this._mRelSample=[];for(var a=0;a<r;this._mRelSample[a++]=0);this._mNeedToSkipCharNum=0,this._mLastCharOrder=-1,this._mDone=!1},this.feed=function(a,l){if(!this._mDone)for(var u=this._mNeedToSkipCharNum;u<l;){var c=this.getOrder(a.slice(u,u+2)),p=c[0],m=c[1];if(u+=m,u>l)this._mNeedToSkipCharNum=u-l,this._mLastCharOrder=-1;else{if(p!=-1&&this._mLastCharOrder!=-1){if(this._mTotalRel+=1,this._mTotalRel>n){this._mDone=!0;break}this._mRelSample[Zu.jp2CharContext[this._mLastCharOrder][p]]+=1}this._mLastCharOrder=p}}},this.gotEnoughData=function(){return this._mTotalRel>e},this.getConfidence=function(){return this._mTotalRel>o?(this._mTotalRel-this._mRelSample[0])/this._mTotalRel:t},this.getOrder=function(a){return[-1,1]},i()}function Lg(){this.getOrder=function(r){if(!r)return[-1,1];if(r.charCodeAt(0)>=129&&r.charCodeAt(0)<=159||r.charCodeAt(0)>=224&&r.charCodeAt(0)<=252)var t=2;else t=1;return r.length>1&&r.charCodeAt(0)==130&&r.charCodeAt(1)>=159&&r.charCodeAt(0)<=241?[r.charCodeAt(1)-159,t]:[-1,t]}}Lg.prototype=new Pg;Zu.SJISContextAnalysis=Lg;function zg(){this.getOrder=function(r){if(!r)return[-1,1];if(r.charCodeAt(0)>=142||r.charCodeAt(0)>=161&&r.charCodeAt(0)<=254)var t=2;else r.charCodeAt(0)==143?t=3:t=1;return r.length>1&&r.charCodeAt(0)==164&&r.charCodeAt(1)>=161&&r.charCodeAt(1)<=243?[r.charCodeAt(1)-161,t]:[-1,t]}}zg.prototype=new Pg;Zu.EUCJPContextAnalysis=zg});var Vg=ke((poe,Gg)=>{"use strict";var eM=Ns(),Bg=L0(),tM=Mg(),rM=z0().SJISDistributionAnalysis,nM=T4().SJISContextAnalysis,sa=dr(),oM=ta();function C4(){Bg.apply(this);var r=this;function t(){r._mCodingSM=new eM(tM),r._mDistributionAnalyzer=new rM,r._mContextAnalyzer=new nM,r.reset()}this.reset=function(){C4.prototype.reset.apply(this),this._mContextAnalyzer.reset()},this.getCharsetName=function(){return"SHIFT_JIS"},this.feed=function(e){for(var n=e.length,o=0;o<n;o++){var s=this._mCodingSM.nextState(e[o]);if(s==sa.error){oM.log(this.getCharsetName()+" prober hit error at byte "+o+`
`),this._mState=sa.notMe;break}else if(s==sa.itsMe){this._mState=sa.foundIt;break}else if(s==sa.start){var i=this._mCodingSM.getCurrentCharLen();o==0?(this._mLastChar[1]=e[0],this._mContextAnalyzer.feed(this._mLastChar.slice(2-i).join(""),i),this._mDistributionAnalyzer.feed(this._mLastChar.join(""),i)):(this._mContextAnalyzer.feed(e.slice(o+1-i,o+3-i),i),this._mDistributionAnalyzer.feed(e.slice(o-1,o+1),i))}}return this._mLastChar[0]=e[n-1],this.getState()==sa.detecting&&this._mContextAnalyzer.gotEnoughData()&&this.getConfidence()>sa.SHORTCUT_THRESHOLD&&(this._mState=sa.foundIt),this.getState()},this.getConfidence=function(){var e=this._mContextAnalyzer.getConfidence(),n=this._mDistributionAnalyzer.getConfidence();return Math.max(e,n)},t()}C4.prototype=new Bg;Gg.exports=C4});var Wg=ke((moe,Ug)=>{"use strict";var st=dr(),sM=[4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,4,4,4,4,4,4,4,4,4,4,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,1,3,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5],iM=[3,4,3,5,st.start,st.error,st.error,st.error,st.error,st.error,st.error,st.error,st.itsMe,st.itsMe,st.itsMe,st.itsMe,st.itsMe,st.itsMe,st.start,st.error,st.start,st.error,st.error,st.error,st.error,st.error,st.start,st.error,st.error,st.error,3,st.error,3,st.error,st.error,st.error,st.start,st.start,st.start,st.start],aM=[2,2,2,3,1,0];Ug.exports={classTable:sM,classFactor:6,stateTable:iM,charLenTable:aM,name:"EUC-JP"}});var Kg=ke((foe,Hg)=>{"use strict";var lM=Ns(),qg=L0(),cM=z0().EUCJPDistributionAnalysis,uM=T4().EUCJPContextAnalysis,pM=Wg(),ia=dr(),mM=ta();function S4(){qg.apply(this);var r=this;function t(){r._mCodingSM=new lM(pM),r._mDistributionAnalyzer=new cM,r._mContextAnalyzer=new uM,r.reset()}this.reset=function(){S4.prototype.reset.apply(this),this._mContextAnalyzer.reset()},this.getCharsetName=function(){return"EUC-JP"},this.feed=function(e){for(var n=e.length,o=0;o<n;o++){var s=this._mCodingSM.nextState(e[o]);if(s==ia.error){mM.log(this.getCharsetName()+" prober hit error at byte "+o+`
`),this._mState=ia.notMe;break}else if(s==ia.itsMe){this._mState=ia.foundIt;break}else if(s==ia.start){var i=this._mCodingSM.getCurrentCharLen();if(o==0){this._mLastChar[1]=e[0];var a=this._mLastChar.join("");this._mContextAnalyzer.feed(a,i),this._mDistributionAnalyzer.feed(a,i)}else this._mContextAnalyzer.feed(e.slice(o-1,o+1),i),this._mDistributionAnalyzer.feed(e.slice(o-1,o+1),i)}}return this._mLastChar[0]=e[n-1],this.getState()==ia.detecting&&this._mContextAnalyzer.gotEnoughData()&&this.getConfidence()>ia.SHORTCUT_THRESHOLD&&(this._mState=ia.foundIt),this.getState()},this.getConfidence=function(){var e=this._mContextAnalyzer.getConfidence(),n=this._mDistributionAnalyzer.getConfidence();return Math.max(e,n)},t()}S4.prototype=new qg;Hg.exports=S4});var Xg=ke((doe,jg)=>{"use strict";var Be=dr(),fM=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0],dM=[Be.error,Be.start,Be.start,Be.start,Be.start,Be.start,3,Be.error,Be.error,Be.error,Be.error,Be.error,Be.error,Be.error,Be.itsMe,Be.itsMe,Be.itsMe,Be.itsMe,Be.itsMe,Be.itsMe,Be.itsMe,Be.error,Be.error,Be.start,4,Be.error,Be.start,Be.start,Be.error,Be.error,Be.error,Be.error,Be.error,Be.error,5,Be.error,Be.error,Be.error,Be.itsMe,Be.error,Be.error,Be.error,Be.start,Be.start,Be.start,Be.start,Be.start,Be.start],hM=[0,1,1,1,1,1,2];jg.exports={classTable:fM,classFactor:7,stateTable:dM,charLenTable:hM,name:"GB2312"}});var Qg=ke((hoe,Jg)=>{"use strict";var Yg=L0(),gM=Ns(),xM=Xg(),yM=z0().GB2312DistributionAnalysis;function Zg(){Yg.apply(this);var r=this;function t(){r._mCodingSM=new gM(xM),r._mDistributionAnalyzer=new yM,r.reset()}this.getCharsetName=function(){return"GB2312"},t()}Zg.prototype=new Yg;Jg.exports=Zg});var t9=ke((goe,e9)=>{"use strict";var pn=dr(),bM=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0],vM=[pn.error,pn.start,3,pn.error,pn.error,pn.error,pn.error,pn.error,pn.itsMe,pn.itsMe,pn.itsMe,pn.itsMe,pn.error,pn.error,pn.start,pn.start],wM=[0,1,2,0];e9.exports={classTable:bM,classFactor:4,stateTable:vM,charLenTable:wM,name:"EUC-KR"}});var s9=ke((xoe,o9)=>{"use strict";var TM=Ns(),r9=L0(),CM=z0().EUCKRDistributionAnalysis,SM=t9();function n9(){r9.apply(this);var r=this;function t(){r._mCodingSM=new TM(SM),r._mDistributionAnalyzer=new CM,r.reset()}this.getCharsetName=function(){return"EUC-KR"},t()}n9.prototype=new r9;o9.exports=n9});var a9=ke((yoe,i9)=>{"use strict";var He=dr(),IM=[2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,4,4,4,4,4,5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0],NM=[He.error,He.error,He.start,3,3,3,4,He.error,He.error,He.error,He.error,He.error,He.error,He.error,He.itsMe,He.itsMe,He.itsMe,He.itsMe,He.itsMe,He.itsMe,He.itsMe,He.error,He.start,He.error,He.start,He.start,He.start,He.error,He.error,He.error,He.error,He.error,5,He.error,He.error,He.error,He.start,He.error,He.start,He.start,He.start,He.error,He.start,He.start,He.start,He.start,He.start,He.start],kM=[0,0,1,2,2,2,3];i9.exports={classTable:IM,classFactor:7,stateTable:NM,charLenTable:kM,name:"x-euc-tw"}});var p9=ke((boe,u9)=>{"use strict";var AM=Ns(),l9=L0(),EM=z0().EUCTWDistributionAnalysis,_M=a9();function c9(){l9.apply(this);var r=this;function t(){r._mCodingSM=new AM(_M),r._mDistributionAnalyzer=new EM,r.reset()}this.getCharsetName=function(){return"EUC-TW"},t()}c9.prototype=new l9;u9.exports=c9});var h9=ke((voe,d9)=>{"use strict";var m9=h4(),DM=Eg(),RM=Fg(),$M=Vg(),FM=Kg(),OM=Qg(),MM=s9(),PM=p9();function f9(){m9.apply(this),this._mProbers=[new RM,new $M,new FM,new OM,new MM,new DM,new PM];let r=this._mProbers.map(t=>t.getCharsetName());this.getSupportedCharsetNames=function(){return r},this.reset()}f9.prototype=new m9;d9.exports=f9});var v9=ke((woe,b9)=>{"use strict";var y9=ea(),g9=dr(),x9=ta();function I4(r,t,e){y9.apply(this);var n=64,o=1024,s=.95,i=.05,a=250,l=4,u=l-1,c=this;function p(m,f,d){c._mModel=m,c._mReversed=f,c._mNameProber=d,c.reset()}this.reset=function(){I4.prototype.reset.apply(this),this._mLastOrder=255,this._mSeqCounters=[];for(var m=0;m<l;this._mSeqCounters[m++]=0);this._mTotalSeqs=0,this._mTotalChar=0,this._mFreqChar=0},this.getCharsetName=function(){return this._mNameProber?this._mNameProber.getCharsetName():this._mModel.charsetName},this.feed=function(m){this._mModel.keepEnglishLetter||(m=this.filterWithoutEnglishLetters(m));var f=m.length;if(!f)return this.getState();for(var d=0,g;d<f;d++){g=m.charCodeAt(d);var h=this._mModel.charToOrderMap[g];h<a&&this._mTotalChar++,h<n&&(this._mFreqChar++,this._mLastOrder<n&&(this._mTotalSeqs++,this._mReversed?this._mSeqCounters[this._mModel.precedenceMatrix[h*n+this._mLastOrder]]++:this._mSeqCounters[this._mModel.precedenceMatrix[this._mLastOrder*n+h]]++)),this._mLastOrder=h}if(this.getState()==g9.detecting&&c._mTotalSeqs>o){var x=this.getConfidence();x>s?x9.log(this._mModel.charsetName+" confidence = "+x+`, we have a winner
`):x<i&&(x9.log(this._mModel.charsetName+" confidence = "+x+", below negative shortcut threshhold "+i+`
`),this._mState=g9.notMe)}return this.getState()},this.getConfidence=function(){var m=.01;return this._mTotalSeqs>0&&(m=1*this._mSeqCounters[u]/this._mTotalSeqs/this._mModel.mTypicalPositiveRatio,m*=this._mFreqChar/this._mTotalChar,m>=1&&(m=.99)),m},t=t!==void 0?t:!1,e=e!==void 0?e:null,p(r,t,e)}I4.prototype=new y9;b9.exports=I4});var w9=ke(s1=>{"use strict";s1.win1255_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,69,91,79,80,92,89,97,90,68,111,112,82,73,95,85,78,121,86,71,67,102,107,84,114,103,115,253,253,253,253,253,253,50,74,60,61,42,76,70,64,53,105,93,56,65,54,49,66,110,51,43,44,63,81,77,98,75,108,253,253,253,253,253,124,202,203,204,205,40,58,206,207,208,209,210,211,212,213,214,215,83,52,47,46,72,32,94,216,113,217,109,218,219,220,221,34,116,222,118,100,223,224,117,119,104,125,225,226,87,99,227,106,122,123,228,55,229,230,101,231,232,120,233,48,39,57,234,30,59,41,88,33,37,36,31,29,35,235,62,28,236,126,237,238,38,45,239,240,241,242,243,127,244,245,246,247,248,249,250,9,8,20,16,3,2,24,14,22,1,25,15,4,11,6,23,12,19,13,26,18,27,21,17,7,10,5,251,252,128,96,253];s1.HebrewLangModel=[0,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,3,2,1,2,0,1,0,0,3,0,3,1,0,0,1,3,2,0,1,1,2,0,2,2,2,1,1,1,1,2,1,1,1,2,0,0,2,2,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,1,2,1,2,1,2,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,1,2,1,3,1,1,0,0,2,0,0,0,1,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,1,2,2,1,3,1,2,1,1,2,2,0,0,2,2,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,2,2,2,3,2,1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,2,3,2,2,3,2,2,2,1,2,2,2,2,1,2,1,1,2,2,0,1,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,0,2,2,2,2,2,0,2,0,2,2,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,0,2,2,2,0,2,1,2,2,2,0,0,2,1,0,0,0,0,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,2,3,2,2,2,1,2,1,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,0,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,2,0,2,0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,2,3,2,1,2,1,1,1,0,1,1,1,1,1,3,0,1,0,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,2,3,3,3,2,1,2,3,3,2,3,3,3,3,2,3,2,1,2,0,2,1,2,0,2,0,2,2,2,0,0,1,2,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,3,3,3,3,3,3,3,3,3,2,3,3,3,1,2,2,3,3,2,3,2,3,2,2,3,1,2,2,0,2,2,2,0,2,1,2,2,2,0,0,1,2,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,1,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,2,2,3,3,3,3,1,3,2,2,2,0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,2,3,2,2,2,1,2,2,0,2,2,2,2,0,2,0,2,2,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,1,3,2,3,3,2,3,3,2,2,1,2,2,2,2,2,2,0,2,1,2,1,2,0,0,1,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,2,3,3,2,3,3,3,3,2,3,2,3,3,3,3,3,2,2,2,2,2,2,2,1,0,2,0,1,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,2,1,2,3,3,3,3,3,3,3,2,3,2,3,2,1,2,3,0,2,1,2,2,0,2,1,1,2,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,3,3,3,3,3,3,3,3,3,2,3,3,3,3,2,1,3,1,2,2,2,1,2,3,3,1,2,1,2,2,2,2,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,0,2,3,3,3,1,3,3,3,1,2,2,2,2,1,1,2,2,2,2,2,2,0,2,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,3,3,2,2,3,3,3,2,1,2,3,2,3,2,2,2,2,1,2,1,1,1,2,2,0,2,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,2,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,3,2,3,1,2,2,2,2,3,2,3,1,1,2,2,1,2,2,1,1,0,2,2,2,2,0,1,0,1,2,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,3,0,0,1,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,1,0,1,1,0,1,1,0,0,0,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,2,2,1,2,2,2,2,2,2,2,1,2,2,1,2,2,1,1,1,1,1,1,1,1,2,1,1,0,3,3,3,0,3,0,2,2,2,2,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,1,2,2,2,1,1,1,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1,0,2,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,2,2,2,1,2,2,2,1,1,2,2,2,2,2,2,2,1,2,2,1,0,1,1,1,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,1,1,1,1,2,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,0,1,0,0,2,1,1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,1,2,1,2,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,2,2,2,2,2,2,2,2,2,1,2,1,2,1,1,2,1,1,1,2,1,2,1,2,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,2,1,2,1,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,2,0,1,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,0,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,1,1,0,1,0,0,0,1,1,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,1,2,1,2,2,2,0,2,0,2,0,1,1,2,1,1,1,1,2,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,1,0,1,2,2,0,1,0,0,1,1,2,2,1,2,0,2,0,0,0,1,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,1,2,0,2,0,0,1,1,1,1,1,1,0,1,0,0,0,1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,1,2,2,0,0,1,0,0,0,1,0,0,1,1,1,2,1,0,1,1,1,0,1,0,1,1,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,2,1,0,2,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,1,0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,0,0,1,1,0,1,2,0,1,0,1,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,0,1,0,0,1,1,2,1,1,2,0,1,0,0,0,1,1,0,1,1,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,0,0,2,1,1,2,0,2,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,2,2,1,2,1,1,0,1,0,0,0,1,1,0,1,2,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,0,0,0,0,2,1,1,1,0,2,1,1,0,0,0,2,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,0,2,1,1,0,1,0,0,0,1,1,0,1,2,2,1,1,1,0,1,1,0,1,1,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,1,0,1,0,0,1,1,0,1,2,1,0,2,0,0,0,1,1,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,2,0,2,1,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,2,0,1,0,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,0,2,1,1,1,1,1,0,1,0,0,0,0,1,0,1,0,1,1,1,2,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,0,0,1,1,1,1,1,0,1,0,0,0,1,1,0,0];s1.Win1255HebrewModel={charToOrderMap:s1.win1255_CharToOrderMap,precedenceMatrix:s1.HebrewLangModel,mTypicalPositiveRatio:.984004,keepEnglishLetter:!1,charsetName:"windows-1255"}});var I9=ke((Coe,S9)=>{"use strict";var T9=ea(),B0=dr();Array.prototype.indexOf||(Array.prototype.indexOf=function(r){var t=this.length>>>0,e=Number(arguments[1])||0;for(e=e<0?Math.ceil(e):Math.floor(e),e<0&&(e+=t);e<t;e++)if(e in this&&this[e]===r)return e;return-1});function C9(){T9.apply(this);var r="\xEA",t="\xEB",e="\xED",n="\xEE",o="\xEF",s="\xF0",i="\xF3",a="\xF4",l="\xF5",u="\xF6",c=5,p=.01,m="ISO-8859-8",f="windows-1255",d=this;function g(){d._mLogicalProber=null,d._mVisualProber=null,d.reset()}this.reset=function(){this._mFinalCharLogicalScore=0,this._mFinalCharVisualScore=0,this._mPrev=" ",this._mBeforePrev=" "},this.setModelProbers=function(h,x){this._mLogicalProber=h,this._mVisualProber=x},this.isFinal=function(h){return[r,e,o,i,l].indexOf(h)!=-1},this.isNonFinal=function(h){return[t,n,s,a].indexOf(h)!=-1},this.feed=function(h){if(this.getState()==B0.notMe)return B0.notMe;h=this.filterHighBitOnly(h);for(var x=0,y;x<h.length;x++)y=h[x],y==" "?this._mBeforePrev!=" "&&(this.isFinal(this._mPrev)?this._mFinalCharLogicalScore++:this.isNonFinal(this._mPrev)&&this._mFinalCharVisualScore++):this._mBeforePrev==" "&&this.isFinal(this._mPrev)&&y!=" "&&this._mFinalCharVisualScore++,this._mBeforePrev=this._mPrev,this._mPrev=y;return B0.detecting},this.getCharsetName=function(){var h=this._mFinalCharLogicalScore-this._mFinalCharVisualScore;if(h>=c)return f;if(h<=-c)return m;var x=this._mLogicalProber.getConfidence()-this._mVisualProber.getConfidence();return x>p?f:x<-p||h<0?m:f},this.getState=function(){return this._mLogicalProber.getState()==B0.notMe&&this._mVisualProber.getState()==B0.notMe?B0.notMe:B0.detecting},g()}C9.prototype=new T9;S9.exports=C9});var N9=ke(Mt=>{"use strict";Mt.KOI8R_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,68,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,27,3,21,28,13,2,39,19,26,4,23,11,8,12,5,1,15,16,9,7,6,14,24,10,17,18,20,25,30,29,22,54,59,37,44,58,41,48,53,46,55,42,60,36,49,38,31,34,35,43,45,32,40,52,56,33,61,62,51,57,47,63,50,70];Mt.win1251_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,68,247,248,249,250,251,252,253,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,16];Mt.latin5_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,16,239,68,240,241,242,243,244,245,246,247,248,249,250,251,252,255];Mt.macCyrillic_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,68,16,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,255];Mt.IBM855_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,191,192,193,194,68,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,27,59,54,70,3,37,21,44,28,58,13,41,2,48,39,53,19,46,218,219,220,221,222,223,224,26,55,4,42,225,226,227,228,23,60,229,230,231,232,233,234,235,11,36,236,237,238,239,240,241,242,243,8,49,12,38,5,31,1,34,15,244,245,246,247,35,16,248,43,9,45,7,32,6,40,14,52,24,56,10,33,17,61,249,250,18,62,20,51,25,57,30,47,29,63,22,50,251,252,255];Mt.IBM866_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,142,143,144,145,146,147,148,149,150,151,152,74,153,75,154,155,156,157,158,159,160,161,162,163,164,165,253,253,253,253,253,253,71,172,66,173,65,174,76,175,64,176,177,77,72,178,69,67,179,78,73,180,181,79,182,183,184,185,253,253,253,253,253,37,44,33,46,41,48,56,51,42,60,36,49,38,31,34,35,45,32,40,52,53,55,58,50,57,63,70,62,61,47,59,43,3,21,10,19,13,2,24,20,4,23,11,8,12,5,1,15,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,9,7,6,14,39,26,28,22,25,29,54,18,17,30,27,16,239,68,240,241,242,243,244,245,246,247,248,249,250,251,252,255];Mt.RussianLangModel=[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,3,3,3,3,1,3,3,3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,2,2,2,2,2,0,0,2,3,3,3,2,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,2,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,2,3,3,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,2,2,2,3,1,3,3,1,3,3,3,3,2,2,3,0,2,2,2,3,3,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,3,3,3,2,2,3,2,3,3,3,2,1,2,2,0,1,2,2,2,2,2,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,3,0,2,2,3,3,2,1,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,1,2,3,2,2,3,2,3,3,3,3,2,2,3,0,3,2,2,3,1,1,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,3,3,3,3,2,2,2,0,3,3,3,2,2,2,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,2,3,2,2,0,1,3,2,1,2,2,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,2,1,1,3,0,1,1,1,1,2,1,1,0,2,2,2,1,2,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,2,2,2,2,1,3,2,3,2,3,2,1,2,2,0,1,1,2,1,2,1,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,3,3,2,2,2,2,0,2,2,2,2,3,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,2,3,2,2,3,3,3,3,3,3,3,3,3,1,3,2,0,0,3,3,3,3,2,3,3,3,3,2,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,3,2,2,3,3,0,2,1,0,3,2,3,2,3,0,0,1,2,0,0,1,0,1,2,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,0,2,3,3,3,3,2,3,3,3,3,1,2,2,0,0,2,3,2,2,2,3,2,3,2,2,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,0,2,3,2,3,0,1,2,3,3,2,0,2,3,0,0,2,3,2,2,0,1,3,1,3,2,2,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,3,0,2,3,3,3,3,3,3,3,3,2,1,3,2,0,0,2,2,3,3,3,2,3,3,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,3,3,2,2,2,3,3,0,0,1,1,1,1,1,2,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,3,3,3,3,3,3,3,0,3,2,3,3,2,3,2,0,2,1,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,3,2,2,2,2,3,1,3,2,3,1,1,2,1,0,2,2,2,2,1,3,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,2,3,3,3,3,3,1,2,2,1,3,1,0,3,0,0,3,0,0,0,1,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,1,1,3,3,3,2,2,1,2,2,3,1,1,2,0,0,2,2,1,3,0,0,2,1,1,2,1,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,3,3,1,2,2,2,1,2,1,3,3,1,1,2,1,2,1,2,2,0,2,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,3,2,1,3,2,2,3,2,0,3,2,0,3,0,1,0,1,1,0,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,3,3,3,2,2,2,3,3,1,2,1,2,1,0,1,0,1,1,0,1,0,0,2,1,1,1,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,1,1,2,1,2,3,3,2,2,1,2,2,3,0,2,1,0,0,2,2,3,2,1,2,2,2,2,2,3,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1,1,0,1,1,2,2,1,1,3,0,0,1,3,1,1,1,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,3,3,2,0,0,0,2,1,0,1,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,2,3,2,2,2,1,2,2,2,1,2,1,0,0,1,1,1,0,2,0,1,1,1,0,0,1,1,1,0,0,0,0,0,1,2,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,0,0,0,0,1,0,0,0,0,3,0,1,2,1,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,2,0,0,1,1,2,1,0,1,1,1,1,0,1,1,1,1,0,1,0,0,1,0,0,1,1,0,2,2,3,2,2,2,3,1,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,0,1,0,1,1,1,0,2,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,0,1,1,0,3,3,3,2,2,2,2,3,2,2,1,1,2,2,2,2,1,1,3,1,2,1,2,0,0,1,1,0,1,0,2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,1,0,0,1,1,0,0,1,0,1,0,0,1,0,0,0,1,1,0,2,0,0,1,0,3,2,2,2,2,1,2,1,2,1,2,0,0,0,2,1,2,2,1,1,2,2,0,1,1,0,2,1,1,1,1,1,0,1,1,1,2,1,1,1,2,1,0,1,2,1,1,1,1,0,1,1,1,0,0,1,0,0,1,1,3,2,2,2,1,1,1,2,3,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,2,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,2,3,2,3,2,1,2,2,2,2,1,0,0,0,2,0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,2,1,1,1,2,1,0,2,0,0,1,0,1,0,0,1,0,0,1,1,0,1,1,0,0,0,0,0,1,0,0,0,0,0,3,0,0,1,0,2,2,2,3,2,2,2,2,2,2,2,0,0,0,2,1,2,1,1,1,2,2,0,0,0,1,2,1,1,1,1,1,0,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,2,3,2,3,3,2,0,1,1,1,0,0,1,0,2,0,1,1,3,1,0,0,0,0,0,0,0,1,0,0,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0,1,1,1,0,0,1,1,0,1,0,0,0,0,0,0,1,0,2,3,3,3,3,1,2,2,2,2,0,1,1,0,2,1,1,1,2,1,0,1,1,0,0,1,0,1,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,2,0,0,1,1,2,2,1,0,0,2,0,1,1,3,0,0,1,0,0,0,0,0,1,0,1,2,1,1,1,2,0,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1,1,0,1,3,2,3,2,1,0,0,2,2,2,0,1,0,2,0,1,1,1,0,1,0,0,0,3,0,1,1,0,0,2,1,1,1,1,0,1,1,0,0,0,0,1,1,0,1,0,0,2,1,1,0,1,0,0,0,1,0,1,0,0,1,1,0,3,1,2,1,1,2,2,2,2,2,2,1,2,2,1,1,0,0,0,2,2,2,0,0,0,1,2,1,0,1,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,1,1,1,0,1,0,1,1,0,1,1,1,0,0,1,3,0,0,0,0,2,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,1,0,0,1,0,1,1,1,0,0,1,0,0,0,1,0,1,1,0,0,1,0,1,0,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,3,3,2,2,0,0,0,2,2,0,0,0,1,2,0,1,1,2,0,0,0,0,0,0,0,0,1,0,0,2,1,0,1,1,0,0,1,1,0,0,0,1,1,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,2,3,2,3,2,0,0,0,0,1,1,0,0,0,2,0,2,0,2,0,0,0,0,0,1,0,0,1,0,0,1,1,1,1,2,0,1,2,1,0,1,1,2,1,1,1,1,1,2,1,1,0,1,0,0,1,1,1,1,1,0,1,1,0,1,3,2,2,2,1,0,0,2,2,1,0,1,2,2,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,3,1,2,2,2,2,2,2,1,1,0,0,0,1,0,1,0,2,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,2,0,0,1,0,3,2,1,2,1,2,2,0,1,0,0,0,2,1,0,0,2,1,1,1,1,0,2,0,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,0,1,1,1,1,0,0,0,1,1,1,1,0,1,0,0,1,1,2,2,2,2,1,0,0,1,0,0,0,0,0,2,0,1,1,1,1,0,0,0,0,1,0,1,2,0,0,2,0,1,0,1,1,1,2,1,0,1,0,1,1,0,0,1,0,1,1,1,0,1,0,0,0,1,0,0,1,0,1,1,0,2,1,2,2,2,0,3,0,1,1,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,1,2,2,3,2,2,0,0,1,1,2,0,1,2,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,1,0,0,1,1,0,1,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,2,2,1,1,2,1,2,2,2,2,2,1,2,2,0,1,0,0,0,1,2,2,2,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,0,0,0,0,1,1,1,0,1,1,0,0,1,1,2,2,2,2,0,1,0,2,2,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,0,0,1,0,0,0,0,1,0,1,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,0,0,2,2,2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,0,0,0,1,0,0,1,1,2,0,0,0,0,1,0,1,0,0,1,0,0,2,0,0,0,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,1,1,2,0,2,1,1,1,1,0,2,2,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,2,1,2,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,2,0,1,2,1,0,1,1,1,0,1,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,1,1,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,1,0,0,1,1,1,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,0,0,0,1,1,0,1,1,0,0,0,0,0,1,0,1,1,0,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0];Mt.Koi8rModel={charToOrderMap:Mt.KOI8R_CharToOrderMap,precedenceMatrix:Mt.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:"KOI8-R"};Mt.Win1251CyrillicModel={charToOrderMap:Mt.win1251_CharToOrderMap,precedenceMatrix:Mt.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:"windows-1251"};Mt.Latin5CyrillicModel={charToOrderMap:Mt.latin5_CharToOrderMap,precedenceMatrix:Mt.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:"ISO-8859-5"};Mt.MacCyrillicModel={charToOrderMap:Mt.macCyrillic_CharToOrderMap,precedenceMatrix:Mt.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:"x-mac-cyrillic"};Mt.Ibm866Model={charToOrderMap:Mt.IBM866_CharToOrderMap,precedenceMatrix:Mt.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:"IBM866"};Mt.Ibm855Model={charToOrderMap:Mt.IBM855_CharToOrderMap,precedenceMatrix:Mt.RussianLangModel,mTypicalPositiveRatio:.976601,keepEnglishLetter:!1,charsetName:"IBM855"}});var k9=ke(jo=>{"use strict";jo.Latin7_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,82,100,104,94,98,101,116,102,111,187,117,92,88,113,85,79,118,105,83,67,114,119,95,99,109,188,253,253,253,253,253,253,72,70,80,81,60,96,93,89,68,120,97,77,86,69,55,78,115,65,66,58,76,106,103,87,107,112,253,253,253,253,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,233,90,253,253,253,253,253,253,253,253,253,253,74,253,253,253,253,253,253,247,248,61,36,46,71,73,253,54,253,108,123,110,31,51,43,41,34,91,40,52,47,44,53,38,49,59,39,35,48,250,37,33,45,56,50,84,57,120,121,17,18,22,15,124,1,29,20,21,3,32,13,25,5,11,16,10,6,30,4,9,8,14,7,2,12,28,23,42,24,64,75,19,26,27,253];jo.win1253_CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,82,100,104,94,98,101,116,102,111,187,117,92,88,113,85,79,118,105,83,67,114,119,95,99,109,188,253,253,253,253,253,253,72,70,80,81,60,96,93,89,68,120,97,77,86,69,55,78,115,65,66,58,76,106,103,87,107,112,253,253,253,253,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,233,61,253,253,253,253,253,253,253,253,253,253,74,253,253,253,253,253,253,247,253,253,36,46,71,73,253,54,253,108,123,110,31,51,43,41,34,91,40,52,47,44,53,38,49,59,39,35,48,250,37,33,45,56,50,84,57,120,121,17,18,22,15,124,1,29,20,21,3,32,13,25,5,11,16,10,6,30,4,9,8,14,7,2,12,28,23,42,24,64,75,19,26,27,253];jo.GreekLangModel=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,2,3,3,3,3,3,3,3,3,1,3,3,3,0,2,2,3,3,0,3,0,3,2,0,3,3,3,0,3,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,3,3,0,3,2,3,3,0,3,2,3,3,3,0,0,3,0,3,0,3,3,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,3,2,2,3,3,3,3,3,3,3,3,0,3,3,3,3,0,2,3,3,0,3,3,3,3,2,3,3,3,0,2,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,2,1,3,3,3,3,2,3,3,2,3,3,2,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,2,3,3,0,2,0,1,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,0,0,0,0,3,3,0,3,1,3,3,3,0,3,3,0,3,3,3,3,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,3,0,3,3,3,3,3,0,3,2,2,2,3,0,2,3,3,3,3,3,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,2,3,3,3,3,0,3,1,3,3,3,3,2,3,3,3,3,3,3,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,0,3,0,0,0,3,3,2,3,3,3,3,3,0,0,3,2,3,0,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,3,0,0,3,3,0,2,3,0,3,0,3,3,3,0,0,3,0,3,0,2,2,3,3,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,0,3,2,3,3,3,3,0,3,3,3,3,3,0,3,3,2,3,2,3,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,3,2,3,3,3,3,3,3,0,2,3,2,3,2,2,2,3,2,3,3,2,3,0,2,2,2,3,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,3,3,2,3,3,0,0,3,0,3,0,0,0,3,2,0,3,0,3,0,0,2,0,2,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,0,3,3,0,3,0,0,0,3,3,0,3,3,3,0,0,1,2,3,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,0,0,3,2,2,3,3,0,3,3,3,3,3,2,1,3,0,3,2,3,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,2,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,3,0,3,2,3,0,0,3,3,3,0,3,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,0,0,3,0,3,0,0,0,3,2,0,3,2,3,0,0,3,2,3,0,2,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,2,3,3,3,3,3,3,0,2,3,0,3,0,0,0,3,3,0,3,0,2,0,0,2,3,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,3,0,3,0,3,3,2,3,0,3,3,3,3,3,3,0,3,3,3,0,2,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,0,0,3,0,0,0,3,3,0,3,0,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,3,3,3,3,3,3,0,0,3,0,2,0,0,0,3,3,0,3,0,3,0,0,2,0,2,0,0,0,0,0,1,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,0,3,0,2,0,3,2,0,3,2,3,2,3,0,0,3,2,3,2,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,3,3,3,3,3,0,0,0,3,0,2,1,0,0,3,2,2,2,0,3,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,2,0,3,0,3,0,3,3,0,2,1,2,3,3,0,0,3,0,3,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,0,3,3,3,3,3,3,0,2,3,0,3,0,0,0,2,1,0,2,2,3,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,3,3,3,2,3,0,0,1,3,0,2,0,0,0,0,3,0,1,0,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,1,0,3,0,0,0,3,2,0,3,2,3,3,3,0,0,3,0,3,2,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,3,0,0,3,0,0,0,0,2,0,2,3,3,2,2,2,2,3,0,2,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,0,0,0,0,0,0,2,3,0,2,0,2,3,2,0,0,3,0,3,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,2,2,3,0,2,0,3,0,0,0,2,0,0,0,0,1,2,0,2,0,2,0,0,2,0,2,0,2,2,0,0,1,0,2,2,2,0,2,2,2,0,2,2,2,0,0,2,0,0,1,0,0,0,0,0,2,0,3,3,2,0,0,0,0,0,0,1,3,0,2,0,2,2,2,0,0,2,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,3,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,0,0,0,0,0,0,2,3,0,0,0,2,0,1,2,0,0,0,0,2,2,0,0,0,2,1,0,2,2,0,0,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,2,1,0,2,3,2,2,3,2,3,2,0,0,3,3,3,0,0,3,2,0,0,0,1,1,0,2,0,2,2,0,2,0,2,0,2,2,0,0,2,0,2,2,2,0,2,2,2,2,0,0,2,0,0,0,2,0,1,0,0,0,0,0,3,0,3,3,2,2,0,3,0,0,0,2,2,0,2,2,2,1,2,0,0,1,2,2,0,0,3,0,0,0,2,0,1,2,0,0,0,1,2,0,0,0,0,0,0,0,2,2,0,1,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,2,0,0,0,2,0,2,3,3,0,2,0,0,0,0,0,0,2,2,2,0,2,2,0,2,0,2,0,2,2,0,0,2,2,2,2,1,0,0,2,2,0,2,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,3,2,3,0,0,0,3,0,0,2,2,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,2,2,2,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,2,0,2,2,2,2,2,0,0,0,2,0,0,0,0,2,0,1,0,0,2,0,1,0,0,0,0,2,2,2,0,2,2,0,1,2,0,2,2,2,0,2,2,2,2,1,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,2,0,2,2,0,0,0,0,1,2,1,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,0,0,2,0,0,0,2,2,0,2,0,0,0,1,0,0,2,0,2,0,2,2,0,0,0,0,0,0,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,2,3,2,2,0,0,0,0,0,0,1,3,0,2,0,2,2,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,3,2,0,2,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,1,1,0,0,2,1,2,0,2,2,0,1,0,0,1,0,0,0,2,0,0,0,0,0,0,0,3,0,2,2,2,0,0,2,0,0,0,2,0,0,0,2,3,0,2,0,0,0,0,0,0,2,2,0,0,0,2,0,1,2,0,0,0,1,2,2,1,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,2,0,2,2,0,2,0,0,2,0,0,0,0,1,2,1,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,1,2,2,0,2,0,0,0,0,2,0,0,0,2,0,0,3,0,0,0,0,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,0,0,2,0,2,2,0,0,2,2,2,2,2,0,1,2,0,0,0,2,2,0,1,0,2,0,0,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,0,0,2,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,2,0,1,2,0,0,0,0,2,2,1,0,1,0,1,0,2,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,1,2,0,0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,0,0,1,0,0,0,0,0,0,2,0,2,2,0,0,0,0,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,2,2,2,2,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,1,0,0,2,0,0,0,0,1,2,0,0,0,0,0,0,2,2,1,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,2,2,2,0,0,2,0,0,0,0,0,0,0,2,2,2,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,2,1,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,0,0,0,0,2,2,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,1,0,0,0,0,0,0,2,0,0,2,0,2,2,2,0,0,0,0,0,0,2,0,0,0,0,2,0,0,2,0,0,2,0,2,2,0,0,0,0,2,0,2,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,0,0,0,3,0,0,0,2,2,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,2,2,2,2,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,0,1,0,0,0,0,2,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,2,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,2,1,0,0,0,0,0,0,2,0,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];jo.Latin7GreekModel={charToOrderMap:jo.Latin7_CharToOrderMap,precedenceMatrix:jo.GreekLangModel,mTypicalPositiveRatio:.982851,keepEnglishLetter:!1,charsetName:"ISO-8859-7"};jo.Win1253GreekModel={charToOrderMap:jo.win1253_CharToOrderMap,precedenceMatrix:jo.GreekLangModel,mTypicalPositiveRatio:.982851,keepEnglishLetter:!1,charsetName:"windows-1253"}});var A9=ke(i1=>{"use strict";i1.TIS620CharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,182,106,107,100,183,184,185,101,94,186,187,108,109,110,111,188,189,190,89,95,112,113,191,192,193,194,253,253,253,253,253,253,64,72,73,114,74,115,116,102,81,201,117,90,103,78,82,96,202,91,79,84,104,105,97,98,92,203,253,253,253,253,253,209,210,211,212,213,88,214,215,216,217,218,219,220,118,221,222,223,224,99,85,83,225,226,227,228,229,230,231,232,233,234,235,236,5,30,237,24,238,75,8,26,52,34,51,119,47,58,57,49,53,55,43,20,19,44,14,48,3,17,25,39,62,31,54,45,9,16,2,61,15,239,12,42,46,18,21,76,4,66,63,22,10,1,36,23,13,40,27,32,35,86,240,241,242,243,244,11,28,41,29,33,245,50,37,6,7,67,77,38,93,246,247,68,56,59,65,69,60,70,80,71,87,248,249,250,251,252,253];i1.ThaiLangModel=[0,1,3,3,3,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,0,0,3,3,3,0,3,3,3,3,0,3,3,0,0,0,1,3,0,3,3,2,3,3,0,1,2,3,3,3,3,0,2,0,2,0,0,3,2,1,2,2,3,0,3,3,2,3,0,0,3,3,0,3,3,0,3,3,3,3,3,3,3,3,3,0,3,2,3,0,2,2,2,3,0,2,3,0,0,0,0,1,0,1,2,3,1,1,3,2,2,0,1,1,0,0,1,0,0,0,0,0,0,0,1,1,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,3,3,2,3,2,3,3,2,2,2,3,1,2,3,0,3,3,2,2,1,2,3,3,1,2,0,1,3,0,1,0,0,1,0,0,0,0,0,0,0,1,1,3,3,2,2,3,3,3,3,1,2,3,3,3,3,3,2,2,2,2,3,3,2,2,3,3,2,2,3,2,3,2,2,3,3,1,2,3,1,2,2,3,3,1,0,2,1,0,0,3,1,2,1,0,0,1,0,0,0,0,0,0,1,0,1,3,3,3,3,3,3,2,2,3,3,3,3,2,3,2,2,3,3,2,2,3,2,2,2,2,1,1,3,1,2,1,1,3,2,1,0,2,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,3,3,3,2,3,2,3,3,2,2,3,2,3,3,2,3,1,1,2,3,2,2,2,3,2,2,2,2,2,1,2,1,2,2,1,1,3,3,2,1,0,1,2,2,0,1,3,0,0,0,1,1,0,0,0,0,0,2,3,0,0,2,1,1,3,3,2,3,3,2,0,0,3,3,0,3,3,0,2,2,3,1,2,2,1,1,1,0,2,2,2,0,2,2,1,1,0,2,1,0,2,0,0,2,0,1,0,0,1,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,1,0,3,3,2,3,3,2,0,0,3,3,0,2,3,0,2,1,2,2,2,2,1,2,0,0,2,2,2,0,2,2,1,1,0,2,1,0,2,0,0,2,0,1,1,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,3,3,2,3,2,3,2,0,2,2,1,3,2,1,3,2,1,2,3,2,2,3,0,2,3,2,2,1,2,2,2,2,1,2,2,0,0,0,0,2,0,1,2,0,1,1,1,0,1,0,3,1,1,0,0,0,0,0,0,0,0,0,1,0,3,3,2,3,3,2,3,2,2,2,3,2,2,3,2,2,1,2,3,2,2,3,1,3,2,2,2,3,2,2,2,3,3,2,1,3,0,1,1,1,0,2,1,1,1,1,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,3,0,3,3,3,3,3,0,0,3,0,2,2,3,3,3,3,3,0,0,0,1,1,3,0,0,0,0,2,0,0,1,0,0,0,0,0,0,0,2,3,0,0,0,3,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,2,0,3,3,3,3,0,0,2,3,0,0,3,0,3,3,2,3,3,3,3,3,0,0,3,3,3,0,0,0,3,3,0,0,3,0,0,0,0,2,0,0,2,1,1,3,0,0,1,0,0,2,3,0,1,0,0,0,0,0,0,0,1,0,3,3,3,3,2,3,3,3,3,3,3,3,1,2,1,3,3,2,2,1,2,2,2,3,1,1,2,0,2,1,2,1,2,2,1,0,0,0,1,1,0,1,0,1,1,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,3,0,2,1,2,3,3,3,0,2,0,2,2,0,2,1,3,2,2,1,2,1,0,0,2,2,1,0,2,1,2,2,0,1,1,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,1,3,3,1,1,3,0,2,3,1,1,3,2,1,1,2,0,2,2,3,2,1,1,1,1,1,2,3,0,0,1,3,1,2,1,2,0,3,0,0,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,3,1,1,3,2,3,3,3,1,3,2,1,3,2,1,3,2,2,2,2,1,3,3,1,2,1,3,1,2,3,0,2,1,1,3,2,2,2,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,2,3,2,3,3,2,3,2,3,2,3,3,2,1,0,3,2,2,2,1,2,2,2,1,2,2,1,2,1,1,2,2,2,3,0,1,3,1,1,1,1,0,1,1,0,2,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,3,2,2,1,1,3,2,3,2,3,2,0,3,2,2,1,2,0,2,2,2,1,2,2,2,2,1,3,2,1,2,2,1,0,2,0,1,0,0,1,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,1,3,3,3,3,3,2,3,1,2,3,3,2,2,3,0,1,1,2,0,3,3,2,2,3,0,1,1,3,0,0,0,0,3,1,0,3,3,0,2,0,2,1,0,0,3,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,2,3,2,3,3,0,1,3,1,1,2,1,2,1,1,3,1,1,0,2,3,1,1,1,1,1,1,1,1,3,1,1,2,2,2,2,1,1,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,2,2,1,1,2,1,3,3,2,3,2,2,3,2,2,3,1,2,2,1,2,0,3,2,1,2,2,2,2,2,1,3,2,1,2,2,2,1,1,1,1,0,0,1,1,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,1,3,3,0,2,1,0,3,2,0,0,3,1,0,1,1,0,1,0,0,0,0,0,1,1,0,0,1,0,3,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,2,2,3,0,0,1,3,0,3,2,0,3,2,2,3,3,3,3,3,1,0,2,2,2,0,2,2,1,2,0,2,3,0,0,0,0,1,0,1,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,0,2,3,1,3,3,2,3,3,0,3,3,0,3,2,2,3,2,3,3,3,0,0,2,2,3,0,1,1,1,3,0,0,3,0,0,0,2,2,0,1,3,0,1,2,2,2,3,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,3,2,3,3,2,0,3,3,2,2,3,1,3,2,1,3,2,0,1,2,2,0,2,3,2,1,0,3,0,0,0,0,3,0,0,2,3,1,3,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,3,2,2,2,1,2,0,1,3,1,1,3,1,3,0,0,2,1,1,1,1,2,1,1,1,0,2,1,0,1,1,2,0,0,0,3,1,1,0,0,0,0,1,0,1,0,0,1,0,1,0,0,0,0,0,3,1,0,0,0,1,0,3,3,3,3,2,2,2,2,2,1,3,1,1,1,2,0,1,1,2,1,2,1,3,2,0,0,3,1,1,1,1,1,3,1,0,2,3,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,3,3,0,2,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,1,3,0,0,1,2,0,0,2,0,3,3,2,3,3,3,2,3,0,0,2,2,2,0,0,0,2,2,0,0,1,0,0,0,0,3,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,0,0,0,0,0,0,0,0,0,0,1,2,3,1,3,3,0,0,1,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,2,3,1,2,3,1,0,3,0,2,2,1,0,2,1,1,2,0,1,0,0,1,1,1,1,0,1,0,0,1,0,0,0,0,1,1,0,3,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,1,0,1,1,1,3,1,2,2,2,2,2,2,1,1,1,1,0,3,1,0,1,3,1,1,1,1,1,1,0,2,0,1,3,1,1,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,3,0,2,2,1,3,3,2,3,3,0,1,1,0,2,2,1,2,1,3,3,1,0,0,3,2,0,0,0,0,2,1,0,1,0,0,0,0,1,2,0,1,1,3,1,1,2,2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,3,0,0,3,0,3,1,0,1,1,1,3,2,0,0,0,3,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,3,3,1,3,2,1,3,3,1,2,2,0,1,2,1,0,1,2,0,0,0,0,0,3,0,0,0,3,0,0,0,0,3,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,2,0,3,3,3,2,2,0,1,1,0,1,3,0,0,0,2,2,0,0,0,0,3,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,2,3,1,2,0,0,2,1,0,3,1,0,1,2,0,1,1,1,1,3,0,0,3,1,1,0,2,2,1,1,0,2,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,3,1,2,0,0,2,2,0,1,2,0,1,0,1,3,1,2,1,0,0,0,2,0,3,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,1,2,2,0,0,0,2,0,2,1,0,1,1,0,1,1,1,2,1,0,0,1,1,1,0,2,1,1,1,0,1,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,0,0,0,2,0,1,3,1,1,1,1,0,0,0,0,3,2,0,1,0,0,0,1,2,0,0,0,1,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,2,3,2,2,0,0,0,1,0,0,0,0,2,3,2,1,2,2,3,0,0,0,2,3,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,3,3,2,2,0,1,0,0,0,0,2,0,2,0,1,0,0,0,1,1,0,0,0,2,1,0,1,0,1,1,0,0,0,1,0,2,0,0,1,0,3,0,1,0,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,1,0,0,1,0,0,0,0,0,1,1,2,0,0,0,0,1,0,0,1,3,1,0,0,0,0,1,1,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,3,1,1,1,1,2,3,0,0,2,1,1,1,1,1,0,2,1,1,0,0,0,2,1,0,1,2,1,1,0,1,2,1,0,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,1,0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,1,0,0,0,2,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,0,0,0,0,0,0,1,2,1,0,1,1,0,2,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,1,3,0,1,0,0,0,2,0,0,0,0,0,0,0,1,2,0,0,0,0,0,3,3,0,0,1,1,2,0,0,1,2,1,0,1,1,1,0,1,1,0,0,2,1,1,0,1,0,0,1,1,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,1,0,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,2,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,2,0,1,2,0,0,1,1,0,2,0,1,0,0,1,0,0,0,0,1,0,0,0,2,0,0,0,0,1,0,0,1,0,1,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,1,0,1,1,0,2,1,3,0,0,0,0,1,1,0,0,0,0,0,0,0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,1,0,0,2,0,0,2,0,0,1,1,2,0,0,1,1,0,0,0,1,0,0,0,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,3,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];i1.TIS620ThaiModel={charToOrderMap:i1.TIS620CharToOrderMap,precedenceMatrix:i1.ThaiLangModel,mTypicalPositiveRatio:.926386,keepEnglishLetter:!1,charsetName:"TIS-620"}});var E9=ke(Xo=>{"use strict";Xo.Latin2_HungarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,28,40,54,45,32,50,49,38,39,53,36,41,34,35,47,46,71,43,33,37,57,48,64,68,55,52,253,253,253,253,253,253,2,18,26,17,1,27,12,20,9,22,7,6,13,4,8,23,67,10,5,3,21,19,65,62,16,11,253,253,253,253,253,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,75,198,199,200,201,202,203,204,205,79,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,51,81,222,78,223,224,225,226,44,227,228,229,61,230,231,232,233,234,58,235,66,59,236,237,238,60,69,63,239,240,241,82,14,74,242,70,80,243,72,244,15,83,77,84,30,76,85,245,246,247,25,73,42,24,248,249,250,31,56,29,251,252,253];Xo.win1250HungarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,28,40,54,45,32,50,49,38,39,53,36,41,34,35,47,46,72,43,33,37,57,48,64,68,55,52,253,253,253,253,253,253,2,18,26,17,1,27,12,20,9,22,7,6,13,4,8,23,67,10,5,3,21,19,65,62,16,11,253,253,253,253,253,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,78,181,69,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,76,198,199,200,201,202,203,204,205,81,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,51,83,222,80,223,224,225,226,44,227,228,229,61,230,231,232,233,234,58,235,66,59,236,237,238,60,70,63,239,240,241,84,14,75,242,71,82,243,73,244,15,85,79,86,30,77,87,245,246,247,25,74,42,24,248,249,250,31,56,29,251,252,253];Xo.HungarianLangModel=[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,2,3,3,1,1,2,2,2,2,2,1,2,3,2,2,3,3,3,3,3,2,3,3,3,3,3,3,1,2,3,3,3,3,2,3,3,1,1,3,3,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,3,2,1,3,3,3,3,3,2,3,3,3,3,3,1,1,2,3,3,3,3,3,3,3,1,1,3,2,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,1,1,2,3,3,3,1,3,3,3,3,3,1,3,3,2,2,0,3,2,3,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,3,3,2,3,3,2,2,3,2,3,2,0,3,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,3,3,3,3,2,3,3,3,1,2,3,2,2,3,1,2,3,3,2,2,0,3,3,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,3,3,3,0,2,3,2,0,0,0,1,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,1,1,1,3,3,2,1,3,2,2,3,2,1,3,2,2,1,0,3,3,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,2,2,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,3,2,2,3,1,1,3,2,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,2,2,3,3,3,3,3,2,1,3,3,3,3,3,2,2,1,3,3,3,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,2,3,3,3,2,0,3,2,3,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,0,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,1,3,2,2,2,3,1,1,3,3,1,1,0,3,3,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,3,3,3,3,2,3,3,3,2,3,2,3,3,3,2,3,3,3,3,3,1,2,3,2,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,2,2,2,3,1,3,3,2,2,1,3,3,3,1,1,3,1,2,3,2,3,2,2,2,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,2,1,3,3,3,2,2,3,2,1,0,3,2,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,3,3,3,3,3,1,2,3,3,3,3,1,1,0,3,3,3,3,0,2,3,0,0,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,2,2,3,3,2,2,2,2,3,3,0,1,2,3,2,3,2,2,3,2,1,2,0,2,2,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,3,3,3,3,3,3,1,2,3,3,3,2,1,2,3,3,2,2,2,3,2,3,3,1,3,3,1,1,0,2,3,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,1,2,2,2,2,3,3,3,1,1,1,3,3,1,1,3,1,1,3,2,1,2,3,1,1,0,2,2,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,2,1,2,1,1,3,3,1,1,1,1,3,3,1,1,2,2,1,2,1,1,2,2,1,1,0,2,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,1,1,2,1,1,3,3,1,0,1,1,3,3,2,0,1,1,2,3,1,0,2,2,1,0,0,1,3,2,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,2,1,3,3,3,3,3,1,2,3,2,3,3,2,1,1,3,2,3,2,1,2,2,0,1,2,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,3,3,3,3,2,2,2,2,3,1,2,2,1,1,3,3,0,3,2,1,2,3,2,1,3,3,1,1,0,2,1,3,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,3,3,2,2,2,3,2,3,3,3,2,1,1,3,3,1,1,1,2,2,3,2,3,2,2,2,1,0,2,2,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,3,3,3,3,3,0,0,3,3,2,3,0,0,0,2,3,3,1,0,1,2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,3,3,3,3,3,1,2,3,3,2,2,1,1,0,3,3,2,2,1,2,2,1,0,2,2,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,2,2,1,3,1,2,3,3,2,2,1,1,2,2,1,1,1,1,3,2,1,1,1,1,2,1,0,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,3,3,1,1,1,1,1,3,3,3,0,1,1,3,3,1,1,1,1,1,2,2,0,3,1,1,2,0,2,1,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,3,1,0,1,2,1,2,2,0,1,2,3,1,2,0,0,0,2,1,1,1,1,1,2,0,0,1,1,0,0,0,0,1,2,1,2,2,2,1,2,1,2,0,2,0,2,2,1,1,2,1,1,2,1,1,1,0,1,0,0,0,1,1,0,1,1,1,2,3,2,3,3,0,1,2,2,3,1,0,1,0,2,1,2,2,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,3,2,2,1,0,0,3,2,3,2,0,0,0,1,1,3,0,0,1,1,0,0,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,3,3,1,0,1,3,2,3,1,1,1,0,1,1,1,1,1,3,1,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,2,2,2,1,0,1,2,3,3,2,0,0,0,2,1,1,1,2,1,1,1,0,1,1,1,0,0,0,1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,2,1,1,1,1,1,1,0,1,1,1,0,0,1,1,3,2,2,1,0,0,1,1,2,2,0,3,0,1,2,1,1,0,0,1,1,1,0,1,1,1,1,0,2,1,1,1,2,2,1,1,1,2,1,2,1,1,1,1,1,1,1,2,1,1,1,2,3,1,1,1,1,1,1,1,1,1,0,1,2,3,3,0,1,0,0,0,3,3,1,0,0,1,2,2,1,0,0,0,0,2,0,0,1,1,1,0,2,1,1,1,2,1,1,1,1,1,1,2,1,1,0,1,1,0,1,1,1,0,1,2,1,1,0,1,1,1,1,1,1,1,0,1,2,3,3,0,1,0,0,0,2,2,0,0,0,0,1,2,2,0,0,0,0,1,0,0,1,1,0,0,2,0,1,0,2,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,3,2,2,0,1,0,1,0,2,3,2,0,0,1,2,2,1,0,0,1,1,1,0,0,2,1,0,1,2,2,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,0,2,1,0,1,1,0,1,1,1,0,1,1,2,1,1,0,1,2,2,2,0,0,1,0,0,2,2,1,1,0,0,2,1,1,0,0,0,1,2,0,0,2,1,0,0,2,1,1,1,2,1,1,1,1,2,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,0,1,1,2,3,0,0,0,1,0,3,2,1,0,0,1,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,2,1,1,1,0,0,0,1,0,1,1,1,1,1,2,0,0,1,0,0,0,2,0,0,1,1,1,1,1,1,1,1,0,1,3,0,0,2,1,2,2,1,0,0,2,1,2,2,0,0,0,2,1,1,1,0,1,1,0,0,1,1,2,0,0,0,1,2,1,2,2,1,1,2,1,2,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,0,0,1,1,3,2,0,0,0,1,0,2,2,2,0,0,0,2,2,1,0,0,0,0,3,1,1,1,1,0,0,2,1,1,1,2,1,0,1,1,1,0,1,1,1,1,1,1,1,0,2,1,0,0,1,0,1,1,0,1,1,1,1,1,1,0,1,2,3,2,0,0,0,1,0,2,2,0,0,0,0,2,1,1,0,0,0,0,2,1,0,1,1,0,0,2,1,1,0,2,1,1,1,1,2,1,2,1,2,0,1,1,1,0,2,1,1,1,2,1,1,1,1,0,1,1,1,1,1,0,1,3,1,1,2,2,2,3,2,1,1,2,2,1,1,0,1,0,2,2,1,1,1,1,1,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,0,0,0,0,0,2,2,0,0,0,0,2,2,1,0,0,0,1,1,0,0,1,2,0,0,2,1,1,1,2,2,1,1,1,2,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,1,1,0,1,2,1,1,1,0,1,1,0,0,1,2,3,2,1,0,0,2,0,1,1,0,0,0,1,1,1,1,0,1,1,0,0,1,0,0,0,0,0,1,2,1,2,1,2,1,1,1,2,0,2,1,1,1,0,1,2,0,0,1,1,1,0,0,0,0,0,0,0,0,0,2,3,2,0,0,0,0,0,1,1,2,1,0,0,1,1,1,0,0,0,0,2,0,0,1,1,0,0,2,1,1,1,2,1,1,1,1,1,1,2,1,0,1,1,1,1,0,2,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,2,2,0,1,1,1,0,2,2,2,0,0,0,3,2,1,0,0,0,1,1,0,0,1,1,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,0,0,1,1,1,0,1,0,1,2,1,0,2,1,1,2,2,1,1,2,1,1,1,0,0,0,1,1,0,1,1,1,1,0,0,1,1,1,0,0,0,1,2,2,2,2,2,1,1,1,2,0,2,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,0,1,2,3,0,0,0,1,0,2,2,0,0,0,0,2,2,0,0,0,0,0,1,0,0,1,0,0,0,2,0,1,0,2,1,1,1,1,1,0,2,0,0,0,1,2,1,1,1,1,0,1,2,0,1,0,1,0,1,1,1,0,1,0,1,2,2,2,0,0,0,1,0,2,1,2,0,0,0,1,1,2,0,0,0,0,1,0,0,1,1,0,0,2,1,0,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,1,1,1,1,1,0,1,1,2,2,0,0,0,1,0,2,2,2,0,0,0,1,1,0,0,0,0,0,1,1,0,2,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,0,0,1,1,0,0,1,0,1,2,1,0,0,1,1,1,2,0,0,0,1,1,0,1,0,1,1,0,0,1,0,0,0,0,0,0,2,1,2,1,1,1,1,1,2,0,2,0,1,1,0,1,2,1,0,1,1,1,0,0,0,0,0,0,1,0,0,2,1,1,0,1,2,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,0,0,2,1,0,1,2,2,1,1,1,1,1,2,1,1,0,1,1,1,1,2,1,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,1,2,2,0,0,0,0,0,1,1,0,0,0,0,2,1,0,0,0,0,0,2,0,0,2,2,0,0,2,0,0,1,2,1,1,1,1,1,1,1,0,1,1,0,1,1,0,1,0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,2,0,0,3,1,0,2,1,1,1,0,0,1,1,1,0,0,0,1,1,0,0,0,1,0,0,1,0,1,0,1,2,1,0,1,1,1,2,1,1,0,1,1,1,1,1,0,0,0,1,1,1,1,1,0,1,0,0,0,1,0,0,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,2,0,0,0,2,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,2,1,1,0,0,1,1,1,1,1,0,1,2,1,1,1,2,1,1,1,0,1,1,2,1,0,0,0,0,1,1,1,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,0,0,1,1,2,1,0,0,0,1,1,0,0,0,1,1,0,0,1,0,1,0,0,0,1,2,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,0,0,2,0,0,0,1,1,1,1,0,0,1,1,0,0,0,0,0,1,1,1,2,0,0,1,0,0,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,2,0,1,1,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0,0,2,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,1,1,0,1,0,1,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,1,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,1,0,0,1,1,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,0,1,0,0,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0];Xo.Latin2HungarianModel={charToOrderMap:Xo.Latin2_HungarianCharToOrderMap,precedenceMatrix:Xo.HungarianLangModel,mTypicalPositiveRatio:.947368,keepEnglishLetter:!0,charsetName:"ISO-8859-2"};Xo.Win1250HungarianModel={charToOrderMap:Xo.win1250HungarianCharToOrderMap,precedenceMatrix:Xo.HungarianLangModel,mTypicalPositiveRatio:.947368,keepEnglishLetter:!0,charsetName:"windows-1250"}});var _9=ke(Yo=>{"use strict";Yo.Latin5_BulgarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,77,90,99,100,72,109,107,101,79,185,81,102,76,94,82,110,186,108,91,74,119,84,96,111,187,115,253,253,253,253,253,253,65,69,70,66,63,68,112,103,92,194,104,95,86,87,71,116,195,85,93,97,113,196,197,198,199,200,253,253,253,253,253,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,81,226,227,228,229,230,105,231,232,233,234,235,236,45,237,238,31,32,35,43,37,44,55,47,40,59,33,46,38,36,41,30,39,28,34,51,48,49,53,50,54,57,61,239,67,240,60,56,1,18,9,20,11,3,23,15,2,26,12,10,14,6,4,13,7,8,5,19,29,25,22,21,27,24,17,75,52,241,42,16,62,242,243,244,58,245,98,246,247,248,249,250,251,91,252,253];Yo.win1251BulgarianCharToOrderMap=[255,255,255,255,255,255,255,255,255,255,254,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,77,90,99,100,72,109,107,101,79,185,81,102,76,94,82,110,186,108,91,74,119,84,96,111,187,115,253,253,253,253,253,253,65,69,70,66,63,68,112,103,92,194,104,95,86,87,71,116,195,85,93,97,113,196,197,198,199,200,253,253,253,253,253,206,207,208,209,210,211,212,213,120,214,215,216,217,218,219,220,221,78,64,83,121,98,117,105,222,223,224,225,226,227,228,229,88,230,231,232,233,122,89,106,234,235,236,237,238,45,239,240,73,80,118,114,241,242,243,244,245,62,58,246,247,248,249,250,31,32,35,43,37,44,55,47,40,59,33,46,38,36,41,30,39,28,34,51,48,49,53,50,54,57,61,251,67,252,60,56,1,18,9,20,11,3,23,15,2,26,12,10,14,6,4,13,7,8,5,19,29,25,22,21,27,24,17,75,52,253,42,16];Yo.BulgarianLangModel=[0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,2,2,1,2,2,3,1,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,0,3,0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3,3,3,3,3,3,3,0,3,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,2,3,3,2,3,3,3,3,3,3,3,3,3,3,3,3,1,3,2,3,3,3,3,3,3,3,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,1,3,3,3,3,2,2,2,1,1,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,2,3,2,2,3,3,1,1,2,3,3,2,3,3,3,3,2,1,2,0,2,0,3,0,0,0,0,0,0,0,0,0,1,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,1,3,3,3,3,3,2,3,2,3,3,3,3,3,2,3,3,1,3,0,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,1,3,3,2,3,3,3,1,3,3,2,3,2,2,2,0,0,2,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,0,3,3,3,2,2,3,3,3,1,2,2,3,2,1,1,2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,2,3,3,1,2,3,2,2,2,3,3,3,3,3,2,2,3,1,2,0,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,1,3,3,3,3,3,2,3,3,3,2,3,3,2,3,2,2,2,3,1,2,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,1,1,1,2,2,1,3,1,3,2,2,3,0,0,1,0,1,0,1,0,0,0,0,0,1,0,0,0,0,1,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,2,2,3,2,2,3,1,2,1,1,1,2,3,1,3,1,2,2,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,1,3,2,2,3,3,1,2,3,1,1,3,3,3,3,1,2,2,1,1,1,0,2,0,2,0,1,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,2,3,3,3,2,2,1,1,2,0,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,0,1,2,1,3,3,2,3,3,3,3,3,2,3,2,1,0,3,1,2,1,2,1,2,3,2,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,0,0,3,1,3,3,2,3,3,2,2,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,0,3,3,3,3,3,2,1,1,2,1,3,3,0,3,1,1,1,1,3,2,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,2,2,2,3,3,3,3,3,3,3,3,3,3,3,1,1,3,1,3,3,2,3,2,2,2,3,0,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,3,2,2,3,2,1,1,1,1,1,3,1,3,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,2,3,2,0,3,2,0,3,0,2,0,0,2,1,3,1,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,2,1,1,1,1,2,1,1,2,1,1,1,2,2,1,2,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,2,1,3,1,1,2,1,3,2,1,1,0,1,2,3,2,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,3,3,3,2,2,1,0,1,0,0,1,0,0,0,2,1,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,2,3,2,3,3,1,3,2,1,1,1,2,1,1,2,1,3,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,2,2,3,3,2,3,2,2,2,3,1,2,2,1,1,2,1,1,2,2,0,1,1,0,1,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,2,1,3,1,0,2,2,1,3,2,1,0,0,2,0,2,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,3,3,3,3,3,3,1,2,0,2,3,1,2,3,2,0,1,3,1,2,1,1,1,0,0,1,0,0,2,2,2,3,2,2,2,2,1,2,1,1,2,2,1,1,2,0,1,1,1,0,0,1,1,0,0,1,1,0,0,0,1,1,0,1,3,3,3,3,3,2,1,2,2,1,2,0,2,0,1,0,1,2,1,2,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,1,3,3,2,3,3,1,1,3,1,0,3,2,1,0,0,0,1,2,0,2,0,1,0,0,0,1,0,1,2,1,2,2,1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,0,1,2,1,1,1,0,0,0,0,0,1,1,0,0,3,1,0,1,0,2,3,2,2,2,3,2,2,2,2,2,1,0,2,1,2,1,1,1,0,1,2,1,2,2,2,1,1,1,2,2,2,2,1,2,1,1,0,1,2,1,2,2,2,1,1,1,0,1,1,1,1,2,0,1,0,0,0,0,2,3,2,3,3,0,0,2,1,0,2,1,0,0,0,0,2,3,0,2,0,0,0,0,0,1,0,0,2,0,1,2,2,1,2,1,2,2,1,1,1,2,1,1,1,0,1,2,2,1,1,1,1,1,0,1,1,1,0,0,1,2,0,0,3,3,2,2,3,0,2,3,1,1,2,0,0,0,1,0,0,2,0,2,0,0,0,1,0,1,0,1,2,0,2,2,1,1,1,1,2,1,0,1,2,2,2,1,1,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,1,1,0,0,2,3,2,3,3,0,0,3,0,1,1,0,1,0,0,0,2,2,1,2,0,0,0,0,0,0,0,0,2,0,1,2,2,2,1,1,1,1,1,2,2,2,1,0,2,0,1,0,1,0,0,1,0,1,0,0,1,0,0,0,0,1,0,0,3,3,3,3,2,2,2,2,2,0,2,1,1,1,1,2,1,2,1,1,0,2,0,1,0,1,0,0,2,0,1,2,1,1,1,1,1,1,1,2,2,1,1,0,2,0,1,0,2,0,0,1,1,1,0,0,2,0,0,0,1,1,0,0,2,3,3,3,3,1,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,0,0,0,0,1,2,0,1,2,2,2,2,1,1,2,1,1,2,2,2,1,2,0,1,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,2,3,3,3,3,0,2,2,0,2,1,0,0,0,1,1,1,2,0,2,0,0,0,3,0,0,0,0,2,0,2,2,1,1,1,2,1,2,1,1,2,2,2,1,2,0,1,1,1,0,1,1,1,1,0,2,1,0,0,0,1,1,0,0,2,3,3,3,3,0,2,1,0,0,2,0,0,0,0,0,1,2,0,2,0,0,0,0,0,0,0,0,2,0,1,2,1,1,1,2,1,1,1,1,2,2,2,0,1,0,1,1,1,0,0,1,1,1,0,0,1,0,0,0,0,1,0,0,3,3,2,2,3,0,1,0,1,0,0,0,0,0,0,0,1,1,0,3,0,0,0,0,0,0,0,0,1,0,2,2,1,1,1,1,1,2,1,1,2,2,1,2,2,1,0,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,0,0,3,1,0,1,0,2,2,2,2,3,2,1,1,1,2,3,0,0,1,0,2,1,1,0,1,1,1,1,2,1,1,1,1,2,2,1,2,1,2,2,1,1,0,1,2,1,2,2,1,1,1,0,0,1,1,1,2,1,0,1,0,0,0,0,2,1,0,1,0,3,1,2,2,2,2,1,2,2,1,1,1,0,2,1,2,2,1,1,2,1,1,0,2,1,1,1,1,2,2,2,2,2,2,2,1,2,0,1,1,0,2,1,1,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0,2,1,1,1,1,2,2,2,2,1,2,2,2,1,2,2,1,1,2,1,2,3,2,2,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,2,0,1,2,0,1,2,1,1,0,1,0,1,2,1,2,0,0,0,1,1,0,0,0,1,0,0,2,1,1,0,0,1,1,0,1,1,1,1,0,2,0,1,1,1,0,0,1,1,0,0,0,0,1,0,0,0,1,0,0,2,0,0,0,0,1,2,2,2,2,2,2,2,1,2,1,1,1,1,1,1,1,0,1,1,1,1,1,2,1,1,1,1,2,2,2,2,1,1,2,1,2,1,1,1,0,2,1,2,1,1,1,0,2,1,1,1,1,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,3,2,0,0,0,0,1,0,0,0,0,0,0,1,1,0,2,0,0,0,0,0,0,0,0,1,0,1,2,1,1,1,1,1,1,0,0,2,2,2,2,2,0,1,1,0,1,1,1,1,1,0,0,1,0,0,0,1,1,0,1,2,3,1,2,1,0,1,1,0,2,2,2,0,0,1,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,0,1,0,0,1,0,0,0,0,1,0,0,2,2,2,2,2,0,0,2,0,0,2,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,2,0,2,2,1,1,1,1,1,0,0,1,2,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,0,2,0,1,1,0,0,0,1,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,2,0,0,1,0,0,1,0,0,0,0,0,0,1,0,2,0,0,0,1,0,0,0,0,0,0,0,2,1,1,0,0,1,0,0,0,1,1,0,0,1,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,1,2,2,2,1,2,1,2,2,1,1,2,1,1,1,0,1,1,1,1,2,0,1,0,1,1,1,1,0,1,1,1,1,2,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,1,0,0,1,3,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,1,0,0,1,0,2,0,0,0,0,0,1,1,1,0,1,0,0,0,0,0,0,0,0,2,0,0,1,0,2,0,1,0,0,1,1,2,0,1,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,1,1,0,2,1,0,1,1,1,0,0,1,0,2,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,0,1,1,0,0,1,0,0,1,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,0,0,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,1,2,1,1,1,1,1,1,2,2,1,0,0,1,0,1,0,0,0,0,1,1,1,1,0,0,0,1,1,2,1,1,1,1,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,1,2,1,0,0,1,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,2,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,1,1,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,2,0,0,2,0,1,0,0,1,0,0,1,1,1,0,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,2,0,0,0,0,0,0,2,1,0,1,1,0,0,1,1,1,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,0,1,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1];Yo.Latin5BulgarianModel={charToOrderMap:Yo.Latin5_BulgarianCharToOrderMap,precedenceMatrix:Yo.BulgarianLangModel,mTypicalPositiveRatio:.969392,keepEnglishLetter:!1,charsetName:"ISO-8859-5"};Yo.Win1251BulgarianModel={charToOrderMap:Yo.win1251BulgarianCharToOrderMap,precedenceMatrix:Yo.BulgarianLangModel,mTypicalPositiveRatio:.969392,keepEnglishLetter:!1,charsetName:"windows-1251"}});var L9=ke((Eoe,P9)=>{"use strict";var mn=v9(),O9=h4(),D9=w9().Win1255HebrewModel,LM=I9(),a1=N9(),R9=k9(),zM=A9().TIS620ThaiModel,$9=E9(),F9=_9();function M9(){O9.apply(this);var r=this;function t(){r._mProbers=[new mn(a1.Win1251CyrillicModel),new mn(a1.Koi8rModel),new mn(a1.Latin5CyrillicModel),new mn(a1.MacCyrillicModel),new mn(a1.Ibm866Model),new mn(a1.Ibm855Model),new mn(R9.Latin7GreekModel),new mn(R9.Win1253GreekModel),new mn(F9.Latin5BulgarianModel),new mn(F9.Win1251BulgarianModel),new mn($9.Latin2HungarianModel),new mn($9.Win1250HungarianModel),new mn(zM)];var e=new LM,n=new mn(D9,!1,e),o=new mn(D9,!0,e);e.setModelProbers(n,o),r._mProbers.push(e,n,o),r._supportedCharsetNames=[];for(let s of r._mProbers)r._supportedCharsetNames.push(s.getCharsetName());r.reset()}this.getSupportedCharsetNames=function(){return r._supportedCharsetNames},t()}M9.prototype=new O9;P9.exports=M9});var V9=ke((_oe,G9)=>{"use strict";var B9=ea(),z9=dr(),Ju=0,te=1,Pt=2,Lt=3,Zt=4,So=5,Jt=6,Io=7,BM=[te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,Pt,te,te,te,te,te,te,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,Lt,te,te,te,te,te,te,Ju,te,Io,te,te,te,te,te,te,So,te,So,Ju,So,Ju,Ju,te,te,te,te,te,te,te,te,te,Io,te,Io,Ju,Io,So,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,te,Zt,Zt,Zt,Zt,Zt,Zt,So,So,Zt,Zt,Zt,Zt,Zt,Zt,Zt,Zt,So,So,Zt,Zt,Zt,Zt,Zt,te,Zt,Zt,Zt,Zt,Zt,So,So,So,Jt,Jt,Jt,Jt,Jt,Jt,Io,Io,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Jt,Io,Io,Jt,Jt,Jt,Jt,Jt,te,Jt,Jt,Jt,Jt,Jt,Io,Io,Io],GM=[0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,0,3,3,3,3,3,3,3,0,3,3,3,1,1,3,3,0,3,3,3,1,2,1,2,0,3,3,3,3,3,3,3,0,3,1,3,1,1,1,3,0,3,1,3,1,1,3,3];function N4(){B9.apply(this);var r=4,t=8,e=this;function n(){e.reset()}this.reset=function(){this._mLastCharClass=te,this._mFreqCounter=[];for(var o=0;o<r;this._mFreqCounter[o++]=0);N4.prototype.reset.apply(this)},this.getCharsetName=function(){return"windows-1252"},this.getSupportedCharsetNames=function(){return[this.getCharsetName()]},this.feed=function(o){o=this.removeXmlTags(o);for(var s=0;s<o.length;s++){var i=o.charCodeAt(s),a=BM[i],l=GM[this._mLastCharClass*t+a];if(l==0){this._mState=z9.notMe;break}this._mFreqCounter[l]++,this._mLastCharClass=a}return this.getState()},this.getConfidence=function(){var o;if(this.getState()==z9.notMe)return .01;for(var s=0,i=0;i<this._mFreqCounter.length;i++)s+=this._mFreqCounter[i];return s<.01?o=0:o=this._mFreqCounter[3]/s-this._mFreqCounter[1]*20/s,o<0&&(o=0),o=o*.95,o},n()}N4.prototype=new B9;G9.exports=N4});var U9=ke(Qu=>{"use strict";var G=dr(),VM=[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,5,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],UM=[G.start,G.error,3,G.start,G.start,G.start,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.error,G.error,G.start,G.start,4,G.error,5,G.error,6,G.error,5,5,4,G.error,4,G.error,4,4,4,G.error,4,G.error,4,G.itsMe,G.start,G.start,G.start,G.start,G.start,G.start],WM=[0,0,0,0,0,0];Qu.HZSMModel={classTable:VM,classFactor:6,stateTable:UM,charLenTable:WM,name:"HZ-GB-2312"};var qM=[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],HM=[G.start,3,G.error,G.start,G.start,G.start,G.start,G.start,G.start,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.error,G.error,G.error,4,G.error,G.error,G.error,G.error,G.itsMe,G.error,G.error,G.error,G.error,5,6,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.error,G.start],KM=[0,0,0,0,0,0,0,0,0];Qu.ISO2022CNSMModel={classTable:qM,classFactor:9,stateTable:HM,charLenTable:KM,name:"ISO-2022-CN"};var jM=[2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,7,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,4,0,8,0,0,0,0,9,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],XM=[G.start,3,G.error,G.start,G.start,G.start,G.start,G.start,G.start,G.start,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.error,G.error,G.error,5,G.error,G.error,G.error,4,G.error,G.error,G.error,G.error,G.error,6,G.itsMe,G.error,G.itsMe,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.itsMe,G.error,G.error,G.error,G.itsMe,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.error,G.start,G.start],YM=[0,0,0,0,0,0,0,0,0,0];Qu.ISO2022JPSMModel={classTable:jM,classFactor:10,stateTable:XM,charLenTable:YM,name:"ISO-2022-JP"};var ZM=[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,3,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],JM=[G.start,3,G.error,G.start,G.start,G.start,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.itsMe,G.error,G.error,G.error,4,G.error,G.error,G.error,G.error,G.error,G.error,5,G.error,G.error,G.error,G.error,G.error,G.error,G.itsMe,G.start,G.start,G.start,G.start],QM=[0,0,0,0,0,0];Qu.ISO2022KRSMModel={classTable:ZM,classFactor:6,stateTable:JM,charLenTable:QM,name:"ISO-2022-KR"}});var H9=ke((Roe,q9)=>{"use strict";var W9=ea(),R2=Ns(),$2=U9(),F2=dr();function k4(){W9.apply(this);var r=this;function t(){r._mCodingSM=[new R2($2.HZSMModel),new R2($2.ISO2022CNSMModel),new R2($2.ISO2022JPSMModel),new R2($2.ISO2022KRSMModel)],r._supportedCharsetNames=[];for(let e of r._mCodingSM)r._supportedCharsetNames.push(e.getCodingStateMachine());r.reset()}this.reset=function(){k4.prototype.reset.apply(this);for(var e=0,n;n=this._mCodingSM[e];e++)n&&(n.active=!0,n.reset());this._mActiveSM=r._mCodingSM.length,this._mDetectedCharset=null},this.getCharsetName=function(){return this._mDetectedCharset},this.getSupportedCharsetNames=function(){return r._supportedCharsetNames},this.getConfidence=function(){return this._mDetectedCharset?.99:0},this.feed=function(e){for(var n=0,o;n<e.length;n++){o=e[n];for(var s=0,i;i=this._mCodingSM[s];s++)if(!(!i||!i.active)){var a=i.nextState(o);if(a==F2.error){if(i.active=!1,this._mActiveSM--,this._mActiveSM<=0)return this._mState=F2.notMe,this.getState()}else if(a==F2.itsMe)return this._mState=F2.foundIt,this._mDetectedCharset=i.getCodingStateMachine(),this.getState()}}return this.getState()},t()}k4.prototype=new W9;q9.exports=k4});var ex=ke(($oe,Q9)=>{"use strict";var K9=dr(),j9=h9(),X9=L9(),Y9=V9(),Z9=H9(),l1=ta(),J9=function(){let r=["UTF-8","UTF-32LE","UTF-32BE","UTF-32BE","UTF-16LE","UTF-16BE","X-ISO-10646-UCS-4-3412","X-ISO-10646-UCS-4-2143"],t=[new Z9,new j9,new X9,new Y9],e=r.slice(0);for(let n of t)[].push.apply(e,n.getSupportedCharsetNames());return e}(),eP=function(){let r=[];for(let t of J9)r.push(t.toLocaleLowerCase(),t.toLocaleLowerCase().replace(/-/g,""));return r}();function tP(r){if(r||(r={}),typeof r.minimumThreshold!="number"&&(r.detectEncodings?r.minimumThreshold=0:r.minimumThreshold=.2),r.detectEncodings){for(let s of r.detectEncodings)if(!eP.includes(s.toLowerCase()))throw new Error(`Encoding ${s} is not supported. Supported encodings: ${J9}.`)}var t={pureAscii:0,escAscii:1,highbyte:2},e=this;function n(){e._highBitDetector=/[\x80-\xFF]/,e._escDetector=/(\x1B|~\{)/,e._mEscCharsetProber=null,e._mCharsetProbers=[],e.reset()}function o(s){if(!r.detectEncodings)return!0;var i=r.detectEncodings.map(a=>a.toLowerCase());return i.includes(s.toLowerCase())}this.reset=function(){this.result={encoding:null,confidence:0},this.results=[],this.done=!1,this._mStart=!0,this._mGotData=!1,this._mInputState=t.pureAscii,this._mLastChar=[],this._mBOM="",this._mEscCharsetProber&&this._mEscCharsetProber.reset();for(var s=0,i;i=this._mCharsetProbers[s];s++)i.reset()},this.feed=function(s){if(!this.done){var i=s.length;if(i){if(this._mGotData||(this._mBOM+=s,this._mBOM.slice(0,3)=="\xEF\xBB\xBF"&&o("UTF-8")?this.result={encoding:"UTF-8",confidence:1}:this._mBOM.slice(0,4)=="\xFF\xFE\0\0"&&o("UTF-32LE")?this.result={encoding:"UTF-32LE",confidence:1}:this._mBOM.slice(0,4)=="\0\0\xFE\xFF"&&o("UTF-32BE")?this.result={encoding:"UTF-32BE",confidence:1}:this._mBOM.slice(0,4)=="\xFE\xFF\0\0"&&o("X-ISO-10646-UCS-4-3412")?this.result={encoding:"X-ISO-10646-UCS-4-3412",confidence:1}:this._mBOM.slice(0,4)=="\0\0\xFF\xFE"&&o("X-ISO-10646-UCS-4-2143")?this.result={encoding:"X-ISO-10646-UCS-4-2143",confidence:1}:this._mBOM.slice(0,2)=="\xFF\xFE"&&o("UTF-16LE")?this.result={encoding:"UTF-16LE",confidence:1}:this._mBOM.slice(0,2)=="\xFE\xFF"&&o("UTF-16BE")&&(this.result={encoding:"UTF-16BE",confidence:1}),this.result.confidence>0&&(this.results=[this.result]),this._mBOM.length>3&&(this._mGotData=!0)),this.result.encoding&&this.result.confidence>0){this.done=!0;return}if(this._mInputState==t.pureAscii&&(this._highBitDetector.test(s)?this._mInputState=t.highbyte:this._escDetector.test(this._mLastChar.join("")+s)&&(this._mInputState=t.escAscii)),this._mLastChar=s.slice(-1).split(""),this._mInputState==t.escAscii)this._mEscCharsetProber||(this._mEscCharsetProber=new Z9),this._mEscCharsetProber.feed(s)==K9.foundIt&&o(this._mEscCharsetProber.getCharsetName())&&(this.result={encoding:this._mEscCharsetProber.getCharsetName(),confidence:this._mEscCharsetProber.getConfidence()},this.results=[this.result],this.done=!0);else if(this._mInputState==t.highbyte){this._mCharsetProbers.length==0&&(this._mCharsetProbers=[new j9,new X9,new Y9]);for(var a=0,l;l=this._mCharsetProbers[a];a++)if(l.feed(s)==K9.foundIt&&o(l.getCharsetName())){this.result={encoding:l.getCharsetName(),confidence:l.getConfidence()},this.results=[this.result],this.done=!0;break}}}}},this.close=function(){if(!this.done){if(this._mBOM.length===0){l1.log(`no data received!
`);return}if(this.done=!0,this._mInputState==t.pureAscii&&o("ascii"))return l1.log("pure ascii"),this.result={encoding:"ascii",confidence:1},this.results.push(this.result),this.result;if(this._mInputState==t.highbyte){let l=0,u=!1;for(var s=0,i;i=this._mCharsetProbers[s];s++){if(!i)continue;let c=i.getCharsetName(),p=i.getConfidence();i.getCharsetName()==="windows-1252"&&(l=p),!(!c||!o(c))&&(this.results.push({encoding:i.getCharsetName(),confidence:p}),i.getCharsetName()==="windows-1250"&&(u=!0),l1.log(i.getCharsetName()+" confidence "+p))}if(l&&!u&&o("windows-1250")&&this.results.push({encoding:"windows-1250",confidence:l-Math.pow(5/10,String(l).length-1)}),this.results.sort(function(c,p){return p.confidence-c.confidence}),this.results.length>0){var a=this.results[0];if(a.confidence>=r.minimumThreshold)return this.result=a,a}}if(l1.enabled){l1.log(`no probers hit minimum threshhold
`);for(var s=0,i;i=this._mCharsetProbers[s];s++)!i||!o(i.getCharsetName())||l1.log(i.getCharsetName()+" confidence = "+i.getConfidence()+`
`)}}},n()}Q9.exports=tP});var nx=ke(ep=>{"use strict";var tx=ex(),rP=ta().setLogger;ep.detect=function(r,t){var e=rx(r,t);return e.result};ep.detectAll=function(r,t){var e=rx(r,t);return e.results};ep.UniversalDetector=tx;ep.enableDebug=function(){rP(console.log.bind(console))};function rx(r,t){var e=new tx(t);return e.reset(),typeof Buffer=="function"&&r instanceof Buffer?e.feed(r.toString("binary")):e.feed(r),e.close(),e}});var A4=ke((Ooe,ox)=>{"use strict";ox.exports=nx()});var Nx=ke(L4=>{"use strict";var Cx=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,AP=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,Sx=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,EP=/\\([\u000b\u0020-\u00ff])/g,_P=/([\\"])/g,Ix=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;L4.format=DP;L4.parse=RP;function DP(r){if(!r||typeof r!="object")throw new TypeError("argument obj is required");var t=r.parameters,e=r.type;if(!e||!Ix.test(e))throw new TypeError("invalid type");var n=e;if(t&&typeof t=="object")for(var o,s=Object.keys(t).sort(),i=0;i<s.length;i++){if(o=s[i],!Sx.test(o))throw new TypeError("invalid parameter name");n+="; "+o+"="+FP(t[o])}return n}function RP(r){if(!r)throw new TypeError("argument string is required");var t=typeof r=="object"?$P(r):r;if(typeof t!="string")throw new TypeError("argument string is required to be a string");var e=t.indexOf(";"),n=e!==-1?t.slice(0,e).trim():t.trim();if(!Ix.test(n))throw new TypeError("invalid media type");var o=new OP(n.toLowerCase());if(e!==-1){var s,i,a;for(Cx.lastIndex=e;i=Cx.exec(t);){if(i.index!==e)throw new TypeError("invalid parameter format");e+=i[0].length,s=i[1].toLowerCase(),a=i[2],a.charCodeAt(0)===34&&(a=a.slice(1,-1),a.indexOf("\\")!==-1&&(a=a.replace(EP,"$1"))),o.parameters[s]=a}if(e!==t.length)throw new TypeError("invalid parameter format")}return o}function $P(r){var t;if(typeof r.getHeader=="function"?t=r.getHeader("content-type"):typeof r.headers=="object"&&(t=r.headers&&r.headers["content-type"]),typeof t!="string")throw new TypeError("content-type header is missing from object");return t}function FP(r){var t=String(r);if(Sx.test(t))return t;if(t.length>0&&!AP.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(_P,"\\$1")+'"'}function OP(r){this.parameters=Object.create(null),this.type=r}});var Ex=ke(G2=>{"use strict";var MP=/^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/,kx=/^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/,Ax=/^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;G2.format=PP;G2.parse=zP;G2.test=LP;function PP(r){if(!r||typeof r!="object")throw new TypeError("argument obj is required");var t=r.subtype,e=r.suffix,n=r.type;if(!n||!kx.test(n))throw new TypeError("invalid type");if(!t||!MP.test(t))throw new TypeError("invalid subtype");var o=n+"/"+t;if(e){if(!kx.test(e))throw new TypeError("invalid suffix");o+="+"+e}return o}function LP(r){if(!r)throw new TypeError("argument string is required");if(typeof r!="string")throw new TypeError("argument string is required to be a string");return Ax.test(r.toLowerCase())}function zP(r){if(!r)throw new TypeError("argument string is required");if(typeof r!="string")throw new TypeError("argument string is required to be a string");var t=Ax.exec(r.toLowerCase());if(!t)throw new TypeError("invalid media type");var e=t[1],n=t[2],o,s=n.lastIndexOf("+");return s!==-1&&(o=n.substr(s+1),n=n.substr(0,s)),new BP(e,n,o)}function BP(r,t,e){this.type=r,this.subtype=t,this.suffix=e}});var Cy=ke((Tae,Ty)=>{"use strict";Ty.exports=zt;var ro=null;try{ro=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function zt(r,t,e){this.low=r|0,this.high=t|0,this.unsigned=!!e}zt.prototype.__isLong__;Object.defineProperty(zt.prototype,"__isLong__",{value:!0});function An(r){return(r&&r.__isLong__)===!0}zt.isLong=An;var fy={},dy={};function ll(r,t){var e,n,o;return t?(r>>>=0,(o=0<=r&&r<256)&&(n=dy[r],n)?n:(e=Bt(r,(r|0)<0?-1:0,!0),o&&(dy[r]=e),e)):(r|=0,(o=-128<=r&&r<128)&&(n=fy[r],n)?n:(e=Bt(r,r<0?-1:0,!1),o&&(fy[r]=e),e))}zt.fromInt=ll;function no(r,t){if(isNaN(r))return t?al:oo;if(t){if(r<0)return al;if(r>=yy)return wy}else{if(r<=-gy)return kn;if(r+1>=gy)return vy}return r<0?no(-r,t).neg():Bt(r%wc|0,r/wc|0,t)}zt.fromNumber=no;function Bt(r,t,e){return new zt(r,t,e)}zt.fromBits=Bt;var am=Math.pow;function Q4(r,t,e){if(r.length===0)throw Error("empty string");if(r==="NaN"||r==="Infinity"||r==="+Infinity"||r==="-Infinity")return oo;if(typeof t=="number"?(e=t,t=!1):t=!!t,e=e||10,e<2||36<e)throw RangeError("radix");var n;if((n=r.indexOf("-"))>0)throw Error("interior hyphen");if(n===0)return Q4(r.substring(1),t,e).neg();for(var o=no(am(e,8)),s=oo,i=0;i<r.length;i+=8){var a=Math.min(8,r.length-i),l=parseInt(r.substring(i,i+a),e);if(a<8){var u=no(am(e,a));s=s.mul(u).add(no(l))}else s=s.mul(o),s=s.add(no(l))}return s.unsigned=t,s}zt.fromString=Q4;function Ao(r,t){return typeof r=="number"?no(r,t):typeof r=="string"?Q4(r,t):Bt(r.low,r.high,typeof t=="boolean"?t:r.unsigned)}zt.fromValue=Ao;var hy=65536,EL=1<<24,wc=hy*hy,yy=wc*wc,gy=yy/2,xy=ll(EL),oo=ll(0);zt.ZERO=oo;var al=ll(0,!0);zt.UZERO=al;var vc=ll(1);zt.ONE=vc;var by=ll(1,!0);zt.UONE=by;var J4=ll(-1);zt.NEG_ONE=J4;var vy=Bt(-1,2147483647,!1);zt.MAX_VALUE=vy;var wy=Bt(-1,-1,!0);zt.MAX_UNSIGNED_VALUE=wy;var kn=Bt(0,-2147483648,!1);zt.MIN_VALUE=kn;var de=zt.prototype;de.toInt=function(){return this.unsigned?this.low>>>0:this.low};de.toNumber=function(){return this.unsigned?(this.high>>>0)*wc+(this.low>>>0):this.high*wc+(this.low>>>0)};de.toString=function(t){if(t=t||10,t<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(kn)){var e=no(t),n=this.div(e),o=n.mul(e).sub(this);return n.toString(t)+o.toInt().toString(t)}else return"-"+this.neg().toString(t);for(var s=no(am(t,6),this.unsigned),i=this,a="";;){var l=i.div(s),u=i.sub(l.mul(s)).toInt()>>>0,c=u.toString(t);if(i=l,i.isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}};de.getHighBits=function(){return this.high};de.getHighBitsUnsigned=function(){return this.high>>>0};de.getLowBits=function(){return this.low};de.getLowBitsUnsigned=function(){return this.low>>>0};de.getNumBitsAbs=function(){if(this.isNegative())return this.eq(kn)?64:this.neg().getNumBitsAbs();for(var t=this.high!=0?this.high:this.low,e=31;e>0&&(t&1<<e)==0;e--);return this.high!=0?e+33:e+1};de.isZero=function(){return this.high===0&&this.low===0};de.eqz=de.isZero;de.isNegative=function(){return!this.unsigned&&this.high<0};de.isPositive=function(){return this.unsigned||this.high>=0};de.isOdd=function(){return(this.low&1)===1};de.isEven=function(){return(this.low&1)===0};de.equals=function(t){return An(t)||(t=Ao(t)),this.unsigned!==t.unsigned&&this.high>>>31===1&&t.high>>>31===1?!1:this.high===t.high&&this.low===t.low};de.eq=de.equals;de.notEquals=function(t){return!this.eq(t)};de.neq=de.notEquals;de.ne=de.notEquals;de.lessThan=function(t){return this.comp(t)<0};de.lt=de.lessThan;de.lessThanOrEqual=function(t){return this.comp(t)<=0};de.lte=de.lessThanOrEqual;de.le=de.lessThanOrEqual;de.greaterThan=function(t){return this.comp(t)>0};de.gt=de.greaterThan;de.greaterThanOrEqual=function(t){return this.comp(t)>=0};de.gte=de.greaterThanOrEqual;de.ge=de.greaterThanOrEqual;de.compare=function(t){if(An(t)||(t=Ao(t)),this.eq(t))return 0;var e=this.isNegative(),n=t.isNegative();return e&&!n?-1:!e&&n?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1};de.comp=de.compare;de.negate=function(){return!this.unsigned&&this.eq(kn)?kn:this.not().add(vc)};de.neg=de.negate;de.add=function(t){An(t)||(t=Ao(t));var e=this.high>>>16,n=this.high&65535,o=this.low>>>16,s=this.low&65535,i=t.high>>>16,a=t.high&65535,l=t.low>>>16,u=t.low&65535,c=0,p=0,m=0,f=0;return f+=s+u,m+=f>>>16,f&=65535,m+=o+l,p+=m>>>16,m&=65535,p+=n+a,c+=p>>>16,p&=65535,c+=e+i,c&=65535,Bt(m<<16|f,c<<16|p,this.unsigned)};de.subtract=function(t){return An(t)||(t=Ao(t)),this.add(t.neg())};de.sub=de.subtract;de.multiply=function(t){if(this.isZero())return oo;if(An(t)||(t=Ao(t)),ro){var e=ro.mul(this.low,this.high,t.low,t.high);return Bt(e,ro.get_high(),this.unsigned)}if(t.isZero())return oo;if(this.eq(kn))return t.isOdd()?kn:oo;if(t.eq(kn))return this.isOdd()?kn:oo;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(xy)&&t.lt(xy))return no(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,o=this.high&65535,s=this.low>>>16,i=this.low&65535,a=t.high>>>16,l=t.high&65535,u=t.low>>>16,c=t.low&65535,p=0,m=0,f=0,d=0;return d+=i*c,f+=d>>>16,d&=65535,f+=s*c,m+=f>>>16,f&=65535,f+=i*u,m+=f>>>16,f&=65535,m+=o*c,p+=m>>>16,m&=65535,m+=s*u,p+=m>>>16,m&=65535,m+=i*l,p+=m>>>16,m&=65535,p+=n*c+o*u+s*l+i*a,p&=65535,Bt(f<<16|d,p<<16|m,this.unsigned)};de.mul=de.multiply;de.divide=function(t){if(An(t)||(t=Ao(t)),t.isZero())throw Error("division by zero");if(ro){if(!this.unsigned&&this.high===-2147483648&&t.low===-1&&t.high===-1)return this;var e=(this.unsigned?ro.div_u:ro.div_s)(this.low,this.high,t.low,t.high);return Bt(e,ro.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?al:oo;var n,o,s;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return al;if(t.gt(this.shru(1)))return by;s=al}else{if(this.eq(kn)){if(t.eq(vc)||t.eq(J4))return kn;if(t.eq(kn))return vc;var i=this.shr(1);return n=i.div(t).shl(1),n.eq(oo)?t.isNegative()?vc:J4:(o=this.sub(t.mul(n)),s=n.add(o.div(t)),s)}else if(t.eq(kn))return this.unsigned?al:oo;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();s=oo}for(o=this;o.gte(t);){n=Math.max(1,Math.floor(o.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),l=a<=48?1:am(2,a-48),u=no(n),c=u.mul(t);c.isNegative()||c.gt(o);)n-=l,u=no(n,this.unsigned),c=u.mul(t);u.isZero()&&(u=vc),s=s.add(u),o=o.sub(c)}return s};de.div=de.divide;de.modulo=function(t){if(An(t)||(t=Ao(t)),ro){var e=(this.unsigned?ro.rem_u:ro.rem_s)(this.low,this.high,t.low,t.high);return Bt(e,ro.get_high(),this.unsigned)}return this.sub(this.div(t).mul(t))};de.mod=de.modulo;de.rem=de.modulo;de.not=function(){return Bt(~this.low,~this.high,this.unsigned)};de.and=function(t){return An(t)||(t=Ao(t)),Bt(this.low&t.low,this.high&t.high,this.unsigned)};de.or=function(t){return An(t)||(t=Ao(t)),Bt(this.low|t.low,this.high|t.high,this.unsigned)};de.xor=function(t){return An(t)||(t=Ao(t)),Bt(this.low^t.low,this.high^t.high,this.unsigned)};de.shiftLeft=function(t){return An(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Bt(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):Bt(0,this.low<<t-32,this.unsigned)};de.shl=de.shiftLeft;de.shiftRight=function(t){return An(t)&&(t=t.toInt()),(t&=63)===0?this:t<32?Bt(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):Bt(this.high>>t-32,this.high>=0?0:-1,this.unsigned)};de.shr=de.shiftRight;de.shiftRightUnsigned=function(t){if(An(t)&&(t=t.toInt()),t&=63,t===0)return this;var e=this.high;if(t<32){var n=this.low;return Bt(n>>>t|e<<32-t,e>>>t,this.unsigned)}else return t===32?Bt(e,0,this.unsigned):Bt(e>>>t-32,0,this.unsigned)};de.shru=de.shiftRightUnsigned;de.shr_u=de.shiftRightUnsigned;de.toSigned=function(){return this.unsigned?Bt(this.low,this.high,!1):this};de.toUnsigned=function(){return this.unsigned?this:Bt(this.low,this.high,!0)};de.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()};de.toBytesLE=function(){var t=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,t&255,t>>>8&255,t>>>16&255,t>>>24]};de.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24,t>>>16&255,t>>>8&255,t&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};zt.fromBytes=function(t,e,n){return n?zt.fromBytesLE(t,e):zt.fromBytesBE(t,e)};zt.fromBytesLE=function(t,e){return new zt(t[0]|t[1]<<8|t[2]<<16|t[3]<<24,t[4]|t[5]<<8|t[6]<<16|t[7]<<24,e)};zt.fromBytesBE=function(t,e){return new zt(t[4]<<24|t[5]<<16|t[6]<<8|t[7],t[0]<<24|t[1]<<16|t[2]<<8|t[3],e)}});var fb=ke((Ec,mb)=>{"use strict";var hz=function(){if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof globalThis<"u")return globalThis;throw new Error("unable to locate global object")},xl=hz();mb.exports=Ec=xl.fetch;xl.fetch&&(Ec.default=xl.fetch.bind(xl));Ec.Headers=xl.Headers;Ec.Request=xl.Request;Ec.Response=xl.Response});var db=ke(()=>{"use strict"});var Ub=ke((Vb,N5)=>{"use strict";(function(r,t,e){function n(a){var l=this,u=i();l.next=function(){var c=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=c-(l.c=c|0)},l.c=1,l.s0=u(" "),l.s1=u(" "),l.s2=u(" "),l.s0-=u(a),l.s0<0&&(l.s0+=1),l.s1-=u(a),l.s1<0&&(l.s1+=1),l.s2-=u(a),l.s2<0&&(l.s2+=1),u=null}function o(a,l){return l.c=a.c,l.s0=a.s0,l.s1=a.s1,l.s2=a.s2,l}function s(a,l){var u=new n(a),c=l&&l.state,p=u.next;return p.int32=function(){return u.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,c&&(typeof c=="object"&&o(c,u),p.state=function(){return o(u,{})}),p}function i(){var a=4022871197,l=function(u){u=String(u);for(var c=0;c<u.length;c++){a+=u.charCodeAt(c);var p=.02519603282416938*a;a=p>>>0,p-=a,p*=a,a=p>>>0,p-=a,a+=p*4294967296}return(a>>>0)*23283064365386963e-26};return l}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.alea=s})(Vb,typeof N5=="object"&&N5,typeof define=="function"&&define)});var qb=ke((Wb,k5)=>{"use strict";(function(r,t,e){function n(i){var a=this,l="";a.x=0,a.y=0,a.z=0,a.w=0,a.next=function(){var c=a.x^a.x<<11;return a.x=a.y,a.y=a.z,a.z=a.w,a.w^=a.w>>>19^c^c>>>8},i===(i|0)?a.x=i:l+=i;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a}function s(i,a){var l=new n(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor128=s})(Wb,typeof k5=="object"&&k5,typeof define=="function"&&define)});var Kb=ke((Hb,A5)=>{"use strict";(function(r,t,e){function n(i){var a=this,l="";a.next=function(){var c=a.x^a.x>>>2;return a.x=a.y,a.y=a.z,a.z=a.w,a.w=a.v,(a.d=a.d+362437|0)+(a.v=a.v^a.v<<4^(c^c<<1))|0},a.x=0,a.y=0,a.z=0,a.w=0,a.v=0,i===(i|0)?a.x=i:l+=i;for(var u=0;u<l.length+64;u++)a.x^=l.charCodeAt(u)|0,u==l.length&&(a.d=a.x<<10^a.x>>>4),a.next()}function o(i,a){return a.x=i.x,a.y=i.y,a.z=i.z,a.w=i.w,a.v=i.v,a.d=i.d,a}function s(i,a){var l=new n(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorwow=s})(Hb,typeof A5=="object"&&A5,typeof define=="function"&&define)});var Xb=ke((jb,E5)=>{"use strict";(function(r,t,e){function n(i){var a=this;a.next=function(){var u=a.x,c=a.i,p,m,f;return p=u[c],p^=p>>>7,m=p^p<<24,p=u[c+1&7],m^=p^p>>>10,p=u[c+3&7],m^=p^p>>>3,p=u[c+4&7],m^=p^p<<7,p=u[c+7&7],p=p^p<<13,m^=p^p<<9,u[c]=m,a.i=c+1&7,m};function l(u,c){var p,m,f=[];if(c===(c|0))m=f[0]=c;else for(c=""+c,p=0;p<c.length;++p)f[p&7]=f[p&7]<<15^c.charCodeAt(p)+f[p+1&7]<<13;for(;f.length<8;)f.push(0);for(p=0;p<8&&f[p]===0;++p);for(p==8?m=f[7]=-1:m=f[p],u.x=f,u.i=0,p=256;p>0;--p)u.next()}l(a,i)}function o(i,a){return a.x=i.x.slice(),a.i=i.i,a}function s(i,a){i==null&&(i=+new Date);var l=new n(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.x&&o(u,l),c.state=function(){return o(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xorshift7=s})(jb,typeof E5=="object"&&E5,typeof define=="function"&&define)});var Zb=ke((Yb,_5)=>{"use strict";(function(r,t,e){function n(i){var a=this;a.next=function(){var u=a.w,c=a.X,p=a.i,m,f;return a.w=u=u+1640531527|0,f=c[p+34&127],m=c[p=p+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=c[p]=f^m,a.i=p,f+(u^u>>>16)|0};function l(u,c){var p,m,f,d,g,h=[],x=128;for(c===(c|0)?(m=c,c=null):(c=c+"\0",m=0,x=Math.max(x,c.length)),f=0,d=-32;d<x;++d)c&&(m^=c.charCodeAt((d+32)%c.length)),d===0&&(g=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,d>=0&&(g=g+1640531527|0,p=h[d&127]^=m+g,f=p==0?f+1:0);for(f>=128&&(h[(c&&c.length||0)&127]=-1),f=127,d=4*128;d>0;--d)m=h[f+34&127],p=h[f=f+1&127],m^=m<<13,p^=p<<17,m^=m>>>15,p^=p>>>12,h[f]=m^p;u.w=g,u.X=h,u.i=f}l(a,i)}function o(i,a){return a.i=i.i,a.w=i.w,a.X=i.X.slice(),a}function s(i,a){i==null&&(i=+new Date);var l=new n(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(u.X&&o(u,l),c.state=function(){return o(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.xor4096=s})(Yb,typeof _5=="object"&&_5,typeof define=="function"&&define)});var Qb=ke((Jb,D5)=>{"use strict";(function(r,t,e){function n(i){var a=this,l="";a.next=function(){var c=a.b,p=a.c,m=a.d,f=a.a;return c=c<<25^c>>>7^p,p=p-m|0,m=m<<24^m>>>8^f,f=f-c|0,a.b=c=c<<20^c>>>12^p,a.c=p=p-m|0,a.d=m<<16^p>>>16^f,a.a=f-c|0},a.a=0,a.b=0,a.c=-1640531527,a.d=1367130551,i===Math.floor(i)?(a.a=i/4294967296|0,a.b=i|0):l+=i;for(var u=0;u<l.length+20;u++)a.b^=l.charCodeAt(u)|0,a.next()}function o(i,a){return a.a=i.a,a.b=i.b,a.c=i.c,a.d=i.d,a}function s(i,a){var l=new n(i),u=a&&a.state,c=function(){return(l.next()>>>0)/4294967296};return c.double=function(){do var p=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(p+m)/(1<<21);while(f===0);return f},c.int32=l.next,c.quick=c,u&&(typeof u=="object"&&o(u,l),c.state=function(){return o(l,{})}),c}t&&t.exports?t.exports=s:e&&e.amd?e(function(){return s}):this.tychei=s})(Jb,typeof D5=="object"&&D5,typeof define=="function"&&define)});var ev=ke(()=>{"use strict"});var rv=ke((tv,c3)=>{"use strict";(function(r,t,e){var n=256,o=6,s=52,i="random",a=e.pow(n,o),l=e.pow(2,s),u=l*2,c=n-1,p;function m(v,w,I){var E=[];w=w==!0?{entropy:!0}:w||{};var _=h(g(w.entropy?[v,y(t)]:v??x(),3),E),D=new f(E),M=function(){for(var P=D.g(o),V=a,U=0;P<l;)P=(P+U)*n,V*=n,U=D.g(1);for(;P>=u;)P/=2,V/=2,U>>>=1;return(P+U)/V};return M.int32=function(){return D.g(4)|0},M.quick=function(){return D.g(4)/4294967296},M.double=M,h(y(D.S),t),(w.pass||I||function(P,V,U,q){return q&&(q.S&&d(q,D),P.state=function(){return d(D,{})}),U?(e[i]=P,V):P})(M,_,"global"in w?w.global:this==e,w.state)}function f(v){var w,I=v.length,E=this,_=0,D=E.i=E.j=0,M=E.S=[];for(I||(v=[I++]);_<n;)M[_]=_++;for(_=0;_<n;_++)M[_]=M[D=c&D+v[_%I]+(w=M[_])],M[D]=w;(E.g=function(P){for(var V,U=0,q=E.i,K=E.j,j=E.S;P--;)V=j[q=c&q+1],U=U*n+j[c&(j[q]=j[K=c&K+V])+(j[K]=V)];return E.i=q,E.j=K,U})(n)}function d(v,w){return w.i=v.i,w.j=v.j,w.S=v.S.slice(),w}function g(v,w){var I=[],E=typeof v,_;if(w&&E=="object")for(_ in v)try{I.push(g(v[_],w-1))}catch{}return I.length?I:E=="string"?v:v+"\0"}function h(v,w){for(var I=v+"",E,_=0;_<I.length;)w[c&_]=c&(E^=w[c&_]*19)+I.charCodeAt(_++);return y(w)}function x(){try{var v;return p&&(v=p.randomBytes)?v=v(n):(v=new Uint8Array(n),(r.crypto||r.msCrypto).getRandomValues(v)),y(v)}catch{var w=r.navigator,I=w&&w.plugins;return[+new Date,r,I,r.screen,y(t)]}}function y(v){return String.fromCharCode.apply(0,v)}if(h(e.random(),t),typeof c3=="object"&&c3.exports){c3.exports=m;try{p=ev()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):e["seed"+i]=m})(typeof self<"u"?self:tv,[],Math)});var vp=ke((l8e,nv)=>{"use strict";var eV=Ub(),tV=qb(),rV=Kb(),nV=Xb(),oV=Zb(),sV=Qb(),Sl=rv();Sl.alea=eV;Sl.xor128=tV;Sl.xorwow=rV;Sl.xorshift7=nV;Sl.xor4096=oV;Sl.tychei=sV;nv.exports=Sl});var bO=ke(n4=>{"use strict";(function(){"use strict";var r=function(){this.init()};r.prototype={init:function(){var c=this||t;return c._counter=1e3,c._html5AudioPool=[],c.html5PoolSize=10,c._codecs={},c._howls=[],c._muted=!1,c._volume=1,c._canPlayEvent="canplaythrough",c._navigator=typeof window<"u"&&window.navigator?window.navigator:null,c.masterGain=null,c.noAudio=!1,c.usingWebAudio=!0,c.autoSuspend=!0,c.ctx=null,c.autoUnlock=!0,c._setup(),c},volume:function(c){var p=this||t;if(c=parseFloat(c),p.ctx||u(),typeof c<"u"&&c>=0&&c<=1){if(p._volume=c,p._muted)return p;p.usingWebAudio&&p.masterGain.gain.setValueAtTime(c,t.ctx.currentTime);for(var m=0;m<p._howls.length;m++)if(!p._howls[m]._webAudio)for(var f=p._howls[m]._getSoundIds(),d=0;d<f.length;d++){var g=p._howls[m]._soundById(f[d]);g&&g._node&&(g._node.volume=g._volume*c)}return p}return p._volume},mute:function(c){var p=this||t;p.ctx||u(),p._muted=c,p.usingWebAudio&&p.masterGain.gain.setValueAtTime(c?0:p._volume,t.ctx.currentTime);for(var m=0;m<p._howls.length;m++)if(!p._howls[m]._webAudio)for(var f=p._howls[m]._getSoundIds(),d=0;d<f.length;d++){var g=p._howls[m]._soundById(f[d]);g&&g._node&&(g._node.muted=c?!0:g._muted)}return p},stop:function(){for(var c=this||t,p=0;p<c._howls.length;p++)c._howls[p].stop();return c},unload:function(){for(var c=this||t,p=c._howls.length-1;p>=0;p--)c._howls[p].unload();return c.usingWebAudio&&c.ctx&&typeof c.ctx.close<"u"&&(c.ctx.close(),c.ctx=null,u()),c},codecs:function(c){return(this||t)._codecs[c.replace(/^x-/,"")]},_setup:function(){var c=this||t;if(c.state=c.ctx&&c.ctx.state||"suspended",c._autoSuspend(),!c.usingWebAudio)if(typeof Audio<"u")try{var p=new Audio;typeof p.oncanplaythrough>"u"&&(c._canPlayEvent="canplay")}catch{c.noAudio=!0}else c.noAudio=!0;try{var p=new Audio;p.muted&&(c.noAudio=!0)}catch{}return c.noAudio||c._setupCodecs(),c},_setupCodecs:function(){var c=this||t,p=null;try{p=typeof Audio<"u"?new Audio:null}catch{return c}if(!p||typeof p.canPlayType!="function")return c;var m=p.canPlayType("audio/mpeg;").replace(/^no$/,""),f=c._navigator?c._navigator.userAgent:"",d=f.match(/OPR\/(\d+)/g),g=d&&parseInt(d[0].split("/")[1],10)<33,h=f.indexOf("Safari")!==-1&&f.indexOf("Chrome")===-1,x=f.match(/Version\/(.*?) /),y=h&&x&&parseInt(x[1],10)<15;return c._codecs={mp3:!!(!g&&(m||p.canPlayType("audio/mp3;").replace(/^no$/,""))),mpeg:!!m,opus:!!p.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!p.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),oga:!!p.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!(p.canPlayType('audio/wav; codecs="1"')||p.canPlayType("audio/wav")).replace(/^no$/,""),aac:!!p.canPlayType("audio/aac;").replace(/^no$/,""),caf:!!p.canPlayType("audio/x-caf;").replace(/^no$/,""),m4a:!!(p.canPlayType("audio/x-m4a;")||p.canPlayType("audio/m4a;")||p.canPlayType("audio/aac;")).replace(/^no$/,""),m4b:!!(p.canPlayType("audio/x-m4b;")||p.canPlayType("audio/m4b;")||p.canPlayType("audio/aac;")).replace(/^no$/,""),mp4:!!(p.canPlayType("audio/x-mp4;")||p.canPlayType("audio/mp4;")||p.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!!(!y&&p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")),webm:!!(!y&&p.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")),dolby:!!p.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/,""),flac:!!(p.canPlayType("audio/x-flac;")||p.canPlayType("audio/flac;")).replace(/^no$/,"")},c},_unlockAudio:function(){var c=this||t;if(!(c._audioUnlocked||!c.ctx)){c._audioUnlocked=!1,c.autoUnlock=!1,!c._mobileUnloaded&&c.ctx.sampleRate!==44100&&(c._mobileUnloaded=!0,c.unload()),c._scratchBuffer=c.ctx.createBuffer(1,1,22050);var p=function(m){for(;c._html5AudioPool.length<c.html5PoolSize;)try{var f=new Audio;f._unlocked=!0,c._releaseHtml5Audio(f)}catch{c.noAudio=!0;break}for(var d=0;d<c._howls.length;d++)if(!c._howls[d]._webAudio)for(var g=c._howls[d]._getSoundIds(),h=0;h<g.length;h++){var x=c._howls[d]._soundById(g[h]);x&&x._node&&!x._node._unlocked&&(x._node._unlocked=!0,x._node.load())}c._autoResume();var y=c.ctx.createBufferSource();y.buffer=c._scratchBuffer,y.connect(c.ctx.destination),typeof y.start>"u"?y.noteOn(0):y.start(0),typeof c.ctx.resume=="function"&&c.ctx.resume(),y.onended=function(){y.disconnect(0),c._audioUnlocked=!0,document.removeEventListener("touchstart",p,!0),document.removeEventListener("touchend",p,!0),document.removeEventListener("click",p,!0),document.removeEventListener("keydown",p,!0);for(var v=0;v<c._howls.length;v++)c._howls[v]._emit("unlock")}};return document.addEventListener("touchstart",p,!0),document.addEventListener("touchend",p,!0),document.addEventListener("click",p,!0),document.addEventListener("keydown",p,!0),c}},_obtainHtml5Audio:function(){var c=this||t;if(c._html5AudioPool.length)return c._html5AudioPool.pop();var p=new Audio().play();return p&&typeof Promise<"u"&&(p instanceof Promise||typeof p.then=="function")&&p.catch(function(){console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")}),new Audio},_releaseHtml5Audio:function(c){var p=this||t;return c._unlocked&&p._html5AudioPool.push(c),p},_autoSuspend:function(){var c=this;if(!(!c.autoSuspend||!c.ctx||typeof c.ctx.suspend>"u"||!t.usingWebAudio)){for(var p=0;p<c._howls.length;p++)if(c._howls[p]._webAudio){for(var m=0;m<c._howls[p]._sounds.length;m++)if(!c._howls[p]._sounds[m]._paused)return c}return c._suspendTimer&&clearTimeout(c._suspendTimer),c._suspendTimer=setTimeout(function(){if(c.autoSuspend){c._suspendTimer=null,c.state="suspending";var f=function(){c.state="suspended",c._resumeAfterSuspend&&(delete c._resumeAfterSuspend,c._autoResume())};c.ctx.suspend().then(f,f)}},3e4),c}},_autoResume:function(){var c=this;if(!(!c.ctx||typeof c.ctx.resume>"u"||!t.usingWebAudio))return c.state==="running"&&c.ctx.state!=="interrupted"&&c._suspendTimer?(clearTimeout(c._suspendTimer),c._suspendTimer=null):c.state==="suspended"||c.state==="running"&&c.ctx.state==="interrupted"?(c.ctx.resume().then(function(){c.state="running";for(var p=0;p<c._howls.length;p++)c._howls[p]._emit("resume")}),c._suspendTimer&&(clearTimeout(c._suspendTimer),c._suspendTimer=null)):c.state==="suspending"&&(c._resumeAfterSuspend=!0),c}};var t=new r,e=function(c){var p=this;if(!c.src||c.src.length===0){console.error("An array of source files must be passed with any new Howl.");return}p.init(c)};e.prototype={init:function(c){var p=this;return t.ctx||u(),p._autoplay=c.autoplay||!1,p._format=typeof c.format!="string"?c.format:[c.format],p._html5=c.html5||!1,p._muted=c.mute||!1,p._loop=c.loop||!1,p._pool=c.pool||5,p._preload=typeof c.preload=="boolean"||c.preload==="metadata"?c.preload:!0,p._rate=c.rate||1,p._sprite=c.sprite||{},p._src=typeof c.src!="string"?c.src:[c.src],p._volume=c.volume!==void 0?c.volume:1,p._xhr={method:c.xhr&&c.xhr.method?c.xhr.method:"GET",headers:c.xhr&&c.xhr.headers?c.xhr.headers:null,withCredentials:c.xhr&&c.xhr.withCredentials?c.xhr.withCredentials:!1},p._duration=0,p._state="unloaded",p._sounds=[],p._endTimers={},p._queue=[],p._playLock=!1,p._onend=c.onend?[{fn:c.onend}]:[],p._onfade=c.onfade?[{fn:c.onfade}]:[],p._onload=c.onload?[{fn:c.onload}]:[],p._onloaderror=c.onloaderror?[{fn:c.onloaderror}]:[],p._onplayerror=c.onplayerror?[{fn:c.onplayerror}]:[],p._onpause=c.onpause?[{fn:c.onpause}]:[],p._onplay=c.onplay?[{fn:c.onplay}]:[],p._onstop=c.onstop?[{fn:c.onstop}]:[],p._onmute=c.onmute?[{fn:c.onmute}]:[],p._onvolume=c.onvolume?[{fn:c.onvolume}]:[],p._onrate=c.onrate?[{fn:c.onrate}]:[],p._onseek=c.onseek?[{fn:c.onseek}]:[],p._onunlock=c.onunlock?[{fn:c.onunlock}]:[],p._onresume=[],p._webAudio=t.usingWebAudio&&!p._html5,typeof t.ctx<"u"&&t.ctx&&t.autoUnlock&&t._unlockAudio(),t._howls.push(p),p._autoplay&&p._queue.push({event:"play",action:function(){p.play()}}),p._preload&&p._preload!=="none"&&p.load(),p},load:function(){var c=this,p=null;if(t.noAudio){c._emit("loaderror",null,"No audio support.");return}typeof c._src=="string"&&(c._src=[c._src]);for(var m=0;m<c._src.length;m++){var f,d;if(c._format&&c._format[m])f=c._format[m];else{if(d=c._src[m],typeof d!="string"){c._emit("loaderror",null,"Non-string found in selected audio sources - ignoring.");continue}f=/^data:audio\/([^;,]+);/i.exec(d),f||(f=/\.([^.]+)$/.exec(d.split("?",1)[0])),f&&(f=f[1].toLowerCase())}if(f||console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),f&&t.codecs(f)){p=c._src[m];break}}if(!p){c._emit("loaderror",null,"No codec support for selected audio sources.");return}return c._src=p,c._state="loading",window.location.protocol==="https:"&&p.slice(0,5)==="http:"&&(c._html5=!0,c._webAudio=!1),new n(c),c._webAudio&&s(c),c},play:function(c,p){var m=this,f=null;if(typeof c=="number")f=c,c=null;else{if(typeof c=="string"&&m._state==="loaded"&&!m._sprite[c])return null;if(typeof c>"u"&&(c="__default",!m._playLock)){for(var d=0,g=0;g<m._sounds.length;g++)m._sounds[g]._paused&&!m._sounds[g]._ended&&(d++,f=m._sounds[g]._id);d===1?c=null:f=null}}var h=f?m._soundById(f):m._inactiveSound();if(!h)return null;if(f&&!c&&(c=h._sprite||"__default"),m._state!=="loaded"){h._sprite=c,h._ended=!1;var x=h._id;return m._queue.push({event:"play",action:function(){m.play(x)}}),x}if(f&&!h._paused)return p||m._loadQueue("play"),h._id;m._webAudio&&t._autoResume();var y=Math.max(0,h._seek>0?h._seek:m._sprite[c][0]/1e3),v=Math.max(0,(m._sprite[c][0]+m._sprite[c][1])/1e3-y),w=v*1e3/Math.abs(h._rate),I=m._sprite[c][0]/1e3,E=(m._sprite[c][0]+m._sprite[c][1])/1e3;h._sprite=c,h._ended=!1;var _=function(){h._paused=!1,h._seek=y,h._start=I,h._stop=E,h._loop=!!(h._loop||m._sprite[c][2])};if(y>=E){m._ended(h);return}var D=h._node;if(m._webAudio){var M=function(){m._playLock=!1,_(),m._refreshBuffer(h);var q=h._muted||m._muted?0:h._volume;D.gain.setValueAtTime(q,t.ctx.currentTime),h._playStart=t.ctx.currentTime,typeof D.bufferSource.start>"u"?h._loop?D.bufferSource.noteGrainOn(0,y,86400):D.bufferSource.noteGrainOn(0,y,v):h._loop?D.bufferSource.start(0,y,86400):D.bufferSource.start(0,y,v),w!==1/0&&(m._endTimers[h._id]=setTimeout(m._ended.bind(m,h),w)),p||setTimeout(function(){m._emit("play",h._id),m._loadQueue()},0)};t.state==="running"&&t.ctx.state!=="interrupted"?M():(m._playLock=!0,m.once("resume",M),m._clearTimer(h._id))}else{var P=function(){D.currentTime=y,D.muted=h._muted||m._muted||t._muted||D.muted,D.volume=h._volume*t.volume(),D.playbackRate=h._rate;try{var q=D.play();if(q&&typeof Promise<"u"&&(q instanceof Promise||typeof q.then=="function")?(m._playLock=!0,_(),q.then(function(){m._playLock=!1,D._unlocked=!0,p?m._loadQueue():m._emit("play",h._id)}).catch(function(){m._playLock=!1,m._emit("playerror",h._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."),h._ended=!0,h._paused=!0})):p||(m._playLock=!1,_(),m._emit("play",h._id)),D.playbackRate=h._rate,D.paused){m._emit("playerror",h._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");return}c!=="__default"||h._loop?m._endTimers[h._id]=setTimeout(m._ended.bind(m,h),w):(m._endTimers[h._id]=function(){m._ended(h),D.removeEventListener("ended",m._endTimers[h._id],!1)},D.addEventListener("ended",m._endTimers[h._id],!1))}catch(K){m._emit("playerror",h._id,K)}};D.src==="data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"&&(D.src=m._src,D.load());var V=window&&window.ejecta||!D.readyState&&t._navigator.isCocoonJS;if(D.readyState>=3||V)P();else{m._playLock=!0,m._state="loading";var U=function(){m._state="loaded",P(),D.removeEventListener(t._canPlayEvent,U,!1)};D.addEventListener(t._canPlayEvent,U,!1),m._clearTimer(h._id)}}return h._id},pause:function(c){var p=this;if(p._state!=="loaded"||p._playLock)return p._queue.push({event:"pause",action:function(){p.pause(c)}}),p;for(var m=p._getSoundIds(c),f=0;f<m.length;f++){p._clearTimer(m[f]);var d=p._soundById(m[f]);if(d&&!d._paused&&(d._seek=p.seek(m[f]),d._rateSeek=0,d._paused=!0,p._stopFade(m[f]),d._node))if(p._webAudio){if(!d._node.bufferSource)continue;typeof d._node.bufferSource.stop>"u"?d._node.bufferSource.noteOff(0):d._node.bufferSource.stop(0),p._cleanBuffer(d._node)}else(!isNaN(d._node.duration)||d._node.duration===1/0)&&d._node.pause();arguments[1]||p._emit("pause",d?d._id:null)}return p},stop:function(c,p){var m=this;if(m._state!=="loaded"||m._playLock)return m._queue.push({event:"stop",action:function(){m.stop(c)}}),m;for(var f=m._getSoundIds(c),d=0;d<f.length;d++){m._clearTimer(f[d]);var g=m._soundById(f[d]);g&&(g._seek=g._start||0,g._rateSeek=0,g._paused=!0,g._ended=!0,m._stopFade(f[d]),g._node&&(m._webAudio?g._node.bufferSource&&(typeof g._node.bufferSource.stop>"u"?g._node.bufferSource.noteOff(0):g._node.bufferSource.stop(0),m._cleanBuffer(g._node)):(!isNaN(g._node.duration)||g._node.duration===1/0)&&(g._node.currentTime=g._start||0,g._node.pause(),g._node.duration===1/0&&m._clearSound(g._node))),p||m._emit("stop",g._id))}return m},mute:function(c,p){var m=this;if(m._state!=="loaded"||m._playLock)return m._queue.push({event:"mute",action:function(){m.mute(c,p)}}),m;if(typeof p>"u")if(typeof c=="boolean")m._muted=c;else return m._muted;for(var f=m._getSoundIds(p),d=0;d<f.length;d++){var g=m._soundById(f[d]);g&&(g._muted=c,g._interval&&m._stopFade(g._id),m._webAudio&&g._node?g._node.gain.setValueAtTime(c?0:g._volume,t.ctx.currentTime):g._node&&(g._node.muted=t._muted?!0:c),m._emit("mute",g._id))}return m},volume:function(){var c=this,p=arguments,m,f;if(p.length===0)return c._volume;if(p.length===1||p.length===2&&typeof p[1]>"u"){var d=c._getSoundIds(),g=d.indexOf(p[0]);g>=0?f=parseInt(p[0],10):m=parseFloat(p[0])}else p.length>=2&&(m=parseFloat(p[0]),f=parseInt(p[1],10));var h;if(typeof m<"u"&&m>=0&&m<=1){if(c._state!=="loaded"||c._playLock)return c._queue.push({event:"volume",action:function(){c.volume.apply(c,p)}}),c;typeof f>"u"&&(c._volume=m),f=c._getSoundIds(f);for(var x=0;x<f.length;x++)h=c._soundById(f[x]),h&&(h._volume=m,p[2]||c._stopFade(f[x]),c._webAudio&&h._node&&!h._muted?h._node.gain.setValueAtTime(m,t.ctx.currentTime):h._node&&!h._muted&&(h._node.volume=m*t.volume()),c._emit("volume",h._id))}else return h=f?c._soundById(f):c._sounds[0],h?h._volume:0;return c},fade:function(c,p,m,f){var d=this;if(d._state!=="loaded"||d._playLock)return d._queue.push({event:"fade",action:function(){d.fade(c,p,m,f)}}),d;c=Math.min(Math.max(0,parseFloat(c)),1),p=Math.min(Math.max(0,parseFloat(p)),1),m=parseFloat(m),d.volume(c,f);for(var g=d._getSoundIds(f),h=0;h<g.length;h++){var x=d._soundById(g[h]);if(x){if(f||d._stopFade(g[h]),d._webAudio&&!x._muted){var y=t.ctx.currentTime,v=y+m/1e3;x._volume=c,x._node.gain.setValueAtTime(c,y),x._node.gain.linearRampToValueAtTime(p,v)}d._startFadeInterval(x,c,p,m,g[h],typeof f>"u")}}return d},_startFadeInterval:function(c,p,m,f,d,g){var h=this,x=p,y=m-p,v=Math.abs(y/.01),w=Math.max(4,v>0?f/v:f),I=Date.now();c._fadeTo=m,c._interval=setInterval(function(){var E=(Date.now()-I)/f;I=Date.now(),x+=y*E,x=Math.round(x*100)/100,y<0?x=Math.max(m,x):x=Math.min(m,x),h._webAudio?c._volume=x:h.volume(x,c._id,!0),g&&(h._volume=x),(m<p&&x<=m||m>p&&x>=m)&&(clearInterval(c._interval),c._interval=null,c._fadeTo=null,h.volume(m,c._id),h._emit("fade",c._id))},w)},_stopFade:function(c){var p=this,m=p._soundById(c);return m&&m._interval&&(p._webAudio&&m._node.gain.cancelScheduledValues(t.ctx.currentTime),clearInterval(m._interval),m._interval=null,p.volume(m._fadeTo,c),m._fadeTo=null,p._emit("fade",c)),p},loop:function(){var c=this,p=arguments,m,f,d;if(p.length===0)return c._loop;if(p.length===1)if(typeof p[0]=="boolean")m=p[0],c._loop=m;else return d=c._soundById(parseInt(p[0],10)),d?d._loop:!1;else p.length===2&&(m=p[0],f=parseInt(p[1],10));for(var g=c._getSoundIds(f),h=0;h<g.length;h++)d=c._soundById(g[h]),d&&(d._loop=m,c._webAudio&&d._node&&d._node.bufferSource&&(d._node.bufferSource.loop=m,m&&(d._node.bufferSource.loopStart=d._start||0,d._node.bufferSource.loopEnd=d._stop,c.playing(g[h])&&(c.pause(g[h],!0),c.play(g[h],!0)))));return c},rate:function(){var c=this,p=arguments,m,f;if(p.length===0)f=c._sounds[0]._id;else if(p.length===1){var d=c._getSoundIds(),g=d.indexOf(p[0]);g>=0?f=parseInt(p[0],10):m=parseFloat(p[0])}else p.length===2&&(m=parseFloat(p[0]),f=parseInt(p[1],10));var h;if(typeof m=="number"){if(c._state!=="loaded"||c._playLock)return c._queue.push({event:"rate",action:function(){c.rate.apply(c,p)}}),c;typeof f>"u"&&(c._rate=m),f=c._getSoundIds(f);for(var x=0;x<f.length;x++)if(h=c._soundById(f[x]),h){c.playing(f[x])&&(h._rateSeek=c.seek(f[x]),h._playStart=c._webAudio?t.ctx.currentTime:h._playStart),h._rate=m,c._webAudio&&h._node&&h._node.bufferSource?h._node.bufferSource.playbackRate.setValueAtTime(m,t.ctx.currentTime):h._node&&(h._node.playbackRate=m);var y=c.seek(f[x]),v=(c._sprite[h._sprite][0]+c._sprite[h._sprite][1])/1e3-y,w=v*1e3/Math.abs(h._rate);(c._endTimers[f[x]]||!h._paused)&&(c._clearTimer(f[x]),c._endTimers[f[x]]=setTimeout(c._ended.bind(c,h),w)),c._emit("rate",h._id)}}else return h=c._soundById(f),h?h._rate:c._rate;return c},seek:function(){var c=this,p=arguments,m,f;if(p.length===0)c._sounds.length&&(f=c._sounds[0]._id);else if(p.length===1){var d=c._getSoundIds(),g=d.indexOf(p[0]);g>=0?f=parseInt(p[0],10):c._sounds.length&&(f=c._sounds[0]._id,m=parseFloat(p[0]))}else p.length===2&&(m=parseFloat(p[0]),f=parseInt(p[1],10));if(typeof f>"u")return 0;if(typeof m=="number"&&(c._state!=="loaded"||c._playLock))return c._queue.push({event:"seek",action:function(){c.seek.apply(c,p)}}),c;var h=c._soundById(f);if(h)if(typeof m=="number"&&m>=0){var x=c.playing(f);x&&c.pause(f,!0),h._seek=m,h._ended=!1,c._clearTimer(f),!c._webAudio&&h._node&&!isNaN(h._node.duration)&&(h._node.currentTime=m);var y=function(){x&&c.play(f,!0),c._emit("seek",f)};if(x&&!c._webAudio){var v=function(){c._playLock?setTimeout(v,0):y()};setTimeout(v,0)}else y()}else if(c._webAudio){var w=c.playing(f)?t.ctx.currentTime-h._playStart:0,I=h._rateSeek?h._rateSeek-h._seek:0;return h._seek+(I+w*Math.abs(h._rate))}else return h._node.currentTime;return c},playing:function(c){var p=this;if(typeof c=="number"){var m=p._soundById(c);return m?!m._paused:!1}for(var f=0;f<p._sounds.length;f++)if(!p._sounds[f]._paused)return!0;return!1},duration:function(c){var p=this,m=p._duration,f=p._soundById(c);return f&&(m=p._sprite[f._sprite][1]/1e3),m},state:function(){return this._state},unload:function(){for(var c=this,p=c._sounds,m=0;m<p.length;m++)p[m]._paused||c.stop(p[m]._id),c._webAudio||(c._clearSound(p[m]._node),p[m]._node.removeEventListener("error",p[m]._errorFn,!1),p[m]._node.removeEventListener(t._canPlayEvent,p[m]._loadFn,!1),p[m]._node.removeEventListener("ended",p[m]._endFn,!1),t._releaseHtml5Audio(p[m]._node)),delete p[m]._node,c._clearTimer(p[m]._id);var f=t._howls.indexOf(c);f>=0&&t._howls.splice(f,1);var d=!0;for(m=0;m<t._howls.length;m++)if(t._howls[m]._src===c._src||c._src.indexOf(t._howls[m]._src)>=0){d=!1;break}return o&&d&&delete o[c._src],t.noAudio=!1,c._state="unloaded",c._sounds=[],c=null,null},on:function(c,p,m,f){var d=this,g=d["_on"+c];return typeof p=="function"&&g.push(f?{id:m,fn:p,once:f}:{id:m,fn:p}),d},off:function(c,p,m){var f=this,d=f["_on"+c],g=0;if(typeof p=="number"&&(m=p,p=null),p||m)for(g=0;g<d.length;g++){var h=m===d[g].id;if(p===d[g].fn&&h||!p&&h){d.splice(g,1);break}}else if(c)f["_on"+c]=[];else{var x=Object.keys(f);for(g=0;g<x.length;g++)x[g].indexOf("_on")===0&&Array.isArray(f[x[g]])&&(f[x[g]]=[])}return f},once:function(c,p,m){var f=this;return f.on(c,p,m,1),f},_emit:function(c,p,m){for(var f=this,d=f["_on"+c],g=d.length-1;g>=0;g--)(!d[g].id||d[g].id===p||c==="load")&&(setTimeout((function(h){h.call(this,p,m)}).bind(f,d[g].fn),0),d[g].once&&f.off(c,d[g].fn,d[g].id));return f._loadQueue(c),f},_loadQueue:function(c){var p=this;if(p._queue.length>0){var m=p._queue[0];m.event===c&&(p._queue.shift(),p._loadQueue()),c||m.action()}return p},_ended:function(c){var p=this,m=c._sprite;if(!p._webAudio&&c._node&&!c._node.paused&&!c._node.ended&&c._node.currentTime<c._stop)return setTimeout(p._ended.bind(p,c),100),p;var f=!!(c._loop||p._sprite[m][2]);if(p._emit("end",c._id),!p._webAudio&&f&&p.stop(c._id,!0).play(c._id),p._webAudio&&f){p._emit("play",c._id),c._seek=c._start||0,c._rateSeek=0,c._playStart=t.ctx.currentTime;var d=(c._stop-c._start)*1e3/Math.abs(c._rate);p._endTimers[c._id]=setTimeout(p._ended.bind(p,c),d)}return p._webAudio&&!f&&(c._paused=!0,c._ended=!0,c._seek=c._start||0,c._rateSeek=0,p._clearTimer(c._id),p._cleanBuffer(c._node),t._autoSuspend()),!p._webAudio&&!f&&p.stop(c._id,!0),p},_clearTimer:function(c){var p=this;if(p._endTimers[c]){if(typeof p._endTimers[c]!="function")clearTimeout(p._endTimers[c]);else{var m=p._soundById(c);m&&m._node&&m._node.removeEventListener("ended",p._endTimers[c],!1)}delete p._endTimers[c]}return p},_soundById:function(c){for(var p=this,m=0;m<p._sounds.length;m++)if(c===p._sounds[m]._id)return p._sounds[m];return null},_inactiveSound:function(){var c=this;c._drain();for(var p=0;p<c._sounds.length;p++)if(c._sounds[p]._ended)return c._sounds[p].reset();return new n(c)},_drain:function(){var c=this,p=c._pool,m=0,f=0;if(!(c._sounds.length<p)){for(f=0;f<c._sounds.length;f++)c._sounds[f]._ended&&m++;for(f=c._sounds.length-1;f>=0;f--){if(m<=p)return;c._sounds[f]._ended&&(c._webAudio&&c._sounds[f]._node&&c._sounds[f]._node.disconnect(0),c._sounds.splice(f,1),m--)}}},_getSoundIds:function(c){var p=this;if(typeof c>"u"){for(var m=[],f=0;f<p._sounds.length;f++)m.push(p._sounds[f]._id);return m}else return[c]},_refreshBuffer:function(c){var p=this;return c._node.bufferSource=t.ctx.createBufferSource(),c._node.bufferSource.buffer=o[p._src],c._panner?c._node.bufferSource.connect(c._panner):c._node.bufferSource.connect(c._node),c._node.bufferSource.loop=c._loop,c._loop&&(c._node.bufferSource.loopStart=c._start||0,c._node.bufferSource.loopEnd=c._stop||0),c._node.bufferSource.playbackRate.setValueAtTime(c._rate,t.ctx.currentTime),p},_cleanBuffer:function(c){var p=this,m=t._navigator&&t._navigator.vendor.indexOf("Apple")>=0;if(!c.bufferSource)return p;if(t._scratchBuffer&&c.bufferSource&&(c.bufferSource.onended=null,c.bufferSource.disconnect(0),m))try{c.bufferSource.buffer=t._scratchBuffer}catch{}return c.bufferSource=null,p},_clearSound:function(c){var p=/MSIE |Trident\//.test(t._navigator&&t._navigator.userAgent);p||(c.src="data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA")}};var n=function(c){this._parent=c,this.init()};n.prototype={init:function(){var c=this,p=c._parent;return c._muted=p._muted,c._loop=p._loop,c._volume=p._volume,c._rate=p._rate,c._seek=0,c._paused=!0,c._ended=!0,c._sprite="__default",c._id=++t._counter,p._sounds.push(c),c.create(),c},create:function(){var c=this,p=c._parent,m=t._muted||c._muted||c._parent._muted?0:c._volume;return p._webAudio?(c._node=typeof t.ctx.createGain>"u"?t.ctx.createGainNode():t.ctx.createGain(),c._node.gain.setValueAtTime(m,t.ctx.currentTime),c._node.paused=!0,c._node.connect(t.masterGain)):t.noAudio||(c._node=t._obtainHtml5Audio(),c._errorFn=c._errorListener.bind(c),c._node.addEventListener("error",c._errorFn,!1),c._loadFn=c._loadListener.bind(c),c._node.addEventListener(t._canPlayEvent,c._loadFn,!1),c._endFn=c._endListener.bind(c),c._node.addEventListener("ended",c._endFn,!1),c._node.src=p._src,c._node.preload=p._preload===!0?"auto":p._preload,c._node.volume=m*t.volume(),c._node.load()),c},reset:function(){var c=this,p=c._parent;return c._muted=p._muted,c._loop=p._loop,c._volume=p._volume,c._rate=p._rate,c._seek=0,c._rateSeek=0,c._paused=!0,c._ended=!0,c._sprite="__default",c._id=++t._counter,c},_errorListener:function(){var c=this;c._parent._emit("loaderror",c._id,c._node.error?c._node.error.code:0),c._node.removeEventListener("error",c._errorFn,!1)},_loadListener:function(){var c=this,p=c._parent;p._duration=Math.ceil(c._node.duration*10)/10,Object.keys(p._sprite).length===0&&(p._sprite={__default:[0,p._duration*1e3]}),p._state!=="loaded"&&(p._state="loaded",p._emit("load"),p._loadQueue()),c._node.removeEventListener(t._canPlayEvent,c._loadFn,!1)},_endListener:function(){var c=this,p=c._parent;p._duration===1/0&&(p._duration=Math.ceil(c._node.duration*10)/10,p._sprite.__default[1]===1/0&&(p._sprite.__default[1]=p._duration*1e3),p._ended(c)),c._node.removeEventListener("ended",c._endFn,!1)}};var o={},s=function(c){var p=c._src;if(o[p]){c._duration=o[p].duration,l(c);return}if(/^data:[^;]+;base64,/.test(p)){for(var m=atob(p.split(",")[1]),f=new Uint8Array(m.length),d=0;d<m.length;++d)f[d]=m.charCodeAt(d);a(f.buffer,c)}else{var g=new XMLHttpRequest;g.open(c._xhr.method,p,!0),g.withCredentials=c._xhr.withCredentials,g.responseType="arraybuffer",c._xhr.headers&&Object.keys(c._xhr.headers).forEach(function(h){g.setRequestHeader(h,c._xhr.headers[h])}),g.onload=function(){var h=(g.status+"")[0];if(h!=="0"&&h!=="2"&&h!=="3"){c._emit("loaderror",null,"Failed loading audio file with status: "+g.status+".");return}a(g.response,c)},g.onerror=function(){c._webAudio&&(c._html5=!0,c._webAudio=!1,c._sounds=[],delete o[p],c.load())},i(g)}},i=function(c){try{c.send()}catch{c.onerror()}},a=function(c,p){var m=function(){p._emit("loaderror",null,"Decoding audio data failed.")},f=function(d){d&&p._sounds.length>0?(o[p._src]=d,l(p,d)):m()};typeof Promise<"u"&&t.ctx.decodeAudioData.length===1?t.ctx.decodeAudioData(c).then(f).catch(m):t.ctx.decodeAudioData(c,f,m)},l=function(c,p){p&&!c._duration&&(c._duration=p.duration),Object.keys(c._sprite).length===0&&(c._sprite={__default:[0,c._duration*1e3]}),c._state!=="loaded"&&(c._state="loaded",c._emit("load"),c._loadQueue())},u=function(){if(t.usingWebAudio){try{typeof AudioContext<"u"?t.ctx=new AudioContext:typeof webkitAudioContext<"u"?t.ctx=new webkitAudioContext:t.usingWebAudio=!1}catch{t.usingWebAudio=!1}t.ctx||(t.usingWebAudio=!1);var c=/iP(hone|od|ad)/.test(t._navigator&&t._navigator.platform),p=t._navigator&&t._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),m=p?parseInt(p[1],10):null;if(c&&m&&m<9){var f=/safari/.test(t._navigator&&t._navigator.userAgent.toLowerCase());t._navigator&&!f&&(t.usingWebAudio=!1)}t.usingWebAudio&&(t.masterGain=typeof t.ctx.createGain>"u"?t.ctx.createGainNode():t.ctx.createGain(),t.masterGain.gain.setValueAtTime(t._muted?0:t._volume,t.ctx.currentTime),t.masterGain.connect(t.ctx.destination)),t._setup()}};typeof define=="function"&&define.amd&&define([],function(){return{Howler:t,Howl:e}}),typeof n4<"u"&&(n4.Howler=t,n4.Howl=e),typeof globalThis<"u"?(globalThis.HowlerGlobal=r,globalThis.Howler=t,globalThis.Howl=e,globalThis.Sound=n):typeof window<"u"&&(window.HowlerGlobal=r,window.Howler=t,window.Howl=e,window.Sound=n)})();(function(){"use strict";HowlerGlobal.prototype._pos=[0,0,0],HowlerGlobal.prototype._orientation=[0,0,-1,0,1,0],HowlerGlobal.prototype.stereo=function(t){var e=this;if(!e.ctx||!e.ctx.listener)return e;for(var n=e._howls.length-1;n>=0;n--)e._howls[n].stereo(t);return e},HowlerGlobal.prototype.pos=function(t,e,n){var o=this;if(!o.ctx||!o.ctx.listener)return o;if(e=typeof e!="number"?o._pos[1]:e,n=typeof n!="number"?o._pos[2]:n,typeof t=="number")o._pos=[t,e,n],typeof o.ctx.listener.positionX<"u"?(o.ctx.listener.positionX.setTargetAtTime(o._pos[0],Howler.ctx.currentTime,.1),o.ctx.listener.positionY.setTargetAtTime(o._pos[1],Howler.ctx.currentTime,.1),o.ctx.listener.positionZ.setTargetAtTime(o._pos[2],Howler.ctx.currentTime,.1)):o.ctx.listener.setPosition(o._pos[0],o._pos[1],o._pos[2]);else return o._pos;return o},HowlerGlobal.prototype.orientation=function(t,e,n,o,s,i){var a=this;if(!a.ctx||!a.ctx.listener)return a;var l=a._orientation;if(e=typeof e!="number"?l[1]:e,n=typeof n!="number"?l[2]:n,o=typeof o!="number"?l[3]:o,s=typeof s!="number"?l[4]:s,i=typeof i!="number"?l[5]:i,typeof t=="number")a._orientation=[t,e,n,o,s,i],typeof a.ctx.listener.forwardX<"u"?(a.ctx.listener.forwardX.setTargetAtTime(t,Howler.ctx.currentTime,.1),a.ctx.listener.forwardY.setTargetAtTime(e,Howler.ctx.currentTime,.1),a.ctx.listener.forwardZ.setTargetAtTime(n,Howler.ctx.currentTime,.1),a.ctx.listener.upX.setTargetAtTime(o,Howler.ctx.currentTime,.1),a.ctx.listener.upY.setTargetAtTime(s,Howler.ctx.currentTime,.1),a.ctx.listener.upZ.setTargetAtTime(i,Howler.ctx.currentTime,.1)):a.ctx.listener.setOrientation(t,e,n,o,s,i);else return l;return a},Howl.prototype.init=function(t){return function(e){var n=this;return n._orientation=e.orientation||[1,0,0],n._stereo=e.stereo||null,n._pos=e.pos||null,n._pannerAttr={coneInnerAngle:typeof e.coneInnerAngle<"u"?e.coneInnerAngle:360,coneOuterAngle:typeof e.coneOuterAngle<"u"?e.coneOuterAngle:360,coneOuterGain:typeof e.coneOuterGain<"u"?e.coneOuterGain:0,distanceModel:typeof e.distanceModel<"u"?e.distanceModel:"inverse",maxDistance:typeof e.maxDistance<"u"?e.maxDistance:1e4,panningModel:typeof e.panningModel<"u"?e.panningModel:"HRTF",refDistance:typeof e.refDistance<"u"?e.refDistance:1,rolloffFactor:typeof e.rolloffFactor<"u"?e.rolloffFactor:1},n._onstereo=e.onstereo?[{fn:e.onstereo}]:[],n._onpos=e.onpos?[{fn:e.onpos}]:[],n._onorientation=e.onorientation?[{fn:e.onorientation}]:[],t.call(this,e)}}(Howl.prototype.init),Howl.prototype.stereo=function(t,e){var n=this;if(!n._webAudio)return n;if(n._state!=="loaded")return n._queue.push({event:"stereo",action:function(){n.stereo(t,e)}}),n;var o=typeof Howler.ctx.createStereoPanner>"u"?"spatial":"stereo";if(typeof e>"u")if(typeof t=="number")n._stereo=t,n._pos=[t,0,0];else return n._stereo;for(var s=n._getSoundIds(e),i=0;i<s.length;i++){var a=n._soundById(s[i]);if(a)if(typeof t=="number")a._stereo=t,a._pos=[t,0,0],a._node&&(a._pannerAttr.panningModel="equalpower",(!a._panner||!a._panner.pan)&&r(a,o),o==="spatial"?typeof a._panner.positionX<"u"?(a._panner.positionX.setValueAtTime(t,Howler.ctx.currentTime),a._panner.positionY.setValueAtTime(0,Howler.ctx.currentTime),a._panner.positionZ.setValueAtTime(0,Howler.ctx.currentTime)):a._panner.setPosition(t,0,0):a._panner.pan.setValueAtTime(t,Howler.ctx.currentTime)),n._emit("stereo",a._id);else return a._stereo}return n},Howl.prototype.pos=function(t,e,n,o){var s=this;if(!s._webAudio)return s;if(s._state!=="loaded")return s._queue.push({event:"pos",action:function(){s.pos(t,e,n,o)}}),s;if(e=typeof e!="number"?0:e,n=typeof n!="number"?-.5:n,typeof o>"u")if(typeof t=="number")s._pos=[t,e,n];else return s._pos;for(var i=s._getSoundIds(o),a=0;a<i.length;a++){var l=s._soundById(i[a]);if(l)if(typeof t=="number")l._pos=[t,e,n],l._node&&((!l._panner||l._panner.pan)&&r(l,"spatial"),typeof l._panner.positionX<"u"?(l._panner.positionX.setValueAtTime(t,Howler.ctx.currentTime),l._panner.positionY.setValueAtTime(e,Howler.ctx.currentTime),l._panner.positionZ.setValueAtTime(n,Howler.ctx.currentTime)):l._panner.setPosition(t,e,n)),s._emit("pos",l._id);else return l._pos}return s},Howl.prototype.orientation=function(t,e,n,o){var s=this;if(!s._webAudio)return s;if(s._state!=="loaded")return s._queue.push({event:"orientation",action:function(){s.orientation(t,e,n,o)}}),s;if(e=typeof e!="number"?s._orientation[1]:e,n=typeof n!="number"?s._orientation[2]:n,typeof o>"u")if(typeof t=="number")s._orientation=[t,e,n];else return s._orientation;for(var i=s._getSoundIds(o),a=0;a<i.length;a++){var l=s._soundById(i[a]);if(l)if(typeof t=="number")l._orientation=[t,e,n],l._node&&(l._panner||(l._pos||(l._pos=s._pos||[0,0,-.5]),r(l,"spatial")),typeof l._panner.orientationX<"u"?(l._panner.orientationX.setValueAtTime(t,Howler.ctx.currentTime),l._panner.orientationY.setValueAtTime(e,Howler.ctx.currentTime),l._panner.orientationZ.setValueAtTime(n,Howler.ctx.currentTime)):l._panner.setOrientation(t,e,n)),s._emit("orientation",l._id);else return l._orientation}return s},Howl.prototype.pannerAttr=function(){var t=this,e=arguments,n,o,s;if(!t._webAudio)return t;if(e.length===0)return t._pannerAttr;if(e.length===1)if(typeof e[0]=="object")n=e[0],typeof o>"u"&&(n.pannerAttr||(n.pannerAttr={coneInnerAngle:n.coneInnerAngle,coneOuterAngle:n.coneOuterAngle,coneOuterGain:n.coneOuterGain,distanceModel:n.distanceModel,maxDistance:n.maxDistance,refDistance:n.refDistance,rolloffFactor:n.rolloffFactor,panningModel:n.panningModel}),t._pannerAttr={coneInnerAngle:typeof n.pannerAttr.coneInnerAngle<"u"?n.pannerAttr.coneInnerAngle:t._coneInnerAngle,coneOuterAngle:typeof n.pannerAttr.coneOuterAngle<"u"?n.pannerAttr.coneOuterAngle:t._coneOuterAngle,coneOuterGain:typeof n.pannerAttr.coneOuterGain<"u"?n.pannerAttr.coneOuterGain:t._coneOuterGain,distanceModel:typeof n.pannerAttr.distanceModel<"u"?n.pannerAttr.distanceModel:t._distanceModel,maxDistance:typeof n.pannerAttr.maxDistance<"u"?n.pannerAttr.maxDistance:t._maxDistance,refDistance:typeof n.pannerAttr.refDistance<"u"?n.pannerAttr.refDistance:t._refDistance,rolloffFactor:typeof n.pannerAttr.rolloffFactor<"u"?n.pannerAttr.rolloffFactor:t._rolloffFactor,panningModel:typeof n.pannerAttr.panningModel<"u"?n.pannerAttr.panningModel:t._panningModel});else return s=t._soundById(parseInt(e[0],10)),s?s._pannerAttr:t._pannerAttr;else e.length===2&&(n=e[0],o=parseInt(e[1],10));for(var i=t._getSoundIds(o),a=0;a<i.length;a++)if(s=t._soundById(i[a]),s){var l=s._pannerAttr;l={coneInnerAngle:typeof n.coneInnerAngle<"u"?n.coneInnerAngle:l.coneInnerAngle,coneOuterAngle:typeof n.coneOuterAngle<"u"?n.coneOuterAngle:l.coneOuterAngle,coneOuterGain:typeof n.coneOuterGain<"u"?n.coneOuterGain:l.coneOuterGain,distanceModel:typeof n.distanceModel<"u"?n.distanceModel:l.distanceModel,maxDistance:typeof n.maxDistance<"u"?n.maxDistance:l.maxDistance,refDistance:typeof n.refDistance<"u"?n.refDistance:l.refDistance,rolloffFactor:typeof n.rolloffFactor<"u"?n.rolloffFactor:l.rolloffFactor,panningModel:typeof n.panningModel<"u"?n.panningModel:l.panningModel};var u=s._panner;u||(s._pos||(s._pos=t._pos||[0,0,-.5]),r(s,"spatial"),u=s._panner),u.coneInnerAngle=l.coneInnerAngle,u.coneOuterAngle=l.coneOuterAngle,u.coneOuterGain=l.coneOuterGain,u.distanceModel=l.distanceModel,u.maxDistance=l.maxDistance,u.refDistance=l.refDistance,u.rolloffFactor=l.rolloffFactor,u.panningModel=l.panningModel}return t},Sound.prototype.init=function(t){return function(){var e=this,n=e._parent;e._orientation=n._orientation,e._stereo=n._stereo,e._pos=n._pos,e._pannerAttr=n._pannerAttr,t.call(this),e._stereo?n.stereo(e._stereo):e._pos&&n.pos(e._pos[0],e._pos[1],e._pos[2],e._id)}}(Sound.prototype.init),Sound.prototype.reset=function(t){return function(){var e=this,n=e._parent;return e._orientation=n._orientation,e._stereo=n._stereo,e._pos=n._pos,e._pannerAttr=n._pannerAttr,e._stereo?n.stereo(e._stereo):e._pos?n.pos(e._pos[0],e._pos[1],e._pos[2],e._id):e._panner&&(e._panner.disconnect(0),e._panner=void 0,n._refreshBuffer(e)),t.call(this)}}(Sound.prototype.reset);var r=function(t,e){e=e||"spatial",e==="spatial"?(t._panner=Howler.ctx.createPanner(),t._panner.coneInnerAngle=t._pannerAttr.coneInnerAngle,t._panner.coneOuterAngle=t._pannerAttr.coneOuterAngle,t._panner.coneOuterGain=t._pannerAttr.coneOuterGain,t._panner.distanceModel=t._pannerAttr.distanceModel,t._panner.maxDistance=t._pannerAttr.maxDistance,t._panner.refDistance=t._pannerAttr.refDistance,t._panner.rolloffFactor=t._pannerAttr.rolloffFactor,t._panner.panningModel=t._pannerAttr.panningModel,typeof t._panner.positionX<"u"?(t._panner.positionX.setValueAtTime(t._pos[0],Howler.ctx.currentTime),t._panner.positionY.setValueAtTime(t._pos[1],Howler.ctx.currentTime),t._panner.positionZ.setValueAtTime(t._pos[2],Howler.ctx.currentTime)):t._panner.setPosition(t._pos[0],t._pos[1],t._pos[2]),typeof t._panner.orientationX<"u"?(t._panner.orientationX.setValueAtTime(t._orientation[0],Howler.ctx.currentTime),t._panner.orientationY.setValueAtTime(t._orientation[1],Howler.ctx.currentTime),t._panner.orientationZ.setValueAtTime(t._orientation[2],Howler.ctx.currentTime)):t._panner.setOrientation(t._orientation[0],t._orientation[1],t._orientation[2])):(t._panner=Howler.ctx.createStereoPanner(),t._panner.pan.setValueAtTime(t._stereo,Howler.ctx.currentTime)),t._panner.connect(t._node),t._paused||t._parent.pause(t._id,!0).play(t._id,!0)}})()});function IO(r,t){if(r&1&&Vr(0,"div",4),r&2){let e=un();T2("background-image","url("+e.songs[0].coverUrl+")")}}function NO(r,t){if(r&1&&(Xe(0,"p",10),lr(1),tt()),r&2){let e=un(2);et(),Ji("Compositor: ",e.songs[0].composer)}}function kO(r,t){if(r&1&&(Xe(0,"p",13),lr(1),tt()),r&2){let e=un(2);et(),Ji("",e.songs[0].bpm," BPM")}}function AO(r,t){if(r&1&&Vr(0,"div",16),r&2){let e=t.$implicit,n=t.$index,o=un(2);T2("height",e,"%"),L8("bg-green-500",n*100/o.songs[0].waveformData.length<(o.songs[0].progress||0))}}function EO(r,t){if(r&1&&(Xe(0,"div",2),Vr(1,"img",5),Xe(2,"div",6)(3,"div",7)(4,"h3",8),lr(5),tt(),Xe(6,"p",9),lr(7),tt(),Xr(8,NO,2,1,"p",10),Xe(9,"div",11)(10,"p",12),lr(11),tt(),Xr(12,kO,2,1,"p",13),tt()(),Xe(13,"div",14),t1(14,AO,1,4,"div",15,M8),tt()()()),r&2){let e=un();et(),Zi("src",e.songs[0].coverUrl,Ql),et(4),Ko(e.songs[0].title),et(2),Ko(e.songs[0].artists),et(),Yr(e.songs[0].composer?8:-1),et(3),z8("",e.songs[0].currentTime," / ",e.songs[0].duration),et(),Yr(e.songs[0].bpm?12:-1),et(2),r1(e.songs[0].waveformData)}}function _O(r,t){if(r&1&&Vr(0,"div",17),r&2){let e=un();T2("background-image","url("+e.songs[1].coverUrl+")")}}var I2=class r{songs=[];static \u0275fac=function(e){return new(e||r)};static \u0275cmp=e1({type:r,selectors:[["app-song-carousel"]],inputs:{songs:"songs"},decls:4,vars:3,consts:[[1,"m-4","inline-flex","relative"],[1,"absolute","w-[400px]","h-[400px]","rounded-full","blur-3xl","opacity-30","z-10",2,"top","-125px","left","-15px","background-size","cover","background-position","center",3,"background-image"],[1,"flex-none","ml-4","z-40","w-[370px]","h-[150px]","bg-zinc-900","text-white","rounded-lg","shadow-md","flex","snap-start","mx-auto",2,"zoom","80%"],[1,"h-[110px]","z-30","-ml-16","mt-1","w-[110px]","bg-cover","bg-center","rounded-full",3,"background-image"],[1,"absolute","w-[400px]","h-[400px]","rounded-full","blur-3xl","opacity-30","z-10",2,"top","-125px","left","-15px","background-size","cover","background-position","center"],["alt","Cover",1,"w-[100px]","h-full","object-cover","rounded-l-lg",3,"src"],[1,"flex","flex-col","justify-between","px-4","py-2","w-full"],[1,"overflow-hidden","w-[230px]"],[1,"text-sm","font-semibold","truncate"],[1,"text-xs","text-gray-400","truncate"],[1,"text-xs","text-gray-500","truncate"],[1,"flex","justify-between"],[1,"text-xs","text-gray-500"],[1,"text-xs","text-green-500","font-semibold"],[1,"mt-1","flex","items-end","space-x-[1px]","h-8","overflow-hidden"],[1,"w-[1.4px]","bg-gray-700",3,"height","bg-green-500"],[1,"w-[1.4px]","bg-gray-700"],[1,"h-[110px]","z-30","-ml-16","mt-1","w-[110px]","bg-cover","bg-center","rounded-full"]],template:function(e,n){e&1&&(Xe(0,"div",0),Xr(1,IO,1,2,"div",1),Xr(2,EO,16,7,"div",2),Xr(3,_O,1,2,"div",3),tt()),e&2&&(et(),Yr(n.songs.length>0?1:-1),et(),Yr(n.songs.length>0?2:-1),et(),Yr(n.songs.length>1?3:-1))},encapsulation:2})};function DO(r,t){r&1&&(Xe(0,"div",1)(1,"p"),lr(2,"No songs available"),tt()())}function RO(r,t){if(r&1&&(Xe(0,"p",11),lr(1),tt()),r&2){let e=un().$implicit;et(),Ji("",e.bpm," BPM")}}function $O(r,t){r&1&&(Xi(),Xe(0,"svg",12),Vr(1,"path",14),tt())}function FO(r,t){r&1&&(Xi(),Xe(0,"svg",13),Vr(1,"path",14),tt())}function OO(r,t){if(r&1&&(Xe(0,"div",2)(1,"div",3),Vr(2,"img",4),Xe(3,"div",5)(4,"div",6)(5,"h3",7),lr(6),tt(),Xe(7,"p",8),lr(8),tt(),Xe(9,"div",9)(10,"p",10),lr(11),tt(),Xr(12,RO,2,1,"p",11),tt()()(),Xr(13,$O,2,0,":svg:svg",12),Xr(14,FO,2,0,":svg:svg",13),tt()()),r&2){let e=t.$implicit,n=t.$index;et(2),Zi("src",e.coverUrl,Ql),et(4),Ko(e.title),et(2),Ko(e.artists),et(3),Ji("Duracion / ",e.duration),et(),Yr(e.bpm?12:-1),et(),Yr(n===0?13:-1),et(),Yr(n===1?14:-1)}}var N2=class r{songs=[];static \u0275fac=function(e){return new(e||r)};static \u0275cmp=e1({type:r,selectors:[["app-list-song"]],inputs:{songs:"songs"},decls:4,vars:1,consts:[[1,"song-list-container","h-[27rem]"],[1,"empty-state"],[1,"song-item"],[1,"flex","w-full","bg-zinc-950","text-white","rounded-lg","shadow-md","mb-3","overflow-hidden"],["alt","Cover",1,"w-[80px]","h-[70px]","object-cover",3,"src"],[1,"flex","flex-col","justify-between","px-4","py-2","w-full"],[1,"overflow-hidden"],[1,"text-sm","font-semibold","truncate"],[1,"text-xs","text-gray-400","truncate"],[1,"flex","justify-between"],[1,"text-xs","text-gray-500"],[1,"text-xs","text-green-500","font-semibold","mr-2"],["xmlns","http://www.w3.org/2000/svg","height","24px","viewBox","0 -960 960 960","width","24px","fill","#75FB4C",1,"mt-6","mr-2"],["xmlns","http://www.w3.org/2000/svg","height","24px","viewBox","0 -960 960 960","width","24px","fill","#FFFF00",1,"mt-6","mr-2"],["d","M480-200q-117 0-198.5-81.5T200-480q0-117 81.5-198.5T480-760q117 0 198.5 81.5T760-480q0 117-81.5 198.5T480-200Z"]],template:function(e,n){e&1&&(Xe(0,"div",0),Xr(1,DO,3,0,"div",1),t1(2,OO,15,7,"div",2,P8),tt()),e&2&&(et(),Yr(n.songs.length===0?1:-1),et(),r1(n.songs))},styles:['.song-list-container[_ngcontent-%COMP%]{padding:1rem;height:27rem;overflow-y:auto;position:relative}.song-list-container[_ngcontent-%COMP%]:after{content:"";position:absolute;bottom:0;left:0;right:0;height:4rem;background:linear-gradient(to bottom,#0000,#000c);pointer-events:none}.empty-state[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;height:100px;color:#9ca3af;font-style:italic}.song-item[_ngcontent-%COMP%]{transition:transform .2s ease}.song-item[_ngcontent-%COMP%]:hover{transform:translate(5px)}']})};var wO=Vn(A4());var O2=class r{constructor(t){this.http=t}defaultCoverUrl="https://dj.beatport.com/picx/vinyl_default2.png";getAlbumArt(t,e){let n=this.cleanSearchTerm(t),o=this.cleanSearchTerm(e),s=`${n} ${o}`,i=`https://itunes.apple.com/search?term=${encodeURIComponent(s)}&media=music&limit=1`;return this.http.get(i).pipe(a4(a=>{if(a&&a.results&&a.results.length>0){let l=a.results[0].artworkUrl100;if(l)return l=l.replace("100x100","600x600"),l}return null}),ju(()=>P0(null)),x2(a=>{if(a)return P0(a);let l=`https://musicbrainz.org/ws/2/release/?query=artist:${encodeURIComponent(o)}%20AND%20release:${encodeURIComponent(n)}&fmt=json&limit=1`;return this.http.get(l).pipe(a4(u=>u&&u.releases&&u.releases.length>0?`https://coverartarchive.org/release/${u.releases[0].id}/front-500`:this.defaultCoverUrl),ju(()=>P0(this.defaultCoverUrl)))}))}cleanSearchTerm(t){return t?t.replace(/\([^)]*\)/g,"").replace(/(original|extended|remix|mix|version|edit)/gi,"").replace(/[^\w\s]/gi,"").trim():""}static \u0275fac=function(e){return new(e||r)(y2(C2))};static \u0275prov=Qn({token:r,factory:r.\u0275fac,providedIn:"root"})};var M2=class r{audioContext=null;constructor(){}detectBpm(t){return O(this,null,function*(){this.audioContext||(this.audioContext=new AudioContext);let e=t.getChannelData(0),n=Math.min(t.length,t.sampleRate*30),o=Math.ceil(e.length/n),s=[];for(let i=0;i<o;i++){let a=i*n,l=Math.min(a+n,e.length),u=e.slice(a,l),c=this.calculateBpmForChunk(u,t.sampleRate);c>0&&s.push(c)}return s.length===0?120:this.findMostCommonBpm(s)})}calculateBpmForChunk(t,e){let n=this.lowPassFilter(t,e),o=this.findPeaks(n,e),s=this.getIntervals(o,e),i=this.groupByTempo(s);return this.findDominantTempo(i)}lowPassFilter(t,e){let n=new Float32Array(t.length),o=Math.round(e/100);for(let s=0;s<t.length;s++){let i=0,a=0;for(let l=Math.max(0,s-o);l<Math.min(t.length,s+o);l++)i+=Math.abs(t[l]),a++;n[s]=i/a}return n}findPeaks(t,e){let n=[],o=this.calculateThreshold(t),s=Math.round(e*.2),i=-s;for(let a=1;a<t.length-1;a++)t[a]>o&&t[a]>t[a-1]&&t[a]>=t[a+1]&&a-i>=s&&(n.push(a),i=a);return n}calculateThreshold(t){let e=0,n=0;for(let a=0;a<t.length;a++)e+=t[a],n+=t[a]*t[a];let o=e/t.length,s=n/t.length-o*o,i=Math.sqrt(s);return o+1.5*i}getIntervals(t,e){let n=[];for(let o=1;o<t.length;o++){let s=(t[o]-t[o-1])/e*1e3;n.push(s)}return n}groupByTempo(t){let e=new Map,n=60,o=180;for(let s of t){let i=6e4/s;for(;i<n;)i*=2;for(;i>o;)i/=2;let a=Math.round(i);e.set(a,(e.get(a)||0)+1)}return e}findDominantTempo(t){let e=0,n=120;return t.forEach((o,s)=>{o>e&&(e=o,n=s)}),n}findMostCommonBpm(t){let e=new Map;for(let s of t){let i=Math.round(s);e.set(i,(e.get(i)||0)+1)}let n=0,o=120;return e.forEach((s,i)=>{s>n&&(n=s,o=i)}),o}static \u0275fac=function(e){return new(e||r)};static \u0275prov=Qn({token:r,factory:r.\u0275fac,providedIn:"root"})};var P2=class r{audioContext=null;constructor(){}createTransition(t,e,n,o,s){this.audioContext=s;let i=s.createBiquadFilter();i.type="lowshelf",i.frequency.value=200,i.gain.value=0;let a=s.createBiquadFilter();a.type="peaking",a.frequency.value=1e3,a.Q.value=1,a.gain.value=0;let l=s.createBiquadFilter();l.type="highshelf",l.frequency.value=3200,l.gain.value=0;let u=s.createBiquadFilter();u.type="lowshelf",u.frequency.value=200,u.gain.value=0;let c=s.createBiquadFilter();c.type="peaking",c.frequency.value=1e3,c.Q.value=1,c.gain.value=0;let p=s.createBiquadFilter();p.type="highshelf",p.frequency.value=3200,p.gain.value=0;let m=s.createGain(),f=s.createGain();return t.connect(i).connect(a).connect(l).connect(m),e.connect(u).connect(c).connect(p).connect(f),{currentChain:m,nextChain:f,transitionNodes:{currentEqLow:i,currentEqMid:a,currentEqHigh:l,nextEqLow:u,nextEqMid:c,nextEqHigh:p,currentGain:m,nextGain:f}}}startTransition(t,e,n,o,s,i,a,l){let u=s.currentTime,c=Math.min(o,32),p=60/e,m=60/n,f=p*8,d=m*8,g=Math.floor(c/f),x=Math.max(e,n)/Math.min(e,n)<1.1;i&&a&&l&&typeof i.applyAIMixTransition=="function"&&i.applyAIMixTransition(a,l,s,c),this.applyEqTransition(t,u,c,g),this.applyVolumeTransition(t,u,c,g),x&&console.log(`Applying beatmatching: Current BPM ${e}, Next BPM ${n}`)}applyEqTransition(t,e,n,o){let{currentEqLow:s,currentEqMid:i,currentEqHigh:a,nextEqLow:l,nextEqMid:u,nextEqHigh:c}=t,p=e+n*.25;c.gain.setValueAtTime(-12,e),c.gain.linearRampToValueAtTime(0,p);let m=e+n*.5;u.gain.setValueAtTime(-12,e),u.gain.linearRampToValueAtTime(0,m),a.gain.setValueAtTime(0,p),a.gain.linearRampToValueAtTime(-6,m);let f=e+n*.75;l.gain.setValueAtTime(-12,e),l.gain.linearRampToValueAtTime(0,f),i.gain.setValueAtTime(0,m),i.gain.linearRampToValueAtTime(-6,f);let d=e+n;s.gain.setValueAtTime(0,f),s.gain.linearRampToValueAtTime(-12,d),a.gain.linearRampToValueAtTime(-12,d),i.gain.linearRampToValueAtTime(-12,d)}applyVolumeTransition(t,e,n,o){let{currentGain:s,nextGain:i}=t;s.gain.setValueAtTime(1,e),i.gain.setValueAtTime(.1,e);let a=[{time:e,value:1},{time:e+n*.6,value:.9},{time:e+n*.8,value:.7},{time:e+n,value:0}],l=[{time:e,value:.1},{time:e+n*.3,value:.3},{time:e+n*.7,value:.7},{time:e+n,value:1}];for(let u=0;u<a.length-1;u++){let c=a[u],p=a[u+1];s.gain.setValueAtTime(c.value,c.time),s.gain.linearRampToValueAtTime(p.value,p.time)}for(let u=0;u<l.length-1;u++){let c=l[u],p=l[u+1];i.gain.setValueAtTime(c.value,c.time),i.gain.linearRampToValueAtTime(p.value,p.time)}}calculateOptimalStartTime(t,e,n,o){let i=60/n*8,a=e-t;if(Math.floor(a/i)<=1)return Math.max(0,e-32);let u=e-i*4;return Math.max(t,u)}static \u0275fac=function(e){return new(e||r)};static \u0275prov=Qn({token:r,factory:r.\u0275fac,providedIn:"root"})};var Qx=Vn(A4());var qn=Uint8Array,c1=Uint16Array,aP=Int32Array,sx=new qn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),ix=new qn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),lP=new qn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ax=function(r,t){for(var e=new c1(31),n=0;n<31;++n)e[n]=t+=1<<r[n-1];for(var o=new aP(e[30]),n=1;n<30;++n)for(var s=e[n];s<e[n+1];++s)o[s]=s-e[n]<<5|n;return{b:e,r:o}},lx=ax(sx,2),cx=lx.b,cP=lx.r;cx[28]=258,cP[258]=28;var ux=ax(ix,0),uP=ux.b,Boe=ux.r,D4=new c1(32768);for(dt=0;dt<32768;++dt)ks=(dt&43690)>>1|(dt&21845)<<1,ks=(ks&52428)>>2|(ks&13107)<<2,ks=(ks&61680)>>4|(ks&3855)<<4,D4[dt]=((ks&65280)>>8|(ks&255)<<8)>>1;var ks,dt,tp=function(r,t,e){for(var n=r.length,o=0,s=new c1(t);o<n;++o)r[o]&&++s[r[o]-1];var i=new c1(t);for(o=1;o<t;++o)i[o]=i[o-1]+s[o-1]<<1;var a;if(e){a=new c1(1<<t);var l=15-t;for(o=0;o<n;++o)if(r[o])for(var u=o<<4|r[o],c=t-r[o],p=i[r[o]-1]++<<c,m=p|(1<<c)-1;p<=m;++p)a[D4[p]>>l]=u}else for(a=new c1(n),o=0;o<n;++o)r[o]&&(a[o]=D4[i[r[o]-1]++]>>15-r[o]);return a},rp=new qn(288);for(dt=0;dt<144;++dt)rp[dt]=8;var dt;for(dt=144;dt<256;++dt)rp[dt]=9;var dt;for(dt=256;dt<280;++dt)rp[dt]=7;var dt;for(dt=280;dt<288;++dt)rp[dt]=8;var dt,px=new qn(32);for(dt=0;dt<32;++dt)px[dt]=5;var dt;var pP=tp(rp,9,1);var mP=tp(px,5,1),E4=function(r){for(var t=r[0],e=1;e<r.length;++e)r[e]>t&&(t=r[e]);return t},No=function(r,t,e){var n=t/8|0;return(r[n]|r[n+1]<<8)>>(t&7)&e},_4=function(r,t){var e=t/8|0;return(r[e]|r[e+1]<<8|r[e+2]<<16)>>(t&7)},fP=function(r){return(r+7)/8|0},dP=function(r,t,e){return(t==null||t<0)&&(t=0),(e==null||e>r.length)&&(e=r.length),new qn(r.subarray(t,e))};var hP=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],Wn=function(r,t,e){var n=new Error(t||hP[r]);if(n.code=r,Error.captureStackTrace&&Error.captureStackTrace(n,Wn),!e)throw n;return n},R4=function(r,t,e,n){var o=r.length,s=n?n.length:0;if(!o||t.f&&!t.l)return e||new qn(0);var i=!e,a=i||t.i!=2,l=t.i;i&&(e=new qn(o*3));var u=function(Ue){var at=e.length;if(Ue>at){var vt=new qn(Math.max(at*2,Ue));vt.set(e),e=vt}},c=t.f||0,p=t.p||0,m=t.b||0,f=t.l,d=t.d,g=t.m,h=t.n,x=o*8;do{if(!f){c=No(r,p,1);var y=No(r,p+1,3);if(p+=3,y)if(y==1)f=pP,d=mP,g=9,h=5;else if(y==2){var E=No(r,p,31)+257,_=No(r,p+10,15)+4,D=E+No(r,p+5,31)+1;p+=14;for(var M=new qn(D),P=new qn(19),V=0;V<_;++V)P[lP[V]]=No(r,p+V*3,7);p+=_*3;for(var U=E4(P),q=(1<<U)-1,K=tp(P,U,1),V=0;V<D;){var j=K[No(r,p,q)];p+=j&15;var v=j>>4;if(v<16)M[V++]=v;else{var Y=0,ee=0;for(v==16?(ee=3+No(r,p,3),p+=2,Y=M[V-1]):v==17?(ee=3+No(r,p,7),p+=3):v==18&&(ee=11+No(r,p,127),p+=7);ee--;)M[V++]=Y}}var Z=M.subarray(0,E),Q=M.subarray(E);g=E4(Z),h=E4(Q),f=tp(Z,g,1),d=tp(Q,h,1)}else Wn(1);else{var v=fP(p)+4,w=r[v-4]|r[v-3]<<8,I=v+w;if(I>o){l&&Wn(0);break}a&&u(m+w),e.set(r.subarray(v,I),m),t.b=m+=w,t.p=p=I*8,t.f=c;continue}if(p>x){l&&Wn(0);break}}a&&u(m+131072);for(var ie=(1<<g)-1,le=(1<<h)-1,pe=p;;pe=p){var Y=f[_4(r,p)&ie],ae=Y>>4;if(p+=Y&15,p>x){l&&Wn(0);break}if(Y||Wn(2),ae<256)e[m++]=ae;else if(ae==256){pe=p,f=null;break}else{var fe=ae-254;if(ae>264){var V=ae-257,me=sx[V];fe=No(r,p,(1<<me)-1)+cx[V],p+=me}var xe=d[_4(r,p)&le],Ce=xe>>4;xe||Wn(3),p+=xe&15;var Q=uP[Ce];if(Ce>3){var me=ix[Ce];Q+=_4(r,p)&(1<<me)-1,p+=me}if(p>x){l&&Wn(0);break}a&&u(m+131072);var _e=m+fe;if(m<Q){var Ee=s-Q,Ve=Math.min(Q,_e);for(Ee+m<0&&Wn(3);m<Ve;++m)e[m]=n[Ee+m]}for(;m<_e;++m)e[m]=e[m-Q]}}t.l=f,t.p=pe,t.b=m,t.f=c,f&&(c=1,t.m=g,t.d=d,t.n=h)}while(!c);return m!=e.length&&i?dP(e,0,m):e.subarray(0,m)};var gP=new qn(0);var xP=function(r){(r[0]!=31||r[1]!=139||r[2]!=8)&&Wn(6,"invalid gzip data");var t=r[3],e=10;t&4&&(e+=(r[10]|r[11]<<8)+2);for(var n=(t>>3&1)+(t>>4&1);n>0;n-=!r[e++]);return e+(t&2)},yP=function(r){var t=r.length;return(r[t-4]|r[t-3]<<8|r[t-2]<<16|r[t-1]<<24)>>>0};var bP=function(r,t){return((r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31)&&Wn(6,"invalid zlib data"),(r[1]>>5&1)==+!t&&Wn(6,"invalid zlib data: "+(r[1]&32?"need":"unexpected")+" dictionary"),(r[1]>>3&4)+2};function vP(r,t){return R4(r,{i:2},t&&t.out,t&&t.dictionary)}function wP(r,t){var e=xP(r);return e+8>r.length&&Wn(6,"invalid gzip data"),R4(r.subarray(e,-8),{i:2},t&&t.out||new qn(yP(r)),t&&t.dictionary)}function TP(r,t){return R4(r.subarray(bP(r,t&&t.dictionary),-4),{i:2},t&&t.out,t&&t.dictionary)}function mx(r,t){return r[0]==31&&r[1]==139&&r[2]==8?wP(r,t):(r[0]&15)!=8||r[0]>>4>7||(r[0]<<8|r[1])%31?vP(r,t):TP(r,t)}var CP=typeof TextDecoder<"u"&&new TextDecoder,SP=0;try{CP.decode(gP,{stream:!0}),SP=1}catch{}var gx=Vn(p4(),1);var G0={LocalFileHeader:67324752,DataDescriptor:134695760,CentralFileHeader:33639248,EndOfCentralDirectory:101010256},$4={get(r){let t=Yt.get(r,6);return{signature:tr.get(r,0),compressedSize:tr.get(r,8),uncompressedSize:tr.get(r,12)}},len:16},fx={get(r){let t=Yt.get(r,6);return{signature:tr.get(r,0),minVersion:Yt.get(r,4),dataDescriptor:!!(t&8),compressedMethod:Yt.get(r,8),compressedSize:tr.get(r,18),uncompressedSize:tr.get(r,22),filenameLength:Yt.get(r,26),extraFieldLength:Yt.get(r,28),filename:null}},len:30},dx={get(r){return{signature:tr.get(r,0),nrOfThisDisk:Yt.get(r,4),nrOfThisDiskWithTheStart:Yt.get(r,6),nrOfEntriesOnThisDisk:Yt.get(r,8),nrOfEntriesOfSize:Yt.get(r,10),sizeOfCd:tr.get(r,12),offsetOfStartOfCd:tr.get(r,16),zipFileCommentLength:Yt.get(r,20)}},len:22},hx={get(r){let t=Yt.get(r,8);return{signature:tr.get(r,0),minVersion:Yt.get(r,6),dataDescriptor:!!(t&8),compressedMethod:Yt.get(r,10),compressedSize:tr.get(r,20),uncompressedSize:tr.get(r,24),filenameLength:Yt.get(r,28),extraFieldLength:Yt.get(r,30),fileCommentLength:Yt.get(r,32),relativeOffsetOfLocalHeader:tr.get(r,42),filename:null}},len:46};function xx(r){let t=new Uint8Array(tr.len);return tr.put(t,0,r),t}var Zo=(0,gx.default)("tokenizer:inflate"),F4=256*1024,IP=xx(G0.DataDescriptor),L2=xx(G0.EndOfCentralDirectory),z2=class{constructor(t){this.tokenizer=t,this.syncBuffer=new Uint8Array(F4)}isZip(){return O(this,null,function*(){return(yield this.peekSignature())===G0.LocalFileHeader})}peekSignature(){return this.tokenizer.peekToken(tr)}findEndOfCentralDirectoryLocator(){return O(this,null,function*(){let t=this.tokenizer,e=Math.min(16*1024,t.fileInfo.size),n=this.syncBuffer.subarray(0,e);yield this.tokenizer.readBuffer(n,{position:t.fileInfo.size-e});for(let o=n.length-4;o>=0;o--)if(n[o]===L2[0]&&n[o+1]===L2[1]&&n[o+2]===L2[2]&&n[o+3]===L2[3])return t.fileInfo.size-e+o;return-1})}readCentralDirectory(){return O(this,null,function*(){if(!this.tokenizer.supportsRandomAccess()){Zo("Cannot reading central-directory without random-read support");return}Zo("Reading central-directory...");let t=this.tokenizer.position,e=yield this.findEndOfCentralDirectoryLocator();if(e>0){Zo("Central-directory 32-bit signature found");let n=yield this.tokenizer.readToken(dx,e),o=[];this.tokenizer.setPosition(n.offsetOfStartOfCd);for(let s=0;s<n.nrOfEntriesOfSize;++s){let i=yield this.tokenizer.readToken(hx);if(i.signature!==G0.CentralFileHeader)throw new Error("Expected Central-File-Header signature");i.filename=yield this.tokenizer.readToken(new eo(i.filenameLength,"utf-8")),yield this.tokenizer.ignore(i.extraFieldLength),yield this.tokenizer.ignore(i.fileCommentLength),o.push(i),Zo(`Add central-directory file-entry: n=${s+1}/${o.length}: filename=${o[s].filename}`)}return this.tokenizer.setPosition(t),o}this.tokenizer.setPosition(t)})}unzip(t){return O(this,null,function*(){let e=yield this.readCentralDirectory();if(e)return this.iterateOverCentralDirectory(e,t);let n=!1;do{let o=yield this.readLocalFileHeader();if(!o)break;let s=t(o);n=!!s.stop;let i;if(yield this.tokenizer.ignore(o.extraFieldLength),o.dataDescriptor&&o.compressedSize===0){let a=[],l=F4;Zo("Compressed-file-size unknown, scanning for next data-descriptor-signature....");let u=-1;for(;u<0&&l===F4;){l=yield this.tokenizer.peekBuffer(this.syncBuffer,{mayBeLess:!0}),u=NP(this.syncBuffer.subarray(0,l),IP);let c=u>=0?u:l;if(s.handler){let p=new Uint8Array(c);yield this.tokenizer.readBuffer(p),a.push(p)}else yield this.tokenizer.ignore(c)}Zo(`Found data-descriptor-signature at pos=${this.tokenizer.position}`),s.handler&&(yield this.inflate(o,kP(a),s.handler))}else s.handler?(Zo(`Reading compressed-file-data: ${o.compressedSize} bytes`),i=new Uint8Array(o.compressedSize),yield this.tokenizer.readBuffer(i),yield this.inflate(o,i,s.handler)):(Zo(`Ignoring compressed-file-data: ${o.compressedSize} bytes`),yield this.tokenizer.ignore(o.compressedSize));if(Zo(`Reading data-descriptor at pos=${this.tokenizer.position}`),o.dataDescriptor&&(yield this.tokenizer.readToken($4)).signature!==134695760)throw new Error(`Expected data-descriptor-signature at position ${this.tokenizer.position-$4.len}`)}while(!n)})}iterateOverCentralDirectory(t,e){return O(this,null,function*(){for(let n of t){let o=e(n);if(o.handler){this.tokenizer.setPosition(n.relativeOffsetOfLocalHeader);let s=yield this.readLocalFileHeader();if(s){yield this.tokenizer.ignore(s.extraFieldLength);let i=new Uint8Array(n.compressedSize);yield this.tokenizer.readBuffer(i),yield this.inflate(s,i,o.handler)}}if(o.stop)break}})}inflate(t,e,n){if(t.compressedMethod===0)return n(e);Zo(`Decompress filename=${t.filename}, compressed-size=${e.length}`);let o=mx(e);return n(o)}readLocalFileHeader(){return O(this,null,function*(){let t=yield this.tokenizer.peekToken(tr);if(t===G0.LocalFileHeader){let e=yield this.tokenizer.readToken(fx);return e.filename=yield this.tokenizer.readToken(new eo(e.filenameLength,"utf-8")),e}if(t===G0.CentralFileHeader)return!1;throw t===3759263696?new Error("Encrypted ZIP"):new Error("Unexpected signature")})}};function NP(r,t){let e=r.length,n=t.length;if(n>e)return-1;for(let o=0;o<=e-n;o++){let s=!0;for(let i=0;i<n;i++)if(r[o+i]!==t[i]){s=!1;break}if(s)return o}return-1}function kP(r){let t=r.reduce((o,s)=>o+s.length,0),e=new Uint8Array(t),n=0;for(let o of r)e.set(o,n),n+=o.length;return e}function yx(r){return[...r].map(t=>t.charCodeAt(0))}function bx(r,t=0){let e=Number.parseInt(new eo(6).get(r,148).replace(/\0.*$/,"").trim(),8);if(Number.isNaN(e))return!1;let n=8*32;for(let o=t;o<t+148;o++)n+=r[o];for(let o=t+156;o<t+512;o++)n+=r[o];return e===n}var vx={get:(r,t)=>r[t+3]&127|r[t+2]<<7|r[t+1]<<14|r[t]<<21,len:4};var wx=["jpg","png","apng","gif","webp","flif","xcf","cr2","cr3","orf","arw","dng","nef","rw2","raf","tif","bmp","icns","jxr","psd","indd","zip","tar","rar","gz","bz2","7z","dmg","mp4","mid","mkv","webm","mov","avi","mpg","mp2","mp3","m4a","oga","ogg","ogv","opus","flac","wav","spx","amr","pdf","epub","elf","macho","exe","swf","rtf","wasm","woff","woff2","eot","ttf","otf","ttc","ico","flv","ps","xz","sqlite","nes","crx","xpi","cab","deb","ar","rpm","Z","lz","cfb","mxf","mts","blend","bpg","docx","pptx","xlsx","3gp","3g2","j2c","jp2","jpm","jpx","mj2","aif","qcp","odt","ods","odp","xml","mobi","heic","cur","ktx","ape","wv","dcm","ics","glb","pcap","dsf","lnk","alias","voc","ac3","m4v","m4p","m4b","f4v","f4p","f4b","f4a","mie","asf","ogm","ogx","mpc","arrow","shp","aac","mp1","it","s3m","xm","skp","avif","eps","lzh","pgp","asar","stl","chm","3mf","zst","jxl","vcf","jls","pst","dwg","parquet","class","arj","cpio","ace","avro","icc","fbx","vsdx","vtt","apk","drc","lz4","potx","xltx","dotx","xltm","ott","ots","otp","odg","otg","xlsm","docm","dotm","potm","pptm","jar","rm","ppsm","ppsx"],Tx=["image/jpeg","image/png","image/gif","image/webp","image/flif","image/x-xcf","image/x-canon-cr2","image/x-canon-cr3","image/tiff","image/bmp","image/vnd.ms-photo","image/vnd.adobe.photoshop","application/x-indesign","application/epub+zip","application/x-xpinstall","application/vnd.ms-powerpoint.slideshow.macroenabled.12","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.presentation","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.presentationml.slideshow","application/zip","application/x-tar","application/x-rar-compressed","application/gzip","application/x-bzip2","application/x-7z-compressed","application/x-apple-diskimage","application/vnd.apache.arrow.file","video/mp4","audio/midi","video/matroska","video/webm","video/quicktime","video/vnd.avi","audio/wav","audio/qcelp","audio/x-ms-asf","video/x-ms-asf","application/vnd.ms-asf","video/mpeg","video/3gpp","audio/mpeg","audio/mp4","video/ogg","audio/ogg","audio/ogg; codecs=opus","application/ogg","audio/flac","audio/ape","audio/wavpack","audio/amr","application/pdf","application/x-elf","application/x-mach-binary","application/x-msdownload","application/x-shockwave-flash","application/rtf","application/wasm","font/woff","font/woff2","application/vnd.ms-fontobject","font/ttf","font/otf","font/collection","image/x-icon","video/x-flv","application/postscript","application/eps","application/x-xz","application/x-sqlite3","application/x-nintendo-nes-rom","application/x-google-chrome-extension","application/vnd.ms-cab-compressed","application/x-deb","application/x-unix-archive","application/x-rpm","application/x-compress","application/x-lzip","application/x-cfb","application/x-mie","application/mxf","video/mp2t","application/x-blender","image/bpg","image/j2c","image/jp2","image/jpx","image/jpm","image/mj2","audio/aiff","application/xml","application/x-mobipocket-ebook","image/heif","image/heif-sequence","image/heic","image/heic-sequence","image/icns","image/ktx","application/dicom","audio/x-musepack","text/calendar","text/vcard","text/vtt","model/gltf-binary","application/vnd.tcpdump.pcap","audio/x-dsf","application/x.ms.shortcut","application/x.apple.alias","audio/x-voc","audio/vnd.dolby.dd-raw","audio/x-m4a","image/apng","image/x-olympus-orf","image/x-sony-arw","image/x-adobe-dng","image/x-nikon-nef","image/x-panasonic-rw2","image/x-fujifilm-raf","video/x-m4v","video/3gpp2","application/x-esri-shape","audio/aac","audio/x-it","audio/x-s3m","audio/x-xm","video/MP1S","video/MP2P","application/vnd.sketchup.skp","image/avif","application/x-lzh-compressed","application/pgp-encrypted","application/x-asar","model/stl","application/vnd.ms-htmlhelp","model/3mf","image/jxl","application/zstd","image/jls","application/vnd.ms-outlook","image/vnd.dwg","application/vnd.apache.parquet","application/java-vm","application/x-arj","application/x-cpio","application/x-ace-compressed","application/avro","application/vnd.iccprofile","application/x.autodesk.fbx","application/vnd.visio","application/vnd.android.package-archive","application/vnd.google.draco","application/x-lz4","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-excel.template.macroenabled.12","application/vnd.oasis.opendocument.text-template","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.oasis.opendocument.presentation-template","application/vnd.oasis.opendocument.graphics","application/vnd.oasis.opendocument.graphics-template","application/vnd.ms-excel.sheet.macroenabled.12","application/vnd.ms-word.document.macroenabled.12","application/vnd.ms-word.template.macroenabled.12","application/vnd.ms-powerpoint.template.macroenabled.12","application/vnd.ms-powerpoint.presentation.macroenabled.12","application/java-archive","application/vnd.rn-realmedia"];var O4=4100;function B2(r,t){return O(this,null,function*(){return new P4(t).fromBuffer(r)})}function M4(r){switch(r=r.toLowerCase(),r){case"application/epub+zip":return{ext:"epub",mime:r};case"application/vnd.oasis.opendocument.text":return{ext:"odt",mime:r};case"application/vnd.oasis.opendocument.text-template":return{ext:"ott",mime:r};case"application/vnd.oasis.opendocument.spreadsheet":return{ext:"ods",mime:r};case"application/vnd.oasis.opendocument.spreadsheet-template":return{ext:"ots",mime:r};case"application/vnd.oasis.opendocument.presentation":return{ext:"odp",mime:r};case"application/vnd.oasis.opendocument.presentation-template":return{ext:"otp",mime:r};case"application/vnd.oasis.opendocument.graphics":return{ext:"odg",mime:r};case"application/vnd.oasis.opendocument.graphics-template":return{ext:"otg",mime:r};case"application/vnd.openxmlformats-officedocument.presentationml.slideshow":return{ext:"ppsx",mime:r};case"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":return{ext:"xlsx",mime:r};case"application/vnd.ms-excel.sheet.macroenabled":return{ext:"xlsm",mime:"application/vnd.ms-excel.sheet.macroenabled.12"};case"application/vnd.openxmlformats-officedocument.spreadsheetml.template":return{ext:"xltx",mime:r};case"application/vnd.ms-excel.template.macroenabled":return{ext:"xltm",mime:"application/vnd.ms-excel.template.macroenabled.12"};case"application/vnd.ms-powerpoint.slideshow.macroenabled":return{ext:"ppsm",mime:"application/vnd.ms-powerpoint.slideshow.macroenabled.12"};case"application/vnd.openxmlformats-officedocument.wordprocessingml.document":return{ext:"docx",mime:r};case"application/vnd.ms-word.document.macroenabled":return{ext:"docm",mime:"application/vnd.ms-word.document.macroenabled.12"};case"application/vnd.openxmlformats-officedocument.wordprocessingml.template":return{ext:"dotx",mime:r};case"application/vnd.ms-word.template.macroenabledtemplate":return{ext:"dotm",mime:"application/vnd.ms-word.template.macroenabled.12"};case"application/vnd.openxmlformats-officedocument.presentationml.template":return{ext:"potx",mime:r};case"application/vnd.ms-powerpoint.template.macroenabled":return{ext:"potm",mime:"application/vnd.ms-powerpoint.template.macroenabled.12"};case"application/vnd.openxmlformats-officedocument.presentationml.presentation":return{ext:"pptx",mime:r};case"application/vnd.ms-powerpoint.presentation.macroenabled":return{ext:"pptm",mime:"application/vnd.ms-powerpoint.presentation.macroenabled.12"};case"application/vnd.ms-visio.drawing":return{ext:"vsdx",mime:"application/vnd.visio"};case"application/vnd.ms-package.3dmanufacturing-3dmodel+xml":return{ext:"3mf",mime:"model/3mf"};default:}}function Jo(r,t,e){e=Is({offset:0},e);for(let[n,o]of t.entries())if(e.mask){if(o!==(e.mask[n]&r[n+e.offset]))return!1}else if(o!==r[n+e.offset])return!1;return!0}var P4=class{constructor(t){this.options=Is({mpegOffsetTolerance:0},t),this.detectors=[...t?.customDetectors??[],{id:"core",detect:this.detectConfident},{id:"core.imprecise",detect:this.detectImprecise}],this.tokenizerOptions={abortSignal:t?.signal}}fromTokenizer(t){return O(this,null,function*(){let e=t.position;for(let n of this.detectors){let o=yield n.detect(t);if(o)return o;if(e!==t.position)return}})}fromBuffer(t){return O(this,null,function*(){if(!(t instanceof Uint8Array||t instanceof ArrayBuffer))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`ArrayBuffer\`, got \`${typeof t}\``);let e=t instanceof Uint8Array?t:new Uint8Array(t);if(e?.length>1)return this.fromTokenizer(u4(e,this.tokenizerOptions))})}fromBlob(t){return O(this,null,function*(){return this.fromStream(t.stream())})}fromStream(t){return O(this,null,function*(){let e=yield S2(t,this.tokenizerOptions);try{return yield this.fromTokenizer(e)}finally{yield e.close()}})}toDetectionStream(t,e){return O(this,null,function*(){let{sampleSize:n=O4}=e,o,s,i=t.getReader({mode:"byob"});try{let{value:c,done:p}=yield i.read(new Uint8Array(n));if(s=c,!p&&c)try{o=yield this.fromBuffer(c.subarray(0,n))}catch(m){if(!(m instanceof G8))throw m;o=void 0}s=c}finally{i.releaseLock()}let a=new TransformStream({start(c){return O(this,null,function*(){c.enqueue(s)})},transform(c,p){p.enqueue(c)}}),l=t.pipeThrough(a);return l.fileType=o,l})}check(t,e){return Jo(this.buffer,t,e)}checkString(t,e){return this.check(yx(t),e)}detectConfident=t=>O(this,null,function*(){if(this.buffer=new Uint8Array(O4),t.fileInfo.size===void 0&&(t.fileInfo.size=Number.MAX_SAFE_INTEGER),this.tokenizer=t,yield t.peekBuffer(this.buffer,{length:12,mayBeLess:!0}),this.check([66,77]))return{ext:"bmp",mime:"image/bmp"};if(this.check([11,119]))return{ext:"ac3",mime:"audio/vnd.dolby.dd-raw"};if(this.check([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(this.check([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if(this.check([37,33]))return yield t.peekBuffer(this.buffer,{length:24,mayBeLess:!0}),this.checkString("PS-Adobe-",{offset:2})&&this.checkString(" EPSF-",{offset:14})?{ext:"eps",mime:"application/eps"}:{ext:"ps",mime:"application/postscript"};if(this.check([31,160])||this.check([31,157]))return{ext:"Z",mime:"application/x-compress"};if(this.check([199,113]))return{ext:"cpio",mime:"application/x-cpio"};if(this.check([96,234]))return{ext:"arj",mime:"application/x-arj"};if(this.check([239,187,191]))return this.tokenizer.ignore(3),this.detectConfident(t);if(this.check([71,73,70]))return{ext:"gif",mime:"image/gif"};if(this.check([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(this.check([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(this.check([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(this.checkString("ID3")){yield t.ignore(6);let e=yield t.readToken(vx);return t.position+e>t.fileInfo.size?{ext:"mp3",mime:"audio/mpeg"}:(yield t.ignore(e),this.fromTokenizer(t))}if(this.checkString("MP+"))return{ext:"mpc",mime:"audio/x-musepack"};if((this.buffer[0]===67||this.buffer[0]===70)&&this.check([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(this.check([255,216,255]))return this.check([247],{offset:3})?{ext:"jls",mime:"image/jls"}:{ext:"jpg",mime:"image/jpeg"};if(this.check([79,98,106,1]))return{ext:"avro",mime:"application/avro"};if(this.checkString("FLIF"))return{ext:"flif",mime:"image/flif"};if(this.checkString("8BPS"))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(this.checkString("MPCK"))return{ext:"mpc",mime:"audio/x-musepack"};if(this.checkString("FORM"))return{ext:"aif",mime:"audio/aiff"};if(this.checkString("icns",{offset:0}))return{ext:"icns",mime:"image/icns"};if(this.check([80,75,3,4])){let e;return yield new z2(t).unzip(n=>{switch(n.filename){case"META-INF/mozilla.rsa":return e={ext:"xpi",mime:"application/x-xpinstall"},{stop:!0};case"META-INF/MANIFEST.MF":return e={ext:"jar",mime:"application/java-archive"},{stop:!0};case"mimetype":let o;return{handler(i){return O(this,null,function*(){let a=new TextDecoder("utf-8").decode(i).trim();e=M4(a)})},stop:!0};case"[Content_Types].xml":let s;return{handler(i){return O(this,null,function*(){let a=new TextDecoder("utf-8").decode(i),l=a.indexOf('.main+xml"');if(l===-1){let u="application/vnd.ms-package.3dmanufacturing-3dmodel+xml";a.includes(`ContentType="${u}"`)&&(e=M4(u))}else{a=a.slice(0,Math.max(0,l));let u=a.lastIndexOf('"'),c=a.slice(Math.max(0,u+1));e=M4(c)}})},stop:!0};default:return/classes\d*\.dex/.test(n.filename)?(e={ext:"apk",mime:"application/vnd.android.package-archive"},{stop:!0}):{}}}),e??{ext:"zip",mime:"application/zip"}}if(this.checkString("OggS")){yield t.ignore(28);let e=new Uint8Array(8);return yield t.readBuffer(e),Jo(e,[79,112,117,115,72,101,97,100])?{ext:"opus",mime:"audio/ogg; codecs=opus"}:Jo(e,[128,116,104,101,111,114,97])?{ext:"ogv",mime:"video/ogg"}:Jo(e,[1,118,105,100,101,111,0])?{ext:"ogm",mime:"video/ogg"}:Jo(e,[127,70,76,65,67])?{ext:"oga",mime:"audio/ogg"}:Jo(e,[83,112,101,101,120,32,32])?{ext:"spx",mime:"audio/ogg"}:Jo(e,[1,118,111,114,98,105,115])?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"}}if(this.check([80,75])&&(this.buffer[2]===3||this.buffer[2]===5||this.buffer[2]===7)&&(this.buffer[3]===4||this.buffer[3]===6||this.buffer[3]===8))return{ext:"zip",mime:"application/zip"};if(this.checkString("MThd"))return{ext:"mid",mime:"audio/midi"};if(this.checkString("wOFF")&&(this.check([0,1,0,0],{offset:4})||this.checkString("OTTO",{offset:4})))return{ext:"woff",mime:"font/woff"};if(this.checkString("wOF2")&&(this.check([0,1,0,0],{offset:4})||this.checkString("OTTO",{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(this.check([212,195,178,161])||this.check([161,178,195,212]))return{ext:"pcap",mime:"application/vnd.tcpdump.pcap"};if(this.checkString("DSD "))return{ext:"dsf",mime:"audio/x-dsf"};if(this.checkString("LZIP"))return{ext:"lz",mime:"application/x-lzip"};if(this.checkString("fLaC"))return{ext:"flac",mime:"audio/flac"};if(this.check([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(this.checkString("wvpk"))return{ext:"wv",mime:"audio/wavpack"};if(this.checkString("%PDF"))return{ext:"pdf",mime:"application/pdf"};if(this.check([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(this.check([73,73])){let e=yield this.readTiffHeader(!1);if(e)return e}if(this.check([77,77])){let e=yield this.readTiffHeader(!0);if(e)return e}if(this.checkString("MAC "))return{ext:"ape",mime:"audio/ape"};if(this.check([26,69,223,163])){function e(){return O(this,null,function*(){let a=yield t.peekNumber(V8),l=128,u=0;for(;(a&l)===0&&l!==0;)++u,l>>=1;let c=new Uint8Array(u+1);return yield t.readBuffer(c),c})}function n(){return O(this,null,function*(){let a=yield e(),l=yield e();l[0]^=128>>l.length-1;let u=Math.min(6,l.length),c=new DataView(a.buffer),p=new DataView(l.buffer,l.length-u,u);return{id:m4(c),len:m4(p)}})}function o(a){return O(this,null,function*(){for(;a>0;){let l=yield n();if(l.id===17026)return(yield t.readToken(new eo(l.len))).replaceAll(/\00.*$/g,"");yield t.ignore(l.len),--a}})}let s=yield n();switch(yield o(s.len)){case"webm":return{ext:"webm",mime:"video/webm"};case"matroska":return{ext:"mkv",mime:"video/matroska"};default:return}}if(this.checkString("SQLi"))return{ext:"sqlite",mime:"application/x-sqlite3"};if(this.check([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(this.checkString("Cr24"))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(this.checkString("MSCF")||this.checkString("ISc("))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(this.check([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(this.check([197,208,211,198]))return{ext:"eps",mime:"application/eps"};if(this.check([40,181,47,253]))return{ext:"zst",mime:"application/zstd"};if(this.check([127,69,76,70]))return{ext:"elf",mime:"application/x-elf"};if(this.check([33,66,68,78]))return{ext:"pst",mime:"application/vnd.ms-outlook"};if(this.checkString("PAR1")||this.checkString("PARE"))return{ext:"parquet",mime:"application/vnd.apache.parquet"};if(this.checkString("ttcf"))return{ext:"ttc",mime:"font/collection"};if(this.check([207,250,237,254]))return{ext:"macho",mime:"application/x-mach-binary"};if(this.check([4,34,77,24]))return{ext:"lz4",mime:"application/x-lz4"};if(this.check([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(this.checkString("#!AMR"))return{ext:"amr",mime:"audio/amr"};if(this.checkString("{\\rtf"))return{ext:"rtf",mime:"application/rtf"};if(this.check([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(this.checkString("IMPM"))return{ext:"it",mime:"audio/x-it"};if(this.checkString("-lh0-",{offset:2})||this.checkString("-lh1-",{offset:2})||this.checkString("-lh2-",{offset:2})||this.checkString("-lh3-",{offset:2})||this.checkString("-lh4-",{offset:2})||this.checkString("-lh5-",{offset:2})||this.checkString("-lh6-",{offset:2})||this.checkString("-lh7-",{offset:2})||this.checkString("-lzs-",{offset:2})||this.checkString("-lz4-",{offset:2})||this.checkString("-lz5-",{offset:2})||this.checkString("-lhd-",{offset:2}))return{ext:"lzh",mime:"application/x-lzh-compressed"};if(this.check([0,0,1,186])){if(this.check([33],{offset:4,mask:[241]}))return{ext:"mpg",mime:"video/MP1S"};if(this.check([68],{offset:4,mask:[196]}))return{ext:"mpg",mime:"video/MP2P"}}if(this.checkString("ITSF"))return{ext:"chm",mime:"application/vnd.ms-htmlhelp"};if(this.check([202,254,186,190]))return{ext:"class",mime:"application/java-vm"};if(this.checkString(".RMF"))return{ext:"rm",mime:"application/vnd.rn-realmedia"};if(this.checkString("DRACO"))return{ext:"drc",mime:"application/vnd.google.draco"};if(this.check([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(this.checkString("<?xml "))return{ext:"xml",mime:"application/xml"};if(this.check([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(this.check([82,97,114,33,26,7])&&(this.buffer[6]===0||this.buffer[6]===1))return{ext:"rar",mime:"application/x-rar-compressed"};if(this.checkString("solid "))return{ext:"stl",mime:"model/stl"};if(this.checkString("AC")){let e=new eo(4,"latin1").get(this.buffer,2);if(e.match("^d*")&&e>=1e3&&e<=1050)return{ext:"dwg",mime:"image/vnd.dwg"}}if(this.checkString("070707"))return{ext:"cpio",mime:"application/x-cpio"};if(this.checkString("BLENDER"))return{ext:"blend",mime:"application/x-blender"};if(this.checkString("!<arch>"))return yield t.ignore(8),(yield t.readToken(new eo(13,"ascii")))==="debian-binary"?{ext:"deb",mime:"application/x-deb"}:{ext:"ar",mime:"application/x-unix-archive"};if(this.checkString("WEBVTT")&&[`
`,"\r","	"," ","\0"].some(e=>this.checkString(e,{offset:6})))return{ext:"vtt",mime:"text/vtt"};if(this.check([137,80,78,71,13,10,26,10])){yield t.ignore(8);function e(){return O(this,null,function*(){return{length:yield t.readToken(W8),type:yield t.readToken(new eo(4,"latin1"))}})}do{let n=yield e();if(n.length<0)return;switch(n.type){case"IDAT":return{ext:"png",mime:"image/png"};case"acTL":return{ext:"apng",mime:"image/apng"};default:yield t.ignore(n.length+4)}}while(t.position+8<t.fileInfo.size);return{ext:"png",mime:"image/png"}}if(this.check([65,82,82,79,87,49,0,0]))return{ext:"arrow",mime:"application/vnd.apache.arrow.file"};if(this.check([103,108,84,70,2,0,0,0]))return{ext:"glb",mime:"model/gltf-binary"};if(this.check([102,114,101,101],{offset:4})||this.check([109,100,97,116],{offset:4})||this.check([109,111,111,118],{offset:4})||this.check([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(this.check([73,73,82,79,8,0,0,0,24]))return{ext:"orf",mime:"image/x-olympus-orf"};if(this.checkString("gimp xcf "))return{ext:"xcf",mime:"image/x-xcf"};if(this.checkString("ftyp",{offset:4})&&(this.buffer[8]&96)!==0){let e=new eo(4,"latin1").get(this.buffer,8).replace("\0"," ").trim();switch(e){case"avif":case"avis":return{ext:"avif",mime:"image/avif"};case"mif1":return{ext:"heic",mime:"image/heif"};case"msf1":return{ext:"heic",mime:"image/heif-sequence"};case"heic":case"heix":return{ext:"heic",mime:"image/heic"};case"hevc":case"hevx":return{ext:"heic",mime:"image/heic-sequence"};case"qt":return{ext:"mov",mime:"video/quicktime"};case"M4V":case"M4VH":case"M4VP":return{ext:"m4v",mime:"video/x-m4v"};case"M4P":return{ext:"m4p",mime:"video/mp4"};case"M4B":return{ext:"m4b",mime:"audio/mp4"};case"M4A":return{ext:"m4a",mime:"audio/x-m4a"};case"F4V":return{ext:"f4v",mime:"video/mp4"};case"F4P":return{ext:"f4p",mime:"video/mp4"};case"F4A":return{ext:"f4a",mime:"audio/mp4"};case"F4B":return{ext:"f4b",mime:"audio/mp4"};case"crx":return{ext:"cr3",mime:"image/x-canon-cr3"};default:return e.startsWith("3g")?e.startsWith("3g2")?{ext:"3g2",mime:"video/3gpp2"}:{ext:"3gp",mime:"video/3gpp"}:{ext:"mp4",mime:"video/mp4"}}}if(this.check([82,73,70,70])){if(this.checkString("WEBP",{offset:8}))return{ext:"webp",mime:"image/webp"};if(this.check([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(this.check([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/wav"};if(this.check([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(this.check([73,73,85,0,24,0,0,0,136,231,116,216]))return{ext:"rw2",mime:"image/x-panasonic-rw2"};if(this.check([48,38,178,117,142,102,207,17,166,217])){function e(){return O(this,null,function*(){let n=new Uint8Array(16);return yield t.readBuffer(n),{id:n,size:Number(yield t.readToken(q8))}})}for(yield t.ignore(30);t.position+24<t.fileInfo.size;){let n=yield e(),o=n.size-24;if(Jo(n.id,[145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101])){let s=new Uint8Array(16);if(o-=yield t.readBuffer(s),Jo(s,[64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"audio/x-ms-asf"};if(Jo(s,[192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"video/x-ms-asf"};break}yield t.ignore(o)}return{ext:"asf",mime:"application/vnd.ms-asf"}}if(this.check([171,75,84,88,32,49,49,187,13,10,26,10]))return{ext:"ktx",mime:"image/ktx"};if((this.check([126,16,4])||this.check([126,24,4]))&&this.check([48,77,73,69],{offset:4}))return{ext:"mie",mime:"application/x-mie"};if(this.check([39,10,0,0,0,0,0,0,0,0,0,0],{offset:2}))return{ext:"shp",mime:"application/x-esri-shape"};if(this.check([255,79,255,81]))return{ext:"j2c",mime:"image/j2c"};if(this.check([0,0,0,12,106,80,32,32,13,10,135,10]))switch(yield t.ignore(20),yield t.readToken(new eo(4,"ascii"))){case"jp2 ":return{ext:"jp2",mime:"image/jp2"};case"jpx ":return{ext:"jpx",mime:"image/jpx"};case"jpm ":return{ext:"jpm",mime:"image/jpm"};case"mjp2":return{ext:"mj2",mime:"image/mj2"};default:return}if(this.check([255,10])||this.check([0,0,0,12,74,88,76,32,13,10,135,10]))return{ext:"jxl",mime:"image/jxl"};if(this.check([254,255]))return this.check([0,60,0,63,0,120,0,109,0,108],{offset:2})?{ext:"xml",mime:"application/xml"}:void 0;if(this.check([208,207,17,224,161,177,26,225]))return{ext:"cfb",mime:"application/x-cfb"};if(yield t.peekBuffer(this.buffer,{length:Math.min(256,t.fileInfo.size),mayBeLess:!0}),this.check([97,99,115,112],{offset:36}))return{ext:"icc",mime:"application/vnd.iccprofile"};if(this.checkString("**ACE",{offset:7})&&this.checkString("**",{offset:12}))return{ext:"ace",mime:"application/x-ace-compressed"};if(this.checkString("BEGIN:")){if(this.checkString("VCARD",{offset:6}))return{ext:"vcf",mime:"text/vcard"};if(this.checkString("VCALENDAR",{offset:6}))return{ext:"ics",mime:"text/calendar"}}if(this.checkString("FUJIFILMCCD-RAW"))return{ext:"raf",mime:"image/x-fujifilm-raf"};if(this.checkString("Extended Module:"))return{ext:"xm",mime:"audio/x-xm"};if(this.checkString("Creative Voice File"))return{ext:"voc",mime:"audio/x-voc"};if(this.check([4,0,0,0])&&this.buffer.length>=16){let e=new DataView(this.buffer.buffer).getUint32(12,!0);if(e>12&&this.buffer.length>=e+16)try{let n=new TextDecoder().decode(this.buffer.subarray(16,e+16));if(JSON.parse(n).files)return{ext:"asar",mime:"application/x-asar"}}catch{}}if(this.check([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(this.checkString("SCRM",{offset:44}))return{ext:"s3m",mime:"audio/x-s3m"};if(this.check([71])&&this.check([71],{offset:188}))return{ext:"mts",mime:"video/mp2t"};if(this.check([71],{offset:4})&&this.check([71],{offset:196}))return{ext:"mts",mime:"video/mp2t"};if(this.check([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(this.check([68,73,67,77],{offset:128}))return{ext:"dcm",mime:"application/dicom"};if(this.check([76,0,0,0,1,20,2,0,0,0,0,0,192,0,0,0,0,0,0,70]))return{ext:"lnk",mime:"application/x.ms.shortcut"};if(this.check([98,111,111,107,0,0,0,0,109,97,114,107,0,0,0,0]))return{ext:"alias",mime:"application/x.apple.alias"};if(this.checkString("Kaydara FBX Binary  \0"))return{ext:"fbx",mime:"application/x.autodesk.fbx"};if(this.check([76,80],{offset:34})&&(this.check([0,0,1],{offset:8})||this.check([1,0,2],{offset:8})||this.check([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(this.check([6,6,237,245,216,29,70,229,189,49,239,231,254,116,183,29]))return{ext:"indd",mime:"application/x-indesign"};if(yield t.peekBuffer(this.buffer,{length:Math.min(512,t.fileInfo.size),mayBeLess:!0}),this.checkString("ustar",{offset:257})&&(this.checkString("\0",{offset:262})||this.checkString(" ",{offset:262}))||this.check([0,0,0,0,0,0],{offset:257})&&bx(this.buffer))return{ext:"tar",mime:"application/x-tar"};if(this.check([255,254]))return this.check([60,0,63,0,120,0,109,0,108,0],{offset:2})?{ext:"xml",mime:"application/xml"}:this.check([255,14,83,0,107,0,101,0,116,0,99,0,104,0,85,0,112,0,32,0,77,0,111,0,100,0,101,0,108,0],{offset:2})?{ext:"skp",mime:"application/vnd.sketchup.skp"}:void 0;if(this.checkString("-----BEGIN PGP MESSAGE-----"))return{ext:"pgp",mime:"application/pgp-encrypted"}});detectImprecise=t=>O(this,null,function*(){if(this.buffer=new Uint8Array(O4),yield t.peekBuffer(this.buffer,{length:Math.min(8,t.fileInfo.size),mayBeLess:!0}),this.check([0,0,1,186])||this.check([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(this.check([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(this.check([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(this.check([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(yield t.peekBuffer(this.buffer,{length:Math.min(2+this.options.mpegOffsetTolerance,t.fileInfo.size),mayBeLess:!0}),this.buffer.length>=2+this.options.mpegOffsetTolerance)for(let e=0;e<=this.options.mpegOffsetTolerance;++e){let n=this.scanMpeg(e);if(n)return n}});readTiffTag(t){return O(this,null,function*(){let e=yield this.tokenizer.readToken(t?n1:Yt);switch(this.tokenizer.ignore(10),e){case 50341:return{ext:"arw",mime:"image/x-sony-arw"};case 50706:return{ext:"dng",mime:"image/x-adobe-dng"};default:}})}readTiffIFD(t){return O(this,null,function*(){let e=yield this.tokenizer.readToken(t?n1:Yt);for(let n=0;n<e;++n){let o=yield this.readTiffTag(t);if(o)return o}})}readTiffHeader(t){return O(this,null,function*(){let e=(t?n1:Yt).get(this.buffer,2),n=(t?U8:tr).get(this.buffer,4);if(e===42){if(n>=6){if(this.checkString("CR",{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(n>=8){let s=(t?n1:Yt).get(this.buffer,8),i=(t?n1:Yt).get(this.buffer,10);if(s===28&&i===254||s===31&&i===11)return{ext:"nef",mime:"image/x-nikon-nef"}}}return yield this.tokenizer.ignore(n),(yield this.readTiffIFD(t))??{ext:"tif",mime:"image/tiff"}}if(e===43)return{ext:"tif",mime:"image/tiff"}})}scanMpeg(t){if(this.check([255,224],{offset:t,mask:[255,224]})){if(this.check([16],{offset:t+1,mask:[22]}))return this.check([8],{offset:t+1,mask:[8]})?{ext:"aac",mime:"audio/aac"}:{ext:"aac",mime:"audio/aac"};if(this.check([2],{offset:t+1,mask:[6]}))return{ext:"mp3",mime:"audio/mpeg"};if(this.check([4],{offset:t+1,mask:[6]}))return{ext:"mp2",mime:"audio/mpeg"};if(this.check([6],{offset:t+1,mask:[6]}))return{ext:"mp1",mime:"audio/mpeg"}}}},ose=new Set(wx),sse=new Set(Tx);var Kx=Vn(Nx(),1),jx=Vn(Ex(),1),Xx=Vn(p4(),1);var $x=Vn(p4(),1);var ge={multiple:!1},V2={year:ge,track:ge,disk:ge,title:ge,artist:ge,artists:{multiple:!0,unique:!0},albumartist:ge,album:ge,date:ge,originaldate:ge,originalyear:ge,releasedate:ge,comment:{multiple:!0,unique:!1},genre:{multiple:!0,unique:!0},picture:{multiple:!0,unique:!0},composer:{multiple:!0,unique:!0},lyrics:{multiple:!0,unique:!1},albumsort:{multiple:!1,unique:!0},titlesort:{multiple:!1,unique:!0},work:{multiple:!1,unique:!0},artistsort:{multiple:!1,unique:!0},albumartistsort:{multiple:!1,unique:!0},composersort:{multiple:!1,unique:!0},lyricist:{multiple:!0,unique:!0},writer:{multiple:!0,unique:!0},conductor:{multiple:!0,unique:!0},remixer:{multiple:!0,unique:!0},arranger:{multiple:!0,unique:!0},engineer:{multiple:!0,unique:!0},producer:{multiple:!0,unique:!0},technician:{multiple:!0,unique:!0},djmixer:{multiple:!0,unique:!0},mixer:{multiple:!0,unique:!0},label:{multiple:!0,unique:!0},grouping:ge,subtitle:{multiple:!0},discsubtitle:ge,totaltracks:ge,totaldiscs:ge,compilation:ge,rating:{multiple:!0},bpm:ge,mood:ge,media:ge,catalognumber:{multiple:!0,unique:!0},tvShow:ge,tvShowSort:ge,tvSeason:ge,tvEpisode:ge,tvEpisodeId:ge,tvNetwork:ge,podcast:ge,podcasturl:ge,releasestatus:ge,releasetype:{multiple:!0},releasecountry:ge,script:ge,language:ge,copyright:ge,license:ge,encodedby:ge,encodersettings:ge,gapless:ge,barcode:ge,isrc:{multiple:!0},asin:ge,musicbrainz_recordingid:ge,musicbrainz_trackid:ge,musicbrainz_albumid:ge,musicbrainz_artistid:{multiple:!0},musicbrainz_albumartistid:{multiple:!0},musicbrainz_releasegroupid:ge,musicbrainz_workid:ge,musicbrainz_trmid:ge,musicbrainz_discid:ge,acoustid_id:ge,acoustid_fingerprint:ge,musicip_puid:ge,musicip_fingerprint:ge,website:ge,"performer:instrument":{multiple:!0,unique:!0},averageLevel:ge,peakLevel:ge,notes:{multiple:!0,unique:!1},key:ge,originalalbum:ge,originalartist:ge,discogs_artist_id:{multiple:!0,unique:!0},discogs_release_id:ge,discogs_label_id:ge,discogs_master_release_id:ge,discogs_votes:ge,discogs_rating:ge,replaygain_track_peak:ge,replaygain_track_gain:ge,replaygain_album_peak:ge,replaygain_album_gain:ge,replaygain_track_minmax:ge,replaygain_album_minmax:ge,replaygain_undo:ge,description:{multiple:!0},longDescription:ge,category:{multiple:!0},hdVideo:ge,keywords:{multiple:!0},movement:ge,movementIndex:ge,movementTotal:ge,podcastId:ge,showMovement:ge,stik:ge};function _x(r){return V2[r]&&!V2[r].multiple}function Dx(r){return!V2[r].multiple||V2[r].unique||!1}var xr=(()=>{class r{static toIntOrNull(e){let n=Number.parseInt(e,10);return Number.isNaN(n)?null:n}static normalizeTrack(e){let n=e.toString().split("/");return{no:Number.parseInt(n[0],10)||null,of:Number.parseInt(n[1],10)||null}}constructor(e,n){this.tagTypes=e,this.tagMap=n}mapGenericTag(e,n){e={id:e.id,value:e.value},this.postMap(e,n);let o=this.getCommonName(e.id);return o?{id:o,value:e.value}:null}getCommonName(e){return this.tagMap[e]}postMap(e,n){}}return r.maxRatingScore=1,r})();var GP={title:"title",artist:"artist",album:"album",year:"year",comment:"comment",track:"track",genre:"genre"},U2=class extends xr{constructor(){super(["ID3v1"],GP)}};var to=class extends xr{constructor(t,e){let n={};for(let o of Object.keys(e))n[o.toUpperCase()]=e[o];super(t,n)}getCommonName(t){return this.tagMap[t.toUpperCase()]}};var VP={TIT2:"title",TPE1:"artist","TXXX:Artists":"artists",TPE2:"albumartist",TALB:"album",TDRV:"date",TORY:"originalyear",TPOS:"disk",TCON:"genre",APIC:"picture",TCOM:"composer",USLT:"lyrics",TSOA:"albumsort",TSOT:"titlesort",TOAL:"originalalbum",TSOP:"artistsort",TSO2:"albumartistsort",TSOC:"composersort",TEXT:"lyricist","TXXX:Writer":"writer",TPE3:"conductor",TPE4:"remixer","IPLS:arranger":"arranger","IPLS:engineer":"engineer","IPLS:producer":"producer","IPLS:DJ-mix":"djmixer","IPLS:mix":"mixer",TPUB:"label",TIT1:"grouping",TIT3:"subtitle",TRCK:"track",TCMP:"compilation",POPM:"rating",TBPM:"bpm",TMED:"media","TXXX:CATALOGNUMBER":"catalognumber","TXXX:MusicBrainz Album Status":"releasestatus","TXXX:MusicBrainz Album Type":"releasetype","TXXX:MusicBrainz Album Release Country":"releasecountry","TXXX:RELEASECOUNTRY":"releasecountry","TXXX:SCRIPT":"script",TLAN:"language",TCOP:"copyright",WCOP:"license",TENC:"encodedby",TSSE:"encodersettings","TXXX:BARCODE":"barcode","TXXX:ISRC":"isrc",TSRC:"isrc","TXXX:ASIN":"asin","TXXX:originalyear":"originalyear","UFID:http://musicbrainz.org":"musicbrainz_recordingid","TXXX:MusicBrainz Release Track Id":"musicbrainz_trackid","TXXX:MusicBrainz Album Id":"musicbrainz_albumid","TXXX:MusicBrainz Artist Id":"musicbrainz_artistid","TXXX:MusicBrainz Album Artist Id":"musicbrainz_albumartistid","TXXX:MusicBrainz Release Group Id":"musicbrainz_releasegroupid","TXXX:MusicBrainz Work Id":"musicbrainz_workid","TXXX:MusicBrainz TRM Id":"musicbrainz_trmid","TXXX:MusicBrainz Disc Id":"musicbrainz_discid","TXXX:ACOUSTID_ID":"acoustid_id","TXXX:Acoustid Id":"acoustid_id","TXXX:Acoustid Fingerprint":"acoustid_fingerprint","TXXX:MusicIP PUID":"musicip_puid","TXXX:MusicMagic Fingerprint":"musicip_fingerprint",WOAR:"website",TDRC:"date",TYER:"year",TDOR:"originaldate","TIPL:arranger":"arranger","TIPL:engineer":"engineer","TIPL:producer":"producer","TIPL:DJ-mix":"djmixer","TIPL:mix":"mixer",TMOO:"mood",SYLT:"lyrics",TSST:"discsubtitle",TKEY:"key",COMM:"comment",TOPE:"originalartist","PRIV:AverageLevel":"averageLevel","PRIV:PeakLevel":"peakLevel","TXXX:DISCOGS_ARTIST_ID":"discogs_artist_id","TXXX:DISCOGS_ARTISTS":"artists","TXXX:DISCOGS_ARTIST_NAME":"artists","TXXX:DISCOGS_ALBUM_ARTISTS":"albumartist","TXXX:DISCOGS_CATALOG":"catalognumber","TXXX:DISCOGS_COUNTRY":"releasecountry","TXXX:DISCOGS_DATE":"originaldate","TXXX:DISCOGS_LABEL":"label","TXXX:DISCOGS_LABEL_ID":"discogs_label_id","TXXX:DISCOGS_MASTER_RELEASE_ID":"discogs_master_release_id","TXXX:DISCOGS_RATING":"discogs_rating","TXXX:DISCOGS_RELEASED":"date","TXXX:DISCOGS_RELEASE_ID":"discogs_release_id","TXXX:DISCOGS_VOTES":"discogs_votes","TXXX:CATALOGID":"catalognumber","TXXX:STYLE":"genre","TXXX:REPLAYGAIN_TRACK_PEAK":"replaygain_track_peak","TXXX:REPLAYGAIN_TRACK_GAIN":"replaygain_track_gain","TXXX:REPLAYGAIN_ALBUM_PEAK":"replaygain_album_peak","TXXX:REPLAYGAIN_ALBUM_GAIN":"replaygain_album_gain","TXXX:MP3GAIN_MINMAX":"replaygain_track_minmax","TXXX:MP3GAIN_ALBUM_MINMAX":"replaygain_album_minmax","TXXX:MP3GAIN_UNDO":"replaygain_undo",MVNM:"movement",MVIN:"movementIndex",PCST:"podcast",TCAT:"category",TDES:"description",TDRL:"releasedate",TGID:"podcastId",TKWD:"keywords",WFED:"podcasturl",GRP1:"grouping"},W2=class r extends to{static toRating(t){return{source:t.email,rating:t.rating>0?(t.rating-1)/254*xr.maxRatingScore:void 0}}constructor(){super(["ID3v2.3","ID3v2.4"],VP)}postMap(t,e){switch(t.id){case"UFID":{let n=t.value;n.owner_identifier==="http://musicbrainz.org"&&(t.id+=`:${n.owner_identifier}`,t.value=Y8(n.identifier,"latin1"))}break;case"PRIV":{let n=t.value;switch(n.owner_identifier){case"AverageLevel":case"PeakValue":t.id+=`:${n.owner_identifier}`,t.value=n.data.length===4?tr.get(n.data,0):null,t.value===null&&e.addWarning("Failed to parse PRIV:PeakValue");break;default:e.addWarning(`Unknown PRIV owner-identifier: ${n.data}`)}}break;case"POPM":t.value=r.toRating(t.value);break;default:break}}};var UP={Title:"title",Author:"artist","WM/AlbumArtist":"albumartist","WM/AlbumTitle":"album","WM/Year":"date","WM/OriginalReleaseTime":"originaldate","WM/OriginalReleaseYear":"originalyear",Description:"comment","WM/TrackNumber":"track","WM/PartOfSet":"disk","WM/Genre":"genre","WM/Composer":"composer","WM/Lyrics":"lyrics","WM/AlbumSortOrder":"albumsort","WM/TitleSortOrder":"titlesort","WM/ArtistSortOrder":"artistsort","WM/AlbumArtistSortOrder":"albumartistsort","WM/ComposerSortOrder":"composersort","WM/Writer":"lyricist","WM/Conductor":"conductor","WM/ModifiedBy":"remixer","WM/Engineer":"engineer","WM/Producer":"producer","WM/DJMixer":"djmixer","WM/Mixer":"mixer","WM/Publisher":"label","WM/ContentGroupDescription":"grouping","WM/SubTitle":"subtitle","WM/SetSubTitle":"discsubtitle","WM/IsCompilation":"compilation","WM/SharedUserRating":"rating","WM/BeatsPerMinute":"bpm","WM/Mood":"mood","WM/Media":"media","WM/CatalogNo":"catalognumber","MusicBrainz/Album Status":"releasestatus","MusicBrainz/Album Type":"releasetype","MusicBrainz/Album Release Country":"releasecountry","WM/Script":"script","WM/Language":"language",Copyright:"copyright",LICENSE:"license","WM/EncodedBy":"encodedby","WM/EncodingSettings":"encodersettings","WM/Barcode":"barcode","WM/ISRC":"isrc","MusicBrainz/Track Id":"musicbrainz_recordingid","MusicBrainz/Release Track Id":"musicbrainz_trackid","MusicBrainz/Album Id":"musicbrainz_albumid","MusicBrainz/Artist Id":"musicbrainz_artistid","MusicBrainz/Album Artist Id":"musicbrainz_albumartistid","MusicBrainz/Release Group Id":"musicbrainz_releasegroupid","MusicBrainz/Work Id":"musicbrainz_workid","MusicBrainz/TRM Id":"musicbrainz_trmid","MusicBrainz/Disc Id":"musicbrainz_discid","Acoustid/Id":"acoustid_id","Acoustid/Fingerprint":"acoustid_fingerprint","MusicIP/PUID":"musicip_puid","WM/ARTISTS":"artists","WM/InitialKey":"key",ASIN:"asin","WM/Work":"work","WM/AuthorURL":"website","WM/Picture":"picture"},q2=class r extends xr{static toRating(t){return{rating:Number.parseFloat(t+1)/5}}constructor(){super(["asf"],UP)}postMap(t){switch(t.id){case"WM/SharedUserRating":{let e=t.id.split(":");t.value=r.toRating(t.value),t.id=e[0];break}}}};var WP={TT2:"title",TP1:"artist",TP2:"albumartist",TAL:"album",TYE:"year",COM:"comment",TRK:"track",TPA:"disk",TCO:"genre",PIC:"picture",TCM:"composer",TOR:"originaldate",TOT:"originalalbum",TXT:"lyricist",TP3:"conductor",TPB:"label",TT1:"grouping",TT3:"subtitle",TLA:"language",TCR:"copyright",WCP:"license",TEN:"encodedby",TSS:"encodersettings",WAR:"website",PCS:"podcast",TCP:"compilation",TDR:"date",TS2:"albumartistsort",TSA:"albumsort",TSC:"composersort",TSP:"artistsort",TST:"titlesort",WFD:"podcasturl",TBP:"bpm"},H2=class extends to{constructor(){super(["ID3v2.2"],WP)}};var qP={Title:"title",Artist:"artist",Artists:"artists","Album Artist":"albumartist",Album:"album",Year:"date",Originalyear:"originalyear",Originaldate:"originaldate",Releasedate:"releasedate",Comment:"comment",Track:"track",Disc:"disk",DISCNUMBER:"disk",Genre:"genre","Cover Art (Front)":"picture","Cover Art (Back)":"picture",Composer:"composer",Lyrics:"lyrics",ALBUMSORT:"albumsort",TITLESORT:"titlesort",WORK:"work",ARTISTSORT:"artistsort",ALBUMARTISTSORT:"albumartistsort",COMPOSERSORT:"composersort",Lyricist:"lyricist",Writer:"writer",Conductor:"conductor",MixArtist:"remixer",Arranger:"arranger",Engineer:"engineer",Producer:"producer",DJMixer:"djmixer",Mixer:"mixer",Label:"label",Grouping:"grouping",Subtitle:"subtitle",DiscSubtitle:"discsubtitle",Compilation:"compilation",BPM:"bpm",Mood:"mood",Media:"media",CatalogNumber:"catalognumber",MUSICBRAINZ_ALBUMSTATUS:"releasestatus",MUSICBRAINZ_ALBUMTYPE:"releasetype",RELEASECOUNTRY:"releasecountry",Script:"script",Language:"language",Copyright:"copyright",LICENSE:"license",EncodedBy:"encodedby",EncoderSettings:"encodersettings",Barcode:"barcode",ISRC:"isrc",ASIN:"asin",musicbrainz_trackid:"musicbrainz_recordingid",musicbrainz_releasetrackid:"musicbrainz_trackid",MUSICBRAINZ_ALBUMID:"musicbrainz_albumid",MUSICBRAINZ_ARTISTID:"musicbrainz_artistid",MUSICBRAINZ_ALBUMARTISTID:"musicbrainz_albumartistid",MUSICBRAINZ_RELEASEGROUPID:"musicbrainz_releasegroupid",MUSICBRAINZ_WORKID:"musicbrainz_workid",MUSICBRAINZ_TRMID:"musicbrainz_trmid",MUSICBRAINZ_DISCID:"musicbrainz_discid",Acoustid_Id:"acoustid_id",ACOUSTID_FINGERPRINT:"acoustid_fingerprint",MUSICIP_PUID:"musicip_puid",Weblink:"website",REPLAYGAIN_TRACK_GAIN:"replaygain_track_gain",REPLAYGAIN_TRACK_PEAK:"replaygain_track_peak",MP3GAIN_MINMAX:"replaygain_track_minmax",MP3GAIN_UNDO:"replaygain_undo"},K2=class extends to{constructor(){super(["APEv2"],qP)}};var HP={"\xA9nam":"title","\xA9ART":"artist",aART:"albumartist","----:com.apple.iTunes:Band":"albumartist","\xA9alb":"album","\xA9day":"date","\xA9cmt":"comment","\xA9com":"comment",trkn:"track",disk:"disk","\xA9gen":"genre",covr:"picture","\xA9wrt":"composer","\xA9lyr":"lyrics",soal:"albumsort",sonm:"titlesort",soar:"artistsort",soaa:"albumartistsort",soco:"composersort","----:com.apple.iTunes:LYRICIST":"lyricist","----:com.apple.iTunes:CONDUCTOR":"conductor","----:com.apple.iTunes:REMIXER":"remixer","----:com.apple.iTunes:ENGINEER":"engineer","----:com.apple.iTunes:PRODUCER":"producer","----:com.apple.iTunes:DJMIXER":"djmixer","----:com.apple.iTunes:MIXER":"mixer","----:com.apple.iTunes:LABEL":"label","\xA9grp":"grouping","----:com.apple.iTunes:SUBTITLE":"subtitle","----:com.apple.iTunes:DISCSUBTITLE":"discsubtitle",cpil:"compilation",tmpo:"bpm","----:com.apple.iTunes:MOOD":"mood","----:com.apple.iTunes:MEDIA":"media","----:com.apple.iTunes:CATALOGNUMBER":"catalognumber",tvsh:"tvShow",tvsn:"tvSeason",tves:"tvEpisode",sosn:"tvShowSort",tven:"tvEpisodeId",tvnn:"tvNetwork",pcst:"podcast",purl:"podcasturl","----:com.apple.iTunes:MusicBrainz Album Status":"releasestatus","----:com.apple.iTunes:MusicBrainz Album Type":"releasetype","----:com.apple.iTunes:MusicBrainz Album Release Country":"releasecountry","----:com.apple.iTunes:SCRIPT":"script","----:com.apple.iTunes:LANGUAGE":"language",cprt:"copyright","\xA9cpy":"copyright","----:com.apple.iTunes:LICENSE":"license","\xA9too":"encodedby",pgap:"gapless","----:com.apple.iTunes:BARCODE":"barcode","----:com.apple.iTunes:ISRC":"isrc","----:com.apple.iTunes:ASIN":"asin","----:com.apple.iTunes:NOTES":"comment","----:com.apple.iTunes:MusicBrainz Track Id":"musicbrainz_recordingid","----:com.apple.iTunes:MusicBrainz Release Track Id":"musicbrainz_trackid","----:com.apple.iTunes:MusicBrainz Album Id":"musicbrainz_albumid","----:com.apple.iTunes:MusicBrainz Artist Id":"musicbrainz_artistid","----:com.apple.iTunes:MusicBrainz Album Artist Id":"musicbrainz_albumartistid","----:com.apple.iTunes:MusicBrainz Release Group Id":"musicbrainz_releasegroupid","----:com.apple.iTunes:MusicBrainz Work Id":"musicbrainz_workid","----:com.apple.iTunes:MusicBrainz TRM Id":"musicbrainz_trmid","----:com.apple.iTunes:MusicBrainz Disc Id":"musicbrainz_discid","----:com.apple.iTunes:Acoustid Id":"acoustid_id","----:com.apple.iTunes:Acoustid Fingerprint":"acoustid_fingerprint","----:com.apple.iTunes:MusicIP PUID":"musicip_puid","----:com.apple.iTunes:fingerprint":"musicip_fingerprint","----:com.apple.iTunes:replaygain_track_gain":"replaygain_track_gain","----:com.apple.iTunes:replaygain_track_peak":"replaygain_track_peak","----:com.apple.iTunes:replaygain_album_gain":"replaygain_album_gain","----:com.apple.iTunes:replaygain_album_peak":"replaygain_album_peak","----:com.apple.iTunes:replaygain_track_minmax":"replaygain_track_minmax","----:com.apple.iTunes:replaygain_album_minmax":"replaygain_album_minmax","----:com.apple.iTunes:replaygain_undo":"replaygain_undo",gnre:"genre","----:com.apple.iTunes:ALBUMARTISTSORT":"albumartistsort","----:com.apple.iTunes:ARTISTS":"artists","----:com.apple.iTunes:ORIGINALDATE":"originaldate","----:com.apple.iTunes:ORIGINALYEAR":"originalyear","----:com.apple.iTunes:RELEASEDATE":"releasedate",desc:"description",ldes:"longDescription","\xA9mvn":"movement","\xA9mvi":"movementIndex","\xA9mvc":"movementTotal","\xA9wrk":"work",catg:"category",egid:"podcastId",hdvd:"hdVideo",keyw:"keywords",shwm:"showMovement",stik:"stik",rate:"rating"},KP="iTunes",np=class extends to{constructor(){super([KP],HP)}postMap(t,e){switch(t.id){case"rate":t.value={source:void 0,rating:Number.parseFloat(t.value)/100};break}}};var jP={TITLE:"title",ARTIST:"artist",ARTISTS:"artists",ALBUMARTIST:"albumartist","ALBUM ARTIST":"albumartist",ALBUM:"album",DATE:"date",ORIGINALDATE:"originaldate",ORIGINALYEAR:"originalyear",RELEASEDATE:"releasedate",COMMENT:"comment",TRACKNUMBER:"track",DISCNUMBER:"disk",GENRE:"genre",METADATA_BLOCK_PICTURE:"picture",COMPOSER:"composer",LYRICS:"lyrics",ALBUMSORT:"albumsort",TITLESORT:"titlesort",WORK:"work",ARTISTSORT:"artistsort",ALBUMARTISTSORT:"albumartistsort",COMPOSERSORT:"composersort",LYRICIST:"lyricist",WRITER:"writer",CONDUCTOR:"conductor",REMIXER:"remixer",ARRANGER:"arranger",ENGINEER:"engineer",PRODUCER:"producer",DJMIXER:"djmixer",MIXER:"mixer",LABEL:"label",GROUPING:"grouping",SUBTITLE:"subtitle",DISCSUBTITLE:"discsubtitle",TRACKTOTAL:"totaltracks",DISCTOTAL:"totaldiscs",COMPILATION:"compilation",RATING:"rating",BPM:"bpm",KEY:"key",MOOD:"mood",MEDIA:"media",CATALOGNUMBER:"catalognumber",RELEASESTATUS:"releasestatus",RELEASETYPE:"releasetype",RELEASECOUNTRY:"releasecountry",SCRIPT:"script",LANGUAGE:"language",COPYRIGHT:"copyright",LICENSE:"license",ENCODEDBY:"encodedby",ENCODERSETTINGS:"encodersettings",BARCODE:"barcode",ISRC:"isrc",ASIN:"asin",MUSICBRAINZ_TRACKID:"musicbrainz_recordingid",MUSICBRAINZ_RELEASETRACKID:"musicbrainz_trackid",MUSICBRAINZ_ALBUMID:"musicbrainz_albumid",MUSICBRAINZ_ARTISTID:"musicbrainz_artistid",MUSICBRAINZ_ALBUMARTISTID:"musicbrainz_albumartistid",MUSICBRAINZ_RELEASEGROUPID:"musicbrainz_releasegroupid",MUSICBRAINZ_WORKID:"musicbrainz_workid",MUSICBRAINZ_TRMID:"musicbrainz_trmid",MUSICBRAINZ_DISCID:"musicbrainz_discid",ACOUSTID_ID:"acoustid_id",ACOUSTID_ID_FINGERPRINT:"acoustid_fingerprint",MUSICIP_PUID:"musicip_puid",WEBSITE:"website",NOTES:"notes",TOTALTRACKS:"totaltracks",TOTALDISCS:"totaldiscs",DISCOGS_ARTIST_ID:"discogs_artist_id",DISCOGS_ARTISTS:"artists",DISCOGS_ARTIST_NAME:"artists",DISCOGS_ALBUM_ARTISTS:"albumartist",DISCOGS_CATALOG:"catalognumber",DISCOGS_COUNTRY:"releasecountry",DISCOGS_DATE:"originaldate",DISCOGS_LABEL:"label",DISCOGS_LABEL_ID:"discogs_label_id",DISCOGS_MASTER_RELEASE_ID:"discogs_master_release_id",DISCOGS_RATING:"discogs_rating",DISCOGS_RELEASED:"date",DISCOGS_RELEASE_ID:"discogs_release_id",DISCOGS_VOTES:"discogs_votes",CATALOGID:"catalognumber",STYLE:"genre",REPLAYGAIN_TRACK_GAIN:"replaygain_track_gain",REPLAYGAIN_TRACK_PEAK:"replaygain_track_peak",REPLAYGAIN_ALBUM_GAIN:"replaygain_album_gain",REPLAYGAIN_ALBUM_PEAK:"replaygain_album_peak",REPLAYGAIN_MINMAX:"replaygain_track_minmax",REPLAYGAIN_ALBUM_MINMAX:"replaygain_album_minmax",REPLAYGAIN_UNDO:"replaygain_undo"},j2=class r extends xr{static toRating(t,e,n){return{source:t?t.toLowerCase():void 0,rating:Number.parseFloat(e)/n*xr.maxRatingScore}}constructor(){super(["vorbis"],jP)}postMap(t){if(t.id==="RATING")t.value=r.toRating(void 0,t.value,100);else if(t.id.indexOf("RATING:")===0){let e=t.id.split(":");t.value=r.toRating(e[1],t.value,1),t.id=e[0]}}};var XP={IART:"artist",ICRD:"date",INAM:"title",TITL:"title",IPRD:"album",ITRK:"track",IPRT:"track",COMM:"comment",ICMT:"comment",ICNT:"releasecountry",GNRE:"genre",IWRI:"writer",RATE:"rating",YEAR:"year",ISFT:"encodedby",CODE:"encodedby",TURL:"website",IGNR:"genre",IENG:"engineer",ITCH:"technician",IMED:"media",IRPD:"album"},X2=class extends xr{constructor(){super(["exif"],XP)}};var YP={"segment:title":"title","album:ARTIST":"albumartist","album:ARTISTSORT":"albumartistsort","album:TITLE":"album","album:DATE_RECORDED":"originaldate","album:DATE_RELEASED":"releasedate","album:PART_NUMBER":"disk","album:TOTAL_PARTS":"totaltracks","track:ARTIST":"artist","track:ARTISTSORT":"artistsort","track:TITLE":"title","track:PART_NUMBER":"track","track:MUSICBRAINZ_TRACKID":"musicbrainz_recordingid","track:MUSICBRAINZ_ALBUMID":"musicbrainz_albumid","track:MUSICBRAINZ_ARTISTID":"musicbrainz_artistid","track:PUBLISHER":"label","track:GENRE":"genre","track:ENCODER":"encodedby","track:ENCODER_OPTIONS":"encodersettings","edition:TOTAL_PARTS":"totaldiscs",picture:"picture"},Y2=class extends to{constructor(){super(["matroska"],YP)}};var ZP={NAME:"title",AUTH:"artist","(c) ":"copyright",ANNO:"comment"},Z2=class extends xr{constructor(){super(["AIFF"],ZP)}};var J2=class{constructor(){this.tagMappers={},[new U2,new H2,new W2,new np,new np,new j2,new K2,new q2,new X2,new Y2,new Z2].forEach(t=>{this.registerTagMapper(t)})}mapTag(t,e,n){if(this.tagMappers[t])return this.tagMappers[t].mapGenericTag(e,n);throw new X8(`No generic tag mapper defined for tag-format: ${t}`)}registerTagMapper(t){for(let e of t.tagTypes)this.tagMappers[e]=t}};function Rx(r){let t=r.split(`
`),e=[],n=/\[(\d{2}):(\d{2})\.(\d{2,3})\]/;for(let o of t){let s=o.match(n);if(s){let i=Number.parseInt(s[1],10),a=Number.parseInt(s[2],10),l=s[3],u;l.length===3?u=Number.parseInt(l,10):u=Number.parseInt(l,10)*10;let c=(i*60+a)*1e3+u,p=o.replace(n,"").trim();e.push({timestamp:c,text:p})}}return{contentType:J8.lyrics,timeStampFormat:Q8.milliseconds,syncText:e}}var V0=(0,$x.default)("music-metadata:collector"),JP=["matroska","APEv2","vorbis","ID3v2.4","ID3v2.3","ID3v2.2","exif","asf","iTunes","AIFF","ID3v1"],Q2=class{constructor(t){this.format={tagTypes:[],trackInfo:[]},this.native={},this.common={track:{no:null,of:null},disk:{no:null,of:null},movementIndex:{no:null,of:null}},this.quality={warnings:[]},this.commonOrigin={},this.originPriority={},this.tagMapper=new J2,this.opts=t;let e=1;for(let n of JP)this.originPriority[n]=e++;this.originPriority.artificial=500,this.originPriority.id3v1=600}hasAny(){return Object.keys(this.native).length>0}addStreamInfo(t){V0(`streamInfo: type=${t.type?H8[t.type]:"?"}, codec=${t.codecName}`),this.format.trackInfo.push(t)}setFormat(t,e){V0(`format: ${t} = ${e}`),this.format[t]=e,this.opts?.observer&&this.opts.observer({metadata:this,tag:{type:"format",id:t,value:e}})}setAudioOnly(){this.setFormat("hasAudio",!0),this.setFormat("hasVideo",!1)}addTag(t,e,n){return O(this,null,function*(){V0(`tag ${t}.${e} = ${n}`),this.native[t]||(this.format.tagTypes.push(t),this.native[t]=[]),this.native[t].push({id:e,value:n}),yield this.toCommon(t,e,n)})}addWarning(t){this.quality.warnings.push({message:t})}postMap(t,e){return O(this,null,function*(){switch(e.id){case"artist":if(this.commonOrigin.artist===this.originPriority[t])return this.postMap("artificial",{id:"artists",value:e.value});this.common.artists||this.setGenericTag("artificial",{id:"artists",value:e.value});break;case"artists":if((!this.common.artist||this.commonOrigin.artist===this.originPriority.artificial)&&(!this.common.artists||this.common.artists.indexOf(e.value)===-1)){let n=(this.common.artists||[]).concat([e.value]),s={id:"artist",value:QP(n)};this.setGenericTag("artificial",s)}break;case"picture":return this.postFixPicture(e.value).then(n=>{n!==null&&(e.value=n,this.setGenericTag(t,e))});case"totaltracks":this.common.track.of=xr.toIntOrNull(e.value);return;case"totaldiscs":this.common.disk.of=xr.toIntOrNull(e.value);return;case"movementTotal":this.common.movementIndex.of=xr.toIntOrNull(e.value);return;case"track":case"disk":case"movementIndex":{let n=this.common[e.id].of;this.common[e.id]=xr.normalizeTrack(e.value),this.common[e.id].of=n??this.common[e.id].of;return}case"bpm":case"year":case"originalyear":e.value=Number.parseInt(e.value,10);break;case"date":{let n=Number.parseInt(e.value.substr(0,4),10);Number.isNaN(n)||(this.common.year=n);break}case"discogs_label_id":case"discogs_release_id":case"discogs_master_release_id":case"discogs_artist_id":case"discogs_votes":e.value=typeof e.value=="string"?Number.parseInt(e.value,10):e.value;break;case"replaygain_track_gain":case"replaygain_track_peak":case"replaygain_album_gain":case"replaygain_album_peak":e.value=Z8(e.value);break;case"replaygain_track_minmax":e.value=e.value.split(",").map(n=>Number.parseInt(n,10));break;case"replaygain_undo":{let n=e.value.split(",").map(o=>Number.parseInt(o,10));e.value={leftChannel:n[0],rightChannel:n[1]};break}case"gapless":case"compilation":case"podcast":case"showMovement":e.value=e.value==="1"||e.value===1;break;case"isrc":{let n=this.common[e.id];if(n&&n.indexOf(e.value)!==-1)return;break}case"comment":typeof e.value=="string"&&(e.value={text:e.value}),e.value.descriptor==="iTunPGAP"&&this.setGenericTag(t,{id:"gapless",value:e.value.text==="1"});break;case"lyrics":typeof e.value=="string"&&(e.value=Rx(e.value));break;default:}e.value!==null&&this.setGenericTag(t,e)})}toCommonMetadata(){return{format:this.format,native:this.native,quality:this.quality,common:this.common}}postFixPicture(t){return O(this,null,function*(){if(t.data&&t.data.length>0){if(!t.format){let e=yield B2(Uint8Array.from(t.data));if(e)t.format=e.mime;else return null}switch(t.format=t.format.toLocaleLowerCase(),t.format){case"image/jpg":t.format="image/jpeg"}return t}return this.addWarning("Empty picture tag found"),null})}toCommon(t,e,n){return O(this,null,function*(){let o={id:e,value:n},s=this.tagMapper.mapTag(t,o,this);s&&(yield this.postMap(t,s))})}setGenericTag(t,e){V0(`common.${e.id} = ${e.value}`);let n=this.commonOrigin[e.id]||1e3,o=this.originPriority[t];if(_x(e.id))if(o<=n)this.common[e.id]=e.value,this.commonOrigin[e.id]=o;else return V0(`Ignore native tag (singleton): ${t}.${e.id} = ${e.value}`);else if(o===n)!Dx(e.id)||this.common[e.id].indexOf(e.value)===-1?this.common[e.id].push(e.value):V0(`Ignore duplicate value: ${t}.${e.id} = ${e.value}`);else if(o<n)this.common[e.id]=[e.value],this.commonOrigin[e.id]=o;else return V0(`Ignore native tag (list): ${t}.${e.id} = ${e.value}`);this.opts?.observer&&this.opts.observer({metadata:this,tag:{type:"common",id:e.id,value:e.value}})}};function QP(r){return r.length>2?`${r.slice(0,r.length-1).join(", ")} & ${r[r.length-1]}`:r.join(" & ")}var Fx={parserType:"mpeg",extensions:[".mp2",".mp3",".m2a",".aac","aacp"],mimeTypes:["audio/mpeg","audio/mp3","audio/aacs","audio/aacp"],load(){return O(this,null,function*(){return(yield import("./chunk-7WH6DWLW.js")).MpegParser})}};var Ox={parserType:"apev2",extensions:[".ape"],mimeTypes:["audio/ape","audio/monkeys-audio"],load(){return O(this,null,function*(){return(yield import("./chunk-M2BDWJVE.js")).APEv2Parser})}};var Mx={parserType:"asf",extensions:[".asf"],mimeTypes:["audio/ms-wma","video/ms-wmv","audio/ms-asf","video/ms-asf","application/vnd.ms-asf"],load(){return O(this,null,function*(){return(yield import("./chunk-B5IKRECJ.js")).AsfParser})}};var Px={parserType:"dsdiff",extensions:[".dff"],mimeTypes:["audio/dsf","audio/dsd"],load(){return O(this,null,function*(){return(yield import("./chunk-SLF2YBE3.js")).DsdiffParser})}};var Lx={parserType:"aiff",extensions:[".aif","aiff","aifc"],mimeTypes:["audio/aiff","audio/aif","audio/aifc","application/aiff"],load(){return O(this,null,function*(){return(yield import("./chunk-T56ZDBMF.js")).AIFFParser})}};var zx={parserType:"dsf",extensions:[".dsf"],mimeTypes:["audio/dsf"],load(){return O(this,null,function*(){return(yield import("./chunk-ZHCWVQFW.js")).DsfParser})}};var Bx={parserType:"flac",extensions:[".flac"],mimeTypes:["audio/flac"],load(){return O(this,null,function*(){return(yield import("./chunk-YLFCBKVO.js")).FlacParser})}};var Gx={parserType:"matroska",extensions:[".mka",".mkv",".mk3d",".mks","webm"],mimeTypes:["audio/matroska","video/matroska","audio/webm","video/webm"],load(){return O(this,null,function*(){return(yield import("./chunk-7SQ4TWOT.js")).MatroskaParser})}};var Vx={parserType:"mp4",extensions:[".mp4",".m4a",".m4b",".m4pa","m4v","m4r","3gp"],mimeTypes:["audio/mp4","audio/m4a","video/m4v","video/mp4"],load(){return O(this,null,function*(){return(yield import("./chunk-DA555MIO.js")).MP4Parser})}};var Ux={parserType:"musepack",extensions:[".mpc"],mimeTypes:["audio/musepack"],load(){return O(this,null,function*(){return(yield import("./chunk-ZQ7Y2WTN.js")).MusepackParser})}};var Wx={parserType:"ogg",extensions:[".ogg",".ogv",".oga",".ogm",".ogx",".opus",".spx"],mimeTypes:["audio/ogg","audio/opus","audio/speex","video/ogg"],load(){return O(this,null,function*(){return(yield import("./chunk-XJZBCOAQ.js")).OggParser})}};var qx={parserType:"wavpack",extensions:[".wv",".wvp"],mimeTypes:["audio/wavpack"],load(){return O(this,null,function*(){return(yield import("./chunk-ATDDKTFX.js")).WavPackParser})}};var Hx={parserType:"riff",extensions:[".wav","wave",".bwf"],mimeTypes:["audio/vnd.wave","audio/wav","audio/wave"],load(){return O(this,null,function*(){return(yield import("./chunk-G7TCZVEB.js")).WaveParser})}};var U0=(0,Xx.default)("music-metadata:parser:factory");function eL(r){let t=Kx.default.parse(r),e=(0,jx.parse)(t.type);return{type:e.type,subtype:e.subtype,suffix:e.suffix,parameters:t.parameters}}var em=class{constructor(){this.parsers=[],[Bx,Fx,Ox,Vx,Gx,Hx,Wx,Mx,Lx,qx,Ux,zx,Px].forEach(t=>this.registerParser(t))}registerParser(t){this.parsers.push(t)}parse(t,e,n){return O(this,null,function*(){if(t.supportsRandomAccess()?(U0("tokenizer supports random-access, scanning for appending headers"),yield Yx(t,n)):U0("tokenizer does not support random-access, cannot scan for appending headers"),!e){let a=new Uint8Array(4100);if(t.fileInfo.mimeType&&(e=this.findLoaderForContentType(t.fileInfo.mimeType)),!e&&t.fileInfo.path&&(e=this.findLoaderForExtension(t.fileInfo.path)),!e){U0("Guess parser on content..."),yield t.peekBuffer(a,{mayBeLess:!0});let l=yield B2(a,{mpegOffsetTolerance:10});if(!l||!l.mime)throw new K8("Failed to determine audio format");if(U0(`Guessed file type is mime=${l.mime}, extension=${l.ext}`),e=this.findLoaderForContentType(l.mime),!e)throw new j8(`Guessed MIME-type not supported: ${l.mime}`)}}U0(`Loading ${e.parserType} parser...`);let o=new Q2(n),s=yield e.load(),i=new s(o,t,n??{});return U0(`Parser ${e.parserType} loaded`),yield i.parse(),o.format.trackInfo&&(o.format.hasAudio===void 0&&o.setFormat("hasAudio",!!o.format.trackInfo.find(a=>a.type===f4.audio)),o.format.hasVideo===void 0&&o.setFormat("hasVideo",!!o.format.trackInfo.find(a=>a.type===f4.video))),o.toCommonMetadata()})}findLoaderForExtension(t){if(!t)return;let e=tL(t).toLocaleLowerCase()||t;return this.parsers.find(n=>n.extensions.indexOf(e)!==-1)}findLoaderForContentType(t){let e;if(!t)return;try{e=eL(t)}catch{U0(`Invalid HTTP Content-Type header value: ${t}`);return}let n=e.subtype.indexOf("x-")===0?e.subtype.substring(2):e.subtype;return this.parsers.find(o=>o.mimeTypes.find(s=>s.indexOf(`${e.type}/${n}`)!==-1))}getSupportedMimeTypes(){let t=new Set;return this.parsers.forEach(e=>{e.mimeTypes.forEach(n=>{t.add(n),t.add(n.replace("/","/x-"))})}),Array.from(t)}};function tL(r){let t=r.lastIndexOf(".");return t===-1?"":r.slice(t)}var rL="LYRICS200";function Zx(r){return O(this,null,function*(){let t=r.fileInfo.size;if(t>=143){let e=new Uint8Array(15),n=r.position;yield r.readBuffer(e,{position:t-143}),r.setPosition(n);let o=new TextDecoder("latin1").decode(e);if(o.slice(6)===rL)return Number.parseInt(o.slice(0,6),10)+15}return 0})}function Jx(e){return O(this,arguments,function*(r,t={}){let n={mimeType:r.type,size:r.size};return r instanceof File&&(n.path=r.name),nL(r.stream(),n,t)})}function nL(n,o){return O(this,arguments,function*(r,t,e={}){let s=S2(r,{fileInfo:typeof t=="string"?{mimeType:t}:t});try{return yield oL(s,e)}finally{yield s.close()}})}function oL(r,t){return new em().parse(r,void 0,t)}function Yx(e){return O(this,arguments,function*(r,t={}){let n=r.fileInfo.size;if(yield tg(r)){n-=128;let o=yield Zx(r);n-=o}t.apeHeader=yield eg.findApeFooterOffset(r,n)})}var tm=class r{constructor(t){this.http=t}extractMetadata(t){let e=this.extractMetadataFromUrl(t),n=P0(e);return this.http.get(t,{responseType:"blob"}).pipe(x2(s=>O8(this.extractMetadataFromBlob(s,t))),ju(s=>(console.error("Error fetching audio file:",s),P0(e))))}extractMetadataFromBlob(t,e){return new Promise(n=>{try{console.log("Extracting metadata using music-metadata library");let o=setTimeout(()=>{console.warn("Metadata extraction timeout, using URL-based extraction as fallback"),n(this.extractMetadataFromUrl(e))},1e4);Jx(t).then(s=>{clearTimeout(o),console.log("Successfully extracted metadata using music-metadata:",s);let i=s.common||{},a={title:i.title||this.extractMetadataFromUrl(e).title,artist:i.artist||this.extractMetadataFromUrl(e).artist,artists:i.artists?i.artists.join(", "):i.artist,composer:i.composer?i.composer.join(", "):void 0,album:i.album,year:i.year?i.year.toString():void 0,genre:i.genre?i.genre.join(", "):void 0,picture:i.picture&&i.picture.length>0?URL.createObjectURL(new Blob([i.picture[0].data],{type:i.picture[0].format})):void 0,duration:s.format.duration};if(a.title&&a.title!=="Unknown Title")console.log("Successfully extracted metadata:",a),n(a);else{console.log("Metadata incomplete, merging with URL extraction");let l=this.extractMetadataFromUrl(e),u={title:a.title!=="Unknown Title"?a.title:l.title,artist:a.artist!=="Unknown Artist"?a.artist:l.artist,artists:a.artists||l.artists,composer:a.composer||l.composer,album:a.album||l.album,year:a.year||l.year,genre:a.genre||l.genre,picture:a.picture||l.picture};n(u)}}).catch(s=>{clearTimeout(o),console.error("Error extracting metadata with music-metadata:",s),this.extractMetadataFromAudioElement(new Audio(URL.createObjectURL(t)),e).then(i=>{n(i)}).catch(i=>{console.error("Error with audio element fallback:",i),n(this.extractMetadataFromUrl(e))})})}catch(o){console.error("Error in extractMetadataFromBlob:",o),n(this.extractMetadataFromUrl(e))}})}extractMetadataFromAudioElement(t,e){return new Promise(n=>{try{let o=setTimeout(()=>{console.warn("Audio element metadata loading timeout, using URL-based extraction as fallback"),n(this.extractMetadataFromUrl(e))},5e3);t.onloadedmetadata=()=>{clearTimeout(o),console.log("Audio metadata loaded successfully from audio element");let s=t.mediaMetadata||{},i=navigator.mediaSession?.metadata,a=s.title||i?.title,l=s.artist||i?.artist,u=s.album||i?.album,c=s.composer,p=this.extractMetadataFromUrl(e);if(a=a||p.title,l=l||p.artist,u=u||p.album,!c){let f=/(composed by|composer:?|music by)\s*([^,;()\[\]]+)/i,d=a?a.match(f):null,g=l?l.match(f):null;if(d?c=d[2].trim():g&&(c=g[2].trim()),!c&&l&&l.includes(",")){let h=l.split(",");if(h.length>1){let x=h[0].trim();x!==a&&(c=x)}}}let m={title:a,artist:l,artists:l,composer:c,album:u,year:s.year||p.year,genre:s.genre||p.genre,picture:s.artwork?.[0]?.src||p.picture};n(m)},t.onerror=s=>{clearTimeout(o),console.error("Error loading audio element for metadata extraction:",s),n(this.extractMetadataFromUrl(e))},t.readyState===0&&t.load()}catch(o){console.error("Error in extractMetadataFromAudioElement:",o),n(this.extractMetadataFromUrl(e))}})}extractMetadataFromUrl(t){let o=(this.decodeUrlComponent(t).split("/").pop()||"").replace(".mp3",""),s="Unknown Title",i="Unknown Artist",a="",l=o.split(" - ");if(l.length>1)s=l[0].trim(),i=l[1].trim();else{let u=o.match(/\((.*?)\)/);if(u){let c=u[1];if(!["original","extended","remix","mix","version","edit"].some(f=>c.toLowerCase().includes(f.toLowerCase())))s=o.replace(/\(.*?\)/,"").trim(),i=c.trim();else if(s=o,c.toLowerCase().includes("remix")){let f=c.match(/(.*?)\s+remix/i);f&&f[1]&&(a=f[1].trim())}}else s=o}return{title:s,artist:i,artists:i,composer:a,album:"",year:"",genre:""}}decodeUrlComponent(t){try{let e=this.detectEncoding(t);if(e&&console.log(`Decoding URL with detected encoding: ${e}`),e==="utf-8"||e==="ascii")return decodeURIComponent(t);try{return decodeURIComponent(t)}catch(n){return console.warn(`Error with decodeURIComponent for encoding ${e}, returning original URL:`,n),t}}catch(e){console.error("Error in decodeUrlComponent:",e);try{return decodeURIComponent(t)}catch(n){return console.error("Final decoding attempt failed, returning original URL:",n),t}}}detectEncoding(t){try{let e=Qx.detect(t);return e&&e.confidence>.8?(console.log(`Detected encoding: ${e.encoding} with confidence: ${e.confidence}`),e.encoding.toLowerCase()):Array.from(t).some(o=>o.charCodeAt(0)>127)?"utf-8":"ascii"}catch(e){return console.error("Error detecting encoding:",e),null}}static \u0275fac=function(e){return new(e||r)(y2(C2))};static \u0275prov=Qn({token:r,factory:r.\u0275fac,providedIn:"root"})};var W0=class{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}},As=class{refCount(t){return In("refCount")}incRef(t){return In("incRef")}timerAvailable(){return!0}time(t){return In("time")}read(t){return In("read")}readSync(t){return In("readSync")}readToGPU(t,e){return In("readToGPU")}numDataIds(){return In("numDataIds")}disposeData(t,e){return In("disposeData")}write(t,e,n){return In("write")}move(t,e,n,o,s){return In("move")}createTensorFromGPUData(t,e,n){return In("createTensorFromGPUData")}memory(){return In("memory")}floatPrecision(){return In("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return In("dispose")}};function In(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function ey(r){let t=r.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,rm(r,t,e)}function aL(r,t){if(r.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${t.length}`);let e=r.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,rm(r,e,n),rm(t,e,n)}function u1(r,t,e){return Math.max(r,Math.min(t,e))}function lL(r){return r%2===0?r:r+1}function rm(r,t,e){let n=r[t];r[t]=r[e],r[e]=n}function cL(r){let t=0;for(let e=0;e<r.length;e++)t+=r[e];return t}function uL(r,t){let e=Math.random();return t*e+(1-e)*r}function pL(r,t){let e=0;for(let n=0;n<r.length;n++){let o=Number(r[n])-Number(t[n]);e+=o*o}return e}function A(r,t){if(!r)throw new Error(typeof t=="string"?t:t())}function Ut(r,t,e=""){A(Nn(r,t),()=>e+` Shapes ${r} and ${t} must match`)}function Hn(r){A(r!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ze(r){if(r.length===0)return 1;let t=r[0];for(let e=1;e<r.length;e++)t*=r[e];return t}function mL(r){return r.length===0}function z4(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==null&&t[e]!==null&&r[e]!==t[e])return!1;return!0}function Nn(r,t){if(r===t)return!0;if(r==null||t==null||r.length!==t.length)return!1;for(let e=0;e<r.length;e++)if(r[e]!==t[e])return!1;return!0}function Es(r){return r%1===0}function fL(r){if(Math.tanh!=null)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{let t=Math.exp(2*r);return(t-1)/(t+1)}}function dL(r){let t=Math.ceil(Math.sqrt(r));return[t,Math.ceil(r/t)]}function hL(r){let t=new Uint32Array(r);for(let e=0;e<r;++e)t[e]=e;return ey(t),t}function H0(r,t){return t<=r.length?r:r+" ".repeat(t-r.length)}function gL(r,t=o=>0,e,n){return new Promise((o,s)=>{let i=0,a=()=>{if(r()){o();return}i++;let l=t(i);if(e!=null&&i>=e){s();return}n!=null?n(a,l):setTimeout(a,l)};a()})}function xL(r,t){let e=1,n=-1;for(let s=0;s<r.length;++s)if(r[s]>=0)e*=r[s];else if(r[s]===-1){if(n!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${n} and dim ${s}`);n=s}else if(r[s]<0)throw Error(`Shapes can not be < 0. Found ${r[s]} at dim ${s}`);if(n===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${r}`);return r}if(e===0)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);let o=r.slice();return o[n]=t/e,o}function cr(r,t){let e=t.length;return r=r==null?t.map((n,o)=>o):[].concat(r),A(r.every(n=>n>=-e&&n<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${r}`),A(r.every(n=>Es(n)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(n=>n<0?e+n:n)}function B4(r,t){let e=[],n=[],o=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||o?null:cr(t,r).sort(),i=0;for(let a=0;a<r.length;++a){if(s!=null){if(s[i]===a&&r[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${r[a]}' is not 1`);(s[i]==null||s[i]>a)&&r[a]===1&&(e.push(r[a]),n.push(a)),s[i]<=a&&i++}r[a]!==1&&(e.push(r[a]),n.push(a))}return{newShape:e,keptDims:n}}function G4(r,t){return nm(r,t)}function nm(r,t){let e=null;if(r==null||r==="float32")e=new Float32Array(t);else if(r==="int32")e=new Int32Array(t);else if(r==="bool")e=new Uint8Array(t);else if(r==="string")e=new Array(t);else throw new Error(`Unknown data type ${r}`);return e}function V4(r,t){for(let e=0;e<r.length;e++){let n=r[e];if(isNaN(n)||!isFinite(n))throw Error(`A tensor of type ${t} being uploaded contains ${n}.`)}}function U4(r){return r==="bool"||r==="complex64"||r==="float32"||r==="int32"||r==="string"}function yL(r,t){return!(t==="complex64"||t==="float32"&&r!=="complex64"||t==="int32"&&r!=="float32"&&r!=="complex64"||t==="bool"&&r==="bool")}function p1(r){if(r==="float32"||r==="int32")return 4;if(r==="complex64")return 8;if(r==="bool")return 1;throw new Error(`Unknown dtype ${r}`)}function W4(r){if(r==null)return 0;let t=0;return r.forEach(e=>t+=e.length),t}function m1(r){return typeof r=="string"||r instanceof String}function ty(r){return typeof r=="boolean"}function ry(r){return typeof r=="number"}function aa(r){return Array.isArray(r)?aa(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray?"int32":ry(r)?"float32":m1(r)?"string":ty(r)?"bool":"float32"}function f1(r){return!!(r&&r.constructor&&r.call&&r.apply)}function d1(r,t){for(let e=t;e<r;++e)if(r%e===0)return e;return r}function Qo(r){let t=r.length;if(t<2)return[];let e=new Array(t-1);e[t-2]=r[t-1];for(let n=t-3;n>=0;--n)e[n]=e[n+1]*r[n+1];return e}function ny(r,t,e,n=!1){let o=new Array;if(t.length===1){let s=t[0]*(n?2:1);for(let i=0;i<s;i++)o[i]=e[r+i]}else{let s=t[0],i=t.slice(1),a=i.reduce((l,u)=>l*u)*(n?2:1);for(let l=0;l<s;l++)o[l]=ny(r+l*a,i,e,n)}return o}function q0(r,t,e=!1){if(r.length===0)return t[0];let n=r.reduce((o,s)=>o*s)*(e?2:1);if(n===0)return[];if(n!==t.length)throw new Error(`[${r}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return ny(0,r,t,e)}function bL(r,t){if(Array.isArray(r))return r;if(t==="float32")return r instanceof Float32Array?r:new Float32Array(r);if(t==="int32")return r instanceof Int32Array?r:new Int32Array(r);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(r));throw new Error(`Unknown dtype ${t}`)}function op(r,t){let e=h1(r,t);for(let n=0;n<e.length;n++)e[n]=1;return e}function h1(r,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool")return new Uint8Array(r);throw new Error(`Unknown data type ${t}`)}function vL(r,t){let e=r.reduce((n,o)=>n*o,1);if(t==null||t==="float32")return q0(r,new Float32Array(e));if(t==="int32")return q0(r,new Int32Array(e));if(t==="bool")return q0(r,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function kt(r){r.forEach(t=>{A(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function wL(r,t,e){if(t===0)return 0;if(t===1)return r[0];let n=r[r.length-1];for(let o=0;o<r.length-1;++o)n+=e[o]*r[o];return n}function TL(r,t,e){if(t===0)return[];if(t===1)return[r];let n=new Array(t);for(let o=0;o<n.length-1;++o)n[o]=Math.floor(r/e[o]),r-=n[o]*e[o];return n[n.length-1]=r,n}function K0(r){return r&&r.then&&typeof r.then=="function"}var oy="tfjsflags",sp=class{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=SL,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},this.urlFlags[t]!=null){let o=this.urlFlags[t];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${o}.`),this.set(t,o)}}getAsync(t){return O(this,null,function*(){return t in this.flags?this.flags[t]:(this.flags[t]=yield this.evaluateFlag(t),this.flags[t])})}get(t){if(t in this.flags)return this.flags[t];let e=this.evaluateFlag(t);if(K0(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let t=this.getQueryParams(this.global.location.search);oy in t&&t[oy].split(",").forEach(n=>{let[o,s]=n.split(":");this.urlFlags[o]=NL(o,s)})}};function SL(r){let t={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(IL(t,n[0],n[1]),n.join("="))),t}function IL(r,t,e){r[decodeURIComponent(t)]=decodeURIComponent(e||"")}function NL(r,t){let e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function z(){return q4}var q4=null;function sy(r){q4=r}var H4;function K4(){if(H4==null){let r;if(typeof window<"u")r=window;else if(typeof globalThis<"u")r=globalThis;else if(typeof process<"u")r=process;else if(typeof self<"u")r=self;else throw new Error("Could not find a global object");H4=r}return H4}function kL(){let r=K4();return r._tfGlobals==null&&(r._tfGlobals=new Map),r._tfGlobals}function ip(r,t){let e=kL();if(e.has(r))return e.get(r);{let n=t();return e.set(r,n),e.get(r)}}var la="Abs",_s="Acos",Ds="Acosh",ko="Add",ca="AddN",g1="All",x1="Any",ua="ArgMax",pa="ArgMin",Rs="Asin",$s="Asinh",Fs="Atan",Os="Atanh",Ms="Atan2",ma="AvgPool",y1="AvgPoolGrad",fa="AvgPool3D",b1="AvgPool3DGrad",da="BatchMatMul",ha="BatchToSpaceND",v1="Bincount",j0="BitwiseAnd",iy="BroadcastTo",w1="BroadcastArgs",es="Cast",Ps="Ceil",Ls="ClipByValue",T1="Complex",ga="ComplexAbs",xa="Concat",ya="Conv2D",C1="Conv2DBackpropFilter",ba="Conv2DBackpropInput",va="Conv3D",S1="Conv3DBackpropFilterV2",I1="Conv3DBackpropInputV2",zs="Cos",Bs="Cosh",N1="Cumprod",wa="Cumsum",k1="CropAndResize",A1="DenseBincount",E1="DepthToSpace",Ta="DepthwiseConv2dNative",_1="DepthwiseConv2dNativeBackpropFilter",D1="DepthwiseConv2dNativeBackpropInput",R1="Diag",Ca="Dilation2D",ap="Dilation2DBackpropInput",lp="Dilation2DBackpropFilter",ay="Draw",Gs="RealDiv",$1="Einsum",Vs="Elu",F1="EluGrad",Us="Erf",X0="Equal",Ws="Exp",Sa="ExpandDims",qs="Expm1",O1="FFT",M1="Fill",P1="FlipLeftRight",Hs="Floor",Ks="FloorDiv",Ia="FusedBatchNorm",Na="GatherV2",L1="GatherNd",Y0="Greater",js="GreaterEqual",ts="Identity",z1="IFFT",B1="Imag",Xs="IsFinite",Ys="IsInf",Zs="IsNan",ka="LeakyRelu",Z0="Less",J0="LessEqual",G1="LinSpace",Js="Log",Qs="Log1p",Q0="LogicalAnd",el="LogicalNot",tl="LogicalOr";var ly="LogSoftmax";var Aa="LRN",V1="LRNGrad";var Ea="Max",ei="Maximum",_a="MaxPool",U1="MaxPoolGrad",Da="MaxPool3D",W1="MaxPool3DGrad",q1="MaxPoolWithArgmax",Ra="Mean",$a="Min",ti="Minimum",Fa="MirrorPad",ri="Mod",H1="Multinomial",ni="Multiply",Oa="Neg",rl="NotEqual",K1="NonMaxSuppressionV3",j1="NonMaxSuppressionV4",X1="NonMaxSuppressionV5",Ma="OnesLike",Pa="OneHot",La="Pack",za="PadV2";var oi="Pow",Ba="Prelu",Ga="Prod",Y1="RaggedGather",Z1="RaggedRange",J1="RaggedTensorToTensor",Q1="Range",ec="Real",si="Reciprocal",ii="Relu",Va="Reshape",Ua="ResizeNearestNeighbor",tc="ResizeNearestNeighborGrad",Wa="ResizeBilinear",rc="ResizeBilinearGrad",ai="Relu6",qa="Reverse",li="Round",ci="Rsqrt",nc="ScatterNd",oc="TensorScatterUpdate",sc="SearchSorted",Ha="Select",ui="Selu",Ka="Slice",pi="Sin",mi="Sinh",fi="Sign",di="Sigmoid",hi="Softplus",gi="Sqrt",ja="Sum",Xa="SpaceToBatchND",Ya="SplitV",Za="Softmax",ic="SparseFillEmptyRows",ac="SparseReshape",lc="SparseSegmentMean",cc="SparseSegmentSum",uc="SparseToDense",xi="SquaredDifference",pc="Square",nl="StaticRegexReplace",mc="StridedSlice",fc="StringNGrams",dc="StringSplit",hc="StringToHashBucketFast",yi="Sub",bi="Tan",vi="Tanh",rs="Tile",gc="TopK",xc="Transform",ns="Transpose",yc="Unique",Ja="Unpack",Qa="UnsortedSegmentSum";var e0="ZerosLike",wi="Step",cy="FromPixels",bc="RotateWithOffset",ol="_FusedMatMul",sl="FusedConv2D",il="FusedDepthwiseConv2D";function os(...r){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...r)}function AL(...r){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...r)}var om=ip("kernelRegistry",()=>new Map),j4=ip("gradRegistry",()=>new Map);function X4(r,t){let e=my(r,t);return om.get(e)}function Y4(r){return j4.get(r)}function Z4(r){let t=om.entries(),e=[];for(;;){let{done:n,value:o}=t.next();if(n)break;let[s,i]=o,[a]=s.split("_");a===r&&e.push(i)}return e}function sm(r){let{kernelName:t,backendName:e}=r,n=my(t,e);om.has(n)&&os(`The kernel '${t}' for backend '${e}' is already registered`),om.set(n,r)}function py(r){let{kernelName:t}=r;j4.has(t)&&z().getBool("DEBUG")&&os(`Overriding the gradient for '${t}'`),j4.set(t,r)}function my(r,t){return`${t}_${r}`}var b={};ft(b,{arraysEqual:()=>Nn,arraysEqualWithNull:()=>z4,assert:()=>A,assertNonNegativeIntegerDimensions:()=>kt,assertNonNull:()=>Hn,assertShapesMatch:()=>Ut,bytesFromStringArray:()=>W4,bytesPerElement:()=>p1,checkConversionForErrors:()=>V4,clamp:()=>u1,computeStrides:()=>Qo,convertBackendValuesAndArrayBuffer:()=>bL,createScalarValue:()=>OL,createShuffledIndices:()=>hL,decodeString:()=>Sc,distSquared:()=>pL,encodeString:()=>Cc,fetch:()=>PL,fingerPrint64:()=>FL,flatten:()=>r0,getArrayFromDType:()=>nm,getTypedArrayFromDType:()=>G4,hasEncodingLoss:()=>yL,hexToLong:()=>cp,indexToLoc:()=>TL,inferDtype:()=>aa,inferFromImplicitShape:()=>xL,isBoolean:()=>ty,isFunction:()=>f1,isInt:()=>Es,isNumber:()=>ry,isPromise:()=>K0,isScalarShape:()=>mL,isString:()=>m1,isTypedArray:()=>Ur,isValidDtype:()=>U4,locToIndex:()=>wL,makeOnesTypedArray:()=>op,makeZerosNestedTypedArray:()=>vL,makeZerosTypedArray:()=>h1,nearestDivisor:()=>d1,nearestLargerEven:()=>lL,now:()=>pl,parseAxisParam:()=>cr,randUniform:()=>uL,repeatedTry:()=>gL,rightPad:()=>H0,shuffle:()=>ey,shuffleCombo:()=>aL,sizeFromShape:()=>ze,sizeToSquarishShape:()=>dL,squeezeShape:()=>B4,sum:()=>cL,swap:()=>rm,tanh:()=>fL,toNestedArray:()=>q0,toTypedArray:()=>Tc});function im(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array||r instanceof Uint8ClampedArray}var t5=Vn(Cy());var ul=t5.default||t5;function cp(r){return ul.fromString(r,!0,16)}var Iy=cp("c3a5c85c97cb3127"),cl=cp("b492b66fbe98f273"),Zr=cp("9ae16a3b2f90404f");function e5(r){return r.xor(r.shru(47))}function Ny(r,t,e){let n=r.slice(t,t+e);return ul.fromBytes(Array.from(n),!0,!0)}function At(r,t){return Ny(r,t,8)}function Sy(r,t){return Ny(r,t,4)}function kr(r,t){return t===0?r:r.shru(t).or(r.shl(64-t))}function t0(r,t,e=cp("9ddfea08eb382d69")){let n=r.xor(t).mul(e);n=n.xor(n.shru(47));let o=t.xor(n).mul(e);return o=o.xor(o.shru(47)),o=o.mul(e),o}function _L(r,t,e,n,o,s){o=o.add(r),s=kr(s.add(o).add(n),21);let i=o;return o=o.add(t),o=o.add(e),s=s.add(kr(o,44)),[o.add(n),s.add(i)]}function lm(r,t,e,n){return _L(At(r,t),At(r,t+8),At(r,t+16),At(r,t+24),e,n)}function DL(r,t=r.length){if(t>=8){let e=Zr.add(t*2),n=At(r,0).add(Zr),o=At(r,t-8),s=kr(o,37).mul(e).add(n),i=kr(n,25).add(o).mul(e);return t0(s,i,e)}if(t>=4){let e=Zr.add(t*2),n=Sy(r,0);return t0(n.shl(3).add(t),Sy(r,t-4),e)}if(t>0){let e=r[0],n=r[t>>1],o=r[t-1],s=e+(n<<8),i=t+(o<<2);return e5(Zr.mul(s).xor(Iy.mul(i))).mul(Zr)}return Zr}function RL(r,t=r.length){let e=Zr.add(t*2),n=At(r,0).mul(cl),o=At(r,8),s=At(r,t-8).mul(e),i=At(r,t-16).mul(Zr);return t0(kr(n.add(o),43).add(kr(s,30)).add(i),n.add(kr(o.add(Zr),18)).add(s),e)}function $L(r,t=r.length){let e=Zr.add(t*2),n=At(r,0).mul(Zr),o=At(r,8),s=At(r,t-8).mul(e),i=At(r,t-16).mul(Zr),a=kr(n.add(o),43).add(kr(s,30)).add(i),l=t0(a,n.add(kr(o.add(Zr),18)).add(s),e),u=At(r,16).mul(e),c=At(r,24),p=a.add(At(r,t-32)).mul(e),m=l.add(At(r,t-24)).mul(e);return t0(kr(u.add(c),43).add(kr(p,30)).add(m),u.add(kr(c.add(n),18)).add(p),e)}function FL(r,t=r.length){let e=ul.fromNumber(81,!0);if(t<=32)return t<=16?DL(r,t):RL(r,t);if(t<=64)return $L(r,t);let n=e,o=e.mul(cl).add(113),s=e5(o.mul(Zr).add(113)).mul(Zr),i=[ul.UZERO,ul.UZERO],a=[ul.UZERO,ul.UZERO];n=n.mul(Zr).add(At(r,0));let l=0,u=(t-1>>6)*64,c=u+(t-1&63)-63;do n=kr(n.add(o).add(i[0]).add(At(r,l+8)),37).mul(cl),o=kr(o.add(i[1]).add(At(r,l+48)),42).mul(cl),n=n.xor(a[1]),o=o.add(i[0]).add(At(r,l+40)),s=kr(s.add(a[0]),33).mul(cl),i=lm(r,l,i[1].mul(cl),n.add(a[0])),a=lm(r,l+32,s.add(a[1]),o.add(At(r,l+16))),[s,n]=[n,s],l+=64;while(l!==u);let p=cl.add(s.and(255).shl(1));return l=c,a[0]=a[0].add(t-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),n=kr(n.add(o).add(i[0]).add(At(r,l+8)),37).mul(p),o=kr(o.add(i[1]).add(At(r,l+48)),42).mul(p),n=n.xor(a[1].mul(9)),o=o.add(i[0].mul(9).add(At(r,l+40))),s=kr(s.add(a[0]),33).mul(p),i=lm(r,l,i[1].mul(p),n.add(a[0])),a=lm(r,l+32,s.add(a[1]),o.add(At(r,l+16))),[s,n]=[n,s],t0(t0(i[0],a[0],p).add(e5(o).mul(Iy)).add(s),t0(i[1],a[1],p).add(n),p)}function OL(r,t){return t==="string"?Cc(r):Tc([r],t)}function ML(r,t){return r instanceof Float32Array&&t==="float32"||r instanceof Int32Array&&t==="int32"||r instanceof Uint8Array&&t==="bool"}function Tc(r,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=r0(r)),z().getBool("DEBUG")&&V4(r,t),ML(r,t))return r;if(t==null||t==="float32"||t==="complex64")return new Float32Array(r);if(t==="int32")return new Int32Array(r);if(t==="bool"){let e=new Uint8Array(r.length);for(let n=0;n<e.length;++n)Math.round(r[n])!==0&&(e[n]=1);return e}else throw new Error(`Unknown data type ${t}`)}function pl(){return z().platform.now()}function PL(r,t){return z().platform.fetch(r,t)}function Cc(r,t="utf-8"){return t=t||"utf-8",z().platform.encode(r,t)}function Sc(r,t="utf-8"){return t=t||"utf-8",z().platform.decode(r,t)}function Ur(r){return z().platform.isTypedArray!=null?z().platform.isTypedArray(r):im(r)}function r0(r,t=[],e=!1){if(t==null&&(t=[]),typeof r=="boolean"||typeof r=="number"||typeof r=="string"||K0(r)||r==null||Ur(r)&&e)t.push(r);else if(Array.isArray(r)||Ur(r))for(let n=0;n<r.length;++n)r0(r[n],t,e);else{let n=-1;for(let o of Object.keys(r))/^([1-9]+[0-9]*|0)$/.test(o)&&(n=Math.max(n,Number(o)));for(let o=0;o<=n;o++)r0(r[o],t,e)}return t}var cm=class{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new r5)}profileKernel(t,e,n){let o,s=()=>{o=n()},i,a=pl();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(let u of o)u.dataSync();i=Promise.resolve({kernelMs:pl()-a})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){let c=o[u];c.data().then(p=>{LL(p,c.dtype,t)})}return{kernelName:t,outputs:o,inputs:e,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(t){let{kernelName:e,outputs:n,timeMs:o,inputs:s,extraInfo:i}=t;n.forEach(a=>{Promise.all([a.data(),o,i]).then(l=>{this.logger.logKernelProfile(e,a,l[0],l[1],s,l[2])})})}};function LL(r,t,e){if(t!=="float32")return!1;for(let n=0;n<r.length;n++){let o=r[n];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${e}'`),!0}return!1}var r5=class{logKernelProfile(t,e,n,o,s,i){let a=typeof o=="number"?H0(`${o}ms`,9):o.error,l=H0(t,25),u=e.rank,c=e.size,p=H0(e.shape.toString(),14),m="";for(let f in s){let d=s[f];if(d!=null){let g=d.shape||e.shape,h=g.length;m+=`${f}: ${h}D ${h>0?g:""} `}}console.log(`%c${l}	%c${a}	%c${u}D ${p}	%c${c}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function ky(r,t,e){let n={},o={};for(let l=0;l<t.length;l++)n[t[l].id]=!0;for(let l=0;l<r.length;l++){let u=r[l],c=u.inputs;for(let p in c){let m=c[p],f=!1;for(let d=0;d<t.length;d++)if(n[m.id]){u.outputs.forEach(g=>n[g.id]=!0),f=!0,o[u.id]=!0;break}if(f)break}}let s={};s[e.id]=!0;let i={};for(let l=r.length-1;l>=0;l--){let u=r[l],c=u.inputs;for(let p=0;p<u.outputs.length;p++)if(s[u.outputs[p].id]){for(let m in c)s[c[m].id]=!0,i[u.id]=!0;break}}let a=[];for(let l=0;l<r.length;l++){let u=r[l];if(o[u.id]&&i[u.id]){let c={};for(let m in u.inputs){let f=u.inputs[m];n[f.id]&&(c[m]=f)}let p=Object.assign({},u);p.inputs=c,p.outputs=u.outputs,a.push(p)}}return a}function Ay(r,t,e,n){for(let o=t.length-1;o>=0;o--){let s=t[o],i=[];if(s.outputs.forEach(l=>{let u=r[l.id];u!=null?i.push(u):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let a=s.gradient(i);for(let l in s.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);let u=e(()=>a[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);let c=s.inputs[l];if(!Nn(u.shape,c.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${c.shape}'`);if(r[c.id]==null)r[c.id]=u;else{let p=r[c.id];r[c.id]=n(p,u),p.dispose()}}}}var Ey=20,up=3,n5=7;function _y(r,t,e,n){let o=Qo(t),s=zL(r,t,e,o),i=t.length,a=um(r,t,e,o,s),l=["Tensor"];return n&&(l.push(`  dtype: ${e}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(a.map(u=>"    "+u).join(`
`)),l.join(`
`)}function zL(r,t,e,n){let o=ze(t),s=n[n.length-1],i=new Array(s).fill(0),a=t.length,l=e==="complex64"?mp(r):r;if(a>1)for(let u=0;u<o/s;u++){let c=u*s;for(let p=0;p<s;p++)i[p]=Math.max(i[p],pp(l[c+p],0,e).length)}return i}function pp(r,t,e){let n;return Array.isArray(r)?n=`${parseFloat(r[0].toFixed(n5))} + ${parseFloat(r[1].toFixed(n5))}j`:m1(r)?n=`'${r}'`:e==="bool"?n=Dy(r):n=parseFloat(r.toFixed(n5)).toString(),H0(n,t)}function Dy(r){return r===0?"false":"true"}function um(r,t,e,n,o,s=!0){let i=e==="complex64"?2:1,a=t[0],l=t.length;if(l===0){if(e==="complex64"){let g=mp(r);return[pp(g[0],0,e)]}return e==="bool"?[Dy(r[0])]:[r[0].toString()]}if(l===1){if(a>Ey){let h=up*i,x=Array.from(r.slice(0,h)),y=Array.from(r.slice((a-up)*i,a*i));return e==="complex64"&&(x=mp(x),y=mp(y)),["["+x.map((v,w)=>pp(v,o[w],e)).join(", ")+", ..., "+y.map((v,w)=>pp(v,o[a-up+w],e)).join(", ")+"]"]}return["["+(e==="complex64"?mp(r):Array.from(r)).map((h,x)=>pp(h,o[x],e)).join(", ")+"]"]}let u=t.slice(1),c=n.slice(1),p=n[0]*i,m=[];if(a>Ey){for(let g=0;g<up;g++){let h=g*p,x=h+p;m.push(...um(r.slice(h,x),u,e,c,o,!1))}m.push("...");for(let g=a-up;g<a;g++){let h=g*p,x=h+p;m.push(...um(r.slice(h,x),u,e,c,o,g===a-1))}}else for(let g=0;g<a;g++){let h=g*p,x=h+p;m.push(...um(r.slice(h,x),u,e,c,o,g===a-1))}let f=l===2?",":"";m[0]="["+(a>0?m[0]+f:"");for(let g=1;g<m.length-1;g++)m[g]=" "+m[g]+f;let d=`,
`;for(let g=2;g<l;g++)d+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":d),m}function mp(r){let t=[];for(let e=0;e<r.length;e+=2)t.push([r[e],r[e+1]]);return t}var Qe=class{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=ze(t),n!=null){let o=n.length;A(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||nm(e,this.size),this.strides=Qo(t)}set(t,...e){e.length===0&&(e=[0]),A(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);let n=this.locToIndex(e);this.values[n]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(let o of t){if(o<0||o>=this.shape[e]){let s=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(s)}e++}let n=t[t.length-1];for(let o=0;o<t.length-1;++o)n+=this.strides[o]*t[o];return this.values[n]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];let e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return Eo().makeTensor(this.values,this.shape,this.dtype)}},Eo=null,Ic=null,BL=null;function Ry(r){Eo=r}function $y(r){Ic=r}function Fy(r){BL=r}var Ke=class{constructor(t,e,n,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ze(t),this.strides=Qo(t),this.dataId=n,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}buffer(){return O(this,null,function*(){let t=yield this.data();return Ic.buffer(this.shape,this.dtype,t)})}bufferSync(){return Ic.buffer(this.shape,this.dtype,this.dataSync())}array(){return O(this,null,function*(){let t=yield this.data();return q0(this.shape,t,this.dtype==="complex64")})}arraySync(){return q0(this.shape,this.dataSync(),this.dtype==="complex64")}data(){return O(this,null,function*(){this.throwIfDisposed();let t=Eo().read(this.dataId);if(this.dtype==="string"){let e=yield t;try{return e.map(n=>Sc(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t})}dataToGPU(t){return this.throwIfDisposed(),Eo().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();let t=Eo().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>Sc(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}bytes(){return O(this,null,function*(){this.throwIfDisposed();let t=yield Eo().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)})}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Eo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ic.print(this,t)}clone(){return this.throwIfDisposed(),Ic.clone(this)}toString(t=!1){let e=this.dataSync();return _y(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ic.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),Eo().makeVariable(this,t,e,n)}};Object.defineProperty(Ke,Symbol.hasInstance,{value:r=>!!r&&r.data!=null&&r.dataSync!=null&&r.throwIfDisposed!=null});function F(){return ip("Tensor",()=>Ke)}F();var Ti=class extends Ke{constructor(t,e,n,o){super(t.shape,t.dtype,t.dataId,o),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Nn(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);Eo().disposeTensor(this),this.dataId=t.dataId,Eo().incRef(this,null)}dispose(){Eo().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ti,Symbol.hasInstance,{value:r=>r instanceof Ke&&r.assign!=null&&r.assign instanceof Function});var Oy=function(r){return r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64",r}(Oy||{}),My=function(r){return r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64",r}(My||{}),Py=function(r){return r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64",r}(Py||{}),Ly=function(r){return r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64",r}(Ly||{}),GL={float32:Py,int32:Oy,bool:My,complex64:Ly};function or(r,t){if(r==="string"||t==="string"){if(r==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${r} with ${t}`)}return GL[r][t]}function ml(r){return or(r,"int32")}function pm(r){return r!=null&&typeof r=="object"&&"texture"in r&&r.texture instanceof WebGLTexture}function mm(r){return typeof GPUBuffer<"u"&&r!=null&&typeof r=="object"&&"buffer"in r&&r.buffer instanceof GPUBuffer}function Ge(r,t){if(r.dtype===t.dtype)return[r,t];let e=or(r.dtype,t.dtype);return[r.cast(e),t.cast(e)]}function zy(r,t){A(r.dtype===t.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${t.dtype}) input must match`)}function fm(r){let t=[];return By(r,t,new Set),t}function By(r,t,e){if(r==null)return;if(r instanceof Ke){t.push(r);return}if(!VL(r))return;let n=r;for(let o in n){let s=n[o];e.has(s)||(e.add(s),By(s,t,e))}}function VL(r){return Array.isArray(r)||typeof r=="object"}function o5(r){return r.kernelName!=null}var dm=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(let t in this.registeredVariables)this.registeredVariables[t].dispose()}},WL=(()=>{class r{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new dm}ready(){return O(this,null,function*(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let n=0;n<e.length;n++){let o=e[n];if(yield this.initializeBackend(o).success){yield this.setBackend(o);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")})}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,o=1){return e in this.registryFactory?(os(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:o},!0)}setBackend(e){return O(this,null,function*(){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:n,asyncInit:o}=this.initializeBackend(e);if(!(o?yield n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new cm(this.backendInstance),!0})}setupRegisteredKernels(){Z4(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Z4(e).forEach(o=>{o.disposeFunc!=null&&o.disposeFunc(this.registry[e])})}initializeBackend(e){let n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let o=n.factory();if(o&&!(o instanceof As)&&typeof o.then=="function"){let s=++this.pendingBackendInitId,i=o.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,os(`Initialization of backend ${e} failed`),os(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=o,{success:!0,asyncInit:!1}}catch(o){return os(`Initialization of backend ${e} failed`),os(o.stack||o.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let n=0;n<e.length;n++){let o=e[n],{success:s,asyncInit:i}=this.initializeBackend(o);if(i||s)return{name:o,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){let o=this.state.tensorInfo.get(n),s=o.backend,i=this.readSync(n),a=s.refCount(n);s.disposeData(n,!0),o.backend=e,e.move(n,i,o.shape,o.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let o=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");o=e}let s;return this.scopedRun(()=>this.startScope(o),()=>this.endScope(s),()=>(s=n(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,n,o){e();try{let s=o();return n(),s}catch(s){throw n(),s}}nextTensorId(){return r.nextTensorId++}nextVariableId(){return r.nextVariableId++}clone(e){let n=k.runKernel(ts,{x:e}),o={x:e},s=a=>({x:()=>{let l="float32",u={x:a},c={dtype:l};return k.runKernel(es,u,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,o,[n],s,i,{}),n}runKernel(e,n,o){if(this.backendName==null&&this.backend,!(X4(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:o})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,o){let s=this.backend.numDataIds(),i=0;o.forEach(u=>{i+=u.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=s-n-i-a;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${e}'`)}runKernelFunc(e){let n,o=[],s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u,c=o5(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(o5(e)){let{kernelName:g,inputs:h,attrs:x}=e;this.backendName==null&&this.backend;let y=X4(g,this.backendName);A(y!=null,()=>`Cannot find registered kernel '${g}' for backend '${this.backendName}'`),l=()=>{let v=this.backend.numDataIds();u=y.kernelFunc({inputs:h,attrs:x,backend:this.backend});let w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(g,v,w);let I=w.map(E=>E.rank!=null?E:this.makeTensorFromTensorInfo(E));if(s){let E=this.getTensorsForGradient(g,h,I);o=this.saveTensorsForBackwardMode(E)}return I}}else{let{forwardFunc:g}=e,h=x=>{s&&(o=x.map(y=>this.keep(this.clone(y))))};l=()=>{let x=this.backend.numDataIds();u=this.tidy(()=>g(this.backend,h));let y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,x,y),y}}let{inputs:p,attrs:m}=e,f=o5(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=l():(d=this.profiler.profileKernel(c,p,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),n=d.outputs)}),s&&this.addTapeNode(c,p,n,f,o,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(g=>p[g]!=null?p[g].shape:null),outputShapes:n.map(g=>g.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(o=>this.keep(this.clone(o)))}getTensorsForGradient(e,n,o){let s=Y4(e);if(s!=null){let i=s.inputsToSave||[],a=s.outputsToSave||[],l;s.saveAllInputs?(A(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(n).map(c=>n[c])):l=i.map(c=>n[c]);let u=o.filter((c,p)=>a[p]);return l.concat(u)}return[]}makeTensor(e,n,o,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");o=o||"float32",s=s||this.backend;let i=e;o==="string"&&m1(e[0])&&(i=e.map(u=>Cc(u)));let a=s.write(i,n,o),l=new Ke(n,o,a,this.nextTensorId());if(this.trackTensor(l,s),o==="string"){let u=this.state.tensorInfo.get(a),c=W4(i);this.state.numBytes+=c-u.bytes,u.bytes=c}return l}makeTensorFromDataId(e,n,o,s){o=o||"float32";let i={dataId:e,shape:n,dtype:o};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(e,n){let{dataId:o,shape:s,dtype:i}=e,a=new Ke(s,i,o,this.nextTensorId());return this.trackTensor(a,n),a}makeVariable(e,n=!0,o,s){o=o||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let i=new Ti(e,n,o,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let o=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(o=e.size*p1(e.dtype)),this.state.numBytes+=o,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:o})),e instanceof Ti||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let o=e.size*p1(e.dtype);this.state.numBytes-=o}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}profile(e){return O(this,null,function*(){this.state.profiling=!0;let n=this.state.numBytes,o=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=yield e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-o;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=yield s.kernelTimeMs,s.extraInfo=yield s.extraInfo;return this.state.activeProfile})}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,o,s,i,a){let l={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:o,saved:i},u=Y4(e);u!=null&&(s=u.gradFunc),s!=null&&(l.gradient=c=>(c=c.map((p,m)=>{if(p==null){let f=o[m],d=h1(f.size,f.dtype);return this.makeTensor(d,f.shape,f.dtype)}return p}),s(c.length>1?c:c[0],i,a))),this.state.activeTape.push(l)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){let n=fm(e),o=new Set(n.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){let a=this.state.activeScope.track[i];!a.kept&&!o.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(e,n,o,s=!1){if(A(n.length>0,()=>"gradients() received an empty list of xs."),o!=null&&o.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${o.dtype}'`);let i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(i instanceof Ke,()=>"The result y returned by f() must be a tensor.");let a=ky(this.state.activeTape,n,i);if(!s&&a.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let l={};l[i.id]=o??qL(i.shape),Ay(l,a,c=>this.tidy(c),HL);let u=n.map(c=>l[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(let p of c.saved)p.dispose()}),this.state.activeTape=null),{value:i,grads:u}})}customGrad(e){return A(f1(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{A(n.every(l=>l instanceof Ke),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let o,s={};n.forEach((l,u)=>{s[u]=l});let i=(l,u)=>(o=e(...n,u),A(o.value instanceof Ke,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(f1(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),a=(l,u)=>{let c=o.gradFunc(l,u),p=Array.isArray(c)?c:[c];A(p.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(p.every(f=>f instanceof Ke),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let m={};return p.forEach((f,d)=>{m[d]=()=>f}),m};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}time(e){return O(this,null,function*(){let n=pl(),o=yield this.backend.time(e);return o.wallMs=pl()-n,o})}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new dm;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}return r.nextTensorId=0,r.nextVariableId=0,r})();function qL(r){let t=op(ze(r),"float32");return k.makeTensor(t,r,"float32")}function s5(){let r=K4();if(r._tfengine==null){let t=new sp(r);r._tfengine=new WL(t)}return sy(r._tfengine.ENV),Ry(()=>r._tfengine),r._tfengine}var k=s5();function HL(r,t){let e={a:r,b:t};return k.runKernel(ko,e)}var n0={};ft(n0,{isBrowser:()=>a5,isMobile:()=>XL,mockIsMobile:()=>jL});function KL(){return typeof navigator<"u"&&navigator!=null}var i5;function jL(r){i5=r}function XL(r){if(i5!==void 0)return i5;if(r||KL()){if(r||(r=navigator),r.product==="ReactNative")return!0;let t=r.userAgent||r.vendor||(typeof window<"u"?window.opera:"");if(!t){let e=r;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a5(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var fn=z();fn.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});fn.registerFlag("IS_BROWSER",()=>a5());fn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");fn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));fn.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));fn.registerFlag("PROD",()=>!1);fn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>fn.getBool("DEBUG"));fn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);fn.registerFlag("IS_TEST",()=>!1);fn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>fn.getBool("DEBUG"));fn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);fn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);fn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function dn(r,t){let e=r;if(Ur(r))return t==="string"?[]:[r.length];if(pm(r)){let o=r.channels||"RGBA";return[r.height,r.width*o.length]}else if(mm(r))return[r.buffer.size/(t==null?4:p1(t))];if(!Array.isArray(r))return[];let n=[];for(;Array.isArray(e)||Ur(e)&&t!=="string";)n.push(e.length),e=e[0];return Array.isArray(r)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Vy(r,n,[]),n}function Vy(r,t,e){if(e=e||[],!Array.isArray(r)&&!Ur(r)){A(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}A(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${r.length} elements`),A(r.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${r.length} elements`);let n=t.slice(1);for(let o=0;o<r.length;++o)Vy(r[o],n,e.concat(o))}function Gy(r,t,e,n){if(r!=="string_or_numeric"){if(r==null)throw new Error("Expected dtype cannot be null.");if(r!=="numeric"&&r!==t||r==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${n}' must be ${r} tensor, but got ${t} tensor`)}}function C(r,t,e,n="numeric"){if(r instanceof F())return Gy(n,r.dtype,t,e),r;let o=aa(r);if(o!=="string"&&["bool","int32","float32"].indexOf(n)>=0&&(o=n),Gy(n,o,t,e),r==null||!Ur(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string"){let l=r==null?"null":r.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${l}'`)}let s=dn(r,o);!Ur(r)&&!Array.isArray(r)&&(r=[r]);let a=o!=="string"?Tc(r,o):r0(r,[],!0);return k.makeTensor(a,s,o)}function fl(r,t,e,n="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((s,i)=>C(s,`${t}[${i}]`,e,n))}var l5="__op";function S(r){let t=Object.keys(r);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0],n=r[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+l5;let o=(...s)=>{k.startScope(e);try{let i=n(...s);return K0(i)&&console.error("Cannot return a Promise inside of tidy."),k.endScope(i),i}catch(i){throw k.endScope(null),i}};return Object.defineProperty(o,"name",{value:e,configurable:!0}),o}function YL(r,t){let e=C(r,"real","complex"),n=C(t,"imag","complex");Ut(e.shape,n.shape,`real and imag shapes, ${e.shape} and ${n.shape}, must match in call to tf.complex().`);let o={real:e,imag:n};return k.runKernel(T1,o)}var hn=S({complex_:YL});function Jr(r,t,e,n){if(n==null)n=aa(r);else if(n==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(mm(r)||pm(r)){if(n!=="float32"&&n!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${n}.`);return k.backend.createTensorFromGPUData(r,t||e,n)}if(!Ur(r)&&!Array.isArray(r)&&typeof r!="number"&&typeof r!="boolean"&&typeof r!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){kt(t);let o=ze(t),s=ze(e);A(o===s,()=>`Based on the provided shape, [${t}], the tensor should have ${o} values but has ${s}`);for(let i=0;i<e.length;++i){let a=e[i],l=i===e.length-1?a!==ze(t.slice(i)):!0;A(e[i]===t[i]||!l,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!Ur(r)&&!Array.isArray(r)&&(r=[r]),t=t||e,r=n!=="string"?Tc(r,n):r0(r,[],!0),k.makeTensor(r,t,n)}function yr(r,t,e){let n=dn(r,e);return Jr(r,t,n,e)}var Ci={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var Fr=class r{static join(t){return new r(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(n=>Ur(n)?n.buffer:n),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let n=0;n<t.length;n++){let o=t[n];n!==t.length-1&&o.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let s=e+o.byteLength;this.shards.push({buffer:o,start:e,end:s}),e=s}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);let n=this.findShardForByte(t);if(n===-1)throw new Error(`Could not find start shard for byte ${t}`);let o=e-t,s=new ArrayBuffer(o),i=new Uint8Array(s),a=0;for(let l=n;l<this.shards.length;l++){let u=this.shards[l],p=t+a-u.start,m=a,d=Math.min(e,u.end)-u.start,g=new Uint8Array(u.buffer,p,d-p);if(i.set(g,m),a+=g.length,e<u.end)break}return s}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(o){return t<o.start?-1:t>=o.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let n=ZL(this.shards,e);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function ZL(r,t){let e=0,n=r.length;for(;e<=n;){let o=Math.floor((n-e)/2)+e,s=t(r[o]);if(s===0)return o;s<0?n=o:e=o+1}return-1}function JL(r){z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}Fy(JL);function so(){return k}function fp(){return k.memory()}function B(r,t){return k.tidy(r,t)}function Ae(r){fm(r).forEach(e=>e.dispose())}function Ct(r){return k.keep(r)}function Uy(){return k.backendName}function hm(r,t,e=1){return k.registerBackend(r,t,e)}function gm(){return k.backend}var o0=4;function Hy(r,t){return O(this,null,function*(){let e=[],n=[],o=Array.isArray(r)?r.map(i=>i.name):Object.keys(r);for(let i=0;i<o.length;++i){let a=o[i],l=Array.isArray(r)?r[i].tensor:r[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);let u={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){let c=new Promise(p=>O(null,null,function*(){let m=yield l.bytes(),f=m.reduce((h,x)=>h+x.length,0)+o0*m.length,d=new Uint8Array(f),g=0;for(let h=0;h<m.length;h++){let x=m[h],y=new Uint8Array(new Uint32Array([x.length]).buffer);d.set(y,g),g+=o0,d.set(x,g),g+=x.length}p(d)}));n.push(c)}else n.push(l.data());t!=null&&(u.group=t),e.push(u)}let s=yield Promise.all(n);return{data:tz(s),specs:e}})}function xm(r,t){let e=new Fr(r),n={},o=0;for(let s of t){let i=QL(s,(a,l)=>e.slice(o+a,o+l));n[s.name]=Ky(s,e.slice(o,o+i)),o+=i}return n}function QL(r,t){let e=ze(r.shape),n;if("quantization"in r){let o=r.quantization;n=Ci[o.dtype]}else if(r.dtype==="string"){let o=0;for(let s=0;s<e;s++)o+=o0+new Uint32Array(t(o,o+o0))[0];return o}else n=Ci[r.dtype];return e*n}function ez(r,t){return O(this,null,function*(){let e=ze(r.shape),n;if("quantization"in r){let o=r.quantization;n=Ci[o.dtype]}else if(r.dtype==="string"){let o=0;for(let s=0;s<e;s++)o+=o0+new Uint32Array(yield t(o,o+o0))[0];return o}else n=Ci[r.dtype];return e*n})}function Ky(r,t){let e=r.name,n=r.dtype,o=r.shape,s=ze(o),i,a=0;if("quantization"in r){let l=r.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${r.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(n!=="float32")throw new Error(`Weight ${r.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${n}.`)}else throw new Error(`Weight ${r.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let u=Ci[l.dtype],c=l.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(n==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){i=new Float32Array(c.length);for(let p=0;p<c.length;p++){let m=c[p];i[p]=m*l.scale+l.min}}else if(l.dtype==="float16")i=sz()(c);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(n==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);i=new Int32Array(c.length);for(let p=0;p<c.length;p++){let m=c[p];i[p]=Math.round(m*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${n}`);a+=s*u}else if(n==="string"){let l=ze(r.shape);i=[];for(let u=0;u<l;u++){let c=new Uint32Array(t.slice(a,a+o0))[0];a+=o0;let p=new Uint8Array(t.slice(a,a+c));i.push(p),a+=c}}else{let l=Ci[n];if(n==="float32")i=new Float32Array(t);else if(n==="int32")i=new Int32Array(t);else if(n==="bool")i=new Uint8Array(t);else if(n==="complex64"){i=new Float32Array(t);let u=new Float32Array(i.length/2),c=new Float32Array(i.length/2);for(let d=0;d<u.length;d++)u[d]=i[d*2],c[d]=i[d*2+1];let p=yr(u,o,"float32"),m=yr(c,o,"float32"),f=hn(p,m);return p.dispose(),m.dispose(),f}else throw new Error(`Unsupported dtype in weight '${e}': ${n}`);a+=s*l}return yr(i,o,n)}function Wy(r,t,e){return O(this,null,function*(){let n=new Uint8Array(t);for(;n.byteLength<e;){let{done:o,value:s}=yield r.read();if(o&&s==null){let a=e-n.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}let i=new Uint8Array(n.length+s.byteLength);i.set(n,0),i.set(new Uint8Array(s),n.length),n=i}return n.buffer})}function ym(r,t){return O(this,null,function*(){let e={},n=r.getReader(),o=new ArrayBuffer(0);for(let s of t){let i=yield ez(s,(u,c)=>O(null,null,function*(){return o=yield Wy(n,o,c),o.slice(u,c)}));o=yield Wy(n,o,i);let a=o.slice(0,i);o=o.slice(i);let l=Ky(s,a);if(e[s.name]=l,Uy()==="webgpu"){let u=gm();"uploadToGPU"in u&&ze(l.shape)>=z().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return e})}function tz(r){if(r===null)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let t=0,e=[];r.forEach(s=>{if(t+=s.byteLength,e.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let n=new Uint8Array(t),o=0;return e.forEach(s=>{n.set(new Uint8Array(s.buffer),o),o+=s.byteLength}),n.buffer}var c5=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function qy(r){return c5?Buffer.byteLength(r,"utf8"):new Blob([r]).size}function jy(r){if(c5)return Buffer.from(r).toString("base64");let t=new Uint8Array(r),e="";for(let n=0,o=t.length;n<o;n++)e+=String.fromCharCode(t[n]);return btoa(e)}function Xy(r){if(c5){let n=Buffer.from(r,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}let t=atob(r),e=new Uint8Array(t.length);for(let n=0;n<t.length;++n)e.set([t.charCodeAt(n)],n);return e.buffer}function Yy(r){return Fr.join(r)}function u5(r){let t="/";for(r=r.trim();r.endsWith(t);)r=r.slice(0,r.length-1);let e=r.split(t);return e[e.length-1]}function bm(r,t){let e={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:t};return r.signature!=null&&(e.signature=r.signature),r.userDefinedMetadata!=null&&(e.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(e.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(e.initializerSignature=r.initializerSignature),r.trainingConfig!=null&&(e.trainingConfig=r.trainingConfig),e}function p5(r,t,e){let n={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(r.trainingConfig!=null&&(n.trainingConfig=r.trainingConfig),r.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");n.weightSpecs=t,n.weightData=e}return r.signature!=null&&(n.signature=r.signature),r.userDefinedMetadata!=null&&(n.userDefinedMetadata=r.userDefinedMetadata),r.modelInitializer!=null&&(n.modelInitializer=r.modelInitializer),r.initializerSignature!=null&&(n.initializerSignature=r.initializerSignature),n}function Nc(r,t){return O(this,null,function*(){let e,n;return r.weightsManifest!=null&&([e,n]=yield t(r.weightsManifest)),p5(r,e,n)})}function ss(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:r.modelTopology==null?0:qy(JSON.stringify(r.modelTopology)),weightSpecsBytes:r.weightSpecs==null?0:qy(JSON.stringify(r.weightSpecs)),weightDataBytes:r.weightData==null?0:new Fr(r.weightData).byteLength}}function dp(r){let t=[];for(let e of r)t.push(...e.weights);return t}function rz(){let r=e=>{let n=e<<13,o=0;for(;(n&8388608)===0;)o-=8388608,n<<=1;return n&=-8388609,o+=947912704,n|o},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=r(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function nz(){let r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let t=1;t<31;t++)r[t]=t<<23;for(let t=33;t<63;t++)r[t]=2147483648+(t-32<<23);return r}function oz(){let r=new Uint32Array(64);for(let t=0;t<64;t++)r[t]=1024;return r[0]=r[32]=0,r}function sz(){let r=rz(),t=nz(),e=oz();return n=>{let o=new ArrayBuffer(4*n.length),s=new Uint32Array(o);for(let i=0;i<n.length;i++){let a=n[i],l=r[e[a>>10]+(a&1023)]+t[a>>10];s[i]=l}return new Float32Array(o)}}var br=class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerSaveRouter(t){r.getInstance().saveRouters.push(t)}static registerLoadRouter(t){r.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return r.getHandlers(t,"save")}static getLoadHandlers(t,e){return r.getHandlers(t,"load",e)}static getHandlers(t,e,n){let o=[];return(e==="load"?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach(i=>{let a=i(t,n);a!==null&&o.push(a)}),o}},Zy=r=>br.registerSaveRouter(r),Jy=r=>br.registerLoadRouter(r),Qy=r=>br.getSaveHandlers(r),eb=(r,t)=>br.getLoadHandlers(r,t);var m5="tensorflowjs",f5=1,dl="models_store",s0="model_info_store";function tb(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let r=typeof window>"u"?self:window,t=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function d5(r){let t=r.result;t.createObjectStore(dl,{keyPath:"modelPath"}),t.createObjectStore(s0,{keyPath:"modelPath"})}var hl=(()=>{class r{constructor(e){if(this.indexedDB=tb(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}save(e){return O(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)})}load(){return O(this,null,function*(){return this.databaseAction(this.modelPath)})}databaseAction(e,n){return new Promise((o,s)=>{let i=this.indexedDB.open(m5,f5);i.onupgradeneeded=()=>d5(i),i.onsuccess=()=>{let a=i.result;if(n==null){let l=a.transaction(dl,"readonly"),c=l.objectStore(dl).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));o(c.result.modelArtifacts)},c.onerror=p=>(a.close(),s(c.error)),l.oncomplete=()=>a.close()}else{n.weightData=Fr.join(n.weightData);let l=ss(n),u=a.transaction(s0,"readwrite"),c=u.objectStore(s0),p;try{p=c.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(f){return s(f)}let m;p.onsuccess=()=>{m=a.transaction(dl,"readwrite");let f=m.objectStore(dl),d;try{d=f.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:l})}catch(g){return s(g)}d.onsuccess=()=>o({modelArtifactsInfo:l}),d.onerror=g=>{c=u.objectStore(s0);let h=c.delete(this.modelPath);h.onsuccess=()=>(a.close(),s(d.error)),h.onerror=x=>(a.close(),s(d.error))}},p.onerror=f=>(a.close(),s(p.error)),u.oncomplete=()=>{m==null?a.close():m.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}return r.URL_SCHEME="indexeddb://",r})();var rb=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(hl.URL_SCHEME)?iz(r.slice(hl.URL_SCHEME.length)):null;br.registerSaveRouter(rb);br.registerLoadRouter(rb);function iz(r){return new hl(r)}function az(r){return r.startsWith(hl.URL_SCHEME)?r.slice(hl.URL_SCHEME.length):r}var vm=class{constructor(){this.indexedDB=tb()}listModels(){return O(this,null,function*(){return new Promise((t,e)=>{let n=this.indexedDB.open(m5,f5);n.onupgradeneeded=()=>d5(n),n.onsuccess=()=>{let o=n.result,s=o.transaction(s0,"readonly"),a=s.objectStore(s0).getAll();a.onsuccess=()=>{let l={};for(let u of a.result)l[u.modelPath]=u.modelArtifactsInfo;t(l)},a.onerror=l=>(o.close(),e(a.error)),s.oncomplete=()=>o.close()},n.onerror=o=>e(n.error)})})}removeModel(t){return O(this,null,function*(){return t=az(t),new Promise((e,n)=>{let o=this.indexedDB.open(m5,f5);o.onupgradeneeded=()=>d5(o),o.onsuccess=()=>{let s=o.result,i=s.transaction(s0,"readwrite"),a=i.objectStore(s0),l=a.get(t),u;l.onsuccess=()=>{if(l.result==null)return s.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{let c=a.delete(t),p=()=>{u=s.transaction(dl,"readwrite");let f=u.objectStore(dl).delete(t);f.onsuccess=()=>e(l.result.modelArtifactsInfo),f.onerror=d=>n(l.error)};c.onsuccess=p,c.onerror=m=>(p(),s.close(),n(l.error))}},l.onerror=c=>(s.close(),n(l.error)),i.oncomplete=()=>{u==null?s.close():u.oncomplete=()=>s.close()}},o.onerror=s=>n(o.error)})})}};var Si="/",kc="tensorflowjs_models",nb="info",lz="model_topology",cz="weight_specs",uz="weight_data",pz="model_metadata";function ob(r){return{info:[kc,r,nb].join(Si),topology:[kc,r,lz].join(Si),weightSpecs:[kc,r,cz].join(Si),weightData:[kc,r,uz].join(Si),modelMetadata:[kc,r,pz].join(Si)}}function sb(r){for(let t of Object.values(r))window.localStorage.removeItem(t)}function mz(r){let t=r.split(Si);if(t.length<3)throw new Error(`Invalid key format: ${r}`);return t.slice(1,t.length-1).join(Si)}function fz(r){return r.startsWith(gl.URL_SCHEME)?r.slice(gl.URL_SCHEME.length):r}var gl=(()=>{class r{constructor(e){if(!z().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ob(this.modelPath)}save(e){return O(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let n=JSON.stringify(e.modelTopology),o=JSON.stringify(e.weightSpecs),s=ss(e),i=Fr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,o),this.LS.setItem(this.keys.weightData,jy(i));let a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw sb(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}})}load(){return O(this,null,function*(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let n={},o=JSON.parse(this.LS.getItem(this.keys.topology));if(o==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=o;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=s;let i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){let l=JSON.parse(i);n.format=l.format,n.generatedBy=l.generatedBy,n.convertedBy=l.convertedBy,l.signature!=null&&(n.signature=l.signature),l.userDefinedMetadata!=null&&(n.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(n.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(n.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(n.trainingConfig=l.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=Xy(a),n})}}return r.URL_SCHEME="localstorage://",r})();var ib=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(gl.URL_SCHEME)?dz(r.slice(gl.URL_SCHEME.length)):null;br.registerSaveRouter(ib);br.registerLoadRouter(ib);function dz(r){return new gl(r)}var wm=class{constructor(){A(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}listModels(){return O(this,null,function*(){let t={},e=kc+Si,n=Si+nb;for(let o=0;o<this.LS.length;++o){let s=this.LS.key(o);if(s.startsWith(e)&&s.endsWith(n)){let i=mz(s);t[i]=JSON.parse(this.LS.getItem(s))}}return t})}removeModel(t){return O(this,null,function*(){t=fz(t);let e=ob(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);let n=JSON.parse(this.LS.getItem(e.info));return sb(e),n})}};var Ac="://",_o=class r{constructor(){this.managers={}}static getInstance(){return r.instance==null&&(r.instance=new r),r.instance}static registerManager(t,e){A(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Ac)&&(t=t.slice(0,t.indexOf(Ac))),A(t.length>0,()=>"scheme must not be an empty string.");let n=r.getInstance();A(n.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),n.managers[t]=e}static getManager(t){let e=r.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(r.getInstance().managers)}};function Tm(r){if(r.indexOf(Ac)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${_o.getSchemes().join(",")}`);return{scheme:r.split(Ac)[0],path:r.split(Ac)[1]}}function ab(r,t,e=!1){return O(this,null,function*(){A(r!==t,()=>`Old path and new path are the same: '${r}'`);let n=br.getLoadHandlers(r);A(n.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),A(n.length<2,()=>`Copying failed because more than one (${n.length}) load handlers for source URL ${r}.`);let o=n[0],s=br.getSaveHandlers(t);A(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),A(s.length<2,()=>`Copying failed because more than one (${n.length}) save handlers for destination URL ${t}.`);let i=s[0],a=Tm(r).scheme,l=Tm(r).path,u=a===Tm(r).scheme,c=yield o.load();e&&u&&(yield _o.getManager(a).removeModel(l));let p=yield i.save(c);return e&&!u&&(yield _o.getManager(a).removeModel(l)),p.modelArtifactsInfo})}function lb(){return O(this,null,function*(){let r=_o.getSchemes(),t={};for(let e of r){let n=yield _o.getManager(e).listModels();for(let o in n){let s=e+Ac+o;t[s]=n[o]}}return t})}function cb(r){return O(this,null,function*(){let t=Tm(r);return _o.getManager(t.scheme).removeModel(t.path)})}function ub(r,t){return O(this,null,function*(){return ab(r,t,!1)})}function pb(r,t){return O(this,null,function*(){return ab(r,t,!0)})}var h5=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let o=this.functionRefs[n.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return im(t)}};if(z().get("IS_BROWSER")){z().setPlatform("browser",new h5);try{_o.registerManager(gl.URL_SCHEME,new wm)}catch{}try{_o.registerManager(hl.URL_SCHEME,new vm)}catch{}}var gz={importFetch:()=>fb()},g5;var x5=class{constructor(){this.util=db(),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return z().global.fetch!=null?z().global.fetch(t,e):(g5==null&&(g5=gz.importFetch()),g5(t,e))}now(){let t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}};z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new x5);function ye(r,t="float32",e){return t=t||"float32",kt(r),new Qe(r,t,e)}function xz(r,t){let e=C(r,"x","cast");if(!U4(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");let n={x:e},o={dtype:t};return k.runKernel(es,n,o)}var J=S({cast_:xz});function yz(r){let e={x:C(r,"x","clone","string_or_numeric")};return k.runKernel(ts,e)}var Qr=S({clone_:yz});function Cm(r,t=!1){console.log(r.toString(t))}s5();var bz={buffer:ye,cast:J,clone:Qr,print:Cm};$y(bz);function vz(r,t){let e=C(r,"a","add"),n=C(t,"b","add");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(ko,o)}var H=S({add_:vz});function wz(r,t){let e=C(r,"a","floorDiv"),n=C(t,"b","floorDiv");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(Ks,o)}var _c=S({floorDiv_:wz});function Tz(r,t){let e=C(r,"a","div"),n=C(t,"b","div");if([e,n]=Ge(e,n),e.dtype==="int32"&&n.dtype==="int32")return _c(e,n);let o={a:e,b:n},s={};return k.runKernel(Gs,o,s)}var se=S({div_:Tz});function Cz(r,t){let e=C(r,"a","mul"),n=C(t,"b","mul");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(ni,o)}var R=S({mul_:Cz});function Sz(r){let t=C(r,"x","abs");if(t.dtype==="complex64"){let e={x:t};return k.runKernel(ga,e)}else{let e={x:t};return k.runKernel(la,e)}}var wt=S({abs_:Sz});function Iz(r){let e={x:C(r,"x","acos")};return k.runKernel(_s,e)}var Sm=S({acos_:Iz});function Nz(r){let e={x:C(r,"x","acosh")};return k.runKernel(Ds,e)}var Im=S({acosh_:Nz});function kz(r){A(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),A(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);let t=r.map((o,s)=>C(o,`tensors${s}`,"addN")),e=t[0];t.forEach(o=>{if(o.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(o=>{if(!Nn(o.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let n=t;return k.runKernel(ca,n)}var hb=S({addN_:kz});function Az(r,t=null,e=!1){let o={x:C(r,"x","all","bool")},s={axis:t,keepDims:e};return k.runKernel(g1,o,s)}var Dc=S({all_:Az});function Ez(r,t=null,e=!1){let o={x:C(r,"x","any","bool")},s={axis:t,keepDims:e};return k.runKernel(x1,o,s)}var yl=S({any_:Ez});function _z(r,t=0){let n={x:C(r,"x","argMax")},o={axis:t};return k.runKernel(ua,n,o)}var is=S({argMax_:_z});function Dz(r,t=0){let n={x:C(r,"x","argMin")},o={axis:t};return k.runKernel(pa,n,o)}var Nm=S({argMin_:Dz});function Rz(r){let e={x:C(r,"x","asin")};return k.runKernel(Rs,e)}var km=S({asin_:Rz});function $z(r){let e={x:C(r,"x","asinh")};return k.runKernel($s,e)}var Am=S({asinh_:$z});function Fz(r){let e={x:C(r,"x","atan")};return k.runKernel(Fs,e)}var Em=S({atan_:Fz});function Oz(r,t){let e=C(r,"a","atan2"),n=C(t,"b","atan2");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(Ms,o)}var _m=S({atan2_:Oz});function Mz(r){let e={x:C(r,"x","atanh")};return k.runKernel(Os,e)}var Dm=S({atanh_:Mz});function Pz(r,t,e,n,o="NHWC",s){let i=r[3],a=[...t,i],l=xb(o);return bl(r,a,e,s,n,null,null,l)}function b5(r,t,e,n,o,s,i="channelsLast"){let[a,l]=hp(t),u;if(i==="channelsLast")u=[a,l,r[3],r[3]];else if(i==="channelsFirst")u=[a,l,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return bl(r,u,e,n,o,s,!1,i)}function Lz(r,t,e,n,o,s,i="NDHWC"){let[a,l,u]=y5(t),c,p;if(i==="NDHWC")p="channelsLast",c=[a,l,u,r[4],r[4]];else if(i==="NCDHW")p="channelsFirst",c=[a,l,u,r[1],r[1]];else throw new Error(`Unknown dataFormat ${i}`);return gb(r,c,e,n,o,!1,p,s)}function bl(r,t,e,n,o,s,i=!1,a="channelsLast"){let[l,u,c,p]=[-1,-1,-1,-1];if(a==="channelsLast")[l,u,c,p]=r;else if(a==="channelsFirst")[l,p,u,c]=r;else throw new Error(`Unknown dataFormat ${a}`);let[m,f,,d]=t,[g,h]=hp(e),[x,y]=hp(n),v=Rc(m,x),w=Rc(f,y),{padInfo:I,outHeight:E,outWidth:_}=Gz(o,u,c,g,h,v,w,s,a),D=i?d*p:d,M;return a==="channelsFirst"?M=[l,D,E,_]:a==="channelsLast"&&(M=[l,E,_,D]),{batchSize:l,dataFormat:a,inHeight:u,inWidth:c,inChannels:p,outHeight:E,outWidth:_,outChannels:D,padInfo:I,strideHeight:g,strideWidth:h,filterHeight:m,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:x,dilationWidth:y,inShape:r,outShape:M,filterShape:t}}function gb(r,t,e,n,o,s=!1,i="channelsLast",a){let[l,u,c,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[l,u,c,p,m]=r;else if(i==="channelsFirst")[l,m,u,c,p]=r;else throw new Error(`Unknown dataFormat ${i}`);let[f,d,g,,h]=t,[x,y,v]=y5(e),[w,I,E]=y5(n),_=Rc(f,w),D=Rc(d,I),M=Rc(g,E),{padInfo:P,outDepth:V,outHeight:U,outWidth:q}=Vz(o,u,c,p,x,y,v,_,D,M,a),K=s?h*m:h,j;return i==="channelsFirst"?j=[l,K,V,U,q]:i==="channelsLast"&&(j=[l,V,U,q,K]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:p,inChannels:m,outDepth:V,outHeight:U,outWidth:q,outChannels:K,padInfo:P,strideDepth:x,strideHeight:y,strideWidth:v,filterDepth:f,filterHeight:d,filterWidth:g,effectiveFilterDepth:_,effectiveFilterHeight:D,effectiveFilterWidth:M,dilationDepth:w,dilationHeight:I,dilationWidth:E,inShape:r,outShape:j,filterShape:t}}function zz(r,t,e,n,o){n==null&&(n=v5(r,t,e));let s=r[0],i=r[1],a=gp((s-t+2*n)/e+1,o),l=gp((i-t+2*n)/e+1,o);return[a,l]}function Bz(r,t,e,n,o,s){o==null&&(o=v5(r,t[0],n[0]));let i=[0,0,0,e];for(let a=0;a<3;a++)r[a]+2*o>=t[a]&&(i[a]=gp((r[a]-t[a]+2*o)/n[a]+1,s));return i}function v5(r,t,e,n=1){let o=Rc(t,n);return Math.floor((r[0]*(e-1)-e+o)/2)}function hp(r){return typeof r=="number"?[r,r,r]:r.length===2?[r[0],r[1],1]:r}function y5(r){return typeof r=="number"?[r,r,r]:r}function Rc(r,t){return t<=1?r:r+(r-1)*(t-1)}function Gz(r,t,e,n,o,s,i,a,l){let u,c,p;if(typeof r=="number"){u={top:r,bottom:r,left:r,right:r,type:r===0?"VALID":"NUMBER"};let f=zz([t,e],s,n,r,a);c=f[0],p=f[1]}else if(r==="same"){c=Math.ceil(t/n),p=Math.ceil(e/o);let m=Math.max(0,(c-1)*n+s-t),f=Math.max(0,(p-1)*o+i-e),d=Math.floor(m/2),g=m-d,h=Math.floor(f/2),x=f-h;u={top:d,bottom:g,left:h,right:x,type:"SAME"}}else if(r==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/n),p=Math.ceil((e-i+1)/o);else if(typeof r=="object"){let m=l==="channelsLast"?r[1][0]:r[2][0],f=l==="channelsLast"?r[1][1]:r[2][1],d=l==="channelsLast"?r[2][0]:r[3][0],g=l==="channelsLast"?r[2][1]:r[3][1];u={top:m,bottom:f,left:d,right:g,type:m===0&&f===0&&d===0&&g===0?"VALID":"EXPLICIT"},c=gp((t-s+m+f)/n+1,a),p=gp((e-i+d+g)/o+1,a)}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:u,outHeight:c,outWidth:p}}function Vz(r,t,e,n,o,s,i,a,l,u,c){let p,m,f,d;if(r==="valid"&&(r=0),typeof r=="number"){p={top:r,bottom:r,left:r,right:r,front:r,back:r,type:r===0?"VALID":"NUMBER"};let h=Bz([t,e,n,1],[a,l,u],1,[o,s,i],r,c);m=h[0],f=h[1],d=h[2]}else if(r==="same"){m=Math.ceil(t/o),f=Math.ceil(e/s),d=Math.ceil(n/i);let g=(m-1)*o+a-t,h=(f-1)*s+l-e,x=(d-1)*i+u-n,y=Math.floor(g/2),v=g-y,w=Math.floor(h/2),I=h-w,E=Math.floor(x/2),_=x-E;p={top:w,bottom:I,left:E,right:_,front:y,back:v,type:"SAME"}}else throw Error(`Unknown padding parameter: ${r}`);return{padInfo:p,outDepth:m,outHeight:f,outWidth:d}}function gp(r,t){if(!t)return Math.trunc(r);switch(t){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${t}`)}}function Kn(r){let[t,e,n]=hp(r);return t===1&&e===1&&n===1}function Ar(r,t){return Kn(r)||Kn(t)}function as(r){return hp(r).every(t=>t>0)}function xb(r){if(r==="NHWC")return"channelsLast";if(r==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}function ht(r,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")A(Es(t),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(n=>{n.forEach(o=>{A(Es(o),()=>`Error in ${r}: pad must be an integer when using dimRoundingMode ${e} but got pad ${o}.`)})});else throw Error(`Error in ${r}: Unknown padding parameter: ${t}`)}}function Uz(r,t){let n={x:C(r,"x","reshape","string_or_numeric")},o={shape:t};return k.runKernel(Va,n,o)}var $=S({reshape_:Uz});function Wz(r,t,e,n,o){let s=C(r,"x","avgPool","float32"),i=1;A(Ar(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let a=s,l=!1;s.rank===3&&(l=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ht("avgPool",n,o);let u={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o},p=k.runKernel(ma,u,c);return p=J(p,s.dtype),l?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var i0=S({avgPool_:Wz});function qz(r,t,e,n,o,s="NDHWC"){let i=C(r,"x","avgPool3d","float32"),a=i,l=!1;i.rank===4&&(l=!0,a=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),A(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),A(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),ht("avgPool3d",n,o);let u={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},p=k.runKernel(fa,u,c);return p=J(p,a.dtype),l?$(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Rm=S({avgPool3d_:qz});function Hz(r,t=0){A(r.length>=1,()=>"Pass at least one tensor to concat");let e=fl(r,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),e.length===1)return Qr(e[0]);let n=e,o={axis:t};return k.runKernel(xa,n,o)}var Ye=S({concat_:Hz});function Kz(r,t,e=!1,n=!1){let o=C(r,"a","matMul"),s=C(t,"b","matMul");[o,s]=Ge(o,s);let i={a:o,b:s},a={transposeA:e,transposeB:n};return k.runKernel(da,i,a)}var Me=S({matMul_:Kz});function jz(r){let e={x:C(r,"x","sigmoid","float32")};return k.runKernel(di,e)}var Wr=S({sigmoid_:jz});function Xz(r,t,e){let n=C(r,"x","slice","string_or_numeric");if(n.rank===0)throw new Error("Slicing scalar is not possible");let o={x:n},s={begin:t,size:e};return k.runKernel(Ka,o,s)}var De=S({slice_:Xz});function Yz(r){let e={x:C(r,"x","tanh","float32")};return k.runKernel(vi,e)}var Do=S({tanh_:Yz});function Zz(r,t,e,n,o,s){let i=C(r,"forgetBias","basicLSTMCell"),a=C(t,"lstmKernel","basicLSTMCell"),l=C(e,"lstmBias","basicLSTMCell"),u=C(n,"data","basicLSTMCell"),c=C(o,"c","basicLSTMCell"),p=C(s,"h","basicLSTMCell"),m=Ye([u,p],1),f=Me(m,a),d=H(f,l),g=d.shape[0],h=d.shape[1]/4,x=[g,h],y=De(d,[0,0],x),v=De(d,[0,h],x),w=De(d,[0,h*2],x),I=De(d,[0,h*3],x),E=H(R(Wr(y),Do(v)),R(c,Wr(H(i,w)))),_=R(Do(E),Wr(I));return[E,_]}var yb=S({basicLSTMCell_:Zz});function Jz(r,t,e){let n=C(r,"x","batchToSpaceND"),o=t.reduce((a,l)=>a*l);A(n.rank>=1+t.length,()=>`input rank is ${n.rank} but should be > than blockShape.length ${t.length}`),A(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),A(n.shape[0]%o===0,()=>`input tensor batch is ${n.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${o}`);let s={x:n},i={blockShape:t,crops:e};return k.runKernel(ha,s,i)}var a0=S({batchToSpaceND_:Jz});function bb(r){let t;return r.rank===0||r.rank===1?t=$(r,[1,1,1,r.size]):r.rank===2?t=$(r,[1,1,r.shape[0],r.shape[1]]):r.rank===3?t=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]):t=r,t}function Qz(r,t,e,n,o,s){s==null&&(s=.001);let i=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;o!=null&&(u=C(o,"scale","batchNorm"));let c;n!=null&&(c=C(n,"offset","batchNorm")),A(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let m={x:bb(i),scale:u,offset:c,mean:a,variance:l},f={varianceEpsilon:s},d=k.runKernel(Ia,m,f);return $(d,i.shape)}var ls=S({batchNorm_:Qz});function eB(r,t,e,n,o,s){let i=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;o!=null&&(u=C(o,"scale","batchNorm"));let c;return n!=null&&(c=C(n,"offset","batchNorm")),A(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),A(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),A(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),ls(i,a,l,c,u,s)}var $m=S({batchNorm2d_:eB});function tB(r,t,e,n,o,s){let i=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;o!=null&&(u=C(o,"scale","batchNorm"));let c;return n!=null&&(c=C(n,"offset","batchNorm")),A(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),A(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),A(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),ls(i,a,l,c,u,s)}var Fm=S({batchNorm3d_:tB});function rB(r,t,e,n,o,s){let i=C(r,"x","batchNorm"),a=C(t,"mean","batchNorm"),l=C(e,"variance","batchNorm"),u;o!=null&&(u=C(o,"scale","batchNorm"));let c;return n!=null&&(c=C(n,"offset","batchNorm")),A(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),A(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),A(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),ls(i,a,l,c,u,s)}var Om=S({batchNorm4d_:rB});function nB(r,t,e){let n=C(r,"x","bincount"),o=C(t,"weights","bincount");A(n.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${n.dtype}`),A(e>=0,()=>`size must be non-negative, but got ${e}.`),A(o.size===n.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${n.shape}, weights shape: ${o.shape}.`);let s={x:n,weights:o},i={size:e};return k.runKernel(v1,s,i)}var Mm=S({bincount_:nB});function oB(r,t){let e=C(r,"x","bitwiseAnd"),n=C(t,"y","bitwiseAnd");if(!Nn(e.shape,n.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${n.shape}`);if(e.dtype!=="int32"||n.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${n.dtype}`);let o={a:e,b:n};return k.runKernel(j0,o)}var vb=S({bitwiseAnd_:oB});function sB(r,t){let e=C(r,"s0","broadcastArgs","int32"),n=C(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(n.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${n.rank}`);let o={s0:e,s1:n};return k.runKernel(w1,o)}var wb=S({broadcastArgs_:sB});function iB(r,t){let e=C(r,"broadcastTo","x"),n=e.shape;if(kt(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){let u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=$(e,u)}let o=e.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(o[u]===t[u])s[u]=1;else if(e.shape[u]!==1)throw new Error(`broadcastTo(): [${n}] cannot be broadcast to [${t}].`);if(s.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length===0)return Qr(e);let a={x:e},l={reps:s};return k.runKernel(rs,a,l)}var cs=S({broadcastTo_:iB});function aB(r){let e={x:C(r,"x","ceil","float32")};return k.runKernel(Ps,e)}var Pm=S({ceil_:aB});function io(r,t,e){kt(r),e=e||aa(t);let n={shape:r,value:t,dtype:e};return k.runKernel(M1,{},n)}function lB(r,t,e){let n=C(r,"x","clipByValue");if(A(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return io(n.shape,t,n.dtype);let o={x:n},s={clipValueMin:t,clipValueMax:e};return k.runKernel(Ls,o,s)}var vr=S({clipByValue_:lB});function cB(r){return Ye(r,0)}var Lm=S({concat1d_:cB});function uB(r,t){return Ye(r,t)}var zm=S({concat2d_:uB});function pB(r,t){return Ye(r,t)}var Bm=S({concat3d_:pB});function mB(r,t){return Ye(r,t)}var Gm=S({concat4d_:mB});function fB(r,t,e,n,o="NHWC",s=[1,1],i){let a=C(r,"x","conv2d","float32"),l=C(t,"filter","conv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ht("conv2d",n,i);let p=o==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${l.shape[2]}.`),A(Ar(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),A(as(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),A(as(e),()=>"Error in conv2D: Strides should be larger than 0.");let m={x:u,filter:l},f={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=k.runKernel(ya,m,f);return c?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var gn=S({conv2d_:fB});function dB(r,t,e,n,o="NWC",s=1,i){let a=C(r,"x","conv1d"),l=C(t,"filter","conv1d"),u=a,c=!1;a.rank===2&&(c=!0,u=$(a,[1,a.shape[0],a.shape[1]])),A(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),A(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ht("conv1d",n,i),A(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),A(Ar(e,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${s}'`),A(as(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),A(as(e),()=>"Error in conv1D: Stride should be larger than 0."),A(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);let p=$(l,[1,l.shape[0],l.shape[1],l.shape[2]]),m=$(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=gn(m,p,[1,e],n,"NHWC",[1,s],i);return c?$(h,[h.shape[2],h.shape[3]]):$(h,[h.shape[0],h.shape[2],h.shape[3]])}var $c=S({conv1d_:dB});function hB(r,t,e,n,o,s="NHWC",i){A(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let a=r,l=t,u=!1;t.rank===3&&(u=!0,l=$(t,[1,t.shape[0],t.shape[1],t.shape[2]]),a=[1,r[0],r[1],r[2]]),A(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),A(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),A(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);let c=s==="NHWC"?a[3]:a[1],p=s==="NHWC"?l.shape[3]:l.shape[1];A(c===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${e.shape[2]}.`),A(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),ht("conv2dDerInput",o,i);let m={dy:l,filter:e},f={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,inputShape:a},d=k.runKernel(ba,m,f);return u?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Fc=S({conv2DBackpropInput_:hB});function gB(r,t,e,n,o,s){let i=C(r,"x","conv2dTranspose"),a=C(t,"filter","conv2dTranspose");return Fc(e,i,a,n,o,"NHWC",s)}var Oc=S({conv2dTranspose_:gB});function xB(r,t,e,n,o="NDHWC",s=[1,1,1]){let i=C(r,"x","conv3d"),a=C(t,"filter","conv3d"),l=i,u=!1;i.rank===4&&(u=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),A(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),A(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),A(Ar(e,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),A(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`),A(as(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),A(as(e),()=>"Error in conv3D: Strides should be larger than 0.");let c={x:l,filter:a},p={strides:e,pad:n,dataFormat:o,dilations:s},m=k.runKernel(va,c,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Vm=S({conv3d_:xB});function yB(r,t,e,n,o){A(r.length===t.rank,()=>`Length of inShape (${r.length}) and rank of dy (${t.rank}) must match`);let s=r,i=t,a=!1;t.rank===4&&(a=!0,i=$(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,r[0],r[1],r[2],r[3]]);let l=s[4],u=i.shape[4];A(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),A(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),A(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),A(l===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[3]}.`),A(u===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${e.shape[4]}.`);let c={dy:i,filter:e},p={pad:o,strides:n,inputShape:s},m=k.runKernel(I1,c,p);return a?$(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}var Um=S({conv3DBackpropInput_:yB});function bB(r,t,e,n,o){let s=C(r,"x","conv3dTranspose"),i=C(t,"filter","conv3dTranspose");return Um(e,s,i,n,o)}var Wm=S({conv3dTranspose_:bB});function vB(r){let e={x:C(r,"x","cos","float32")};return k.runKernel(zs,e)}var l0=S({cos_:vB});function wB(r){let e={x:C(r,"x","cosh","float32")};return k.runKernel(Bs,e)}var Mc=S({cosh_:wB});function TB(r,t=0,e=!1,n=!1){let s={x:C(r,"x","cumprod")},i={axis:t,exclusive:e,reverse:n};return k.runKernel(N1,s,i)}var vl=S({cumprod_:TB});function CB(r,t=0,e=!1,n=!1){let s={x:C(r,"x","cumsum")},i={axis:t,exclusive:e,reverse:n};return k.runKernel(wa,s,i)}var Pc=S({cumsum_:CB});function SB(r,t,e,n=!1){let o=C(r,"x","denseBincount"),s=C(t,"weights","denseBincount");A(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),A(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),A(e>=0,()=>`size must be non-negative, but got ${e}.`),A(s.size===o.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${s.shape}.`);let i={x:o,weights:s},a={size:e,binaryOutput:n};return k.runKernel(A1,i,a)}var xp=S({denseBincount_:SB});function IB(r,t,e="NHWC"){let n=C(r,"x","depthToSpace","float32"),o=e==="NHWC"?n.shape[1]:n.shape[2],s=e==="NHWC"?n.shape[2]:n.shape[3],i=e==="NHWC"?n.shape[3]:n.shape[1];A(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),A(o*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${t}  for depthToSpace with input shape
    ${n.shape}`),A(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${n.shape}`),A(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${n.shape}`);let a={x:n},l={blockSize:t,dataFormat:e};return k.runKernel(E1,a,l)}var qm=S({depthToSpace_:IB});function NB(r,t,e,n,o="NHWC",s=[1,1],i){let a=C(r,"x","depthwiseConv2d","float32"),l=C(t,"filter","depthwiseConv2d","float32"),u=a,c=!1;a.rank===3&&(c=!0,u=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),A(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);let p=o==="NHWC"?u.shape[3]:u.shape[1];A(p===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${l.shape[2]}.`),ht("depthwiseConv2d",n,i);let m={x:u,filter:l},f={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i},d=k.runKernel(Ta,m,f);return c?$(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var us=S({depthwiseConv2d_:NB});function kB(r){let e={x:C(r,"x","diag")};return k.runKernel(R1,e)}var Tb=S({diag_:kB});function AB(r,t,e,n,o=[1,1],s="NHWC"){let i=C(r,"x","dilation2d"),a=C(t,"filter","dilation2d");A(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),A(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),A(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let l=i,u=!1;i.rank===3&&(l=$(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),A(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);let c={x:l,filter:a},p={strides:e,pad:n,dilations:o},m=k.runKernel(Ca,c,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Hm=S({dilation2d_:AB});var En={};ft(En,{assertAndGetBroadcastShape:()=>Re,getBroadcastDims:()=>Cb,getReductionAxes:()=>ut});function Cb(r,t){let e=r.length,n=[];for(let o=0;o<e;o++){let s=e-1-o,i=r[s]||1;(t[t.length-1-o]||1)>1&&i===1&&n.unshift(s)}return n}function ut(r,t){let e=[];for(let n=0;n<t.length;n++){let o=r[r.length-n-1],s=t.length-n-1,i=t[s];(o==null||o===1&&i>1)&&e.unshift(s)}return e}function Re(r,t){let e=Math.max(r.length,t.length),n=new Array(e);for(let o=0;o<e;o++){let s=r[r.length-o-1];s==null&&(s=1);let i=t[t.length-o-1];if(i==null&&(i=1),s===1)n[e-o-1]=i;else if(i===1)n[e-o-1]=s;else if(s!==i){let a=`Operands could not be broadcast together with shapes ${r} and ${t}.`;throw Error(a)}else n[e-o-1]=s}return n}function EB(r,t){let e=C(r,"a","equal","string_or_numeric"),n=C(t,"b","equal","string_or_numeric");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(X0,o)}var qr=S({equal_:EB});function _B(r,t,e){let n=C(t,"a","where"),o=C(e,"b","where"),s=C(r,"condition","where","bool"),i=Re(Re(s.shape,n.shape),o.shape),a=cs(s,i),l=cs(n,i),u=cs(o,i),c={condition:a,t:l,e:u};return k.runKernel(Ha,c)}var gt=S({where_:_B});function DB(r){let e={x:C(r,"x","zerosLike")};return k.runKernel(e0,e)}var ve=S({zerosLike_:DB});function RB(r,t){let e=C(r,"a","div"),n=C(t,"b","div");[e,n]=Ge(e,n);let o=se(e,n),s=ve(o),i=qr(n,s);return gt(i,s,o)}var Km=S({divNoNan_:RB});function $B(r,t){let e=C(r,"t1","dot"),n=C(t,"t2","dot");A((e.rank===1||e.rank===2)&&(n.rank===1||n.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${n.rank}.`);let o=e.rank===1?e.size:e.shape[1],s=n.rank===1?n.size:n.shape[0];if(A(o===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`),e.rank===1&&n.rank===1){let i=$(e,[1,-1]),a=$(n,[-1,1]),l=Me(i,a);return $(l,[])}else if(e.rank===1&&n.rank===2){let i=$(e,[1,-1]),a=$(n,[n.shape[0],n.shape[1]]),l=Me(i,a);return $(l,[l.size])}else if(e.rank===2&&n.rank===1){let i=$(n,[-1,1]),a=Me(e,i);return $(a,[a.size])}else{let i=$(n,[n.shape[0],n.shape[1]]);return Me(e,i)}}var jm=S({dot_:$B});function FB(r,...t){let e=t.map((o,s)=>C(o,`tensors${s}`,"einsum")),n={equation:r};return k.runKernel($1,e,n)}var c0=S({einsum_:FB});function OB(r){let e={x:C(r,"x","elu","float32")};return k.runKernel(Vs,e)}var ps=S({elu_:OB});function MB(r,t){let e=C(r,"x","ensureShape","string_or_numeric");if(!z4(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return r}var Sb=S({ensureShape_:MB});function PB(r){let t=C(r,"x","erf");A(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=J(t,"float32"));let e={x:t};return k.runKernel(Us,e)}var Lc=S({erf_:PB});function w5(r,t){for(let e=0;e<r.length;++e)if(r[r.length-e-1]!==t-1-e)return!1;return!0}function Ib(r,t,e){let n=r.length+t.length,o=[],s=0,i=0;for(let a=0;a<n;a++)e.indexOf(a)===-1?o.push(r[s++]):o.push(t[i++]);return o}function T5(r,t){let e=[],n=r.length;for(let s=0;s<n;s++)t.indexOf(s)===-1&&e.push(r[s]);let o=t.map(s=>r[s]);return[e,o]}function ao(r,t){let e=t.map(n=>1);return Ib(r,e,t)}function LB(r,t,e){A(w5(t,e),()=>`${r} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function C5(r,t){if(w5(r,t))return null;let e=[];for(let n=0;n<t;++n)r.indexOf(n)===-1&&e.push(n);return r.forEach(n=>e.push(n)),e}function yp(r){return r.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function zB(r,t){let e=[];for(let n=t-r;n<t;++n)e.push(n);return e}function BB(r,t=null,e=!1){let o={x:C(r,"x","max")},s={reductionIndices:t,keepDims:e};return k.runKernel(Ea,o,s)}var wr=S({max_:BB});function GB(r,t=null,e=!1){let o={x:C(r,"x","min")},s={axis:t,keepDims:e};return k.runKernel($a,o,s)}var Ii=S({min_:GB});function VB(r,t){let e=C(r,"base","pow"),n=C(t,"exp","pow");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(oi,o)}var Or=S({pow_:VB});function ce(r,t){if((Ur(r)&&t!=="string"||Array.isArray(r))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Ur(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Jr(r,[],[],t)}function UB(r){let e={x:C(r,"x","sqrt","float32")};return k.runKernel(gi,e)}var lt=S({sqrt_:UB});function WB(r){let t=C(r,"x","square"),e={};return k.runKernel("Square",{x:t},e)}var Oe=S({square_:WB});function qB(r,t=null,e=!1){let n=C(r,"x","sum");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return k.runKernel(ja,o,s)}var ue=S({sum_:qB});function HB(r,t="euclidean",e=null,n=!1){r=C(r,"x","norm");let o=Nb(r,t,e),s=o.shape;if(n){let i=cr(e,r.shape);s=ao(o.shape,i)}return $(o,s)}function Nb(r,t,e=null){if(r.rank===0)return wt(r);if(r.rank!==1&&e===null)return Nb($(r,[-1]),t,e);if(r.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return ue(wt(r),e);if(t===1/0)return wr(wt(r),e);if(t===-1/0)return Ii(wt(r),e);if(t==="euclidean"||t===2)return lt(ue(Or(wt(r),ce(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return wr(ue(wt(r),e[0]),e[1]-1);if(t===1/0)return wr(ue(wt(r),e[1]),e[0]);if(t===-1/0)return Ii(ue(wt(r),e[1]),e[0]);if(t==="fro"||t==="euclidean")return lt(ue(Oe(r),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}var Ni=S({norm_:HB});function KB(r,t=null,e=!1){return Ni(r,"euclidean",t,e)}var Xm=S({euclideanNorm_:KB});function jB(r){let e={x:C(r,"x","exp")};return k.runKernel(Ws,e)}var Gt=S({exp_:jB});function XB(r,t=0){let e=C(r,"x","expandDims","string_or_numeric");A(t<=e.rank,()=>"Axis must be <= rank of the tensor");let n={input:e},o={dim:t};return k.runKernel(Sa,n,o)}var Wt=S({expandDims_:XB});function YB(r){let e={x:C(r,"x","expm1")};return k.runKernel(qs,e)}var Ym=S({expm1_:YB});function ZB(r,t){let e=C(r,"x","tile","string_or_numeric");A(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);let n={x:e},o={reps:t};return k.runKernel(rs,n,o)}var Er=S({tile_:ZB});function JB(r,t,e,n="float32"){t==null&&(t=r);let o=ye([r,t],n),s=r<=t?r:t;for(let a=0;a<s;++a)o.set(1,a,a);let i=$(o.toTensor(),[r,t]);if(e==null)return i;if(e.length===1)return Er(Wt(i,0),[e[0],1,1]);if(e.length===2)return Er(Wt(Wt(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Er(Wt(Wt(Wt(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}var wl=S({eye_:JB});function QB(r){let e={x:C(r,"x","floor","float32")};return k.runKernel(Hs,e)}var ms=S({floor_:QB});function eG(r,t,e=0,n=0){let o=C(r,"x","gather"),s=C(t,"indices","gather","int32"),i={x:o,indices:s},a={axis:e,batchDims:n};return k.runKernel(Na,i,a)}var fs=S({gather_:eG});function tG(r,t){let e=C(r,"a","greater","string_or_numeric"),n=C(t,"b","greater","string_or_numeric");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Y0,o)}var Et=S({greater_:tG});function rG(r,t){let e=C(r,"a","greaterEqual","string_or_numeric"),n=C(t,"b","greaterEqual","string_or_numeric");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(js,o)}var en=S({greaterEqual_:rG});function nG(r){let e={input:C(r,"input","imag")};return k.runKernel(B1,e)}var u0=S({imag_:nG});function oG(r){let e={x:C(r,"x","isFinite")};return k.runKernel(Xs,e)}var Zm=S({isFinite_:oG});function sG(r){let e={x:C(r,"x","isInf")};return k.runKernel(Ys,e)}var Jm=S({isInf_:sG});function iG(r){let e={x:C(r,"x","isNaN")};return k.runKernel(Zs,e)}var Qm=S({isNaN_:iG});function aG(r,t=.2){let n={x:C(r,"x","leakyRelu")},o={alpha:t};return k.runKernel(ka,n,o)}var p0=S({leakyRelu_:aG});function lG(r,t){let e=C(r,"a","less","string_or_numeric"),n=C(t,"b","less","string_or_numeric");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Z0,o)}var ki=S({less_:lG});function cG(r,t){let e=C(r,"a","lessEqual","string_or_numeric"),n=C(t,"b","lessEqual","string_or_numeric");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(J0,o)}var _n=S({lessEqual_:cG});function kb(r,t,e){if(e<=0)throw new Error("The number of values should be positive.");let n={start:r,stop:t,num:e};return k.runKernel(G1,{},n)}function uG(r,t=5,e=1,n=1,o=.5){let s=C(r,"x","localResponseNormalization");A(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),A(Es(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,a=!1;s.rank===3&&(a=!0,i=$(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:e,alpha:n,beta:o},c=k.runKernel(Aa,l,u);return a?$(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var e3=S({localResponseNormalization_:uG});function pG(r){let e={x:C(r,"x","log","float32")};return k.runKernel(Js,e)}var Tr=S({log_:pG});function mG(r){let e={x:C(r,"x","log1p")};return k.runKernel(Qs,e)}var m0=S({log1p_:mG});function I5(r,t){A(f1(r),()=>"The f passed in variableGrads(f) must be a function"),A(t==null||Array.isArray(t)&&t.every(u=>u instanceof Ti),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let e=t!=null;if(!e){t=[];for(let u in k.registeredVariables)t.push(k.registeredVariables[u])}let n=e?t.filter(u=>!u.trainable):null,o=t.length;t=t.filter(u=>u.trainable),A(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);let s=!0,{value:i,grads:a}=k.gradients(r,t,null,s);A(a.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let l={};return t.forEach((u,c)=>{a[c]!=null&&(l[u.name]=a[c])}),n?.forEach(u=>l[u.name]=null),{value:i,grads:l}}function xn(r){return k.customGrad(r)}function fG(r){let e={x:C(r,"x","neg")};return k.runKernel(Oa,e)}var Le=S({neg_:fG});function dG(r){let e={x:C(r,"x","softplus")};return k.runKernel(hi,e)}var Ro=S({softplus_:dG});function hG(r){let t=C(r,"x","logSigmoid");return xn(n=>({value:Le(Ro(Le(n))),gradFunc:i=>R(i,Wr(Le(n)))}))(t)}var t3=S({logSigmoid_:hG});function gG(r,t){let e=C(r,"a","sub"),n=C(t,"b","sub");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(yi,o)}var oe=S({sub_:gG});function xG(r,t=-1){let e=C(r,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return xn((o,s)=>{let a=wr(o,t,!0),l=oe(o,a),u=oe(J(l,"float32"),Tr(ue(Gt(l),t,!0)));return s([u]),{value:u,gradFunc:(p,m)=>{let[f]=m,d=!0,g=Gt(f);return oe(p,R(ue(p,t,d),g))}}})(e)}var zc=S({logSoftmax_:xG});function yG(r,t=null,e=!1){let n=C(r,"x","logSumExp"),o=cr(t,n.shape),s=wr(n,o,!0),i=oe(n,s),a=Gt(i),l=ue(a,o),u=Tr(l),c=H($(s,u.shape),u);if(e){let p=ao(c.shape,o);return $(c,p)}return c}var f0=S({logSumExp_:yG});function bG(r,t){let e=C(r,"a","logicalAnd","bool"),n=C(t,"b","logicalAnd","bool");Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(Q0,o)}var Mr=S({logicalAnd_:bG});function vG(r){let e={x:C(r,"x","logicalNot","bool")};return k.runKernel(el,e)}var d0=S({logicalNot_:vG});function wG(r,t){let e=C(r,"a","logicalOr","bool"),n=C(t,"b","logicalOr","bool");Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(tl,o)}var Bc=S({logicalOr_:wG});function TG(r,t){let e=C(r,"a","logicalXor","bool"),n=C(t,"b","logicalXor","bool");return Re(e.shape,n.shape),Mr(Bc(r,t),d0(Mr(r,t)))}var r3=S({logicalXor_:TG});var n3=2147483648;function CG(r,t,e="left"){let n=C(r,"sortedSequence","searchSorted"),o=C(t,"values","searchSorted"),s=n.shape[n.shape.length-1],i=o.shape[o.shape.length-1],a=$(n,[-1,s]),l=$(o,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ze(l.shape)>=n3)throw new Error(`values tensor size must less than ${n3}`);if(a.shape[1]>=n3)throw new Error(`trailing dim_size must less than ${n3} for int32 output type, was ${a.shape[1]}`);let u={sortedSequence:a,values:l},c={side:e};return k.runKernel(sc,u,c)}var bp=S({searchSorted_:CG});function Ab(r,t){return bp(r,t,"left")}function SG(r,t,e,n,o){let s=C(r,"x","maxPool"),i=1,a=s,l=!1;s.rank===3&&(l=!0,a=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),A(Ar(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),ht("maxPool",n,o);let u={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o},p=k.runKernel(_a,u,c);return l?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var h0=S({maxPool_:SG});function IG(r,t=[1,1,1],e,n,o,s="NDHWC"){let i=C(r,"x","maxPool3d"),a=i,l=!1;i.rank===4&&(l=!0,a=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),A(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),ht("maxPool3d",n,o);let u={x:a},c={filterSize:t,strides:e,pad:n,dimRoundingMode:o,dataFormat:s},p=k.runKernel(Da,u,c);return l?$(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var o3=S({maxPool3d_:IG});function NG(r,t,e,n,o=!1){let i={x:C(r,"x","maxPoolWithArgmax")},a={filterSize:t,strides:e,pad:n,includeBatchInIndex:o},l=k.runKernel(q1,i,a);return{result:l[0],indexes:l[1]}}var Eb=S({maxPoolWithArgmax_:NG});function kG(r,t){let e=C(r,"a","maximum"),n=C(t,"b","maximum");[e,n]=Ge(e,n),e.dtype==="bool"&&(e=J(e,"int32"),n=J(n,"int32")),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(ei,o)}var yn=S({maximum_:kG});function AG(r,t=null,e=!1){let o={x:C(r,"x","mean")},s={axis:t,keepDims:e};return k.runKernel(Ra,o,s)}var xt=S({mean_:AG});function yt(r,t="float32"){if(kt(r),t==="complex64"){let n=yt(r,"float32"),o=yt(r,"float32");return hn(n,o)}let e=h1(ze(r),t);return k.makeTensor(e,r,t)}function Qt(r,t="float32"){if(kt(r),t==="complex64"){let n=Qt(r,"float32"),o=yt(r,"float32");return hn(n,o)}let e=op(ze(r),t);return k.makeTensor(e,r,t)}function _b(r,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(r===void 0)return[];let n=C(r,"x","meshgrid",r instanceof Ke?r.dtype:"float32");if(t===void 0)return[n];let o=C(t,"y","meshgrid",t instanceof Ke?t.dtype:"float32"),s=ze(n.shape),i=ze(o.shape);return e==="xy"?(n=$(n,[1,-1]),o=$(o,[-1,1]),[Me(Qt([i,1],n.dtype),n),Me(o,Qt([1,s],o.dtype))]):(n=$(n,[-1,1]),o=$(o,[1,-1]),[Me(n,Qt([1,i],n.dtype)),Me(Qt([s,1],o.dtype),o)])}function EG(r,t){let e=C(r,"a","minimum"),n=C(t,"b","minimum");[e,n]=Ge(e,n),e.dtype==="bool"&&(e=J(e,"int32"),n=J(n,"int32")),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(ti,o)}var Xn=S({minimum_:EG});function _G(r,t,e){A(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);let n=C(r,"x","mirrorPad");if(n.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(t.length===n.rank,()=>`Padding doesn't match input. Must be ${n.rank}. Got ${t.length}.`);let o=e==="reflect"?1:0;for(let a=0;a<n.rank;a++)A(t[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(t[a][0]>=0&&t[a][0]<=n.shape[a]-o&&t[a][1]>=0&&t[a][1]<=n.shape[a]-o,()=>`Padding in dimension ${a} cannot be greater than or equal to ${n.shape[a]-o} or less than 0 for input of shape ${n.shape}`);let s={paddings:t,mode:e},i={x:n};return k.runKernel(Fa,i,s)}var s3=S({mirrorPad_:_G});function DG(r,t){let e=C(r,"a","mod"),n=C(t,"b","mod");[e,n]=Ge(e,n);let o={a:e,b:n};return k.runKernel(ri,o)}var i3=S({mod_:DG});function RG(r,t=null,e=!1){r=C(r,"x","moments");let n=cr(t,r.shape),o=xt(r,n,e),s=o.shape;e||(s=ao(o.shape,n));let i=Oe(oe(J(r,"float32"),$(o,s))),a=xt(i,n,e);return{mean:o,variance:a}}var Tl=S({moments_:RG});function $G(r,t,e,n){let o=C(t,"data","multiRNNCell"),s=fl(e,"c","multiRNNCell"),i=fl(n,"h","multiRNNCell"),a=o,l=[];for(let p=0;p<r.length;p++){let m=r[p](a,s[p],i[p]);l.push(m[0]),l.push(m[1]),a=m[1]}let u=[],c=[];for(let p=0;p<l.length;p+=2)u.push(l[p]),c.push(l[p+1]);return[u,c]}var Db=S({multiRNNCell_:$G});function FG(r,t,e,n=!1){let o=C(r,"logits","multinomial"),s=o.size,i=o.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();let l={logits:i===1?$(o,[1,-1]):o},u={numSamples:t,seed:e,normalized:n},c=k.runKernel(H1,l,u);return i===1?$(c,[c.size]):c}var Rb=S({multinomial_:FG});function OG(r,t){let e=C(r,"a","notEqual","string_or_numeric"),n=C(t,"b","notEqual","string_or_numeric");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n};return k.runKernel(rl,o)}var $o=S({notEqual_:OG});function MG(r,t,e=1,n=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let i={indices:C(r,"indices","oneHot","int32")},a={dtype:o,depth:t,onValue:e,offValue:n};return k.runKernel(Pa,i,a)}var Cl=S({oneHot_:MG});function PG(r){let e={x:C(r,"x","onesLike")};return k.runKernel(Ma,e)}var hr=S({onesLike_:PG});function LG(r,t){let e=C(r,"v1","outerProduct"),n=C(t,"v2","outerProduct");A(e.rank===1&&n.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${n.rank}.`);let o=$(e,[-1,1]),s=$(n,[1,-1]);return Me(o,s)}var $b=S({outerProduct_:LG});function zG(r,t,e=0){let n=C(r,"x","pad");if(n.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let o={paddings:t,constantValue:e},s={x:n};return k.runKernel(za,s,o)}var tn=S({pad_:zG});function BG(r,t,e=0){return A(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),tn(r,[t],e)}var Fb=S({pad1d_:BG});function GG(r,t,e=0){return A(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),tn(r,t,e)}var Ob=S({pad2d_:GG});function VG(r,t,e=0){return A(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),tn(r,t,e)}var Mb=S({pad3d_:VG});function UG(r,t,e=0){return A(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),tn(r,t,e)}var Pb=S({pad4d_:UG});function WG(r,t,e){let n=C(r,"x","spaceToBatchND");A(n.rank>=1+t.length,()=>`input rank ${n.rank} should be > than [blockShape] ${t.length}`),A(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),A(n.shape.reduce((i,a,l)=>l>0&&l<=t.length?i&&(a+e[l-1][0]+e[l-1][1])%t[l-1]===0:i,!0),()=>`input spatial dimensions ${n.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);let o={x:n},s={blockShape:t,paddings:e};return k.runKernel(Xa,o,s)}var g0=S({spaceToBatchND_:WG});function qG(r,t,e,n,o,s,i){o==null&&(o=[1,1]),s==null&&(s=1),n===0&&(n="valid");let a=C(r,"x","maxPool"),l=a,u=!1;a.rank===3&&(u=!0,l=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(Ar(s,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`);let c=b5(l.shape,t,s,o,n),p=[c.dilationHeight,c.dilationWidth],m;n==="same"?m=KG([c.filterHeight,c.filterWidth],p):m=[[0,0],[0,0]];let f=p[0]===1&&p[1]===1,[d,g]=HG([c.inHeight,c.inWidth],p,m),h=f?n:"valid",x=f?l:g0(l,p,d),v=(e==="avg"?()=>i0(x,t,s,h,i):()=>h0(x,t,s,h,i))(),w=f?v:a0(v,p,g);return u?$(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function HG(r,t,e){let n=e.map(c=>c[0]),o=e.map(c=>c[1]),s=r.concat(n,o),i=t.map((c,p)=>(c-s[p]%c)%c),a=o.map((c,p)=>c+i[p]),l=t.map((c,p)=>[n[p],a[p]]),u=t.map((c,p)=>[0,i[p]]);return[l,u]}function KG(r,t){let n=r.map((i,a)=>i+(i-1)*(t[a]-1)).map(i=>i-1),o=n.map(i=>Math.floor(i/2)),s=n.map((i,a)=>i-o[a]);return n.map((i,a)=>[o[a],s[a]])}var a3=S({pool_:qG});function jG(r,t){let e=C(r,"x","prelu"),n=C(t,"alpha","prelu"),o={x:e,alpha:n};return k.runKernel(Ba,o)}var x0=S({prelu_:jG});function XG(r,t=null,e=!1){let n=C(r,"x","prod");n.dtype==="bool"&&(n=J(n,"int32"));let o={x:n},s={axis:t,keepDims:e};return k.runKernel(Ga,o,s)}var l3=S({prod_:XG});function YG(r,t,e,n){let o=r.map((c,p)=>C(c,`tensors${p}`,"raggedGather","int32")),s=C(t,"paramsDenseValues","raggedGather"),i=C(e,"indices","raggedGather","int32"),a={paramsNestedSplits:o,paramsDenseValues:s,indices:i},l={outputRaggedRank:n},u=k.runKernel(Y1,a,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}var Lb=S({raggedGather_:YG});function ZG(r,t,e){let n=C(r,"starts","raggedRange"),o=C(t,"limits","raggedRange",n.dtype),s=C(e,"deltas","raggedRange",n.dtype),i={starts:n,limits:o,deltas:s},a=k.runKernel(Z1,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}var zb=S({raggedRange_:ZG});function JG(r,t,e,n,o){let s=C(r,"shape","raggedTensorToTensor","int32"),i=C(t,"values","raggedTensorToTensor"),a=C(e,"defaultValue","raggedTensorToTensor",i.dtype),l=n.map((p,m)=>C(p,`tensors${m}`,"raggedTensorToTensor","int32")),u={shape:s,values:i,defaultValue:a,rowPartitionTensors:l},c={rowPartitionTypes:o};return k.runKernel(J1,u,c)}var Bb=S({raggedTensorToTensor_:JG});function QG(r,t,e){kt(r);let n=ze(r),o=null;if(e==null||e==="float32")o=new Float32Array(n);else if(e==="int32")o=new Int32Array(n);else if(e==="bool")o=new Uint8Array(n);else throw new Error(`Unknown data type ${e}`);for(let s=0;s<n;s++)o[s]=t();return k.makeTensor(o,r,e)}var Gb=S({rand_:QG});var m3=Vn(vp());var Il=class{constructor(t,e,n,o,s){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let i=s||Math.random();this.random=m3.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){let o=this.nextVal;return this.nextVal=NaN,o}let t,e,n=!1;for(;!n;){let o,s,i;do o=2*this.random()-1,s=2*this.random()-1,i=o*o+s*s;while(i>=1||i===0);let a=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*o*a,e=this.mean+this.stdDev*s*a,(!this.truncated||this.isValidTruncated(t))&&(n=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}},u3=class{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;let s=o||Math.random();this.randu=m3.alea(s.toString()),this.randn=new Il(0,1,n,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,o,s,i;for(;;){do o=this.randn.nextValue(),i=1+this.c*o;while(i<=0);if(i*=i*i,t=o*o,e=1-.331*t*t,n=.5*t+this.d*(1-i+Math.log(i)),s=this.randu(),s<e||Math.log(s)<n)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}},p3=class{constructor(t=0,e=1,n,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=n,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=m3.alea(o)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function iV(r,t,e=1,n="float32",o){if(kt(r),e==null&&(e=1),n==null&&(n="float32"),n!=="float32"&&n!=="int32")throw new Error(`Unsupported data type ${n}`);let s=new u3(t,e,n,o),i=ye(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var ov=S({randomGamma_:iV});function aV(r,t=0,e=1,n,o){if(kt(r),n!=null&&n==="bool")throw new Error(`Unsupported data type ${n}`);let s=new Il(t,e,n,!1,o),i=ye(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Nl=S({randomNormal_:aV});function lV(r,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return Nl(r,0,1,t,e)}var sv=S({randomStandardNormal_:lV});function cV(r,t=0,e=1,n="float32",o){kt(r);let s=ye(r,n),i=new p3(t,e,null,o);for(let a=0;a<s.values.length;a++)s.values[a]=i.nextValue();return s.toTensor()}var Dn=S({randomUniform_:cV});function uV(r,t,e,n){return Dn(r,t,e,"int32",n)}var iv=S({randomUniformInt_:uV});function ds(r,t,e=1,n="float32"){if(e===0)throw new Error("Cannot have a step of zero");let o={start:r,stop:t,step:e,dtype:n};return k.runKernel(Q1,{},o)}function pV(r){let e={input:C(r,"input","real")};return k.runKernel(ec,e)}var Ai=S({real_:pV});function mV(r){let e={x:C(r,"x","reciprocal")};return k.runKernel(si,e)}var f3=S({reciprocal_:mV});function fV(r){let e={x:C(r,"x","relu")};return k.runKernel(ii,e)}var _r=S({relu_:fV});function dV(r){let e={x:C(r,"x","relu6")};return k.runKernel(ai,e)}var Gc=S({relu6_:dV});function hV(r,t){let n={x:C(r,"x","reverse")},o={dims:t};return k.runKernel(qa,n,o)}var ur=S({reverse_:hV});function gV(r){let t=C(r,"x","reverse");return A(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),ur(t,0)}var av=S({reverse1d_:gV});function xV(r,t){let e=C(r,"x","reverse");return A(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),ur(e,t)}var lv=S({reverse2d_:xV});function yV(r,t){let e=C(r,"x","reverse");return A(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),ur(e,t)}var cv=S({reverse3d_:yV});function bV(r,t){let e=C(r,"x","reverse");return A(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),ur(e,t)}var uv=S({reverse4d_:bV});function vV(r){let e={x:C(r,"x","round")};return k.runKernel(li,e)}var Vc=S({round_:vV});function wV(r){let e={x:C(r,"x","rsqrt","float32")};return k.runKernel(ci,e)}var Uc=S({rsqrt_:wV});function TV(r){let e={x:C(r,"x","selu")};return k.runKernel(ui,e)}var Wc=S({selu_:TV});function CV(r,t,e,n,o,s=[1,1],i="NHWC"){let a=C(r,"x","separableConv2d"),l=C(t,"depthwiseFilter","separableConv2d"),u=C(e,"pointwiseFilter","separableConv2d"),c=a,p=!1;if(a.rank===3&&(p=!0,c=$(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),A(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),A(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),A(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);let m=l.shape[2],f=l.shape[3];A(u.shape[2]===m*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*f}, but got ${u.shape[2]}.`);let d=us(c,l,n,o,i,s),h=gn(d,u,1,"valid",i);return p?$(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var qc=S({separableConv2d_:CV});function SV(r,t){return O(this,null,function*(){let e=C(r,"x","setdiff1d"),n=C(t,"y","setdiff1d");A(e.dtype===n.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${n.dtype}).`),A(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),A(n.rank===1,()=>`y should be 1D tensor, but got y (${n.shape}).`);let o=yield e.data(),s=yield n.data(),i=new Set(s),a=0;for(let c=0;c<o.length;c++)i.has(o[c])||a++;let l=new Qe([a],e.dtype),u=new Qe([a],"int32");for(let c=0,p=0;c<o.length;c++)i.has(o[c])||(l.values[p]=o[c],u.values[p]=c,p++);return[l.toTensor(),u.toTensor()]})}var pv=SV;function IV(r){let e={x:C(r,"x","sign")};return k.runKernel(fi,e)}var d3=S({sign_:IV});function NV(r){let e={x:C(r,"x","sin","float32")};return k.runKernel(pi,e)}var Hc=S({sin_:NV});function kV(r){let e={x:C(r,"x","sinh")};return k.runKernel(mi,e)}var Kc=S({sinh_:kV});function AV(r,t,e){let n=C(r,"x","slice1d");return A(n.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${n.rank} tensor`),De(n,[t],[e])}var jc=S({slice1d_:AV});function EV(r,t,e){let n=C(r,"x","slice2d");return A(n.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${n.rank} tensor`),De(n,t,e)}var wp=S({slice2d_:EV});function _V(r,t,e){let n=C(r,"x","slice3d");return A(n.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${n.rank} tensor`),De(n,t,e)}var Xc=S({slice3d_:_V});function DV(r,t,e){let n=C(r,"x","slice4d");return A(n.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${n.rank} tensor`),De(n,t,e)}var kl=S({slice4d_:DV});function RV(r,t=-1){let e=C(r,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);let n={logits:e},o={dim:t};return k.runKernel(Za,n,o)}var y0=S({softmax_:RV});function $V(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`);let t={input:r};return k.runKernel(O1,t)}var b0=S({fft_:$V});function FV(r){A(r.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`);let t={input:r};return k.runKernel(z1,t)}var Ei=S({ifft_:FV});function OV(r){let t=r.shape[r.shape.length-1],e=r.size/t,n;if(t<=2){let o=$(r,[e,t]);n=Ei(o)}else{let o=[e,2*(t-1)],s=$(Ai(r),[e,t]),i=$(u0(r),[e,t]),a=ur(De(s,[0,1],[e,t-2]),1),l=R(ur(De(i,[0,1],[e,t-2]),1),ce(-1)),u=Ye([s,a],1),c=Ye([i,l],1),p=$(hn(u,c),[o[0],o[1]]);n=Ei(p)}if(n=Ai(n),r.rank===3&&r.shape[0]!==0){let o=n,s=r.shape[0];n=$(n,[s,n.shape[0]/s,n.shape[1]]),o.dispose()}return n}var Yc=S({irfft_:OV});function MV(r,t,e=0){let o={x:C(r,"x","split")},s={numOrSizeSplits:t,axis:e};return k.runKernel(Ya,o,s)}var pr=S({split_:MV});function PV(r,t){A(r.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let e=r.shape[r.shape.length-1],n=r.size/e,o;if(t!=null&&t<e){let d=r.shape.map(h=>0),g=r.shape.map(h=>h);g[r.shape.length-1]=t,o=De(r,d,g),e=t}else if(t!=null&&t>e){let d=r.shape.map(g=>g);d[r.shape.length-1]=t-e,o=Ye([r,yt(d)],r.shape.length-1),e=t}else o=r;let s=ve(o),i=$(hn(o,s),[n,e]),a=b0(i),l=Math.floor(e/2)+1,u=Ai(a),c=u0(a),p=pr(u,[l,e-l],u.shape.length-1),m=pr(c,[l,e-l],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=l,$(hn(p[0],m[0]),f)}var v0=S({rfft_:PV});function LV(r,t){let e=C(r,"a","squaredDifference"),n=C(t,"b","squaredDifference");[e,n]=Ge(e,n),Re(e.shape,n.shape);let o={a:e,b:n},s={};return k.runKernel(xi,o,s)}var Zc=S({squaredDifference_:LV});function zV(r,t){let e=C(r,"x","squeeze","string_or_numeric");return $(e,B4(e.shape,t).newShape)}var Rn=S({squeeze_:zV});function BV(r,t=0){let e=fl(r,"tensors","stack","string_or_numeric");A(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&A(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");let n=e,o={axis:t};return k.runKernel(La,n,o)}var _t=S({stack_:BV});function GV(r,t=0){let n={x:C(r,"x","step")},o={alpha:t};return k.runKernel(wi,n,o)}var lo=S({step_:GV});function VV(r,t,e,n,o=0,s=0,i=0,a=0,l=0){let c={x:C(r,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:n,beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};return k.runKernel(mc,c,p)}var h3=S({stridedSlice_:VV});function UV(r){let e={x:C(r,"x","tan","float32")};return k.runKernel(bi,e)}var g3=S({tan_:UV});function Dt(r,t){Hn(r);let e=dn(r,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Jr(r,null,e,t)}function _i(r,t,e){if(Hn(r),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let n=dn(r,e);if(n.length!==2&&n.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Jr(r,t,n,e)}function mv(r,t,e){if(Hn(r),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let n=dn(r,e);if(n.length!==3&&n.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Jr(r,t,n,e)}function fv(r,t,e){if(Hn(r),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let n=dn(r,e);if(n.length!==4&&n.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Jr(r,t,n,e)}function dv(r,t,e){if(Hn(r),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let n=dn(r,e);if(n.length!==5&&n.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Jr(r,t,n,e)}function hv(r,t,e){if(Hn(r),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let n=dn(r,e);if(n.length!==6&&n.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(n.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||n,Jr(r,t,n,e)}function gv(r,t,e){let n=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${r}, sliceDim: ${n}, and batchDim: ${o}.`;if(e.rank<o)throw new Error(s+` update.rank < ${o}. `);if(r.length<n+(e.rank-o))throw new Error(s+` Output shape length < ${n+(e.rank-o)}`);if(e.rank!==o+r.length-n)throw new Error(s+` update.rank != ${o+r.length-n}`);for(let i=0;i<o;++i)if(e.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-o;++i)if(e.shape[i+o]!==r[i+n])throw new Error(s+` updates.shape[${i+o}] (${e.shape[i+o]}) != shape[${i+o}] (${r[i+o]})`)}function Tp(r,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(r.size===0)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}gv(e,t,r)}function WV(r,t,e){let n=t.shape.length,o=n>1?t.shape[n-1]:1,s=e.length,i=1;for(let p=o;p<s;++p)i*=e[p];let a=o<1?1:o,l=ze(t.shape)/a,u=[...Qo(e.slice(0,o)),1],c=ze(e);return{sliceRank:o,numUpdates:l,sliceSize:i,strides:u,outputSize:c}}function qV(r,t,e){let n=C(r,"tensor","tensorScatterupdate"),o=C(t,"indices","tensorScatterupdate","int32"),s=C(e,"updates","tensorScatterupdate");if(Tp(s,o,n.shape),n.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${n.dtype} and ${s.dtype}.`);let i={tensor:n,indices:o,updates:s},a={};return k.runKernel(oc,i,a)}var yv=S({tensorScatterUpdate_:qV});function HV(r,t=1,e=!0){let n=C(r,"x","topk");if(n.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let o=n.shape[n.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);let s={x:n},i={k:t,sorted:e},[a,l]=k.runKernel(gc,s,i);return{values:a,indices:l}}var x3=S({topk_:HV});function KV(r,t=0,e=1,n,o){if(kt(r),n!=null&&n==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Il(t,e,n,!0,o),i=ye(r,n);for(let a=0;a<i.values.length;a++)i.values[a]=s.nextValue();return i.toTensor()}var Jc=S({truncatedNormal_:KV});function jV(r,t=0){let e=C(r,"x","unique","string_or_numeric");A(e.rank>0,()=>"The input tensor must be at least 1D");let n={x:e},o={axis:t},[s,i]=k.runKernel(yc,n,o);return{values:s,indices:i}}var y3=S({unique_:jV});function XV(r,t,e){let n=C(r,"x","unsortedSegmentSum"),o=C(t,"segmentIds","unsortedSegmentSum","int32");A(Es(e),()=>"numSegments must be of dtype int");let s={x:n,segmentIds:o},i={numSegments:e};return k.runKernel(Qa,s,i)}var Qc=S({unsortedSegmentSum_:XV});function YV(r,t=0){let e=C(r,"x","unstack","string_or_numeric");A(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);let n={value:e},o={axis:t};return k.runKernel(Ja,n,o)}var mr=S({unstack_:YV});function bv(r,t){return bp(r,t,"right")}function b3(r,t=!0,e,n){return k.makeVariable(r,t,e,n)}function v3(r,t){let e=[];for(let s=0;s<t.length;s++)t[s]&&e.push(s);let n=ye(r,"int32"),o=ye([e.length,r.length],"int32");for(let s=0;s<e.length;s++){let i=n.indexToLoc(e[s]),a=s*r.length;o.values.set(i,a)}return o.toTensor()}function ZV(r){return O(this,null,function*(){let t=C(r,"condition","whereAsync","bool"),e=yield t.data(),n=v3(t.shape,e);return r!==t&&t.dispose(),n})}var w3=ZV;function JV(r,t,e){return O(this,null,function*(){let n=C(r,"tensor","boolMask"),o=C(t,"mask","boolMask","bool"),s=e??0,i=o.rank,a=n.shape;A(i>0,()=>"mask cannot be scalar"),Ut(a.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=s;g<s+i;g++)l*=a[g];let u=a.slice(0,s).concat([l],a.slice(s+i)),c=$(n,u),p=$(o,[-1]),m=yield w3(p),f=Rn(m,[1]),d=fs(c,f,s);return r!==n&&n.dispose(),t!==o&&o.dispose(),f.dispose(),c.dispose(),p.dispose(),m.dispose(),d})}var QV=JV;function eU(r,t,e){let n=C(r,"x","transpose");if(t==null&&(t=n.shape.map((i,a)=>a).reverse()),A(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(i=>{A(i>=0&&i<n.rank,()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`)}),n.rank<=1)return n.clone();let o={x:n},s={perm:t};return n.dtype==="complex64"?B(()=>{let i=Ai(n),a=u0(n);return i=k.runKernel(ns,{x:i},s),a=k.runKernel(ns,{x:a},s),e&&(a=Le(a)),hn(i,a)}):k.runKernel(ns,o,s)}var Pe=S({transpose_:eU});function tU(r,t,e,n,o=!0){let s=C(r,"v","movingAverage"),i=C(t,"x","movingAverage"),a=C(e,"decay","movingAverage");zy(s,i),A(Nn(s.shape,i.shape),()=>"Shape mismatch in v and x");let l=ce(1),u=oe(l,a),c=R(oe(i,s),u);if(o){A(n!=null,()=>"When using zeroDebias: true, step is required.");let p=C(n,"step","movingAverage");c=se(c,oe(l,Or(a,p)))}return H(s,c)}var rU=S({movingAverage_:tU});function nU(r,t,e){kt(e);let n=C(r,"indices","scatterND","int32"),o=C(t,"updates","scatterND");Tp(o,n,e);let s={indices:n,updates:o},i={shape:e};return k.runKernel(nc,s,i)}var oU=S({scatterND_:nU});function vv(r,t,e,n){if(r.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${r.dtype}.`);if(r.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${r.shape}.`);let o=r.rank>0?r.shape[0]:1,s=r.rank>1?r.shape[1]:1;if(e.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==n.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function iU(r,t,e,n=0){kt(e);let o=C(r,"sparseIndices","sparseToDense","int32"),s=C(t,"sparseValues","sparseToDense","string_or_numeric"),i=C(n,"defaultValue","sparseToDense",s.dtype);vv(o,s,e,i);let a={sparseIndices:o,sparseValues:s,defaultValue:i},l={outputShape:e};return k.runKernel(uc,a,l)}var aU=S({sparseToDense_:iU});function lU(r,t){let e=C(t,"indices","gatherND","int32"),o={params:C(r,"x","gatherND","string_or_numeric"),indices:e};return k.runKernel(L1,o)}var cU=S({gatherND_:lU});function wv(r,t){if(t==null)return r.shape.slice();if(Nn(r.shape,t))return t;if(r.shape.length===t.length){let e=[];for(let n=0;n<r.shape.length;n++)t[n]==null&&r.shape[n]!=null?e.push(r.shape[n]):e.push(t[n]);return e}return t}function uU(r,t,e,n){let o=C(r,"x","dropout");if(A(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),A(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return r instanceof Ke?o.clone():o;let s=wv(o,e),i=1-t,a=se(ms(H(Dn(s,0,1,"float32",n),i)),i);return R(o,a)}var R5=S({dropout_:uU});function $5(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function Cp(r,t,e){let n=1-r%2,o=new Float32Array(r);for(let s=0;s<r;++s){let i=2*Math.PI*s/(r+n-1);o[s]=t-e*Math.cos(i)}return Dt(o,"float32")}function pU(r,t,e=1){return O(this,null,function*(){let n=C(r,"predictions","inTopK"),o=C(t,"targets","inTopK");A(n.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${n.rank}`),A(n.rank-1===o.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${n.rank} and targets rank ${o.rank}`),Ut(n.shape.slice(0,n.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=n.shape[n.shape.length-1];A(e>0&&e<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${e}`);let i=yield n.data(),a=yield o.data(),[l,u]=[i.length/s,s],c=G4("bool",l);for(let p=0;p<l;p++){let m=p*u,f=i.subarray(m,m+u),d=[];for(let g=0;g<f.length;g++)d.push({value:f[g],index:g});d.sort((g,h)=>h.value-g.value),c[p]=0;for(let g=0;g<e;g++)if(d[g].index===a[p]){c[p]=1;break}}return r!==n&&n.dispose(),t!==o&&o.dispose(),yr(c,o.shape,"bool")})}var mU=pU;var w0={};ft(w0,{conv2d:()=>Tv,depthwiseConv2d:()=>Cv,matMul:()=>Sv});function fU(r,t,e,n,o,s="NHWC",i){let a=r;r.rank===3&&(a=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=$(t,[1,t.shape[0],t.shape[1],t.shape[2]])),A(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),A(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),A(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);let u=s==="NHWC"?a.shape[3]:a.shape[1],c=s==="NHWC"?l.shape[3]:l.shape[1];A(u===e[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${e[2]}.`),A(c===e[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${e[3]}).`),ht("conv2dDerFilter",o,i);let p={x:a,dy:l},m={strides:n,pad:o,dataFormat:s,dimRoundingMode:i,filterShape:e};return k.runKernel(C1,p,m)}var eu=S({conv2DBackpropFilter_:fU});function Al(r,t,e){if(e==null||e==="linear")return r;if(e==="relu")return R(r,lo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function El(r,t){let e=t,n=ut(r.shape,t.shape);return n.length>0&&(e=ue(e,n)),$(e,r.shape)}function _l(r,t,e,n){if(t==="linear")return r;if(t==="relu")return _r(r);if(t==="elu")return ps(r);if(t==="relu6")return Gc(r);if(t==="prelu")return x0(r,e);if(t==="leakyrelu")return p0(r,n);if(t==="sigmoid")return Wr(r);throw new Error(`Unknown fused activation ${t}.`)}var Dl=(r,t)=>!(r>0)||t==="linear";function dU({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",Dl(k.state.gradientDepth,l)===!1){A(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let E=gn(r,t,e,n,o,s,i);return a!=null&&(E=H(E,a)),_l(E,l,u,c)}let p=C(r,"x","conv2d","float32"),m=C(t,"filter","conv2d","float32"),f=p,d=!1;p.rank===3&&(d=!0,f=$(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),ht("fused conv2d",n,i);let g=o==="NHWC"?f.shape[3]:f.shape[1];A(m.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${m.shape[2]}.`),A(Ar(e,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`);let h=bl(f.shape,m.shape,e,s,n,i),x;a!=null&&(x=C(a,"bias","fused conv2d"),[x]=Ge(x,p),o==="NHWC"?Re(h.outShape,x.shape):(A(x.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`),A(x.shape.length===0||x.shape[0]===h.outChannels||x.shape[0]===1,()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${h.outChannels})`)));let y;if(u!=null){let E=u.shape;if(A(E.length<=1||E.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${E.length}.`),E.length===1)A(E[0]===1||E[0]===h.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the number of output channels (${h.outChannels}).`);else if(E.length===3)try{Re(E,h.outShape)}catch{let D=`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the output shape of the conv2d (${h.outShape}).`;throw Error(D)}y=C(u,"prelu weights","fused conv2d")}let v=(E,_)=>{A(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);let[D,M,P,V]=_,U=Al(E,P,l);A(Kn(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let q=Fc(M.shape,U,D,e,n),K=eu(M,U,D.shape,e,n),j=[q,K];if(V!=null){let Y=El(V,U);j.push(Y)}return j},w={x:f,filter:m,bias:x,preluActivationWeights:y},I={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?xn((_,D,M)=>{let P=k.runKernel(sl,w,I);return M([D,_,P]),d&&(P=$(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:v}})(f,m):xn((_,D,M,P)=>{let V=k.runKernel(sl,w,I);return P([D,_,V,M]),d&&(V=$(V,[V.shape[1],V.shape[2],V.shape[3]])),{value:V,gradFunc:v}})(f,m,x)}var Tv=S({fusedConv2d_:dU});function hU(r,t,e,n,o,s=[1,1],i){let a=r;r.rank===3&&(a=$(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let l=t;l.rank===3&&(l=$(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:a,dy:l},c={strides:n,pad:o,dimRoundingMode:i,dilations:s,filterShape:e};return k.runKernel(_1,u,c)}var T3=S({depthwiseConv2dNativeBackpropFilter_:hU});function gU(r,t,e,n,o,s=[1,1],i){let a=t,l=!1;t.rank===3&&(l=!0,a=$(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:a,filter:e},c={strides:n,pad:o,dimRoundingMode:i,dilations:s,inputShape:r},p=k.runKernel(D1,u,c);return l?$(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var C3=S({depthwiseConv2dNativeBackpropInput_:gU});function xU({x:r,filter:t,strides:e,pad:n,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:a,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(Dl(k.state.gradientDepth,l)===!1){let I=us(r,t,e,n,o,s,i);return a!=null&&(I=H(I,a)),_l(I,l,u,c)}let p=C(r,"x","depthwiseConv2d","float32"),m=C(t,"filter","depthwiseConv2d","float32"),f=p,d=!1;p.rank===3&&(d=!0,f=$(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),A(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),A(f.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),s==null&&(s=[1,1]),A(Ar(e,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${s}'`),ht("fused depthwiseConv2d",n,i);let g=bl(f.shape,m.shape,e,s,n,i,!0),h;a!=null&&(h=C(a,"bias","fused conv2d"),[h]=Ge(h,p),Re(g.outShape,h.shape));let x;u!=null&&(x=C(u,"prelu weights","fused depthwiseConv2d"));let y=(I,E)=>{A(Kn(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[_,D,M,P]=E,V=Al(I,M,l),U=C3(D.shape,V,_,e,n,s,i),q=T3(D,V,_.shape,e,n,s,i);if(P!=null){let K=El(h,V);return[U,q,K]}return[U,q]},v={x:f,filter:m,bias:h,preluActivationWeights:x},w={strides:e,pad:n,dataFormat:o,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return a==null?xn((E,_,D)=>{let M=k.runKernel(il,v,w);return D([_,E,M]),d&&(M=$(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:y}})(f,m):xn((E,_,D,M)=>{let P=k.runKernel(il,v,w);return M([_,E,P,D]),d&&(P=$(P,[P.shape[1],P.shape[2],P.shape[3]])),{value:P,gradFunc:y}})(f,m,h)}var Cv=S({fusedDepthwiseConv2d_:xU});function yU({a:r,b:t,transposeA:e=!1,transposeB:n=!1,bias:o,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Dl(k.state.gradientDepth,s)===!1){let V=Me(r,t,e,n);return o!=null&&(V=H(V,o)),_l(V,s,i,a)}let l=C(r,"a","fused matMul"),u=C(t,"b","fused matMul");[l,u]=Ge(l,u);let c=e?l.shape[l.rank-2]:l.shape[l.rank-1],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],m=e?l.shape[l.rank-1]:l.shape[l.rank-2],f=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=l.shape.slice(0,-2),g=u.shape.slice(0,-2),h=ze(d),x=ze(g);A(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${e} and transposeB=${n} must match.`);let v=Re(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([m,f]),w=e?$(l,[h,c,m]):$(l,[h,m,c]),I=n?$(u,[x,f,p]):$(u,[x,p,f]),E;o!=null&&(E=C(o,"bias","fused matMul"),[E]=Ge(E,l),Re(v,E.shape));let _;i!=null&&(_=C(i,"prelu weights","fused matMul"));let D=(V,U)=>{let[q,K,j,Y]=U,ee=Al($(V,j.shape),j,s),Z,Q;if(!e&&!n?(Z=Me(ee,K,!1,!0),Q=Me(q,ee,!0,!1)):!e&&n?(Z=Me(ee,K,!1,!1),Q=Me(ee,q,!0,!1)):e&&!n?(Z=Me(K,ee,!1,!0),Q=Me(q,ee,!1,!1)):(Z=Me(K,ee,!0,!0),Q=Me(ee,q,!0,!0)),o!=null){let ie=El(Y,ee);return[Z,Q,ie]}else return[Z,Q]},M={a:w,b:I,bias:E,preluActivationWeights:_},P={transposeA:e,transposeB:n,activation:s,leakyreluAlpha:a};return o==null?xn((U,q,K)=>{let j=k.runKernel(ol,M,P);return K([U,q,j]),{value:$(j,v),gradFunc:D}})(w,I):xn((U,q,K,j)=>{let Y=k.runKernel(ol,M,P);return j([U,q,Y,K]),{value:$(Y,v),gradFunc:D}})(w,I,E)}var Sv=S({fusedMatMul_:yU});function bU(r){return Cp(r,.54,.46)}var Iv=S({hammingWindow_:bU});function vU(r){return Cp(r,.5,.5)}var S3=S({hannWindow_:vU});function wU(r,t,e,n=!1,o=0){let s=0,i=[];for(;s+t<=r.size;)i.push(De(r,s,t)),s+=e;if(n)for(;s<r.size;){let a=s+t-r.size,l=Ye([De(r,s,t-a),io([a],o)]);i.push(l),s+=e}return i.length===0?_i([],[0,t]):$(Ye(i),[i.length,t])}var I3=S({frame_:wU});function TU(r,t,e,n,o=S3){n==null&&(n=$5(t));let s=I3(r,t,e),i=R(s,o(t));return v0(i,n)}var Nv=S({stft_:TU});function CU(r,t,e,n,o="bilinear",s=0){let i=C(r,"image","cropAndResize"),a=C(t,"boxes","cropAndResize","float32"),l=C(e,"boxInd","cropAndResize","int32"),u=a.shape[0];A(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),A(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${a.shape}.`),A(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${a.shape}.`),A(n.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${n.length}.`),A(n[0]>=1&&n[1]>=1,()=>`cropSize must be atleast [1,1], but was ${n}`),A(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);let c={image:i,boxes:a,boxInd:l},p={method:o,extrapolationValue:s,cropSize:n};return k.runKernel(k1,c,p)}var kv=S({cropAndResize_:CU});function SU(r){let t=C(r,"image","flipLeftRight","float32");A(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let e={image:t};return k.runKernel(P1,e,{})}var Av=S({flipLeftRight_:SU});function IU(r){let t=C(r,"image","grayscaleToRGB"),e=t.rank-1,n=t.shape[e];A(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),A(n===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${n}.`);let o=new Array(t.rank);return o.fill(1,0,e),o[e]=3,Er(t,o)}var Ev=S({grayscaleToRGB_:IU});function NU(r){let t=C(r,"image","RGBToGrayscale"),e=t.rank-1,n=t.shape[e];A(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),A(n===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${n}.`);let o=t.dtype,s=J(t,"float32"),i=Dt([.2989,.587,.114]),a;switch(t.rank){case 2:a=c0("ij,j->i",s,i);break;case 3:a=c0("ijk,k->ij",s,i);break;case 4:a=c0("ijkl,l->ijk",s,i);break;case 5:a=c0("ijklm,m->ijkl",s,i);break;case 6:a=c0("ijklmn,n->ijklm",s,i);break;default:throw new Error("Not a valid tensor rank.")}return a=Wt(a,-1),J(a,o)}var _v=S({rgbToGrayscale_:NU});function kU(r,t,e=0,n=.5){let o=C(r,"image","rotateWithOffset","float32");A(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);let s={image:o},i={radians:t,fillValue:e,center:n};return k.runKernel(bc,s,i)}var Dv=S({rotateWithOffset_:kU});function co(r,t,e,n,o,s){n==null&&(n=.5),o==null&&(o=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=r.shape[0];return e=Math.min(e,i),A(0<=n&&n<=1,()=>`iouThreshold must be in [0, 1], but was '${n}'`),A(r.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),A(r.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),A(t.rank===1,()=>"scores must be a 1D tensor"),A(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),A(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s}}function AU(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let s=C(r,"boxes","nonMaxSuppression","float32"),i=C(t,"scores","nonMaxSuppression","float32"),a=co(s,i,e,n,o);e=a.maxOutputSize,n=a.iouThreshold,o=a.scoreThreshold;let l={maxOutputSize:e,iouThreshold:n,scoreThreshold:o};return k.runKernel(K1,{boxes:s,scores:i},l)}var Rv=S({nonMaxSuppression_:AU});function $v(r,t,e){let n=EU(r,t,e),o=n<0?-(n+1):n;r.splice(o,0,t)}function EU(r,t,e){return DU(r,t,e||_U)}function _U(r,t){return r>t?1:r<t?-1:0}function DU(r,t,e){let n=0,o=r.length,s=0,i=!1;for(;n<o;){s=n+(o-n>>>1);let a=e(t,r[s]);a>0?n=s+1:(o=s,i=!a)}return i?n:-n-1}function N3(r,t,e,n,o){return F5(r,t,e,n,o,0)}function k3(r,t,e,n,o,s){return F5(r,t,e,n,o,0,!1,s,!0)}function A3(r,t,e,n,o,s){return F5(r,t,e,n,o,s,!0)}function F5(r,t,e,n,o,s,i=!1,a=!1,l=!1){let u=[];for(let h=0;h<t.length;h++)t[h]>o&&u.push({score:t[h],boxIndex:h,suppressBeginIndex:0});u.sort(Fv);let c=s>0?-.5/s:0,p=[],m=[];for(;p.length<e&&u.length>0;){let h=u.pop(),{score:x,boxIndex:y,suppressBeginIndex:v}=h;if(x<o)break;let w=!1;for(let I=p.length-1;I>=v;--I){let E=RU(r,y,p[I]);if(E>=n){w=!0;break}if(h.score=h.score*$U(n,c,E),h.score<=o)break}h.suppressBeginIndex=p.length,w||(h.score===x?(p.push(y),m.push(h.score)):h.score>o&&$v(u,h,Fv))}let f=p.length,d=e-f;a&&d>0&&(p.push(...new Array(d).fill(0)),m.push(...new Array(d).fill(0)));let g={selectedIndices:p};return i&&(g.selectedScores=m),l&&(g.validOutputs=f),g}function RU(r,t,e){let n=r.subarray(t*4,t*4+4),o=r.subarray(e*4,e*4+4),s=Math.min(n[0],n[2]),i=Math.min(n[1],n[3]),a=Math.max(n[0],n[2]),l=Math.max(n[1],n[3]),u=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),m=Math.max(o[1],o[3]),f=(a-s)*(l-i),d=(p-u)*(m-c);if(f<=0||d<=0)return 0;let g=Math.max(s,u),h=Math.max(i,c),x=Math.min(a,p),y=Math.min(l,m),v=Math.max(x-g,0)*Math.max(y-h,0);return v/(f+d-v)}function $U(r,t,e){let n=Math.exp(t*e*e);return e<=r?n:0}function Fv(r,t){return r.score-t.score||r.score===t.score&&t.boxIndex-r.boxIndex}function FU(s,i,a){return O(this,arguments,function*(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY){let l=C(r,"boxes","nonMaxSuppressionAsync"),u=C(t,"scores","nonMaxSuppressionAsync"),c=co(l,u,e,n,o);e=c.maxOutputSize,n=c.iouThreshold,o=c.scoreThreshold;let p=yield Promise.all([l.data(),u.data()]),m=p[0],f=p[1],{selectedIndices:d}=N3(m,f,e,n,o);return l!==r&&l.dispose(),u!==t&&u.dispose(),Dt(d,"int32")})}var Ov=FU;function OU(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let i=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=co(i,a,e,n,o,s);e=l.maxOutputSize,n=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;let u={boxes:i,scores:a},c={maxOutputSize:e,iouThreshold:n,scoreThreshold:o,softNmsSigma:s},p=k.runKernel(X1,u,c);return{selectedIndices:p[0],selectedScores:p[1]}}var Mv=S({nonMaxSuppressionWithScore_:OU});function MU(i,a,l){return O(this,arguments,function*(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=0){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=co(u,c,e,n,o,s);e=p.maxOutputSize,n=p.iouThreshold,o=p.scoreThreshold,s=p.softNmsSigma;let m=yield Promise.all([u.data(),c.data()]),f=m[0],d=m[1],{selectedIndices:g,selectedScores:h}=A3(f,d,e,n,o,s);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Dt(g,"int32"),selectedScores:Dt(h)}})}var Pv=MU;function PU(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let i=C(r,"boxes","nonMaxSuppression"),a=C(t,"scores","nonMaxSuppression"),l=co(i,a,e,n,o,null),u=l.maxOutputSize,c=l.iouThreshold,p=l.scoreThreshold,m={boxes:i,scores:a},f={maxOutputSize:u,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:s},d=k.runKernel(j1,m,f);return{selectedIndices:d[0],validOutputs:d[1]}}var Lv=S({nonMaxSuppressionPadded_:PU});function LU(i,a,l){return O(this,arguments,function*(r,t,e,n=.5,o=Number.NEGATIVE_INFINITY,s=!1){let u=C(r,"boxes","nonMaxSuppressionAsync"),c=C(t,"scores","nonMaxSuppressionAsync"),p=co(u,c,e,n,o,null),m=p.maxOutputSize,f=p.iouThreshold,d=p.scoreThreshold,[g,h]=yield Promise.all([u.data(),c.data()]),{selectedIndices:x,validOutputs:y}=k3(g,h,m,f,d,s);return u!==r&&u.dispose(),c!==t&&c.dispose(),{selectedIndices:Dt(x,"int32"),validOutputs:ce(y,"int32")}})}var zv=LU;function zU(r,t,e=!1,n=!1){let o=C(r,"images","resizeBilinear");A(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),A(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),A(n===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:n,size:t},u=k.runKernel(Wa,a,l);return i?$(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var E3=S({resizeBilinear_:zU});function BU(r,t,e=!1,n=!1){let o=C(r,"images","resizeNearestNeighbor");A(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),A(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),A(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(n===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=o,i=!1;o.rank===3&&(i=!0,s=$(o,[1,o.shape[0],o.shape[1],o.shape[2]]));let[]=t,a={images:s},l={alignCorners:e,halfPixelCenters:n,size:t},u=k.runKernel(Ua,a,l);return i?$(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var _3=S({resizeNearestNeighbor_:BU});function GU(r,t="binary",e=!1,n=.5){let o=C(r,"image","threshold"),s=.2989,i=.587,a=.114,l=o.shape[0]*o.shape[1],u=R(Dt([n]),255),c,p,m,f;if(A(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),A(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),A(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),A(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),o.shape[2]===3){[c,p,m]=pr(o,[1,1,1],-1);let h=R(c,s),x=R(p,i),y=R(m,a);f=H(H(h,x),y)}else f=r;if(t==="otsu"){let h=Mm(J(Vc(f),"int32"),yr([]),256);u=VU(h,l)}let d=e?_n(f,u):Et(f,u);return J(R(d,255),"int32")}function VU(r,t){let e=Dt([-1]),n=Dt([0]),o=Dt([0]),s,i,a,l,u,c;for(let p=0;p<r.size-1;p++){s=De(r,0,p+1),i=De(r,p+1),u=se(ue(s),t),c=se(ue(i),t);let m=ue(R(s,ds(0,s.size)));a=se(m,ue(s));let f=io(i.shape,s.size),d=H(ds(0,i.size),f),g=R(i,d);l=se(ue(g),ue(i));let h=oe(a,l),x=oe(a,l),y=R(u,c);o=R(R(y,h),x);let v=Et(o,n);n=gt(v,o,n),e=gt(v,Dt([p]),e)}return e}var Bv=S({threshold_:GU});function UU(r,t,e="nearest",n="constant",o=0,s){let i=C(r,"image","transform","float32"),a=C(t,"transforms","transform","float32");A(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),A(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let l={image:i,transforms:a},u={interpolation:e,fillMode:n,fillValue:o,outputShape:s};return k.runKernel(xc,l,u)}var Gv=S({transform_:UU});function WU(r,t,e){let n=C(r,"a","bandPart");A(n.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${n.rank}.`);let o=n.shape,[s,i]=n.shape.slice(-2),a,l;typeof t=="number"?(A(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),A(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),a=C(t<0?s:t,"numLower","bandPart")):(A(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=gt(ki(t,0),s,Xn(t,s))),typeof e=="number"?(A(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),A(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),l=C(e<0?i:e,"numUpper","bandPart")):(A(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=gt(ki(e,0),i,Xn(e,i)));let u=$(ds(0,s,1,"int32"),[-1,1]),c=ds(0,i,1,"int32"),p=oe(u,c),m=Mr(_n(p,a),en(p,Le(l))),f=yt([s,i],n.dtype);return $(_t(mr($(n,[-1,s,i])).map(d=>gt(m,d,f))),o)}var Vv=S({bandPart_:WU});function qU(r){let t;if(Array.isArray(r)){t=!1,A(r!=null&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let o=r[0].shape[0];for(let s=1;s<r.length;++s)A(r[s].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[s].shape[0]} vs. ${o})`)}else t=!0,r=pr(r,r.shape[0],0).map(o=>Rn(o,[0]));A(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);let e=[],n=r;for(let o=0;o<r.length;++o)e.push(k.tidy(()=>{let s=n[o];if(o>0)for(let i=0;i<o;++i){let a=R(ue(R(e[i],s)),e[i]);s=oe(s,a)}return se(s,Ni(s,"euclidean"))}));return t?_t(e,0):e}var Uv=S({gramSchmidt_:qU});function HU(r,t=!1){if(A(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),r.rank===2)return Wv(r,t);{let e=r.shape.slice(0,r.shape.length-2).reduce((l,u)=>l*u),n=mr($(r,[e,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),o=[],s=[];n.forEach(l=>{let[u,c]=Wv(l,t);o.push(u),s.push(c)});let i=$(_t(o,0),r.shape),a=$(_t(s,0),r.shape);return[i,a]}}function Wv(r,t=!1){return k.tidy(()=>{A(r.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);let e=r.shape[0],n=r.shape[1],o=wl(e),s=Qr(r),i=_i([[1]],[1,1]),a=Qr(i),l=e>=n?n:e;for(let u=0;u<l;++u){let c=s,p=a,m=o;[a,s,o]=k.tidy(()=>{let f=De(s,[u,u],[e-u,1]),d=Ni(f),g=De(s,[u,u],[1,1]),h=gt(Et(g,0),_i([[-1]]),_i([[1]])),x=oe(g,R(h,d)),y=se(f,x);y.shape[0]===1?a=Qr(i):a=Ye([i,De(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=Le(se(Me(h,x),d)),w=De(s,[u,0],[e-u,n]),I=R(v,a),E=Pe(a);if(u===0)s=oe(w,Me(I,Me(E,w)));else{let M=oe(w,Me(I,Me(E,w)));s=Ye([De(s,[0,0],[u,n]),M],0)}let _=Pe(I),D=De(o,[0,u],[e,o.shape[1]-u]);if(u===0)o=oe(D,Me(Me(D,a),_));else{let M=oe(D,Me(Me(D,a),_));o=Ye([De(o,[0,0],[e,u]),M],1)}return[a,s,o]}),Ae([c,p,m])}return!t&&e>n&&(o=De(o,[0,0],[e,n]),s=De(s,[0,0],[n,n])),[o,s]})}var qv=S({qr_:HU});var sr=function(r){return r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",r}(sr||{});function KU(r,t,e=sr.SUM_BY_NONZERO_WEIGHTS){let n=C(r,"losses","computeWeightedLoss"),o=null;t!=null&&(o=C(t,"weights","computeWeightedLoss"));let s=o==null?n:R(n,o);if(e===sr.NONE)return s;if(e===sr.SUM)return ue(s);if(e===sr.MEAN){if(o==null)return xt(s);{let i=n.size/o.size,a=se(ue(s),ue(o));return i>1?se(a,ce(i)):a}}if(e===sr.SUM_BY_NONZERO_WEIGHTS){if(o==null)return se(ue(s),ce(n.size));{let i=R(o,Qt(n.shape)),a=J(ue($o(i,ce(0))),"float32");return se(ue(s),a)}}throw Error(`Unknown reduction: ${e}`)}var Pr=S({computeWeightedLoss_:KU});function jU(r,t,e,n=sr.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","absoluteDifference"),s=C(t,"predictions","absoluteDifference"),i=null;e!=null&&(i=C(e,"weights","absoluteDifference")),Ut(o.shape,s.shape,"Error in absoluteDifference: ");let a=wt(oe(o,s));return Pr(a,i,n)}var Hv=S({absoluteDifference_:jU});function XU(r,t,e,n,o=sr.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","cosineDistance"),i=C(t,"predictions","cosineDistance"),a=null;n!=null&&(a=C(n,"weights","cosineDistance")),Ut(s.shape,i.shape,"Error in cosineDistance: ");let l=ce(1),u=oe(l,ue(R(s,i),e,!0));return Pr(u,a,o)}var Kv=S({cosineDistance_:XU});function YU(r,t,e,n=sr.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","hingeLoss"),s=C(t,"predictions","hingeLoss"),i=null;e!=null&&(i=C(e,"weights","hingeLoss")),Ut(o.shape,s.shape,"Error in hingeLoss: ");let a=ce(1);o=oe(R(ce(2),o),a);let l=_r(oe(a,R(o,s)));return Pr(l,i,n)}var jv=S({hingeLoss_:YU});function ZU(r,t,e,n=1,o=sr.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","huberLoss"),i=C(t,"predictions","huberLoss"),a=null;e!=null&&(a=C(e,"weights","huberLoss")),Ut(s.shape,i.shape,"Error in huberLoss: ");let l=ce(n),u=wt(oe(i,s)),c=Xn(u,l),p=oe(u,c),m=H(R(ce(.5),Oe(c)),R(l,p));return Pr(m,a,o)}var Xv=S({huberLoss_:ZU});function JU(r,t,e,n=1e-7,o=sr.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"labels","logLoss"),i=C(t,"predictions","logLoss"),a=null;e!=null&&(a=C(e,"weights","logLoss")),Ut(s.shape,i.shape,"Error in logLoss: ");let l=ce(1),u=ce(n),c=Le(R(s,Tr(H(i,u)))),p=R(oe(l,s),Tr(H(oe(l,i),u))),m=oe(c,p);return Pr(m,a,o)}var Yv=S({logLoss_:JU});function QU(r,t,e,n=sr.SUM_BY_NONZERO_WEIGHTS){let o=C(r,"labels","meanSquaredError"),s=C(t,"predictions","meanSquaredError"),i=null;e!=null&&(i=C(e,"weights","meanSquaredError")),Ut(o.shape,s.shape,"Error in meanSquaredError: ");let a=Zc(o,s);return Pr(a,i,n)}var Zv=S({meanSquaredError_:QU});function eW(r,t){let e=C(r,"labels","sigmoidCrossEntropyWithLogits"),n=C(t,"logits","sigmoidCrossEntropyWithLogits");Ut(e.shape,n.shape,"Error in sigmoidCrossEntropyWithLogits: ");let o=_r(n),s=R(n,e),i=m0(Gt(Le(wt(n))));return H(oe(o,s),i)}function tW(r,t,e,n=0,o=sr.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"multiClassLabels","sigmoidCrossEntropy"),i=C(t,"logits","sigmoidCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","sigmoidCrossEntropy")),Ut(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),n>0){let u=ce(n),c=ce(1),p=ce(.5);s=H(R(s,oe(c,u)),R(p,u))}let l=eW(s,i);return Pr(l,a,o)}var Jv=S({sigmoidCrossEntropy_:tW});function rW(r,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return xn((o,s,i)=>{let l=f0(s,[e],!0),u=oe(J(s,"float32"),l);i([o,u]);let c=Le(R(u,o));return{value:ue(c,[e]),gradFunc:(f,d)=>{let[g,h]=d,x=ao(f.shape,[e]);return[R($(f,x),oe(J(g,"float32"),Gt(h))),R($(f,x),oe(Gt(h),J(g,"float32")))]}}})(r,t)}function nW(r,t,e,n=0,o=sr.SUM_BY_NONZERO_WEIGHTS){let s=C(r,"onehotLabels","softmaxCrossEntropy"),i=C(t,"logits","softmaxCrossEntropy"),a=null;if(e!=null&&(a=C(e,"weights","softmaxCrossEntropy")),Ut(s.shape,i.shape,"Error in softmaxCrossEntropy: "),n>0){let u=ce(n),c=ce(1),p=ce(s.shape[1]);s=H(R(s,oe(c,u)),se(u,p))}let l=rW(s,i);return Pr(l,a,o)}var Qv=S({softmaxCrossEntropy_:nW});function oW(r,t,e,n){let o=C(r,"indices","sparseFillEmptyRows","int32"),s=C(t,"values","sparseFillEmptyRows"),i=C(e,"denseShape","sparseFillEmptyRows","int32"),a=C(n,"defaultValue","sparseFillEmptyRows",s.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);let l={indices:o,values:s,denseShape:i,defaultValue:a},u=k.runKernel(ic,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var ew=S({sparseFillEmptyRows_:oW});function sW(r,t,e){let n=C(r,"inputIndices","sparseReshape","int32"),o=C(t,"inputShape","sparseReshape","int32"),s=C(e,"newShape","sparseReshape","int32");if(n.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${n.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:n,inputShape:o,newShape:s},a=k.runKernel(ac,i);return{outputIndices:a[0],outputShape:a[1]}}var tw=S({sparseReshape_:sW});function iW(r,t,e){let n=C(r,"data","sparseSegmentMean"),o=C(t,"indices","sparseSegmentMean","int32"),s=C(e,"segmentIds","sparseSegmentMean","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return k.runKernel(lc,i)}var rw=S({sparseSegmentMean_:iW});function aW(r,t,e){let n=C(r,"data","sparseSegmentSum"),o=C(t,"indices","sparseSegmentSum","int32"),s=C(e,"segmentIds","sparseSegmentSum","int32");if(n.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:n,indices:o,segmentIds:s};return k.runKernel(cc,i)}var nw=S({sparseSegmentSum_:aW});function lW(r,t,e,n,o,s,i,a){let l=C(r,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=C(t,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:e,nGramWidths:n,leftPad:o,rightPad:s,padWidth:i,preserveShortSequences:a},p={data:l,dataSplits:u},m=k.runKernel(fc,p,c);return{nGrams:m[0],nGramsSplits:m[1]}}var ow=S({stringNGrams_:lW});function cW(r,t,e=!0){let n=C(r,"input","stringSplit","string"),o=C(t,"delimiter","stringSplit","string");if(n.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${n.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);let s={skipEmpty:e},i={input:n,delimiter:o},a=k.runKernel(dc,i,s);return{indices:a[0],values:a[1],shape:a[2]}}var sw=S({stringSplit_:cW});function uW(r,t){let e=C(r,"input","stringToHashBucketFast","string"),n={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let o={input:e};return k.runKernel(hc,o,n)}var iw=S({stringToHashBucketFast_:uW});function pW(r,t,e,n=!0){let o=C(r,"input","staticRegexReplace","string"),s={pattern:t,rewrite:e,replaceGlobal:n};return k.runKernel(nl,{x:o},s)}var aw=S({staticRegexReplace_:pW});var mW={fft:b0,ifft:Ei,rfft:v0,irfft:Yc},fW={hammingWindow:Iv,hannWindow:S3,frame:I3,stft:Nv},bn={flipLeftRight:Av,grayscaleToRGB:Ev,resizeNearestNeighbor:_3,resizeBilinear:E3,rgbToGrayscale:_v,rotateWithOffset:Dv,cropAndResize:kv,nonMaxSuppression:Rv,nonMaxSuppressionAsync:Ov,nonMaxSuppressionWithScore:Mv,nonMaxSuppressionWithScoreAsync:Pv,nonMaxSuppressionPadded:Lv,nonMaxSuppressionPaddedAsync:zv,threshold:Bv,transform:Gv},O5={bandPart:Vv,gramSchmidt:Uv,qr:qv},dW={absoluteDifference:Hv,computeWeightedLoss:Pr,cosineDistance:Kv,hingeLoss:jv,huberLoss:Xv,logLoss:Yv,meanSquaredError:Zv,sigmoidCrossEntropy:Jv,softmaxCrossEntropy:Qv},hW={sparseFillEmptyRows:ew,sparseReshape:tw,sparseSegmentMean:rw,sparseSegmentSum:nw},gW={stringNGrams:ow,stringSplit:sw,stringToHashBucketFast:iw,staticRegexReplace:aw};var X={};ft(X,{Serializable:()=>Sp,SerializationMap:()=>D3,getRegisteredName:()=>yW,registerClass:()=>P5});var xW=new Map,M5=new Map,Sp=class{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}},D3=class r{constructor(){this.classNameMap={}}static getMap(){return r.instance==null&&(r.instance=new r),r.instance}static register(t){r.getMap().classNameMap[t.className]=[t,t.fromConfig]}};function P5(r,t,e){A(r.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof r.className=="string",()=>"className is required to be a string, but got type "+typeof r.className),A(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=r.className);let n=e,o=t+">"+n;return D3.register(r),xW.set(o,r),M5.set(r,o),r}function yW(r){return M5.has(r)?M5.get(r):r.className}var Lr=class extends Sp{minimize(t,e=!1,n){let{value:o,grads:s}=this.computeGradients(t,n);if(n!=null){let i=n.map(a=>({name:a.name,tensor:s[a.name]}));this.applyGradients(i)}else this.applyGradients(s);return Ae(s),e?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return I5(t,e)}dispose(){this.iterations_!=null&&Ae(this.iterations_)}saveIterations(){return O(this,null,function*(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ce(this.iterations_,"int32")}})}getWeights(){return O(this,null,function*(){throw new Error("getWeights() is not implemented for this optimizer yet.")})}setWeights(t){return O(this,null,function*(){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)})}extractIterations(t){return O(this,null,function*(){return this.iterations_=(yield t[0].tensor.data())[0],t.slice(1)})}};Object.defineProperty(Lr,Symbol.hasInstance,{value:r=>r.minimize!=null&&r.computeGradients!=null&&r.applyGradients!=null});var tu=class extends Lr{static get className(){return"Adadelta"}constructor(t,e,n=null){super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=k.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n],i=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accum_grad`,variable:B(()=>ve(s).variable(i))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${n}/accum_var`,variable:B(()=>ve(s).variable(i))});let a=Array.isArray(t)?t[o].tensor:t[n];if(a==null)return;let l=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;B(()=>{let c=H(R(l,this.rho),R(Oe(a),1-this.rho)),p=R(se(lt(H(u,this.epsilon)),lt(H(l,this.epsilon))),a),m=H(R(u,this.rho),R(Oe(p),1-this.rho));l.assign(c),u.assign(m);let f=H(R(p,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Ae(this.accumulatedGrads.map(t=>t.variable)),Ae(this.accumulatedUpdates.map(t=>t.variable)))}getWeights(){return O(this,null,function*(){let t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return O(this,null,function*(){t=yield this.extractIterations(t);let e=t.length/2,n=!1;this.accumulatedGrads=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedUpdates=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}};var ru=class extends Lr{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${n}/accumulator`,variable:B(()=>io(s.shape,this.initialAccumulatorValue).variable(!1))});let i=Array.isArray(t)?t[o].tensor:t[n];if(i==null)return;let a=this.accumulatedGrads[o].variable;B(()=>{let l=H(a,Oe(i));a.assign(l);let u=H(R(se(i,lt(H(l,k.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Ae(this.accumulatedGrads.map(t=>t.variable))}getWeights(){return O(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return O(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulatedGrads=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}};var nu=class extends Lr{static get className(){return"Adam"}constructor(t,e,n,o=null){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],B(()=>{this.accBeta1=ce(e).variable(),this.accBeta2=ce(n).variable()}),o==null&&(this.epsilon=k.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);B(()=>{let n=oe(1,this.accBeta1),o=oe(1,this.accBeta2);e.forEach((s,i)=>{let a=k.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:B(()=>ve(a).variable(l))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${s}/v`,variable:B(()=>ve(a).variable(l))});let u=Array.isArray(t)?t[i].tensor:t[s];if(u==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=H(R(c,this.beta1),R(u,1-this.beta1)),f=H(R(p,this.beta2),R(Oe(u),1-this.beta2)),d=se(m,n),g=se(f,o);c.assign(m),p.assign(f);let h=H(R(se(d,H(lt(g),this.epsilon)),-this.learningRate),a);a.assign(h)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&Ae(this.accumulatedSecondMoment.map(t=>t.variable))}getWeights(){return O(this,null,function*(){let t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return O(this,null,function*(){t=yield this.extractIterations(t),B(()=>{this.accBeta1.assign(Or(this.beta1,this.iterations_+1)),this.accBeta2.assign(Or(this.beta2,this.iterations_+1))});let e=t.length/2,n=!1;this.accumulatedFirstMoment=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)}))})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}};var ou=class extends Lr{static get className(){return"Adamax"}constructor(t,e,n,o=null,s=0){super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=o,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],B(()=>{this.iteration=ce(0).variable(),this.accBeta1=ce(e).variable()}),o==null&&(this.epsilon=k.backend.epsilon())}applyGradients(t){let e=Array.isArray(t)?t.map(n=>n.name):Object.keys(t);B(()=>{let n=oe(1,this.accBeta1),o=se(-this.learningRate,H(R(this.iteration,this.decay),1));e.forEach((s,i)=>{let a=k.registeredVariables[s],l=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${s}/m`,variable:ve(a).variable(l)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${s}/v`,variable:ve(a).variable(l)});let u=Array.isArray(t)?t[i].tensor:t[s];if(u==null)return;let c=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=H(R(c,this.beta1),R(u,1-this.beta1)),f=R(p,this.beta2),d=wt(u),g=yn(f,d);c.assign(m),p.assign(g);let h=H(R(se(o,n),se(m,H(g,this.epsilon))),a);a.assign(h)}),this.iteration.assign(H(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Ae(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&Ae(this.accumulatedWeightedInfNorm.map(t=>t.variable))}getWeights(){return O(this,null,function*(){throw new Error("getWeights() is not implemented for Adamax yet.")})}setWeights(t){return O(this,null,function*(){throw new Error("setWeights() is not implemented for Adamax yet.")})}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}};var T0=class extends Lr{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=Array.isArray(t)?t[o].tensor:t[n];if(s==null)return;let i=k.registeredVariables[n];B(()=>{let a=H(R(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=Ct(ce(-t))}dispose(){this.c.dispose()}getWeights(){return O(this,null,function*(){return[yield this.saveIterations()]})}setWeights(t){return O(this,null,function*(){if(t=yield this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")})}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}};var su=class extends T0{static get className(){return"Momentum"}constructor(t,e,n=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=ce(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${n}/momentum`,variable:B(()=>ve(s).variable(!1))});let i=this.accumulations[o].variable,a=Array.isArray(t)?t[o].tensor:t[n];a!=null&&B(()=>{let l,u=H(R(this.m,i),a);this.useNesterov?l=H(R(this.c,H(a,R(u,this.m))),s):l=H(R(this.c,u),s),i.assign(u),s.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Ae(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}getWeights(){return O(this,null,function*(){return[yield this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))})}setWeights(t){return O(this,null,function*(){t=yield this.extractIterations(t);let e=!1;this.accumulations=t.map(n=>({originalName:n.name,variable:n.tensor.variable(e)}))})}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}};var iu=class extends Lr{static get className(){return"RMSProp"}constructor(t,e=.9,n=0,o=null,s=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,o==null&&(this.epsilon=k.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(n=>n.name):Object.keys(t)).forEach((n,o)=>{let s=k.registeredVariables[n],i=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${n}/rms`,variable:B(()=>ve(s).variable(i))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${n}/momentum`,variable:B(()=>ve(s).variable(i))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${n}/mg`,variable:B(()=>ve(s).variable(i))});let a=Array.isArray(t)?t[o].tensor:t[n];if(a==null)return;let l=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;B(()=>{let c=H(R(l,this.decay),R(Oe(a),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[o].variable,m=H(R(p,this.decay),R(a,1-this.decay)),f=se(R(a,this.learningRate),lt(oe(c,H(Oe(m),this.epsilon)))),d=H(R(u,this.momentum),f);l.assign(c),p.assign(m),u.assign(d);let g=oe(s,d);s.assign(g)}else{let p=H(R(l,this.decay),R(Oe(a),1-this.decay)),m=H(R(u,this.momentum),se(R(a,this.learningRate),lt(H(p,this.epsilon))));l.assign(p),u.assign(m);let f=oe(s,m);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Ae(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Ae(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&Ae(this.accumulatedMoments.map(t=>t.variable))}getWeights(){return O(this,null,function*(){let t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[yield this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))})}setWeights(t){return O(this,null,function*(){t=yield this.extractIterations(t);let e=this.centered?t.length/3:t.length/2,n=!1;this.accumulatedMeanSquares=t.slice(0,e).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.accumulatedMoments=t.slice(e,e*2).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(o=>({originalName:o.name,variable:o.tensor.variable(n)})))})}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}};var bW=[tu,ru,nu,ou,su,iu,T0];function lw(){for(let r of bW)P5(r)}var Fo={};ft(Fo,{CompositeArrayBuffer:()=>Fr,browserFiles:()=>uw,browserHTTPRequest:()=>hw,concatenateArrayBuffers:()=>Yy,copyModel:()=>ub,decodeWeights:()=>xm,decodeWeightsStream:()=>ym,encodeWeights:()=>Hy,fromMemory:()=>gw,fromMemorySync:()=>W5,getLoadHandlers:()=>eb,getModelArtifactsForJSON:()=>Nc,getModelArtifactsForJSONSync:()=>p5,getModelArtifactsInfoForJSON:()=>ss,getSaveHandlers:()=>Qy,getWeightSpecs:()=>dp,http:()=>$3,isHTTPScheme:()=>R3,listModels:()=>lb,loadWeights:()=>mw,moveModel:()=>pb,registerLoadRouter:()=>Jy,registerSaveRouter:()=>Zy,removeModel:()=>cb,weightsLoaderFactory:()=>V5,withSaveHandler:()=>xw,withSaveHandlerSync:()=>yw});var vW="model",wW=".json",TW=".weights.bin";function cw(r){return new Promise(t=>setTimeout(t)).then(r)}var L5=(()=>{class r{constructor(e){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(r.URL_SCHEME)&&(e=e.slice(r.URL_SCHEME.length)),(e==null||e.length===0)&&(e=vW),this.modelJsonFileName=e+wW,this.weightDataFileName=e+TW}save(e){return O(this,null,function*(){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let n=Fr.join(e.weightData),o=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=bm(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=a,yield cw(()=>l.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=o,yield cw(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ss(e)}}})}}return r.URL_SCHEME="downloads://",r})();var z5=class{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}load(){return O(this,null,function*(){return new Promise((t,e)=>{let n=new FileReader;n.onload=o=>{let s=JSON.parse(o.target.result),i=s.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(s.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}let l=Nc(s,u=>this.loadWeights(u));t(l)},n.onerror=o=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})})}loadWeights(t){let e=[],n=[];for(let i of t)e.push(...i.weights),n.push(...i.paths);let o=this.checkManifestAndWeightFiles(t),s=n.map(i=>this.loadWeightsFile(i,o[i]));return Promise.all(s).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((n,o)=>{let s=new FileReader;s.onload=i=>{let a=i.target.result;n(a)},s.onerror=i=>o(`Failed to weights data from file of path '${t}'.`),s.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){let e=[],n=this.weightsFiles.map(s=>u5(s.name)),o={};for(let s of t)s.paths.forEach(i=>{let a=u5(i);if(e.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(e.push(a),n.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);o[i]=this.weightsFiles[n.indexOf(a)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return o}},CW=r=>z().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(L5.URL_SCHEME)?SW(r.slice(L5.URL_SCHEME.length)):null;br.registerSaveRouter(CW);function SW(r="model"){return new L5(r)}function uw(r){return new z5(r)}function B5(r,t,e,n){i(r),e=e??0,n=n??1,a(e,n);let o=0,s=l=>(l.then(u=>{let c=e+ ++o/r.length*(n-e);return t(c),u}),l);function i(l){A(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,u){A(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),A(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(r.map(s))}function G5(r,t){return O(this,null,function*(){t==null&&(t={});let e=t.fetchFunc==null?z().platform.fetch:t.fetchFunc,n=r.map(p=>e(p,t.requestInit,{isBinary:!0})),a=(t.onProgress==null?yield Promise.all(n):yield B5(n,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?yield Promise.all(a):yield B5(a,t.onProgress,.5,1)})}function pw(r,t){var e;let n=t.fetchFunc==null?z().platform.fetch:t.fetchFunc,o=0,s;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:i=>O(null,null,function*(){for(var a;o<r.length;){s||(s=(yield n(r[o],t.requestInit,{isBinary:!0})).body.getReader());let{done:l,value:u}=yield s.read();if(l){o++,s=void 0,(a=t.onProgress)===null||a===void 0||a.call(t,o/r.length);continue}i.enqueue(u);return}i.close()})})}function mw(r,t="",e,n){return O(this,null,function*(){return V5(i=>G5(i,{requestInit:n}))(r,t,e)})}function V5(r){return(t,e="",n)=>O(null,null,function*(){let o=t.map(()=>!1),s={},i=n!=null?n.map(()=>!1):[],a=[];if(t.forEach((f,d)=>{let g=0;f.weights.forEach(h=>{let x="quantization"in h?h.quantization.dtype:h.dtype,y=Ci[x]*ze(h.shape),v=()=>{o[d]=!0,s[d]==null&&(s[d]=[]),s[d].push({manifestEntry:h,groupOffset:g,sizeBytes:y})};n!=null?n.forEach((w,I)=>{w===h.name&&(v(),i[I]=!0)}):v(),a.push(h.name),g+=y})}),!i.every(f=>f)){let f=n.filter((d,g)=>!i[g]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}let l=o.reduce((f,d,g)=>(d&&f.push(g),f),[]),u=[];l.forEach(f=>{t[f].paths.forEach(d=>{let g=e+(e.endsWith("/")?"":"/")+d;u.push(g)})});let c=yield r(u),p={},m=0;return l.forEach(f=>{let d=t[f].paths.length,g=new Fr(c.slice(m,m+d));s[f].forEach(x=>{let y=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),v=xm(y,[x.manifestEntry]);for(let w in v)p[w]=v[w]}),m+=d}),p})}var IW="application/octet-stream",NW="application/json",fw=(()=>{class r{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(A(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=z().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}save(e){return O(this,null,function*(){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;let o=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=bm(e,o);if(n.body.append("model.json",new Blob([JSON.stringify(s)],{type:NW}),"model.json"),e.weightData!=null){let a=Fr.join(e.weightData);n.body.append("model.weights.bin",new Blob([a],{type:IW}),"model.weights.bin")}let i=yield this.fetch(this.path,n);if(i.ok)return{modelArtifactsInfo:ss(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)})}loadModelJSON(){return O(this,null,function*(){let e=yield this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=yield e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let o=n.modelTopology,s=n.weightsManifest;if(o==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n})}load(){return O(this,null,function*(){if(this.loadOptions.streamWeights)return this.loadStream();let e=yield this.loadModelJSON();return Nc(e,n=>this.loadWeights(n))})}loadStream(){return O(this,null,function*(){let e=yield this.loadModelJSON(),n=yield this.getWeightUrls(e.weightsManifest),o=dp(e.weightsManifest),s=()=>pw(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:o,getWeightStream:s})})}getWeightUrls(e){return O(this,null,function*(){let n=Array.isArray(this.path)?this.path[1]:this.path,[o,s]=kW(n),i=this.weightPathPrefix||o,a=[],l=[];for(let u of e)for(let c of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(c)):a.push(i+c+s);return this.weightUrlConverter&&a.push(...yield Promise.all(l)),a})}loadWeights(e){return O(this,null,function*(){let n=yield this.getWeightUrls(e),o=dp(e),s=yield G5(n,this.loadOptions);return[o,s]})}}return r.URL_SCHEME_REGEX=/^https?:\/\//,r})();function kW(r){let t=r.lastIndexOf("/"),e=r.lastIndexOf("?"),n=r.substring(0,t),o=e>t?r.substring(e):"";return[n+"/",o]}function R3(r){return r.match(fw.URL_SCHEME_REGEX)!=null}var dw=(r,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(r)?e=r.every(n=>R3(n)):e=R3(r),e)return $3(r,t)}return null};br.registerSaveRouter(dw);br.registerLoadRouter(dw);function $3(r,t){return new fw(r,t)}function hw(r,t){return $3(r,t)}var Ip=class{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}},F3=class{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}},U5=class{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}};function gw(r,t,e,n){let o=arguments;return new U5(W5(...o))}function W5(r,t,e,n){return arguments.length===1?r.modelTopology!=null||r.weightSpecs!=null?new Ip(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ip({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ip({modelTopology:r,weightSpecs:t,weightData:e,trainingConfig:n}))}function xw(r){return new F3(r)}function yw(r){return new F3(r)}function AW(r,t){let e=r.shape.length,n=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(n<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${n}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[n-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[n-1]} vs. ${e}`);if(ze(r.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);let o=t.shape,s=o[o.length-1],i=1;for(let p=0;p<o.length-1;++p)i*=o[p];let a=r.shape,l=o.slice();l.pop();let u=1;for(let p=s;p<e;++p)u*=a[p],l.push(a[p]);let c=[...Qo(r.shape).map(p=>p/u),1].slice(0,s);return[l,i,u,c]}var Cr={};ft(Cr,{assertParamsValid:()=>_W,computeFlatOffset:()=>OW,computeOutShape:()=>RW,getNormalizedAxes:()=>$W,isSliceContinous:()=>FW,maskToAxes:()=>DW,parseSliceParams:()=>H5,sliceInfo:()=>MW,startForAxis:()=>Nw,startIndicesWithElidedDims:()=>Cw,stopForAxis:()=>kw,stopIndicesWithElidedDims:()=>Sw,stridesForAxis:()=>Iw,stridesWithElidedDims:()=>vw});var q5=-2,EW=-1;function _W(r,t,e){let n=r.shape.length;A(n===t.length,()=>`Error in slice${n}D: Length of begin ${t} must match the rank of the array (${n}).`),A(n===e.length,()=>`Error in slice${n}D: Length of size ${e} must match the rank of the array (${n}).`);for(let o=0;o<n;++o)A(t[o]+e[o]<=r.shape[o],()=>`Error in slice${n}D: begin[${o}] + size[${o}] (${t[o]+e[o]}) would overflow input.shape[${o}] (${r.shape[o]})`)}function DW(r){let t=[],e=0;for(;r>0;)r&1&&t.push(e),r/=2,e++;return t}function RW(r,t,e){let n=[];for(let o=0;o<r.length;o++)n[o]=Math.ceil((t[o]-r[o])/e[o]);return n}function vw(r,t,e,n){let o=[...r];for(let s=o.length;s<n.length;s++)o.push(1);for(let s=0;s<e;s++)s===0?o[t]=1:(o.splice(t,0,1),o.pop());return o}function ww(r,t,e){return e<=r?e:e-(t-1)}function Tw(r,t){let e=[];for(let n=0;n<r;n++)e.push(t+n);return e}function $W(r,t,e,n,o,s,i,a,l){let u=r.length,c=new Array(u),p=new Array(u),m=new Array(u);if(t.length&&e>0){let f=t[0],d=e+1;c=Cw(i,f,d,n,r),p=Sw(a,f,d,o,r),m=vw(s,f,d,r)}else for(let f=0;f<u;f++)c[f]=Nw(i,n,s,r,f,l),p[f]=kw(a,o,s,r,f,l),m[f]=Iw(s,f,l);return{begin:c,end:p,strides:m}}function Cw(r,t,e,n,o){let s=[...o],i=Tw(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{let l=ww(t,e,a),u=n[l];r&1<<l&&(u=0),s[a]=u}return s}function Sw(r,t,e,n,o){let s=[...o],i=Tw(e,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{let l=ww(t,e,a),u=n[l];r&1<<l&&(u=Number.MAX_SAFE_INTEGER),s[a]=u}for(let a=0;a<s.length;a++){let l=o[a];s[a]<0&&(s[a]+=l),s[a]=u1(0,s[a],o[a])}return s}function Iw(r,t,e){let n=r[t];return(e&1<<t||n==null)&&(n=1),n}function Nw(r,t,e,n,o,s){let i=t[o],a=e[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let l=n[o];return i<0&&(i+=l),i=u1(0,i,l-1),i}function kw(r,t,e,n,o,s){let i=t[o],a=e[o]||1;(r&1<<o||s&1<<o||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let l=n[o];return i<0&&(i+=l),a>0?i=u1(0,i,l):i=u1(-1,i,l-1),i}function FW(r,t,e){let n=e.length;for(let o=0;o<e.length;o++)if(e[o]>1){n=o;break}for(let o=n+1;o<e.length;o++)if(t[o]>0||e[o]!==r[o])return!1;return!0}function OW(r,t){let e=r.length>0?r[r.length-1]:1;for(let n=0;n<r.length-1;n++)e+=r[n]*t[n];return e}function H5(r,t,e){let n,o=r.shape.length;typeof t=="number"?n=[t,...new Array(o-1).fill(0)]:t.length<o?n=t.concat(new Array(o-t.length).fill(0)):n=t.slice(),n.forEach(i=>{A(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return e==null?s=new Array(o).fill(-1):typeof e=="number"?s=[e,...new Array(o-1).fill(-1)]:e.length<o?s=e.concat(new Array(o-e.length).fill(-1)):s=e,s=s.map((i,a)=>i>=0?i:(A(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),r.shape[a]-n[a])),[n,s]}function MW(r,t,e,n,o,s,i,a,l){let u;if(n==null?(u=new Array(t.length),u.fill(1)):u=n,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:u.slice(),beginMask:o,endMask:s,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:l};for(let v=0;v<p.dims;v++)c&&(1<<v&a)!==0&&p.numAddAxisAfterEllipsis++,1<<v&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let m={dims:r.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};PW(p,m);let f=!0,d=!0,g=!0,h=[],x=[];for(let v=0;v<r.length;++v){if(m.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);let w=!!(m.shrinkAxisMask&1<<v),I=r[v];if(I===-1){h.push(w?1:-1);continue}let E=[m.beginMask&1<<v,m.endMask&1<<v],_=[m.strides[v]>0?0:-1,m.strides[v]>0?I:I-1];if(w&&m.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&m.strides[v]===1;let D=!!(m.beginMask&1<<v&&m.endMask&1<<v);if(m.beginValid&&m.endValid){if(w){let U=m.begin[v]<0?I+m.begin[v]:m.begin[v];if(m.begin[v]=U,m.end[v]=m.begin[v]+1,U<0||U>=I)throw Error(`slice index ${m.begin[v]} of dimension ${v} out of bounds.`)}else m.begin[v]=bw(m.begin[v],0,m.strides[v],I,E,_),m.end[v]=bw(m.end[v],1,m.strides[v],I,E,_);let V=m.strides[v]===1&&m.begin[v]===0&&m.end[v]===I;f=f&&V,d=d&&(v===0&&m.strides[v]===1||V)}else f=f&&m.strides[v]===1&&D,d=d&&(v===0&&m.strides[v]===1||D);let M,P=!1;if(m.beginValid&&m.endValid?(M=m.end[v]-m.begin[v],P=!0):w?(M=1,P=!0):D&&I>=0&&(m.strides[v]<0?M=-I:M=I,P=!0),P){let V;M===0||M<0!=m.strides[v]<0?V=0:V=Math.trunc(M/m.strides[v])+(M%m.strides[v]!==0?1:0),h.push(V)}else h.push(-1)}for(let v=0;v<m.finalShapeGatherIndices.length;++v){let w=m.finalShapeGatherIndices[v];w>=0?x.push(h[w]):w===q5&&x.push(1)}return{finalShapeSparse:x.filter((v,w)=>m.finalShapeGatherIndices[w]!==q5),finalShape:x,isIdentity:f,sliceDim0:d,isSimpleSlice:g,begin:m.begin,end:m.end,strides:m.strides}}function PW(r,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=r.begin!=null,t.endValid=r.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let n=0;n<r.dims;n++)if(1<<n&r.ellipsisMask){let o=Math.min(t.dims-(r.dims-n)+1+r.numAddAxisAfterEllipsis,t.dims);for(;e<o;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=n}else if(1<<n&r.newAxisMask)t.finalShapeGatherIndices.push(q5),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);r.begin!=null&&(t.begin[e]=r.begin[n]),r.end!=null&&(t.end[e]=r.end[n]),t.strides[e]=r.strides[n],r.beginMask&1<<n&&(t.beginMask|=1<<e),r.endMask&1<<n&&(t.endMask|=1<<e),r.shrinkAxisMask&1<<n?(t.finalShapeGatherIndices.push(EW),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(n)),t.inputShapeGatherIndicesSparse[e]=n,e++}}function bw(r,t,e,n,o,s){if(o[t])return e>0?s[t]:s[t+1&1];{let i=r<0?n+r:r;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var O3=class{static sgd(t){return new T0(t)}static momentum(t,e,n=!1){return new su(t,e,n)}static rmsprop(t,e=.9,n=0,o=null,s=!1){return new iu(t,e,n,o,s)}static adam(t=.001,e=.9,n=.999,o=null){return new nu(t,e,n,o)}static adadelta(t=.001,e=.95,n=null){return new tu(t,e,n)}static adamax(t=.002,e=.9,n=.999,o=null,s=0){return new ou(t,e,n,o,s)}static adagrad(t,e=.1){return new ru(t,e)}};var Rl=O3;var LW=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:r=>r();function Np(){return new Promise(r=>LW(()=>r()))}var N={};ft(N,{ERF_A1:()=>QW,ERF_A2:()=>eq,ERF_A3:()=>tq,ERF_A4:()=>rq,ERF_A5:()=>nq,ERF_P:()=>JW,PARALLELIZE_THRESHOLD:()=>M3,RowPartitionType:()=>Di,SELU_SCALE:()=>j5,SELU_SCALEALPHA:()=>K5,applyActivation:()=>_l,assertAndGetBroadcastShape:()=>Re,assertAxesAreInnerMostDims:()=>LB,assertParamsConsistent:()=>zW,assignToTypedArray:()=>cq,axesAreInnerMostDims:()=>w5,calculateShapes:()=>WV,checkEinsumDimSizes:()=>hq,checkPadOnDimRoundingMode:()=>ht,combineLocations:()=>Ib,combineRaggedTensorToTensorShapes:()=>GW,complexWithEvenIndex:()=>iq,complexWithOddIndex:()=>aq,computeConv2DInfo:()=>bl,computeConv3DInfo:()=>gb,computeDefaultPad:()=>v5,computeDilation2DInfo:()=>Pz,computeOptimalWindowSize:()=>qW,computeOutAndReduceShapes:()=>T5,computeOutShape:()=>BW,computePool2DInfo:()=>b5,computePool3DInfo:()=>Lz,convertConv2DDataFormat:()=>xb,decodeEinsumEquation:()=>fq,eitherStridesOrDilationsAreOne:()=>Ar,expandShapeToKeepDim:()=>ao,exponent:()=>pq,exponents:()=>uq,fromStringArrayToUint8:()=>Mq,fromUint8ToStringArray:()=>Oq,getAxesPermutation:()=>C5,getBroadcastDims:()=>Cb,getComplexWithIndex:()=>lq,getEinsumComputePath:()=>gq,getEinsumPermutation:()=>dq,getFusedBiasGradient:()=>El,getFusedDyActivation:()=>Al,getImageCenter:()=>HW,getInnerMostAxes:()=>zB,getPermuted:()=>jW,getRaggedRank:()=>UW,getReductionAxes:()=>ut,getReshaped:()=>KW,getReshapedPermuted:()=>XW,getRowPartitionTypesHelper:()=>VW,getSliceBeginCoords:()=>YW,getSliceSize:()=>ZW,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>vq,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>wq,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Tq,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Iq,getSparseReshapeInputOutputMismatchErrorMessage:()=>kq,getSparseReshapeInputOutputMultipleErrorMessage:()=>Nq,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Cq,getSparseReshapeNegativeOutputDimErrorMessage:()=>Sq,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Dq,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Aq,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Eq,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>_q,getUndoAxesPermutation:()=>yp,isIdentityPermutation:()=>xq,log:()=>AL,mergeRealAndImagArrays:()=>oq,prepareAndValidate:()=>AW,prepareSplitSize:()=>bq,segment_util:()=>Y5,shouldFuse:()=>Dl,slice_util:()=>Cr,splitRealAndImagArrays:()=>sq,stridesOrDilationsArePositive:()=>as,tupleValuesAreOne:()=>Kn,upcastType:()=>or,validateDefaultValueShape:()=>WW,validateInput:()=>Tp,validateUpdateShape:()=>gv,warn:()=>os});function zW(r,t){let e=r[0].length;r.forEach((o,s)=>{A(o.length===e,()=>`Error in concat${e}D: rank of tensors[${s}] must be the same as the rank of the rest (${e})`)}),A(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);let n=r[0];r.forEach((o,s)=>{for(let i=0;i<e;i++)A(i===t||o[i]===n[i],()=>`Error in concat${e}D: Shape of tensors[${s}] (${o}) does not match the shape of the rest (${n}) along the non-concatenated axis ${s}.`)})}function BW(r,t){let e=r[0].slice();for(let n=1;n<r.length;n++)e[t]+=r[n][t];return e}var Di=function(r){return r[r.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",r[r.VALUE_ROWIDS=1]="VALUE_ROWIDS",r[r.ROW_LENGTHS=2]="ROW_LENGTHS",r[r.ROW_SPLITS=3]="ROW_SPLITS",r[r.ROW_LIMITS=4]="ROW_LIMITS",r[r.ROW_STARTS=5]="ROW_STARTS",r}(Di||{});function GW(r,t,e){let n=new Array;if(e==null&&t==null)return n;if(t==null)for(;n.length<r+e.length;)n.push(-1);else n=t.slice();if(e==null)return n;if(r+e.length!==n.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${r+e.length}, but shape.rank = ${n.length}`);for(let o=1;o<e.length;++o){let s=e[o],i=n[n.length-e.length+o],a=n[i];if(s>=0)if(a>=0){if(a!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+r}] = ${s} but shape[${o+r}] = ${a}`)}else n[i]=s}return n}function VW(r){let t={FIRST_DIM_SIZE:Di.FIRST_DIM_SIZE,VALUE_ROWIDS:Di.VALUE_ROWIDS,ROW_LENGTHS:Di.ROW_LENGTHS,ROW_SPLITS:Di.ROW_SPLITS,ROW_LIMITS:Di.ROW_LIMITS,ROW_STARTS:Di.ROW_STARTS},e=[];for(let n of r)if(n in t)e.push(t[n]);else break;return e}function UW(r){return r.length===0?0:r[0]===Di.FIRST_DIM_SIZE?r.length-1:r.length}function WW(r,t){if(r==null||t==null)return;let e=r.length,n=t.length;if(e>=n)throw new Error(`defaultValue.shape=${r} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${n})`);for(let o=0;o<Math.min(e,n-1);++o){let s=r[o],i=t[o+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${r}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-r.length}] = ${s} but ragged tensor input.flatValues.shape[${o-r.length}] = ${i}`)}}var M3=30;function qW(r){return r<=M3?r:d1(r,Math.floor(Math.sqrt(r)))}function HW(r,t,e){let n=e*(typeof r=="number"?r:r[0]),o=t*(typeof r=="number"?r:r[1]);return[n,o]}function KW(r,t,e,n=!0){let o=[];if(n)o=o.concat(t.slice(0)),o.push(r[0]/e),o=o.concat(r.slice(1));else{o=o.concat(r[0]);let s=t.length;for(let i=0;i<s;++i)o=o.concat([r[i+1]/t[i],t[i]]);o=o.concat(r.slice(s+1))}return o}function jW(r,t,e=!0){let n=[];if(e){n.push(t);for(let o=t+1;o<r;++o)o<=2*t?(n.push(o),n.push(o-(t+1))):n.push(o)}else{let o=[],s=[];for(let i=1;i<r;++i)i>=t*2+1||i%2===1?s.push(i):o.push(i);n.push(...o),n.push(0),n.push(...s)}return n}function XW(r,t,e,n=!0){let o=[];n?o.push(r[0]/e):o.push(r[0]*e);for(let s=1;s<r.length;++s)s<=t.length?n?o.push(t[s-1]*r[s]):o.push(r[s]/t[s-1]):o.push(r[s]);return o}function YW(r,t){let e=[0];for(let n=0;n<t;++n)e.push(r[n][0]);return e}function ZW(r,t,e){let n=r.slice(0,1);for(let o=0;o<e;++o)n.push(r[o+1]-t[o][0]-t[o][1]);return n}var K5=1.7580993408473768,j5=1.0507009873554805;var JW=.3275911,QW=.254829592,eq=-.284496736,tq=1.421413741,rq=-1.453152027,nq=1.061405429;function oq(r,t){if(r.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${t.length}.`);let e=new Float32Array(r.length*2);for(let n=0;n<e.length;n+=2)e[n]=r[n/2],e[n+1]=t[n/2];return e}function sq(r){let t=new Float32Array(r.length/2),e=new Float32Array(r.length/2);for(let n=0;n<r.length;n+=2)t[n/2]=r[n],e[n/2]=r[n+1];return{real:t,imag:e}}function iq(r){let t=Math.ceil(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=0;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function aq(r){let t=Math.floor(r.length/4),e=new Float32Array(t),n=new Float32Array(t);for(let o=2;o<r.length;o+=4)e[Math.floor(o/4)]=r[o],n[Math.floor(o/4)]=r[o+1];return{real:e,imag:n}}function lq(r,t){let e=r[t*2],n=r[t*2+1];return{real:e,imag:n}}function cq(r,t,e,n){r[n*2]=t,r[n*2+1]=e}function uq(r,t){let e=new Float32Array(r/2),n=new Float32Array(r/2);for(let o=0;o<Math.ceil(r/2);o++){let s=(t?2:-2)*Math.PI*(o/r);e[o]=Math.cos(s),n[o]=Math.sin(s)}return{real:e,imag:n}}function pq(r,t,e){let n=(e?2:-2)*Math.PI*(r/t),o=Math.cos(n),s=Math.sin(n);return{real:o,imag:s}}var X5="->",mq=/->/g,Aw=",",Ew="...";function fq(r,t){r=r.replace(/\s/g,"");let e=(r.length-r.replace(mq,"").length)/X5.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${X5}").`);let[n,o]=r.split(X5);A(n.indexOf(Ew)===-1,()=>`The ellipsis notation ("${Ew}") is not supported yet.`);let s=n.split(Aw),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let a=[];for(let m=0;m<o.length;++m){let f=o[m];if(!s.some(d=>d.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let m=0;m<n.length;++m){let f=n[m];a.indexOf(f)===-1&&f!==Aw&&a.push(f)}let l=new Array(s.length);for(let m=0;m<i;++m){if(new Set(s[m].split("")).size!==s[m].length)throw new Error(`Found duplicate axes in input component ${s[m]}. Support for duplicate axes in input is not implemented yet.`);l[m]=[];for(let f=0;f<s[m].length;++f)l[m].push(a.indexOf(s[m][f]))}let u=a.length,c=o.length,p=[];for(let m=c;m<u;++m)p.push(m);return{allDims:a,summedDims:p,idDims:l}}function dq(r,t){let e=new Array(r);e.fill(-1);for(let o=0;o<t.length;++o)e[t[o]]=o;let n=[];for(let o=0;o<r;++o)e[o]===-1&&n.push(o);return e=e.filter(o=>o!==-1),{permutationIndices:e,expandDims:n}}function hq(r,t,e){let n=new Array(r);for(let o=0;o<e.length;++o){let s=e[o].shape;for(let i=0;i<t[o].length;++i)n[t[o][i]]===void 0?n[t[o][i]]=s[i]:A(n[t[o][i]]===s[i],()=>`Expected dimension ${n[t[o][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function gq(r,t){let e=r,n=[],o=0;r.length===0&&e.push(-1),o=r.length+1;for(let i=0;i<o;++i)n.push([]);let s=[];for(let i=0;i<e.length;++i){let a=e[i],l=yq(t,a);for(let u of l)s.indexOf(u)===-1&&(n[i].push(u),s.push(u))}return{path:e,steps:n}}function xq(r){return r.every((t,e)=>t===e)}function yq(r,t){let e=[];for(let n=0;n<r.length;++n)(r[n].length===0||r[n].indexOf(t)!==-1||t===-1)&&e.push(n);return e}function bq(r,t,e=0){let n=[];if(typeof t=="number")A(r.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),n=new Array(t).fill(r.shape[e]/t);else{let o=t.reduce((i,a)=>(a===-1&&(i+=1),i),0);A(o<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((a,l)=>l>0?a+l:a);t[s]=r.shape[e]-i}A(r.shape[e]===t.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),n=t}return n}function vq(r){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${r}`}function wq(r,t){return`indices(${r}, 0) is invalid: ${t} < 0`}function Tq(r,t,e){return`indices(${r}, 0) is invalid: ${t} >= ${e}`}function Cq(r,t){return`only one output dimension may be -1, not both ${r} and ${t}`}function Sq(r,t){return`size ${r} must be non-negative, not ${t}`}function Iq(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Nq(r,t){let e=ze(r),n=ze(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${n}. inputShape=${r} outputShape= ${t}`}function kq(r,t){let e=ze(r),n=ze(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${n}. inputShape=${r} outputShape=${t}`}function Aq(){return"segment ids must be >= 0"}function Eq(){return"segment ids are not increasing"}function _q(r,t){return`Segment id ${r} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Dq(r,t,e){return`Bad: indices[${r}] == ${t} out of range [0, ${e})`}var Y5={};ft(Y5,{collectGatherOpShapeInfo:()=>Fq,computeOutShape:()=>$q,segOpComputeOptimalWindowSize:()=>Rq});function Rq(r,t){let e=!1,n;for(r<=M3?(n=r,e=!0):n=d1(r,Math.floor(Math.sqrt(r)));!e;)n>t||n===r?e=!0:n=d1(r,n+1);return n}function $q(r,t,e){let n=[],o=r.length;for(let s=0;s<o;s++)s!==t?n.push(r[s]):n.push(e);return n}function Fq(r,t,e,n){let o=t.shape.length,s=r.shape.length;if(n!==0&&(n<-o||n>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${n}`);if(n<0&&(n+=o),n>s)throw new Error(`batchDims (${n}) must be less than rank(x) (
    ${s}).`);if(e<n)throw new Error(`batchDims (${n}) must be less than or equal to axis (${e}).`);for(let p=0;p<n;++p)if(r.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${r.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=r.shape[e],a=[],l=1,u=1,c=1;for(let p=0;p<n;++p)a.push(r.shape[p]),l*=r.shape[p];for(let p=n;p<e;p++)a.push(r.shape[p]),u*=r.shape[p];for(let p=n;p<o;p++)a.push(t.shape[p]);for(let p=e+1;p<s;p++)a.push(r.shape[p]),c*=r.shape[p];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:a}}function Oq(r){try{return r.map(t=>Sc(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Mq(r){return r.map(t=>Cc(t))}var zr={};ft(zr,{nonMaxSuppressionV3Impl:()=>N3,nonMaxSuppressionV4Impl:()=>k3,nonMaxSuppressionV5Impl:()=>A3,whereImpl:()=>v3});lw();var P3={kernelName:la,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,lo(J(e,"float32"),-1))}}};var _w={kernelName:_s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Oe(J(e,"float32")),o=lt(oe(ce(1),n));return Le(se(r,o))}}}};var Dw={kernelName:Ds,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=lt(oe(Oe(J(e,"float32")),1));return se(r,n)}}}};var Rw={kernelName:ko,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=r,l=ut(e.shape,o);return l.length>0&&(a=ue(a,l)),$(a,e.shape)},b:()=>{let a=r,l=ut(n.shape,o);return l.length>0&&(a=ue(a,l)),$(a,n.shape)}}}};var $w={kernelName:ca,saveAllInputs:!0,gradFunc:(r,t)=>{let e={};return t.forEach((n,o)=>{e[o]=()=>r.clone()}),e}};var Fw={kernelName:ua,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ve(e)}}};var Ow={kernelName:pa,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>ve(e)}}};var Mw={kernelName:Rs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,lt(oe(ce(1),Oe(J(e,"float32")))))}}};var Pw={kernelName:$s,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=lt(H(ce(1),Oe(J(e,"float32"))));return se(r,n)}}}};var Lw={kernelName:Ms,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=H(Oe(e),Oe(n)),l=R(r,se(n,a)),u=ut(e.shape,o);return u.length>0&&(l=ue(l,u)),$(l,e.shape)},b:()=>{let a=H(Oe(e),Oe(n)),l=Le(R(r,se(e,a))),u=ut(n.shape,o);return u.length>0&&(l=ue(l,u)),$(l,n.shape)}}}};var zw={kernelName:Fs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,H(Oe(J(e,"float32")),1))}}};var Bw={kernelName:Os,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,oe(ce(1),Oe(J(e,"float32"))))}}};function Pq(r,t,e,n,o,s){let i=C(r,"dy","avgPool3dGrad"),a=C(t,"input","avgPool3dGrad"),l=i,u=a,c=!1;a.rank===4&&(c=!0,l=$(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),A(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),A(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),ht("avgPool3dGrad",o,s);let p={dy:l,input:u},m={filterSize:e,strides:n,pad:o,dimRoundingMode:s},f=k.runKernel(b1,p,m);return c?$(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}var Gw=S({avgPool3dGrad_:Pq});var Vw={kernelName:fa,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:i,dimRoundingMode:a}=e;return{x:()=>Gw(r,n,o,s,i,a)}}};function Lq(r,t,e,n,o){let s=C(r,"dy","avgPoolGrad"),i=C(t,"input","avgPoolGrad");A(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let a=i,l=s,u=!1;i.rank===3&&(u=!0,a=$(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=$(s,[1,s.shape[0],s.shape[1],s.shape[2]])),A(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),A(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);let c={dy:l,input:a},p={filterSize:e,strides:n,pad:o},m=k.runKernel(y1,c,p);return u?$(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Uw=S({avgPoolGrad_:Lq});var Ww={kernelName:ma,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{filterSize:o,strides:s,pad:i}=e;return{x:()=>Uw(r,n,o,s,i)}}};var qw={kernelName:da,inputsToSave:["a","b"],gradFunc:(r,t,e)=>{let[n,o]=t,{transposeA:s,transposeB:i}=e;return!s&&!i?{a:()=>Me(r,o,!1,!0),b:()=>Me(n,r,!0,!1)}:!s&&i?{a:()=>Me(r,o,!1,!1),b:()=>Me(r,n,!0,!1)}:s&&!i?{a:()=>Me(o,r,!1,!0),b:()=>Me(n,r,!1,!1)}:{a:()=>Me(o,r,!0,!0),b:()=>Me(r,n,!0,!0)}}};var Hw={kernelName:ha,gradFunc:(r,t,e)=>{let{blockShape:n,crops:o}=e;return{x:()=>g0(r,n,o)}}};var Kw={kernelName:iy,gradFunc:(r,t,e)=>{let n=e,o=n.inputShape,s=n.shape,i=Array.from(s);for(let l=o.length-1;l>=0;l--)if(o[l]===s[l])i[l]=1;else if(o[l]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${s}].`);let a=[];for(let l=0;l<i.length;l++)i[l]>1&&a.push(l);return{x:()=>ue(r,a,!0)}}};var jw={kernelName:es,gradFunc:r=>({x:()=>r.clone()})};var Xw={kernelName:Ps,gradFunc:r=>({x:()=>ve(r)})};var Yw={kernelName:Ls,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{clipValueMin:o,clipValueMax:s}=e;return{x:()=>gt(Mr(en(n,o),_n(n,s)),r,ve(r))}}};var Zw={kernelName:ga,inputsToSave:["x"],gradFunc:P3.gradFunc};var Jw={kernelName:xa,saveAllInputs:!0,gradFunc:(r,t,e)=>{let n=t.map(l=>l.shape),{axis:o}=e,s=cr(o,t[0].shape)[0],i=n.map(l=>l[s]);return pr(r,i,s).map(l=>()=>l)}};var Qw={kernelName:ya,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{dilations:s,strides:i,pad:a,dataFormat:l}=e;return A(Kn(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Fc(n.shape,r,o,i,a,l),filter:()=>eu(n,r,o.shape,i,a,l)}}};var eT={kernelName:ba,inputsToSave:["dy","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,{strides:s,pad:i,dataFormat:a,dimRoundingMode:l}=e;return{dy:()=>gn(r,o,s,i,a,1,l),filter:()=>eu(r,n,o.shape,s,i,a,l)}}};function zq(r,t,e,n,o){let s=r;r.rank===4&&(s=$(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let i=t;i.rank===4&&(i=$(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),A(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),A(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),A(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),A(s.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${e[3]}.`),A(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);let a={x:s,dy:i},l={strides:n,pad:o,filterShape:e};return k.runKernel(S1,a,l)}var tT=S({conv3DBackpropFilter_:zq});var rT={kernelName:va,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s}=e;A(Kn(n),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${n}'`);let[i,a]=t;return{x:()=>Um(i.shape,r,a,o,s),filter:()=>tT(i,r,a.shape,o,s)}}};var nT={kernelName:zs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Le(Hc(J(e,"float32"))),r)}}};var oT={kernelName:Bs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Kc(J(e,"float32")),r)}}};var sT={kernelName:wa,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o,exclusive:s,reverse:i}=e;return{x:()=>{let a=C5([o],n.rank),l=Pc(r,o,s,!i);return a!=null&&(l=Pe(l,a)),l}}}};var iT={kernelName:Ta,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let{dilations:n,strides:o,pad:s,dimRoundingMode:i}=e,a=n??[1,1];A(Kn(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[l,u]=t;return A(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),A(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),A(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),A(Ar(o,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${a}'.`),ht("depthwiseConv2d",s,i),{x:()=>C3(l.shape,r,u,o,s,a,i),filter:()=>T3(l,r,u.shape,o,s,a,i)}}};var aT={kernelName:Ca,inputsToSave:["x","filter"],gradFunc:(r,t,e)=>{let[n,o]=t,s={x:n,filter:o,dy:r},i={x:n,filter:o,dy:r};return{x:()=>k.runKernel(ap,s,e),filter:()=>k.runKernel(lp,i,e)}}};var lT={kernelName:Vs,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t,n={dy:r,y:e};return{x:()=>k.runKernel(F1,n)}}};var cT={kernelName:Us,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=R(Gt(Le(Oe(e))),2/Math.sqrt(Math.PI));return{x:()=>R(r,n)}}};var uT={kernelName:Ws,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,e)}}};var pT={kernelName:Sa,inputsToSave:["input"],gradFunc:(r,t)=>{let[e]=t;return{input:()=>$(r,e.shape)}}};var mT={kernelName:qs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Gt(e))}}};var fT={kernelName:Hs,gradFunc:r=>({x:()=>ve(r)})};var dT={kernelName:Ks,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=se(r,J(n,"float32")),l=ut(e.shape,o);return l.length>0?$(ue(a,l),e.shape):a},b:()=>{let a=R(r,J(e,"float32")),l=ut(n.shape,o);l.length>0&&(a=$(ue(a,l),n.shape));let u=Oe(n);return Le(se(a,J(u,"float32")))}}}};var hT={kernelName:Ia,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,t,e)=>{let{varianceEpsilon:n}=e,[o,s,i,a]=t,l=a??ce(1),u=ut(s.shape,o.shape),c=[];if(s.rank===1){for(let w=0;w<o.shape.length-1;++w)c.push(o.shape[w]);c.push(1)}let p=oe(o,s),m=R(r,l),f=Uc(H(i,ce(n))),d=R(R(R(f,f),f),ce(-.5));return{x:()=>s.rank===1?$(R(R(r,Er($(f,[1,1,1,s.shape[0]]),c)),l),o.shape):$(R(R(r,f),l),o.shape),mean:()=>{let w=R(R(f,ce(-1)),m);return s.rank===1&&(w=ue(w,u)),$(w,s.shape)},variance:()=>{let w=R(R(d,p),m);return s.rank===1&&(w=ue(w,u)),$(w,s.shape)},scale:()=>{let w=R(p,f),I=R(r,w);return s.rank===1&&(I=ue(I,u)),$(I,s.shape)},offset:()=>{let w=r;return s.rank===1&&(w=ue(w,u)),$(w,s.shape)}}}};var yT={kernelName:Na,inputsToSave:["x","indices"],gradFunc:(r,t,e)=>{let[n,o]=t,{axis:s,batchDims:i}=e,a=cr(s,n.shape)[0],l=(u,c,p)=>()=>{let m=u.shape,f=c.size,d=m.slice(0,a),g=d.length,h=m.slice(s,m.length).slice(1),x=h.length,y=gT(0,g),v=gT(g+1,g+1+x),w=xT([d,[f],h]),I=$(p,w),E=$(c,[f]),_=xT([[g],y,v]),D=Pe(I,_),M=Qc(D,E,u.shape[a]),P=yp(_);return M=Pe(M,P),M};if(i===1){let u=n.shape[0],c=n.split(u,0);return{x:()=>_t(c.map((f,d)=>l(f,o.slice(d,1),r.slice(d,1))())).reshape(n.shape),indices:()=>o}}else return{x:l(n,o,r),indices:()=>o}}};function gT(r,t){let e=[];for(let n=r;n<t;++n)e.push(n);return e}function xT(r){let t=[];for(let e=0;e<r.length;++e)for(let n=0;n<r[e].length;++n)t.push(r[e][n]);return t}var bT={kernelName:js,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>ve(e),b:()=>ve(n)}}};var vT={kernelName:ts,gradFunc:r=>({x:()=>J(r,"float32")})};var wT={kernelName:Xs,gradFunc:r=>({x:()=>ve(r)})};var TT={kernelName:Ys,gradFunc:r=>({x:()=>ve(r)})};var CT={kernelName:Zs,gradFunc:r=>({x:()=>ve(r)})};var ST={kernelName:ka,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{alpha:o}=e,s=Et(n,0);return{x:()=>gt(s,r,R(r,o))}}};var IT={kernelName:Qs,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,H(e,1))}}};var NT={kernelName:Js,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,J(e,"float32"))}}};var kT={kernelName:ly,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e;return{logits:()=>{let i=Gt(n);return oe(r,R(ue(r,o,!0),i))}}}};function Bq(r,t,e,n=5,o=1,s=1,i=.5){let a={x:r,y:t,dy:e},l={depthRadius:n,bias:o,alpha:s,beta:i};return k.runKernel(V1,a,l)}var AT=S({localResponseNormalizationBackprop_:Bq});var ET={kernelName:Aa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{depthRadius:s,bias:i,alpha:a,beta:l}=e;return{x:()=>AT(n,o,r,s,i,a,l)}}};function L3(r,t,e,n){return t.rank<e.rank&&(t=$(t,ao(t.shape,n))),r.rank<e.rank&&(r=$(r,ao(r.shape,n))),{x:()=>R(r,J(qr(e,t),r.dtype))}}var Z5={kernelName:Ea,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{reductionIndices:o}=n,s=t[0],i=t[1],a=cr(o,s.shape),l=L3(r,i,s,a);return{x:()=>l.x()}}};var _T={kernelName:ei,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>R(r,J(en(e,n),"float32")),b:()=>R(r,J(ki(e,n),"float32"))}}};function Gq(r,t,e,n,o,s,i){let a=C(r,"dy","maxPool3dGrad"),l=C(t,"input","maxPool3dGrad"),u=C(e,"output","maxPool3dGrad"),c=a,p=l,m=u,f=!1;l.rank===4&&(f=!0,c=$(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),p=$(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),m=$(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),A(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),A(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),A(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),ht("maxPool3dGrad",s,i);let d={dy:c,input:p,output:m},g={filterSize:n,strides:o,pad:s,dimRoundingMode:i},h=k.runKernel(W1,d,g);return f?$(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var DT=S({maxPool3dGrad_:Gq});var RT={kernelName:Da,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=e;return{x:()=>DT(r,n,o,s,i,a,l)}}};function Vq(r,t,e,n,o,s,i){let a=C(r,"dy","maxPoolGrad"),l=C(t,"input","maxPoolGrad"),u=C(e,"output","maxPoolGrad");A(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),A(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),A(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ht("maxPoolGrad",s,i);let c={dy:a,input:l,output:u},p={filterSize:n,strides:o,pad:s,dimRoundingMode:i};return k.runKernel(U1,c,p)}var $T=S({maxPoolGrad_:Vq});var FT={kernelName:_a,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n,o]=t,{filterSize:s,strides:i,pad:a}=e;return{x:()=>$T(r,n,o,s,i,a)}}};var OT={kernelName:Ra,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=cr(o,n.shape),a=T5(n.shape,s)[1],l=ze(a);return{x:()=>{let c=n.shape.slice();s.forEach(f=>{c[f]=1});let p=$(r,c);return se(R(p,Qt(n.shape,"float32")),l)}}}};var MT={kernelName:$a,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,t,e)=>{let n=e,{axis:o}=n,[s,i]=t,a=cr(o,s.shape),l=L3(r,i,s,a);return{x:()=>l.x()}}};var PT={kernelName:ti,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t;return{a:()=>R(r,J(_n(e,n),"float32")),b:()=>R(r,J(Et(e,n),"float32"))}}};var LT={kernelName:Fa,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(i=>i[0]);return{x:()=>De(r,s,n.shape)}}};var zT={kernelName:ri,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=ut(e.shape,o);return a.length>0?$(ue(r,a),e.shape):r},b:()=>{let a=R(r,Le(ms(se(e,n)))),l=ut(n.shape,o);return l.length>0?$(ue(a,l),n.shape):a}}}};var BT={kernelName:ni,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=R(r,J(n,"float32")),l=ut(e.shape,o);return l.length>0?$(ue(a,l),e.shape):a},b:()=>{let a=R(r,J(e,"float32")),l=ut(n.shape,o);return l.length>0?$(ue(a,l),n.shape):a}}}};var GT={kernelName:Oa,gradFunc:r=>({x:()=>Le(r)})};var VT={kernelName:Pa,inputsToSave:["indices"],gradFunc:(r,t)=>{let e=t[0];return{indices:()=>yt(e.shape,"float32")}}};var UT={kernelName:Ma,gradFunc:r=>({x:()=>ve(r)})};var WT={kernelName:La,saveAllInputs:!0,gradFunc:(r,t,e)=>{let{axis:n}=e;return mr(r,n).map(s=>()=>s)}};var J5={kernelName:za,inputsToSave:["x"],gradFunc:(r,t,e)=>{let n=t[0],{paddings:o}=e,s=o.map(i=>i[0]);return{x:()=>De(r,s,n.shape)}}};var qT={kernelName:oi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,t)=>{let[e,n,o]=t,s=e,i=n,a=Re(s.shape,i.shape);return{a:()=>{let c=J(i,"float32"),p=R(r,R(c,Or(s,oe(c,ce(1))))),m=ut(s.shape,a);return m.length>0&&(p=ue(p,m)),$(p,s.shape)},b:()=>{let c=Et(s,0),p=gt(c,Tr(s),ve(s)),m=R(r,R(o,p)),f=ut(i.shape,a);return f.length>0&&(m=ue(m,f)),$(m,i.shape)}}}};var HT={kernelName:Ba,inputsToSave:["x","alpha"],gradFunc:(r,t)=>{let[e,n]=t,o=Et(e,0);return{x:()=>gt(o,r,R(r,n)),alpha:()=>{let s=gt(o,ve(r),R(r,e)),i=ut(n.shape,r.shape);return i.length>0&&(s=ue(s,i)),$(s,n.shape)}}}};function Uq(r,t,e){let n=r.shape.slice();n[e]=1;let o=$(t,n),s=vl(r,e,!0,!1),i=vl(r,e,!0,!0),a=R(s,i);return R(o,a)}function Wq(r,t,e){let n=r.shape.length,o=n-e.length,s=N.getAxesPermutation(e,n),i=r;s!=null&&(i=Pe(r,s));let a=i.shape.slice(),u=a.splice(n-e.length,e.length).reduce((m,f)=>m*f,1);a.push(u);let c=i.reshape(a),p=Uq(c,t,o);if(p=p.reshape(i.shape),s!=null){let m=N.getUndoAxesPermutation(s);p=Pe(p,m)}return p}var KT={kernelName:Ga,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{axis:o}=e,s=[];return o==null?s=n.shape.map((i,a)=>a):typeof o=="number"?s=[o]:s=o,{x:()=>Wq(n,r,s)}}};var jT={kernelName:Gs,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=se(r,J(n,"float32")),l=ut(e.shape,o);return l.length>0?$(ue(a,l),e.shape):a},b:()=>{let a=R(r,J(e,"float32")),l=ut(n.shape,o);l.length>0&&(a=$(ue(a,l),n.shape));let u=Oe(n);return Le(se(a,J(u,"float32")))}}}};var XT={kernelName:si,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,Le(Oe(e)))}}};var YT={kernelName:ai,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t,n=R(_n(e,6),lo(e));return{x:()=>R(r,J(n,"float32"))}}};var ZT={kernelName:ii,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,J(lo(e),"float32"))}}};var JT={kernelName:Va,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>$(r,e.shape)}}};var QT={kernelName:Wa,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>k.runKernel(rc,o,e)}}};var eC={kernelName:Ua,inputsToSave:["images"],gradFunc:(r,t,e)=>{let[n]=t,o={dy:r,images:n};return{images:()=>k.runKernel(tc,o,e)}}};var tC={kernelName:qa,gradFunc:(r,t,e)=>{let{dims:n}=e,o=cr(n,r.shape);return{x:()=>ur(r,o)}}};var rC={kernelName:li,gradFunc:r=>({x:()=>ve(r)})};var nC={kernelName:ci,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>Le(se(r,R(Or(e,1.5),2)))}}};var oC={kernelName:Ha,inputsToSave:["condition"],gradFunc:(r,t)=>{let[e]=t;return{condition:()=>J(ve(e),"float32"),t:()=>R(r,J(e,r.dtype)),e:()=>R(r,J(d0(e),r.dtype))}}};var sC={kernelName:ui,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>{let n=Et(e,ce(0)),o=ce(K5),s=ce(j5),i=R(r,s),a=R(R(r,o),Gt(J(e,"float32")));return gt(n,i,a)}}}};var iC={kernelName:di,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,R(e,oe(ce(1),e)))}}};var aC={kernelName:fi,gradFunc:r=>({x:()=>ve(r)})};var lC={kernelName:pi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(l0(J(e,"float32")),r)}}};var cC={kernelName:mi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(Mc(J(e,"float32")),r)}}};var uC={kernelName:Ka,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{begin:o,size:s}=e,i=n.shape,[a,l]=H5(n,o,s),u=[];for(let c=0;c<r.rank;c++)u.push([a[c],i[c]-a[c]-l[c]]);return{x:()=>tn(r,u)}}};var pC={kernelName:Za,outputsToSave:[!0],gradFunc:(r,t,e)=>{let[n]=t,{dim:o}=e,s=!0,i=R(r,n);return{logits:()=>oe(i,R(ue(i,[o],s),n))}}};var mC={kernelName:hi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,Wr(e))}}};var Q5={kernelName:Xa,gradFunc:(r,t,e)=>{let{blockShape:n,paddings:o}=e;return{x:()=>a0(r,n,o)}}};var e6={kernelName:Ya,gradFunc:(r,t,e)=>{let{axis:n}=e;return{x:()=>Ye(r,n)}}};var fC={kernelName:gi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,R(lt(J(e,"float32")),2))}}};var dC={kernelName:pc,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(r,R(J(e,"float32"),2))}}};var hC={kernelName:xi,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=ce(2);return{a:()=>R(r,R(o,oe(e,n))),b:()=>R(r,R(o,oe(n,e)))}}};var gC={kernelName:wi,gradFunc:r=>({x:()=>ve(r)})};var xC={kernelName:yi,inputsToSave:["a","b"],gradFunc:(r,t)=>{let[e,n]=t,o=Re(e.shape,n.shape);return{a:()=>{let a=r,l=ut(e.shape,o);return l.length>0&&(a=ue(a,l)),$(a,e.shape)},b:()=>{let a=r,l=ut(n.shape,o);return l.length>0&&(a=ue(a,l)),$(Le(a),n.shape)}}}};var yC={kernelName:ja,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,o=n.shape.slice(),{axis:s}=e;cr(s,n.shape).forEach(u=>{o[u]=1});let a=$(r,o),l=R(a,Qt(n.shape,"float32"));return{x:()=>l}}};var bC={kernelName:bi,inputsToSave:["x"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>se(r,Oe(l0(e)))}}};var vC={kernelName:vi,outputsToSave:[!0],gradFunc:(r,t)=>{let[e]=t;return{x:()=>R(oe(ce(1),Oe(e)),r)}}};var wC={kernelName:rs,inputsToSave:["x"],gradFunc:(r,t,e)=>{let[n]=t,{reps:o}=e;return{x:()=>{let i=ve(n);if(n.rank===1)for(let a=0;a<o[0];++a)i=H(i,De(r,[a*n.shape[0]],[n.shape[0]]));else if(n.rank===2)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)i=H(i,De(r,[a*n.shape[0],l*n.shape[1]],[n.shape[0],n.shape[1]]));else if(n.rank===3)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)i=H(i,De(r,[a*n.shape[0],l*n.shape[1],u*n.shape[2]],[n.shape[0],n.shape[1],n.shape[2]]));else if(n.rank===4)for(let a=0;a<o[0];++a)for(let l=0;l<o[1];++l)for(let u=0;u<o[2];++u)for(let c=0;c<o[3];++c)i=H(i,De(r,[a*n.shape[0],l*n.shape[1],u*n.shape[2],c*n.shape[3]],[n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${n.rank} tensors yet.`);return i}}}};var TC={kernelName:ns,gradFunc:(r,t,e)=>{let n=e,{perm:o}=n,s=yp(o);return{x:()=>Pe(r,s)}}};var CC={kernelName:Ja,gradFunc:(r,t,e)=>{let n=e,{axis:o}=n;return{value:()=>_t(r,o)}}};var SC={kernelName:Qa,inputsToSave:["segmentIds"],gradFunc:(r,t)=>{let[e]=t;return{x:()=>qq(r,e)}}};function qq(r,t){let e=yn(t,ve(t)),n=fs(r,e),o=en(t,ce(0,"int32")),s=n.rank-o.rank;for(let a=0;a<s;++a)o=Wt(o,a+1);o=Mr(o,Qt(n.shape,"bool"));let i=ve(n);return gt(o,n,i)}var IC={kernelName:e0,gradFunc:r=>({x:()=>ve(r)})};var Hq=[P3,_w,Dw,Rw,$w,Fw,Ow,Mw,Pw,Lw,zw,Bw,Vw,Ww,qw,Hw,Kw,jw,Xw,Yw,Zw,Jw,eT,Qw,rT,nT,oT,sT,iT,aT,jT,lT,cT,uT,pT,mT,dT,fT,hT,yT,bT,vT,wT,TT,CT,ST,IT,NT,kT,ET,Z5,Z5,_T,RT,FT,OT,MT,PT,LT,zT,BT,GT,VT,UT,WT,J5,J5,qT,HT,KT,XT,YT,ZT,JT,QT,eC,tC,rC,nC,oC,sC,iC,aC,lC,cC,uC,pC,mC,Q5,Q5,e6,e6,fC,hC,dC,gC,xC,yC,bC,vC,wC,TC,CC,SC,IC];for(let r of Hq)py(r);F().prototype.abs=function(){return this.throwIfDisposed(),wt(this)};F().prototype.acos=function(){return this.throwIfDisposed(),Sm(this)};F().prototype.acosh=function(){return this.throwIfDisposed(),Im(this)};F().prototype.add=function(r){return this.throwIfDisposed(),H(this,r)};F().prototype.all=function(r,t){return this.throwIfDisposed(),Dc(this,r,t)};F().prototype.any=function(r,t){return this.throwIfDisposed(),yl(this,r,t)};F().prototype.argMax=function(r){return this.throwIfDisposed(),is(this,r)};F().prototype.argMin=function(r){return this.throwIfDisposed(),Nm(this,r)};F().prototype.asScalar=function(){return this.throwIfDisposed(),A(this.size===1,()=>"The array must have only 1 element."),$(this,[])};F().prototype.asType=function(r){return this.throwIfDisposed(),J(this,r)};F().prototype.as1D=function(){return this.throwIfDisposed(),$(this,[this.size])};F().prototype.as2D=function(r,t){return this.throwIfDisposed(),$(this,[r,t])};F().prototype.as3D=function(r,t,e){return this.throwIfDisposed(),$(this,[r,t,e])};F().prototype.as4D=function(r,t,e,n){return this.throwIfDisposed(),$(this,[r,t,e,n])};F().prototype.as5D=function(r,t,e,n,o){return this.throwIfDisposed(),$(this,[r,t,e,n,o])};F().prototype.asin=function(){return this.throwIfDisposed(),km(this)};F().prototype.asinh=function(){return this.throwIfDisposed(),Am(this)};F().prototype.atan=function(){return this.throwIfDisposed(),Em(this)};F().prototype.atan2=function(r){return this.throwIfDisposed(),_m(this,r)};F().prototype.atanh=function(){return this.throwIfDisposed(),Dm(this)};F().prototype.avgPool=function(r,t,e,n){return this.throwIfDisposed(),i0(this,r,t,e,n)};F().prototype.batchToSpaceND=function(r,t){return this.throwIfDisposed(),a0(this,r,t)};F().prototype.batchNorm=function(r,t,e,n,o){return this.throwIfDisposed(),ls(this,r,t,e,n,o)};F().prototype.broadcastTo=function(r){return this.throwIfDisposed(),cs(this,r)};F().prototype.cast=function(r){return this.throwIfDisposed(),J(this,r)};F().prototype.ceil=function(){return this.throwIfDisposed(),Pm(this)};F().prototype.clipByValue=function(r,t){return this.throwIfDisposed(),vr(this,r,t)};F().prototype.concat=function(r,t){return this.throwIfDisposed(),r instanceof Ke&&(r=[r]),Ye([this,...r],t)};F().prototype.conv1d=function(r,t,e,n,o,s){return this.throwIfDisposed(),$c(this,r,t,e,n,o,s)};F().prototype.conv2dTranspose=function(r,t,e,n,o){return this.throwIfDisposed(),Oc(this,r,t,e,n,o)};F().prototype.conv2d=function(r,t,e,n,o,s){return this.throwIfDisposed(),gn(this,r,t,e,n,o,s)};F().prototype.cos=function(){return this.throwIfDisposed(),l0(this)};F().prototype.cosh=function(){return this.throwIfDisposed(),Mc(this)};F().prototype.cumprod=function(r,t,e){return this.throwIfDisposed(),vl(this,r,t,e)};F().prototype.cumsum=function(r,t,e){return this.throwIfDisposed(),Pc(this,r,t,e)};F().prototype.depthToSpace=function(r,t){return this.throwIfDisposed(),qm(this,r,t)};F().prototype.depthwiseConv2d=function(r,t,e,n,o,s){return this.throwIfDisposed(),us(this,r,t,e,n,o,s)};F().prototype.dilation2d=function(r,t,e,n,o){return this.throwIfDisposed(),Hm(this,r,t,e,n,o)};F().prototype.divNoNan=function(r){return this.throwIfDisposed(),Km(this,r)};F().prototype.div=function(r){return this.throwIfDisposed(),se(this,r)};F().prototype.dot=function(r){return this.throwIfDisposed(),jm(this,r)};F().prototype.elu=function(){return this.throwIfDisposed(),ps(this)};F().prototype.equal=function(r){return this.throwIfDisposed(),qr(this,r)};F().prototype.erf=function(){return this.throwIfDisposed(),Lc(this)};F().prototype.euclideanNorm=function(r,t){return this.throwIfDisposed(),Xm(this,r,t)};F().prototype.exp=function(){return this.throwIfDisposed(),Gt(this)};F().prototype.expandDims=function(r){return this.throwIfDisposed(),Wt(this,r)};F().prototype.expm1=function(){return this.throwIfDisposed(),Ym(this)};F().prototype.fft=function(){return this.throwIfDisposed(),b0(this)};F().prototype.flatten=function(){return this.throwIfDisposed(),$(this,[this.size])};F().prototype.floor=function(){return this.throwIfDisposed(),ms(this)};F().prototype.floorDiv=function(r){return this.throwIfDisposed(),_c(this,r)};F().prototype.gather=function(r,t,e){return this.throwIfDisposed(),fs(this,r,t,e)};F().prototype.greaterEqual=function(r){return this.throwIfDisposed(),en(this,r)};F().prototype.greater=function(r){return this.throwIfDisposed(),Et(this,r)};F().prototype.ifft=function(){return this.throwIfDisposed(),Ei(this)};F().prototype.irfft=function(){return this.throwIfDisposed(),Yc(this)};F().prototype.isFinite=function(){return this.throwIfDisposed(),Zm(this)};F().prototype.isInf=function(){return this.throwIfDisposed(),Jm(this)};F().prototype.isNaN=function(){return this.throwIfDisposed(),Qm(this)};F().prototype.leakyRelu=function(r){return this.throwIfDisposed(),p0(this,r)};F().prototype.lessEqual=function(r){return this.throwIfDisposed(),_n(this,r)};F().prototype.less=function(r){return this.throwIfDisposed(),ki(this,r)};F().prototype.localResponseNormalization=function(r,t,e,n){return this.throwIfDisposed(),e3(this,r,t,e,n)};F().prototype.logSigmoid=function(){return this.throwIfDisposed(),t3(this)};F().prototype.logSoftmax=function(r){return this.throwIfDisposed(),zc(this,r)};F().prototype.logSumExp=function(r,t){return this.throwIfDisposed(),f0(this,r,t)};F().prototype.log=function(){return this.throwIfDisposed(),Tr(this)};F().prototype.log1p=function(){return this.throwIfDisposed(),m0(this)};F().prototype.logicalAnd=function(r){return this.throwIfDisposed(),Mr(this,r)};F().prototype.logicalNot=function(){return this.throwIfDisposed(),d0(this)};F().prototype.logicalOr=function(r){return this.throwIfDisposed(),Bc(this,r)};F().prototype.logicalXor=function(r){return this.throwIfDisposed(),r3(this,r)};F().prototype.matMul=function(r,t,e){return this.throwIfDisposed(),Me(this,r,t,e)};F().prototype.maxPool=function(r,t,e,n){return this.throwIfDisposed(),h0(this,r,t,e,n)};F().prototype.max=function(r,t){return this.throwIfDisposed(),wr(this,r,t)};F().prototype.maximum=function(r){return this.throwIfDisposed(),yn(this,r)};F().prototype.mean=function(r,t){return this.throwIfDisposed(),xt(this,r,t)};F().prototype.min=function(r,t){return this.throwIfDisposed(),Ii(this,r,t)};F().prototype.minimum=function(r){return this.throwIfDisposed(),Xn(this,r)};F().prototype.mirrorPad=function(r,t){return this.throwIfDisposed(),s3(this,r,t)};F().prototype.mod=function(r){return this.throwIfDisposed(),i3(this,r)};F().prototype.mul=function(r){return this.throwIfDisposed(),R(this,r)};F().prototype.neg=function(){return this.throwIfDisposed(),Le(this)};F().prototype.norm=function(r,t,e){return this.throwIfDisposed(),Ni(this,r,t,e)};F().prototype.notEqual=function(r){return this.throwIfDisposed(),$o(this,r)};F().prototype.oneHot=function(r,t=1,e=0){return this.throwIfDisposed(),Cl(this,r,t,e)};F().prototype.onesLike=function(){return this.throwIfDisposed(),hr(this)};F().prototype.pad=function(r,t){return this.throwIfDisposed(),tn(this,r,t)};F().prototype.pool=function(r,t,e,n,o,s){return this.throwIfDisposed(),a3(this,r,t,e,n,o,s)};F().prototype.pow=function(r){return this.throwIfDisposed(),Or(this,r)};F().prototype.prelu=function(r){return this.throwIfDisposed(),x0(this,r)};F().prototype.prod=function(r,t){return this.throwIfDisposed(),l3(this,r,t)};F().prototype.reciprocal=function(){return this.throwIfDisposed(),f3(this)};F().prototype.relu=function(){return this.throwIfDisposed(),_r(this)};F().prototype.relu6=function(){return this.throwIfDisposed(),Gc(this)};F().prototype.reshapeAs=function(r){return this.throwIfDisposed(),$(this,r.shape)};F().prototype.reshape=function(r){return this.throwIfDisposed(),$(this,r)};F().prototype.resizeBilinear=function(r,t,e){return this.throwIfDisposed(),E3(this,r,t,e)};F().prototype.resizeNearestNeighbor=function(r,t,e){return this.throwIfDisposed(),_3(this,r,t,e)};F().prototype.reverse=function(r){return this.throwIfDisposed(),ur(this,r)};F().prototype.rfft=function(){return this.throwIfDisposed(),v0(this)};F().prototype.round=function(){return this.throwIfDisposed(),Vc(this)};F().prototype.rsqrt=function(){return this.throwIfDisposed(),Uc(this)};F().prototype.selu=function(){return this.throwIfDisposed(),Wc(this)};F().prototype.separableConv2d=function(r,t,e,n,o,s){return this.throwIfDisposed(),qc(this,r,t,e,n,o,s)};F().prototype.sigmoid=function(){return this.throwIfDisposed(),Wr(this)};F().prototype.sign=function(){return this.throwIfDisposed(),d3(this)};F().prototype.sin=function(){return this.throwIfDisposed(),Hc(this)};F().prototype.sinh=function(){return this.throwIfDisposed(),Kc(this)};F().prototype.slice=function(r,t){return this.throwIfDisposed(),De(this,r,t)};F().prototype.softmax=function(r){return this.throwIfDisposed(),y0(this,r)};F().prototype.softplus=function(){return this.throwIfDisposed(),Ro(this)};F().prototype.spaceToBatchND=function(r,t){return this.throwIfDisposed(),g0(this,r,t)};F().prototype.split=function(r,t){return this.throwIfDisposed(),pr(this,r,t)};F().prototype.sqrt=function(){return this.throwIfDisposed(),lt(this)};F().prototype.square=function(){return this.throwIfDisposed(),Oe(this)};F().prototype.squaredDifference=function(r){return this.throwIfDisposed(),Zc(this,r)};F().prototype.squeeze=function(r){return this.throwIfDisposed(),Rn(this,r)};F().prototype.stack=function(r,t){this.throwIfDisposed();let e=r instanceof Ke?[this,r]:[this,...r];return _t(e,t)};F().prototype.step=function(r){return this.throwIfDisposed(),lo(this,r)};F().prototype.stridedSlice=function(r,t,e,n,o,s,i,a){return this.throwIfDisposed(),h3(this,r,t,e,n,o,s,i,a)};F().prototype.sub=function(r){return this.throwIfDisposed(),oe(this,r)};F().prototype.sum=function(r,t){return this.throwIfDisposed(),ue(this,r,t)};F().prototype.tan=function(){return this.throwIfDisposed(),g3(this)};F().prototype.tanh=function(){return this.throwIfDisposed(),Do(this)};F().prototype.tile=function(r){return this.throwIfDisposed(),Er(this,r)};F().prototype.toBool=function(){return this.throwIfDisposed(),J(this,"bool")};F().prototype.toFloat=function(){return this.throwIfDisposed(),J(this,"float32")};F().prototype.toInt=function(){return this.throwIfDisposed(),J(this,"int32")};F().prototype.topk=function(r,t){return this.throwIfDisposed(),x3(this,r,t)};F().prototype.transpose=function(r){return this.throwIfDisposed(),Pe(this,r)};F().prototype.unique=function(r){return this.throwIfDisposed(),y3(this,r)};F().prototype.unsortedSegmentSum=function(r,t){return this.throwIfDisposed(),Qc(this,r,t)};F().prototype.unstack=function(r){return this.throwIfDisposed(),mr(this,r)};F().prototype.where=function(r,t){return this.throwIfDisposed(),gt(r,this,t)};F().prototype.zerosLike=function(){return this.throwIfDisposed(),ve(this)};var Yn=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},rn=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},L=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},Se=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}},z3=class r extends Error{constructor(t){super(t),Object.setPrototypeOf(this,r.prototype)}};var kp=class{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=t}};function po(r,t){if(Array.isArray(r)){let e=[];for(let n=0;n<t;n++)e=e.concat(r);return e}else{let e=new Array(t);return e.fill(r),e}}function Zn(r,t){if(!r)throw new z3(t)}function r6(r,t){let e=0;for(let n of r)n===t&&e++;return e}function Sr(r){return r.length===1?r[0]:r}function rt(r){return Array.isArray(r)?r:[r]}function mo(r){let e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Ri(r){return r.length<=1||r.indexOf("_")===-1?r:r.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}var uo={};function au(r){if(r==null)return null;let t={};return t.className=r.getClassName(),t.config=r.getConfig(),t}function t6(r){if(!(r==null||typeof r!="object"))if(Array.isArray(r))r.forEach(t=>t6(t));else{let t=Object.keys(r);for(let e of t){let n=r[e];n!=null&&typeof n=="object"&&(!Array.isArray(n)&&n.type==="ndarray"&&typeof n.value=="number"?r[e]=n.value:t6(n))}}}function hs(r,t={},e={},n="object",o=!1){if(typeof r=="string"){let s=r,i;if(s in e)i=e[s];else if(s in uo)i=uo[s];else if(i=t[s],i==null)throw new L(`Unknown ${n}: ${r}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=r;if(s.className==null||s.config==null)throw new L(`${n}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,a,l;if(i in e?[a,l]=e[i]:i in uo?[a,l]=uo.className:i in t&&([a,l]=t[i]),a==null)throw new L(`Unknown ${n}: ${i}. This may be due to one of the following reasons:
1. The ${n} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${n} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){let u={};for(let f of Object.keys(uo))u[f]=uo[f];for(let f of Object.keys(e))u[f]=e[f];let c=s.config;c.customObjects=u;let p=Object.assign({},uo);for(let f of Object.keys(e))uo[f]=e[f];t6(s.config);let m=l(a,s.config,e,o);return uo=Object.assign({},p),m}else{let u=Object.assign({},uo);for(let p of Object.keys(e))uo[p]=e[p];let c=new a(s.config);return uo=Object.assign({},u),c}}}function Kq(r,t){return r<t?-1:r>t?1:0}function Ap(r,t){return-1*Kq(r,t)}function fo(r){if(r==null)return r;let t=[];for(let e of r)t.indexOf(e)===-1&&t.push(e);return t}function NC(r){if(r==null)throw new L(`Invalid value in obj: ${JSON.stringify(r)}`);for(let t in r)if(r.hasOwnProperty(t))return!1;return!0}function gs(r,t,e){if(e!=null&&r.indexOf(e)<0)throw new L(`${e} is not a valid ${t}.  Valid values are ${r} or null/undefined.`)}function B3(r,t,e=0,n=1/0){return Zn(e>=0),Zn(n>=e),Array.isArray(r)&&r.length>=e&&r.length<=n&&r.every(o=>typeof o===t)}function Ht(r,t){Array.isArray(r)?(b.assert(r.length>0,()=>`${t} is unexpectedly an empty array.`),r.forEach((e,n)=>Ht(e,`element ${n+1} of ${t}`))):b.assert(Number.isInteger(r)&&r>0,()=>`Expected ${t} to be a positive integer, but got ${kC(r)}.`)}function kC(r){return r===null?"null":Array.isArray(r)?"["+r.map(t=>kC(t)).join(",")+"]":typeof r=="string"?`"${r}"`:`${r}`}function AC(r,t,e){let n=e!=null?e():b.now(),o;return(...i)=>{let a=e!=null?e():b.now();return a-n<t||(n=a,o=r(...i)),o}}function G3(r){return r==="relu"?"relu":r==="linear"?"linear":r==="elu"?"elu":null}var jq=0;function U3(){return jq++}var V3={};function C0(r=""){return r in V3||(V3[r]=0),V3[r]+=1,r+V3[r].toString()}var EC=["channelsFirst","channelsLast"],_C=["nearest","bilinear"],DC=["valid","same","causal"],RC=["max","avg"],$C=["sum","mul","concat","ave"];var lu=new Map;function St(r){gs(EC,"DataFormat",r)}function OC(r){gs(_C,"InterpolationFormat",r)}function nn(r){gs(DC,"PaddingMode",r)}function n6(r){gs(RC,"PoolMode",r)}var Ep=[],FC="/";function Mo(r,t){Ep.push(r);try{let e=t();return Ep.pop(),e}catch(e){throw Ep.pop(),e}}function Xq(){return Ep.length===0?"":Ep.join(FC)+FC}function W3(r){if(!MC(r))throw new Error("Not a valid tensor name: '"+r+"'");return Xq()+r}function q3(r){if(!MC(r))throw new Error("Not a valid tensor name: '"+r+"'");lu.has(r)||lu.set(r,0);let t=lu.get(r);if(lu.set(r,lu.get(r)+1),t>0){let e=`${r}_${t}`;return lu.set(e,1),e}else return r}var Yq=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function MC(r){return!!r.match(Yq)}function PC(r){return r===parseInt(r.toString(),10)}function ho(r,t,e){t==null&&(t=0),e==null&&(e=r.length);let n=1;for(let o=t;o<e;++o)n*=r[o];return n}function $l(r){if(r.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n<t&&(t=n)}return t}function Po(r){if(r.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<r.length;e++){let n=r[e];n>t&&(t=n)}return t}function on(r,t){if(t<r)throw new L(`end (${t}) < begin (${r}) is forbidden.`);let e=[];for(let n=r;n<t;++n)e.push(n);return e}var o6;function ir(){return o6==null&&(o6=gm().epsilon()),o6}function sn(){return"channelsLast"}function Hr(r,t){return J(r,t)}function Fi(r,t=-1){let e=r.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),$(r,e)}function LC(r,t){return B(()=>{if(r.shape.length!==2)throw new L(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);let e=Fi(r,1);return K3(e,[1,t,1])})}function zC(r){let t=[ho(r.shape)];return $(r,t)}function BC(r){if(r.rank<=1)throw new L(`batchFlatten requires a minimum rank of 2. Got rank: ${r.rank}.`);let t=[r.shape[0],ho(r.shape,1)];return $(r,t)}function $i(r,t,e){return B(()=>{switch(r.rank){case 1:return jc(r,t,e);case 2:return wp(r,[t,0],[e,r.shape[1]]);case 3:return Xc(r,[t,0,0],[e,r.shape[1],r.shape[2]]);case 4:return kl(r,[t,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3]]);case 5:return De(r,[t,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return De(r,[t,0,0,0,0,0],[e,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new L(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function s6(r,t,e){return B(()=>{switch(r.rank){case 1:return jc(r,t,e);case 2:return wp(r,[0,t],[r.shape[0],e]);case 3:return Xc(r,[0,0,t],[r.shape[0],r.shape[1],e]);case 4:return kl(r,[0,0,0,t],[r.shape[0],r.shape[1],r.shape[2],e]);default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function _p(r,t,e,n){return B(()=>{switch(r.rank){case 1:return jc(r,t,e);case 2:switch(n){case 1:return $i(r,t,e);case 2:return s6(r,t,e);default:throw new L(`The axis is not within the rank of the tensor ${n}`)}case 3:switch(n){case 1:return $i(r,t,e);case 2:return Xc(r,[0,t,0],[r.shape[0],e,r.shape[2]]);case 3:return s6(r,t,e);default:throw new L(`The axis is not within the rank of the tensor ${n}`)}case 4:switch(n){case 1:return $i(r,t,e);case 2:return kl(r,[0,t,0,0],[r.shape[0],e,r.shape[2],r.shape[3]]);case 3:return kl(r,[0,0,t,0],[r.shape[0],r.shape[1],e,r.shape[3]]);case 4:return s6(r,t,e);default:throw new L(`The axis is not within the rank of the tensor ${n}`)}default:throw new L(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function cu(r,t=-1){let e;return t<0&&(e=r[0].rank,e!==0?t=e:t=0),t===r[0].rank&&(t=-1),Ye(r,t)}function a6(r,t){switch(r.rank){case 1:return Lm([r,t]);case 2:return zm([r,t],0);case 3:return Bm([r,t],0);case 4:return Gm([r,t],0);default:throw new L(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function K3(r,t){if(Array.isArray(t)||(t=[t]),r.rank!==t.length)throw new L(`The length of input n (${t.length}) does not match the number of dimensions in input x (${r.rank})`);return Er(r,t)}function uu(r,t=0,e=1,n,o){return Nl(r,t,e,n,o)}function go(r,t,e,n){if(r.rank<2||t.rank<2)throw new Se(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${t.shape}`);if(t.rank>=3){let o=r.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(o!==s)throw new Se(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${t.shape}`)}if(r.rank===2&&t.rank===2)return w0.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?i6(r.rank,n,sn()):null,activation:e});{let o=r.shape.slice(),s=o.pop();r=$(r,[-1,s]);let i=t.shape.slice(),a=i.pop(),l=i.pop(),u=[...i,a],c=Array.from({length:t.rank},(d,g)=>g===0?t.rank-2:g<=t.rank-2?g-1:g);t=$(Pe(t,c),[l,-1]);let p=[...o,...u];return $(w0.matMul({a:r,b:t,transposeA:!1,transposeB:!1,bias:n?i6(r.rank,n,sn()):null,activation:e}),p)}}function j3(r,t,e){return B(()=>(Array.isArray(t)?t=Dt(t,"int32"):t=J(t,"int32"),fs(r,t,e)))}function Fl(r){return R(r,r)}function i6(r,t,e){let n=t.shape;if(t.rank!==1&&t.rank!==r)throw new L(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${r}`);if(r===5){if(e==="channelsFirst")return n.length===1?$(t,[1,n[0],1,1,1]):$(t,[1,n[3],n[0],n[1],n[2]]);if(e==="channelsLast")return n.length===1?$(t,[1,1,1,1,n[0]]):$(t,[1].concat(n))}else if(r===4){if(e==="channelsFirst")return n.length===1?$(t,[1,n[0],1,1]):$(t,[1,n[2],n[0],n[1]]);if(e==="channelsLast")return n.length===1?$(t,[1,1,1,n[0]]):$(t,[1].concat(n))}else if(r===3){if(e==="channelsFirst")return n.length===1?$(t,[1,n[0],1]):$(t,[1,n[1],n[0]]);if(e==="channelsLast")return n.length===1?$(t,[1,1,n[0]]):$(t,[1].concat(n))}else if(r<3)return t;throw new L(`Unsupported input rank by biasAdd: ${t.rank}`)}function an(r,t,e){return B(()=>(e==null&&(e=sn()),St(e),H(r,i6(r.rank,t,e))))}function GC(r,t=1){if(t!==1)throw new Se(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ps(r)}function VC(r){return B(()=>se(r,H(wt(r),1)))}function X3(r,t,e,n){return B(()=>R5(r,t,e,n))}function UC(r){return B(()=>{let t=H(.5,R(.2,r));return vr(t,0,1)})}function S0(r,t,e=!1){return e?r():t()}var WC=["fanIn","fanOut","fanAvg"],qC=["normal","uniform","truncatedNormal"];function Zq(r){gs(WC,"FanMode",r)}function Jq(r){gs(qC,"Distribution",r)}var ln=class extends X.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},jC=(()=>{class r extends ln{apply(e,n){return yt(e,n)}}return r.className="Zeros",r})();X.registerClass(jC);var Y3=(()=>{class r extends ln{apply(e,n){return Qt(e,n)}}return r.className="Ones",r})();X.registerClass(Y3);var XC=(()=>{class r extends ln{constructor(e){if(super(),typeof e!="object")throw new L(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new L(`config must have value set but got ${e}`);this.value=e.value}apply(e,n){return B(()=>R(ce(this.value),Qt(e,n)))}getConfig(){return{value:this.value}}}return r.className="Constant",r})();X.registerClass(XC);var YC=(()=>{class r extends ln{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,n){return Dn(e,this.minval,this.maxval,n,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}return r.className="RandomUniform",r})();X.registerClass(YC);var ZC=(()=>{class r extends ln{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Se(`randomNormal does not support dType ${n}.`);return uu(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return r.className="RandomNormal",r})();X.registerClass(ZC);var JC=(()=>{class r extends ln{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,n){if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Se(`truncatedNormal does not support dType ${n}.`);return Jc(e,this.mean,this.stddev,n,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}return r.className="TruncatedNormal",r})();X.registerClass(JC);var QC=(()=>{class r extends ln{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,n){return B(()=>{if(e.length!==2||e[0]!==e[1])throw new L("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,wl(e[0]))})}getConfig(){return{gain:this.gain}}}return r.className="Identity",r})();X.registerClass(QC);function Qq(r,t="channelsLast"){let e,n;if(St(t),r.length===2)e=r[0],n=r[1];else if([3,4,5].indexOf(r.length)!==-1){if(t==="channelsFirst"){let o=ho(r,2);e=r[1]*o,n=r[0]*o}else if(t==="channelsLast"){let o=ho(r,0,r.length-2);e=r[r.length-2]*o,n=r[r.length-1]*o}}else{let o=ho(r);e=Math.sqrt(o),n=Math.sqrt(o)}return[e,n]}var $n=(()=>{class r extends ln{constructor(e){if(super(),e.scale<0)throw new L(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Zq(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Jq(this.distribution),this.seed=e.seed}apply(e,n){let o=Qq(e),s=o[0],i=o[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(s+i)/2),this.distribution==="normal"){let l=Math.sqrt(a);if(n=n||"float32",n!=="float32"&&n!=="int32")throw new Se(`${this.getClassName()} does not support dType ${n}.`);return Jc(e,0,l,n,this.seed)}else{let l=Math.sqrt(3*a);return Dn(e,-l,l,n,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}return r.className="VarianceScaling",r})();X.registerClass($n);var l6=(()=>{class r extends $n{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return $n.className}}return r.className="GlorotUniform",r})();X.registerClass(l6);var c6=(()=>{class r extends $n{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return $n.className}}return r.className="GlorotNormal",r})();X.registerClass(c6);var u6=(()=>{class r extends $n{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return $n.className}}return r.className="HeNormal",r})();X.registerClass(u6);var p6=(()=>{class r extends $n{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return $n.className}}return r.className="HeUniform",r})();X.registerClass(p6);var m6=(()=>{class r extends $n{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return $n.className}}return r.className="LeCunNormal",r})();X.registerClass(m6);var f6=(()=>{class r extends $n{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return $n.className}}return r.className="LeCunUniform",r})();X.registerClass(f6);var eS=(()=>{class r extends ln{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,n){return B(()=>{if(e.length<2)throw new Se("Shape must be at least 2D.");if(n!=="int32"&&n!=="float32"&&n!==void 0)throw new TypeError(`Unsupported data type ${n}.`);n=n;let o=b.sizeFromShape(e.slice(0,-1)),s=e[e.length-1],i=o*s;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);let a=[Math.max(s,o),Math.min(s,o)],l=uu(a,0,1,n,this.seed),u=O5.qr(l,!1),c=u[0],m=u[1].flatten().stridedSlice([0],[Math.min(s,o)*Math.min(s,o)],[Math.min(s,o)+1]);return c=R(c,m.sign()),o<s&&(c=c.transpose()),R(ce(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}return r.className="Orthogonal",r})();X.registerClass(eS);var HC={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function KC(r,t={}){return hs(r,X.SerializationMap.getMap().classNameMap,t,"initializer")}function bt(r){return au(r)}function ct(r){if(typeof r=="string"){let t=r in HC?HC[r]:r;if(t==="GlorotNormal")return new c6;if(t==="GlorotUniform")return new l6;if(t==="HeNormal")return new u6;if(t==="HeUniform")return new p6;if(t==="LeCunNormal")return new m6;if(t==="LeCunUniform")return new f6;{let e={};return e.className=t,e.config={},KC(e)}}else return r instanceof ln?r:KC(r)}function Z3(r){return Array.isArray(r)&&Array.isArray(r[0])}function pu(r){return r.length===0?[]:Array.isArray(r[0])?r:[r]}function we(r){let t;if(Array.isArray(r)){if(r.length!==1)throw new L(`Expected Tensor length to be 1; got ${r.length}`);t=r[0]}else t=r;return t}function Fe(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(r.length===1)return r=r,r[0];throw new L(`Expected exactly 1 Shape; got ${r.length}`)}else return r}function mu(r){let t=0;for(let e of r)e.shape.length===0?t+=1:t+=e.shape.reduce((n,o)=>n*o);return t}var rS="Variable",Dp=class{constructor(t,e="float32",n=rS,o=!0,s=null){this.dtype=e??"float32",this.shape=t.shape,this.id=U3(),n=n??rS,this.originalName=W3(n),this.name=q3(this.originalName),this.trainable_=o,this.constraint=s,this.val=b3(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),tH(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}};function tH(r,t){if(r.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(r.shape)+" vs. "+JSON.stringify(t.shape))}function Rp(r){return r.map(t=>t.read())}function fu(r){r.forEach(t=>{t[0].write(t[1])})}var pt=class{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}},Kr=class{constructor(t,e,n,o,s,i,a){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=o,this.callArgs=s,this.outputTensorIndex=a,this.id=U3(),i!=null&&(this.originalName=W3(i),this.name=q3(this.originalName)),this.rank=e.length}},rH=0,Oi=class{constructor(t,e){this.callArgs=e,this.id=rH++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(let n of t.inboundLayers)n?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){let t=[];for(let e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},nH=0,Ie=class extends X.Serializable{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=nH++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){let n=this.getClassName();e=mo(n)+"_"+C0(n)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let n;if(t.batchInputShape!=null)n=t.batchInputShape;else if(t.inputShape!=null){let s=null;t.batchSize!=null&&(s=t.batchSize),n=[s].concat(t.inputShape)}this.batchInputShape=n;let o=t.dtype;o==null&&(o=t.inputDType),o==null&&(o="float32"),this.dtype=o}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new rn(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new L(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return Sr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return Sr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} is not connected, no input to return.`);return Sr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Yn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Yn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){let e=rt(t);if(this.inputSpec==null||this.inputSpec.length===0)return;let n=rt(this.inputSpec);if(e.length!==n.length)throw new L(`Layer ${this.name} expects ${n.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let o=0;o<e.length;o++){let s=e[o],i=n[o];if(i==null)continue;let a=s.rank;if(i.ndim!=null&&a!==i.ndim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${a}`);if(i.maxNDim!=null&&a>i.maxNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${a}`);if(i.minNDim!=null&&a<i.minNDim)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${a}.`);if(i.dtype!=null&&s.dtype!==i.dtype)throw new L(`Input ${o} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${s.dtype}.`);if(i.axes){let l=s.shape;for(let u in i.axes){let c=Number(u),p=i.axes[u],m=c>=0?l[c]:l[l.length+c];if(p!=null&&[p,null].indexOf(m)===-1)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${p} but got shape ${l}.`)}}if(i.shape!=null)for(let l=0;l<i.shape.length;++l){let u=i.shape[l],c=s.shape[l];if(u!=null&&c!=null&&u!==c)throw new L(`Input ${o} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();let n=rt(t),o=iH(t),s=aH(t);if(o===s)throw new L("Arguments to apply() must be all SymbolicTensors or all Tensors");return Mo(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);let i=[];for(let a of rt(t))i.push(a.shape);this.build(Sr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&s&&(this._refCount=1)}if(this.assertInputCompatibility(t),s){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);let a=rt(i),l=[];for(let u of a)n.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(i=Sr(l),this.activityRegularizer!=null)throw new Se("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{let i=oH(t),a=this.computeOutputShape(i),l,u=sH(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((c,p)=>new Kr(u,c,this,rt(t),e,this.name,p)):l=new Kr(u,a,this,rt(t),e,this.name),this.addInboundNode(t,l,null,null,i,a,e),this._refCount++,this.activityRegularizer!=null)throw new Se("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((n,o)=>{n!=null&&t[o]!=null&&t[o]!==n&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Yn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let t=[];for(let e of this.inboundNodes){let n=JSON.stringify(e.outputShapes);t.indexOf(n)===-1&&t.push(n)}if(t.length===1){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Yn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new rn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return mu(this.weights)}build(t){this.built=!0}getWeights(t=!1){return Rp(t?this.trainableWeights:this.weights)}setWeights(t){B(()=>{let e=this.weights;if(e.length!==t.length)throw new L(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;let n=[],o=Rp(e);for(let s=0;s<o.length;++s){let i=o[s],a=e[s],l=t[s];if(!b.arraysEqual(i.shape,l.shape))throw new L(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([a,l])}fu(n)})}addWeight(t,e,n,o,s,i,a,l){if(this._addedWeightNames.indexOf(t)!==-1)throw new L(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(o=l!=null?l():ct("zeros"));let u=o.apply(e,n),c=new Dp(u,n,t,i,a);return u.dispose(),s!=null&&this.addLoss(()=>s.apply(c.read())),i==null&&(i=!0),i?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=rt(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,n){if(!this.supportsMasking)return;let o=this.computeMask(t,n),s=rt(e),i=rt(o);if(s.length!==i.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let a=0;a<s.length;a++)s[a].kerasMask=i[a]}addInboundNode(t,e,n,o,s,i,a=null){let l=rt(t);e=rt(e),n=rt(n),o=rt(o),s=pu(s),i=pu(i);let u=[],c=[],p=[];for(let m of l)u.push(m.sourceLayer),c.push(m.nodeIndex),p.push(m.tensorIndex);new Oi({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:p,inputTensors:l,outputTensors:e,inputMasks:n,outputMasks:o,inputShapes:s,outputShapes:i},a);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){let t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}};function oH(r){r=rt(r);let t=[];for(let e of r)t.push(e.shape);return Sr(t)}function sH(r){return"float32"}function d6(r,t,e){if((t==null||e!=null&&e>0)&&(t=r.sourceLayer,e=r.nodeIndex),t.inboundNodes.length===0)return[r];{let n=t.inboundNodes[e];if(n.inboundLayers.length===0)return n.inputTensors;{let o=[];for(let s=0;s<n.inboundLayers.length;s++){let i=n.inputTensors[s],a=n.inboundLayers[s],l=n.nodeIndices[s],u=d6(i,a,l);for(let c of u)o.indexOf(c)===-1&&o.push(c)}return o}}}function iH(r){let t=!0;for(let e of rt(r))if(!(e instanceof Kr)){t=!1;break}return t}function aH(r){let t=!0;for(let e of rt(r))if(e instanceof Kr){t=!1;break}return t}var Ol=(()=>{class r extends Ie{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:C0("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new L("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let n=e.batchInputShape;if(n==null){if(e.inputShape==null)throw new L("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");n=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new L("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let o=e.dtype||"float32";this.batchInputShape=n,this.dtype=o,this.inputSpec=[{shape:n}];let s=new Kr(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Oi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[n],outputShapes:[n]})}apply(e,n){throw new L(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}return r.className="InputLayer",r})();X.registerClass(Ol);function h6(r){if(r.batchShape==null&&r.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(r.batchShape!=null&&r.shape!=null)throw new L("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=r.batchShape;r.shape!=null&&t==null&&(t=[null].concat(r.shape));let e=r.dtype;return e==null&&(e="float32"),new Ol({batchInputShape:t,name:r.name,dtype:e,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}function lH(r,t){if(r.dtype==null||r.dtype===t.dtype)return t;try{return J(t,r.dtype)}catch{throw new L(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${r.name}' (${r.dtype}).`)}}var xs=class r{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof r)for(let e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(let e of t)this.add(e.key,e.value)}}add(t,e,n){if(this.id2Value[t.id]==null)this.id2Value[t.id]=lH(t,e),this.name2Id[t.name]=t.id,n!=null&&(this.id2Mask[t.id]=n);else throw new L(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Kr){if(this.id2Value[t.id]==null)throw new L(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{let e=this.name2Id[t];if(e==null)throw new L(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Kr){if(this.id2Value[t.id]==null)throw new L(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{let e=this.name2Id[t];if(e==null)throw new L(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&Ae(this.id2Mask)}},J3=new kp,Q3=new kp;function oS(r){J3?.setMaxEntries(r),Q3?.setMaxEntries(r)}function Ml(r,t,e,n){let o=e==null?!1:e.training,s=Array.isArray(r),i=s?r:[r],a=i.map(d=>d.name),l=[],u=t.names();for(let d of a)u.indexOf(d)!==-1?l.push(t.getValue(d)):l.push(null);n!=null&&(n.maxNumTensors=-1/0,n.minNumTensors=1/0);let c=a.join(",")+"|"+t.names().sort().join(","),p=J3.get(c),m;if(p==null){let d=cH(i,t);p=d.sorted,m=d.recipientCounts,J3.put(c,p),Q3.put(c,m)}m={},o||Object.assign(m,Q3.get(c));let f=new xs(t);for(let d=0;d<p.length;++d){if(n!=null){let M=fp().numTensors;M>n.maxNumTensors&&(n.maxNumTensors=M),M<n.minNumTensors&&(n.minNumTensors=M)}let g=p[d],h=g.sourceLayer;if(h instanceof Ol)continue;let x=[],y=[],v=[],w=!1;for(let M of g.inputs){let P=f.getValue(M),V=f.getMask(M);x.push(P),y.push(V),V!=null&&(w=!0),o||(m[M.name]--,m[M.name]===0&&!t.hasKey(M)&&a.indexOf(M.name)===-1&&!P.isDisposed&&M.sourceLayer.stateful!==!0&&v.push(P))}w&&(e=e||{},e.mask=y[0]);let I=rt(h.apply(x,e)),E=null;h.supportsMasking&&(E=h.computeMask(x,y));let _=pH(g),D=Array.isArray(_)?_:[_];for(let M=0;M<D.length;++M){f.hasKey(D[M])||f.add(D[M],I[M],Array.isArray(E)?E[0]:E);let P=a.indexOf(D[M].name);P!==-1&&(l[P]=I[M])}o||Ae(v)}return f.disposeMasks(),s?l:l[0]}function cH(r,t){b.assert(r!=null&&r.length>0,()=>"Expected at least one fetch, got none");let e=[],n={};if(r.length===1){let o=nS(r[0],t);e=o.sorted,n=o.recipientMap}else{let o=new Set;for(let s of r){let{sorted:i,recipientMap:a}=nS(s,t);for(let l of i)o.has(l.name)||(e.push(l),o.add(l.name));for(let l in a)n[l]==null&&(n[l]=new Set),a[l].forEach(u=>n[l].add(u))}}return{sorted:e,recipientCounts:uH(n)}}function uH(r){let t={};for(let e in r)t[e]=r[e].size;return t}function nS(r,t){let e=new Set,n=[],o={};for(let a of t.names())e.add(a);let s=[],i=[];for(s.push(r);s.length>0;){let a=s[s.length-1];if(e.has(a.name)){s.pop();continue}let l=i[i.length-1]===s.length-1;if(a.inputs.length===0||l)s.pop(),n.push(a),e.add(a.name),l&&i.pop();else{i.push(s.length-1);for(let u of a.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(a.name),!e.has(u.name)&&s.push(u)}}return{sorted:n,recipientMap:o}}function pH(r){let t;if(r.sourceLayer.inboundNodes.length===1)t=r.sourceLayer.output;else{let e=null;for(let n=0;n<r.sourceLayer.inboundNodes.length;++n)for(let o of r.sourceLayer.inboundNodes[n].outputTensors)if(o.id===r.id){e=n;break}t=r.sourceLayer.getOutputAt(e)}return t}var mH=z();mH.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,oS);function g6(r,t){return B(()=>lt(ue(R(r,r),t,!0)))}var Pl=class extends X.Serializable{getConfig(){return{}}},aS=(()=>{class r extends Pl{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return B(()=>{let n=g6(e,this.axis),o=vr(n,0,this.maxValue);return R(e,se(o,H(ir(),n)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}return r.className="MaxNorm",r})();X.registerClass(aS);var lS=(()=>{class r extends Pl{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return B(()=>se(e,H(ir(),g6(e,this.axis))))}getConfig(){return{axis:this.axis}}}return r.className="UnitNorm",r})();X.registerClass(lS);var cS=(()=>{class r extends Pl{apply(e){return _r(e)}}return r.className="NonNeg",r})();X.registerClass(cS);var uS=(()=>{class r extends Pl{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return B(()=>{let n=g6(e,this.axis),o=H(R(this.rate,vr(n,this.minValue,this.maxValue)),R(1-this.rate,n));return R(e,se(o,H(ir(),n)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}return r.className="MinMaxNorm",r})();X.registerClass(uS);var sS={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Rt(r){return au(r)}function iS(r,t={}){return hs(r,X.SerializationMap.getMap().classNameMap,t,"constraint")}function $t(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in sS?sS[r]:r,config:{}};return iS(e)}else return r instanceof Pl?r:iS(r)}function Mi(r){return O(this,null,function*(){if(r==null)return;let t=[],e=[],n=[];for(let o in r){let s=r[o];if(typeof s!="number"){let i=s;t.push(i.data()),e.push(o),n.push(i)}}if(t.length>0){let o=yield Promise.all(t);for(let s=0;s<o.length;++s)r[e[s]]=o[s][0];Ae(n)}})}function ef(r){if(r!=null)for(let t in r){let e=r[t];typeof e!="number"&&e.dispose()}}var hH=125,I0=class{constructor(){this.validationData=null}setParams(t){this.params=t}onEpochBegin(t,e){return O(this,null,function*(){})}onEpochEnd(t,e){return O(this,null,function*(){})}onBatchBegin(t,e){return O(this,null,function*(){})}onBatchEnd(t,e){return O(this,null,function*(){})}onTrainBegin(t){return O(this,null,function*(){})}onTrainEnd(t){return O(this,null,function*(){})}setModel(t){}},tf=class{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(let e of this.callbacks)e.setParams(t)}setModel(t){for(let e of this.callbacks)e.setModel(t)}onEpochBegin(t,e){return O(this,null,function*(){e==null&&(e={});for(let n of this.callbacks)yield n.onEpochBegin(t,e)})}onEpochEnd(t,e){return O(this,null,function*(){e==null&&(e={});for(let n of this.callbacks)yield n.onEpochEnd(t,e)})}onBatchBegin(t,e){return O(this,null,function*(){e==null&&(e={});for(let n of this.callbacks)yield n.onBatchBegin(t,e)})}onBatchEnd(t,e){return O(this,null,function*(){e==null&&(e={});for(let n of this.callbacks)yield n.onBatchEnd(t,e)})}onTrainBegin(t){return O(this,null,function*(){t==null&&(t={});for(let e of this.callbacks)yield e.onTrainBegin(t)})}onTrainEnd(t){return O(this,null,function*(){t==null&&(t={});for(let e of this.callbacks)yield e.onTrainEnd(t)})}},x6=class extends I0{constructor(){super()}onEpochBegin(t){return O(this,null,function*(){this.seen=0,this.totals={}})}onBatchEnd(t,e){return O(this,null,function*(){e==null&&(e={});let n=e.size==null?0:e.size;this.seen+=n;for(let o in e){let s=e[o];if(typeof s=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+s*n;else{let i;o in this.totals?i=this.totals[o]:this.totals[o]=0;let a=B(()=>H(this.totals[o],R(s,n)));this.totals[o]=a,i?.dispose()}}})}onEpochEnd(t,e){return O(this,null,function*(){if(e!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?e[n]=this.totals[n]/this.seen:B(()=>{let o=R(se(1,this.seen),this.totals[n]);e[n]=o,this.totals[n].dispose(),Ct(e[n])}))})}},rf=class extends I0{onTrainBegin(t){return O(this,null,function*(){this.epoch=[],this.history={}})}onEpochEnd(t,e){return O(this,null,function*(){e==null&&(e={}),this.epoch.push(t);for(let n in e)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(e[n])})}syncData(){return O(this,null,function*(){let t=[],e=[],n=[];for(let s in this.history){let i=this.history[s];for(let a=0;a<i.length;++a)if(typeof i[a]!="number"){let l=i[a];t.push(l.data()),e.push(s),n.push(a)}}let o=yield Promise.all(t);for(let s=0;s<o.length;++s)this.history[e[s]][n[s]].dispose(),this.history[e[s]][n[s]]=o[s][0]})}},nf=class extends I0{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Np,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=hH),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");b.isNumber(this.yieldEvery)&&(this.maybeWait=AC(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}maybeWait(t,e,n){return O(this,null,function*(){let o=[];this.yield!=null&&(yield Mi(n),o.push(this.yield(t,e,n))),o.push(this.nextFrameFunc()),yield Promise.all(o)})}onEpochBegin(t,e){return O(this,null,function*(){this.currentEpoch=t,this.epochBegin!=null&&(yield Mi(e),yield this.epochBegin(t,e))})}onEpochEnd(t,e){return O(this,null,function*(){let n=[];this.epochEnd!=null&&(yield Mi(e),n.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),yield Promise.all(n)})}onBatchBegin(t,e){return O(this,null,function*(){this.batchBegin!=null&&(yield Mi(e),yield this.batchBegin(t,e))})}onBatchEnd(t,e){return O(this,null,function*(){let n=[];this.batchEnd!=null&&(yield Mi(e),n.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):b.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),yield Promise.all(n)})}onTrainBegin(t){return O(this,null,function*(){this.trainBegin!=null&&(yield Mi(t),yield this.trainBegin(t))})}onTrainEnd(t){return O(this,null,function*(){this.trainEnd!=null&&(yield Mi(t),yield this.trainEnd(t))})}};function of(r,t){return r==null&&(r={}),r instanceof I0?[r]:Array.isArray(r)&&r[0]instanceof I0?r:rt(r).map(n=>new nf(n,t))}var pS=(()=>{class r{constructor(){}static registerCallbackConstructor(e,n){b.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),r.checkForDuplicate(n),r.constructors[e]==null&&(r.constructors[e]=[]),r.constructors[e].push(n)}static checkForDuplicate(e){for(let n in r.constructors)r.constructors[+n].forEach(s=>{if(s===e)throw new L("Duplicate callback constructor.")})}static clear(){r.constructors={}}static createCallbacks(e){let n=[];for(let o in r.constructors){let s=+o;e>=s&&n.push(...r.constructors[s])}return n.map(o=>new o)}}return r.constructors={},r})();function sf(r,t,e,n,o,s,i,a,l){let u=new rf,c=[new x6,...pS.createCallbacks(t)];r!=null&&c.push(...r),c.push(u);let p=new tf(c);return p.setParams({epochs:e,initialEpoch:n,samples:o,steps:s,batchSize:i,verbose:t,doValidation:a,metrics:l}),{callbackList:p,history:u}}function Fn(r,t={},e=!1){return hs(r,X.SerializationMap.getMap().classNameMap,t,"layer",e)}function $p(r,t){return B(()=>{r.dtype!=="float32"&&(r=J(r,"float32"));let e=ue(Fl(r),t,!0),n=io(e.shape,ir()),o=lt(yn(e,n));return se(r,o)})}function Ll(r,t){return B(()=>xt(Fl(oe(t,r)),-1))}function Op(r,t){return B(()=>xt(wt(oe(t,r)),-1))}function Mp(r,t){return B(()=>{let e=oe(r,t),n=vr(wt(r),ir(),Number.MAX_VALUE),o=wt(se(e,n));return R(100,xt(o,-1))})}function gH(r,t){return B(()=>{let e=vr(t,ir(),Number.MAX_VALUE),n=Tr(H(1,e)),o=vr(r,ir(),Number.MAX_VALUE),s=Tr(H(1,o));return xt(Fl(oe(n,s)),-1)})}function xH(r,t){return B(()=>{let e=yn(0,oe(1,R(r,t)));return xt(Fl(e),-1)})}function yH(r,t){return B(()=>{let e=yn(0,oe(1,R(r,t)));return xt(e,-1)})}function bH(r,t){return B(()=>{let e=ue(R(r,t),-1),n=wr(R(oe(1,r),t),-1);return yn(0,H(1,oe(n,e)))})}function vH(r,t){return B(()=>{let e=Math.log(2),n=oe(t,r),o=oe(H(n,Ro(R(-2,n))),e);return xt(o,-1)})}function zl(r,t,e=!1){return B(()=>{if(e)t=y0(t);else{let n=ue(t,t.shape.length-1,!0);t=se(t,n)}return t=vr(t,ir(),1-ir()),Le(ue(R(J(r,"float32"),Tr(t)),t.shape.length-1))})}function du(r,t,e=!1){return B(()=>{let n=J(ms(zC(r)),"int32");t=vr(t,ir(),1-ir());let o=t.shape,s=$(Cl(n,o[o.length-1]),o);return zl(s,t,e)})}function wH(r,t){if(!b.arraysEqual(r.shape,t.shape))throw new L(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(t.shape)}`);return B(()=>{let e=_r(t),n=Le(wt(t));return H(oe(e,R(t,r)),m0(Gt(n)))})}function hu(r,t){return B(()=>{let e;return e=vr(t,ir(),1-ir()),e=Tr(se(e,oe(1,e))),xt(wH(r,e),-1)})}function TH(r,t){return B(()=>{let e=vr(r,ir(),1),n=vr(t,ir(),1);return ue(R(r,Tr(se(e,n))),-1)})}function CH(r,t){return B(()=>{let e=Tr(H(ir(),t));return xt(oe(t,R(r,e)),-1)})}function af(r,t){return B(()=>{let e=$p(r,-1),n=$p(t,-1),o=R(e,n);return Le(ue(o,-1))})}var Fp={meanSquaredError:Ll,meanAbsoluteError:Op,meanAbsolutePercentageError:Mp,meanSquaredLogarithmicError:gH,squaredHinge:xH,hinge:yH,categoricalHinge:bH,logcosh:vH,categoricalCrossentropy:zl,sparseCategoricalCrossentropy:du,binaryCrossentropy:hu,kullbackLeiblerDivergence:TH,poisson:CH,cosineProximity:af};function lf(r){if(typeof r=="string"){if(r in Fp)return Fp[r];let t=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new L(t)}else return r}function uf(r,t){return B(()=>{let e=R(.5,hr(t)),n=Hr(Et(t,e),r.dtype);return xt(qr(r,n),-1)})}function pf(r,t){return B(()=>Hr(qr(is(r,-1),is(t,-1)),"float32"))}function SH(r,t){return B(()=>J(ue(Mr(qr(r,1),qr(t,1))),"float32"))}function IH(r,t){return B(()=>J(ue(Mr(qr(r,0),qr(t,1))),"float32"))}function fS(r,t){return B(()=>{let e=SH(r,t),n=IH(r,t),o=H(e,n);return J(gt(Et(o,0),se(e,o),0),"float32")})}function y6(r,t){return hu(r,t)}function b6(r,t){return r.rank===t.rank&&(r=Rn(r,[r.rank-1])),t=is(t,-1),t.dtype!==r.dtype&&(t=J(t,r.dtype)),J(qr(r,t),"float32")}var NH=Ll,kH=Ll,AH=Op,EH=Op,_H=Mp,DH=Mp,mf=zl,RH=af,v6=du,cf={binaryAccuracy:uf,categoricalAccuracy:pf,precision:fS,categoricalCrossentropy:mf,sparseCategoricalCrossentropy:v6,mse:NH,MSE:kH,mae:AH,MAE:EH,mape:_H,MAPE:DH,cosine:RH};function dS(r){if(typeof r=="string"&&r in cf)return cf[r];if(typeof r!="string"&&r!=null)return r;throw new L(`Unknown metric ${r}`)}function Pp(r){if(Zn(r!==null,`Unknown LossOrMetricFn ${r}`),typeof r=="string")return r;{let t;for(let e of Object.keys(Fp))if(Fp[e]===r){t=e;break}if(t!==void 0)return t;for(let e of Object.keys(cf))if(cf[e]===r){t=e;break}return t!==void 0?t:r.name}}function gS(r){let t={Adagrad:()=>Rl.adagrad(.01),Adadelta:()=>Rl.adadelta(1,.95,ir()),Adam:()=>Rl.adam(.001,.9,.999,ir()),Adamax:()=>Rl.adamax(.002,.9,.999,ir(),0),RMSProp:()=>Rl.rmsprop(.001,.9,0,ir()),SGD:()=>Rl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,r in t)return t[r]();throw new L(`Unknown Optimizer ${r}`)}function T6(r,t,e=!1){if(r==null||typeof r!="object"||Object.getPrototypeOf(r)!==Object.prototype||!w6(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){let n=JSON.stringify(r);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function w6(r){if(r===null)return!0;if(typeof r=="object")if(Object.getPrototypeOf(r)===Object.prototype){let t=Object.keys(r);for(let e of t)if(typeof e!="string"||!w6(r[e]))return!1;return!0}else if(Array.isArray(r)){for(let t of r)if(!w6(t))return!1;return!0}else return!1;else{let t=typeof r;return t==="string"||t==="number"||t==="boolean"}}function xS(r,t,e,n=console.log){let o=OH(r),s=["Layer (type)","Input Shape","Output shape","Param #"];o?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(c=>Math.floor(t*c)));let i;if(!o){s.push("Receives inputs"),i=[];for(let c in r.nodesByDepth)i.push(...r.nodesByDepth[c])}n("_".repeat(t)),ff(s,e,n),n("=".repeat(t));let a=r.layers;for(let c=0;c<a.length;++c)o?MH(a[c],e,n):PH(a[c],e,i,n),n((c===a.length-1?"=":"_").repeat(t));r.checkTrainableWeightsConsistency();let l=FH(r),u=mu(r.nonTrainableWeights);n(`Total params: ${l+u}`),n(`Trainable params: ${l}`),n(`Non-trainable params: ${u}`),n("_".repeat(t))}function FH(r){let t;return r.collectedTrainableWeights!=null?t=mu(r.collectedTrainableWeights):t=mu(r.trainableWeights),t}function OH(r){let t=!0,e=[],n=[];for(let o in r.nodesByDepth)e.push(r.nodesByDepth[o]);for(let o of e){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){t=!1;break}n.push(...o)}if(t)for(let o of r.layers){let s=!1;for(let i of o.inboundNodes)if(n.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function ff(r,t,e=console.log){let n="";for(let o=0;o<r.length;++o)o>0&&(n=n.slice(0,n.length-1)+" "),n+=r[o],n=n.slice(0,t[o]),n+=" ".repeat(t[o]-n.length);e(n)}function MH(r,t,e){let n,o;try{o=r.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{o="multiple"}try{n=JSON.stringify(r.outputShape)}catch{n="multiple"}let s=r.name,i=r.getClassName(),a=[`${s} (${i})`,o,n,r.countParams().toString()];ff(a,t,e)}function PH(r,t,e,n){let o,s;try{s=r.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{s="multiple"}try{o=JSON.stringify(r.outputShape)}catch{o="multiple"}let i=[];for(let p of r.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){let f=p.inboundLayers[m].name,d=p.nodeIndices[m],g=p.tensorIndices[m];i.push(`${f}[${d}][${g}]`)}let a=r.name,l=r.getClassName(),u=i.length===0?"":i[0],c=[`${a} (${l})`,s,o,r.countParams().toString(),u];ff(c,t,n);for(let p=1;p<i.length;++p)ff(["","","","",i[p]],t,n)}function yS(r,t,e){return(r==="inboundNodes"||r==="outputLayers"||r==="inputLayers")&&t===0&&typeof e=="string"}function Lp(r,t){if(r===null)return null;if(typeof r=="string")return Ri(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];yS(t,o,s)?e.push(s):e.push(Lp(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n];if(n==="name"&&typeof o=="string")e[n]=o;else{let s=Ri(n);e[s]=Lp(o,s)}}return e}}function df(r,t){if(r==null)return null;if(typeof r=="string")return mo(r);if(typeof r=="number"||typeof r=="boolean")return r;if(r instanceof Array){let e=[],n=r.length;for(let o=0;o<n;++o){let s=r[o];yS(t,o,s)?e.push(s):e.push(df(s,t))}return e}else{let e={};for(let n of Object.keys(r)){let o=r[n],s=mo(n);(n==="name"||n==="className")&&typeof o=="string"?e[s]=o:e[s]=df(o,n)}return e}}var gu="4.22.0";var LH=r=>{let t=Object.keys(r);if(t.length===0)return!1;let e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))},hf=class r extends Ie{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=C0(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],fo(this.inputs).length!==this.inputs.length)throw new L(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);fo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let v=y.sourceLayer,w=y.nodeIndex,I=y.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(let y of this.inputs){let v=y.sourceLayer,w=y.nodeIndex,I=y.tensorIndex;Zn(w===0,"input layer has >1 nodes"),Zn(I===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let v=this.inputLayers[y];if(!(v instanceof Ol))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${y} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let e={},n={},o={},s={},i={},a=[],l=(y,v,w,I,E,_)=>{(I==null||E==null||_==null)&&(I=y.sourceLayer,E=y.nodeIndex,_=y.tensorIndex);let D=I.inboundNodes[E];if(w.indexOf(D)!==-1)throw new rn(`The tensor ${y.name} at layer "${I.name}" is part of a cycle.`);if(v.indexOf(D)!==-1)return;this.containerNodes.add(r.nodeKey(I,E)),I.id in i||(i[I.id]=Object.keys(i).length),w.indexOf(D)===-1&&w.push(D);let M=D.inboundLayers.length;for(let P=0;P<M;P++){let V=D.inputTensors[P],U=D.inboundLayers[P],q=D.nodeIndices[P],K=D.tensorIndices[P];l(V,v,w,U,q,K)}for(v.push(D);w.indexOf(D)>=0;)w.splice(w.indexOf(D),1);a.push(D)},u=[],c=[];for(let y of this.outputs)l(y,u,c);let p=a.slice().reverse();for(let y of p){n[y.id]=y,y.id in e||(e[y.id]=0);let v=e[y.id],w=o[y.outboundLayer.id]==null?0:o[y.outboundLayer.id];v=Math.max(v,w),o[y.outboundLayer.id]=v,s[y.outboundLayer.id]=y.outboundLayer,e[y.id]=v;for(let I=0;I<y.inboundLayers.length;I++){let E=y.inboundLayers[I],_=y.nodeIndices[I],D=E.inboundNodes[_],M=e[D.id]==null?0:e[D.id];e[D.id]=Math.max(v+1,M),n[D.id]=D}}let m={};for(let y in e){let v=e[y];v in m||(m[v]=[]),m[v].push(n[y])}let f={};for(let y in o){let v=o[y];v in f||(f[v]=[]),f[v].push(s[y])}let d=Object.keys(f).map(y=>parseInt(y,10)).sort(Ap);this.layers=[];for(let y of d){let v=f[y];v.sort((w,I)=>{let E=i[w.id],_=i[I.id];return E<_?-1:E>_?1:0});for(let w of v)w instanceof r&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=f,d=Object.keys(m).map(y=>parseInt(y,10)).sort(Ap);let g=this.inputs.slice(),h=[];for(let y of d)for(let v of m[y]){let w=v.outboundLayer;if(w!=null){for(let I of v.inputTensors)if(g.indexOf(I)===-1)throw new rn(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${h}`);for(let I of v.outputTensors)g.push(I);h.push(w.name)}}this.nodesByDepth=m;let x=this.layers.map(y=>y.name);for(let y of x){let v=x.filter(w=>w===y).length;if(v!==1)throw new rn(`The name "${y}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(x))}this.outboundNodes=[],this.inboundNodes=[],new Oi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(let e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(n=>n.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new L("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(let e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){let t=[];for(let e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){let e=[];for(let n of this.layers)e.push(...n.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){let n={},o=0,s=LH(t);s&&this.parseWeights(t);for(let a of this.layers)for(let[l,u]of a.weights.entries()){let c=s?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(n[c]!=null)throw new L(`Duplicate weight name: ${c}`);n[c]=u,o++}let i=[];for(let a in t){let l=a;if(n[a]==null){let u=a.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(n[l]!=null)i.push([n[l],t[a]]);else if(e)throw new L(`Provided weight data has no target variable: ${a}`);delete n[l]}if(e){let a=[];for(let l in n)a.push(l);if(a.length>0)throw new L(`${a.length} of ${o} weights are not set: ${a}`)}fu(i)}parseWeights(t){for(let e in Object.keys(t)){let n=e.split("/"),o=["vars","layer_checkpoint_dependencies"],s=n.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!o.includes(i)).join("/");s!==e&&(t[s]=t[e],delete t[e])}}updatedConfig(){let t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${gu}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){let n=df(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return B(()=>{t=rt(t);let n=new xs;for(let o=0;o<this.inputs.length;++o)n.add(this.inputs[o],t[o]);return Ml(this.outputs,n,e)})}computeMask(t,e){return B(()=>{t=rt(t);let n;return e==null?n=po(null,t.length):n=rt(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){let e=pu(t);if(e.length!==this.inputLayers.length)throw new L(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let a=0;a<e.length;a++){let l=this.inputLayers[a],u=e[a],c=l.name+"_0_0";n[c]=u}let o=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Ap);if(o.length>1)for(let a of o){let l=this.nodesByDepth[a];for(let u of l){let c=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(c.id)!==-1)continue;let p=[];for(let g=0;g<u.inboundLayers.length;g++){let h=u.inboundLayers[g],x=u.nodeIndices[g],y=u.tensorIndices[g],v=`${h.name}_${x}_${y}`,w=n[v];p.push(w)}let m=c.computeOutputShape(Sr(p)),f=pu(m),d=c.inboundNodes.indexOf(u);for(let g=0;g<f.length;g++){let h=`${c.name}_${d}_${g}`;n[h]=f[g]}}}let s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){let l=this.outputLayers[a],u=this.outputLayersNodeIndices[a],c=this.outputLayersTensorIndices[a],p=`${l.name}_${u}_${c}`;i.push(p)}for(let a=0;a<i.length;a++){let l=i[a];Zn(l in n),s.push(n[l])}return Sr(s)}runInternalGraph(t,e){e==null&&(e=po(null,t.length));let n={};for(let l=0;l<this.inputs.length;++l){let u=this.inputs[l],c=t[l],p=e[l];n[u.id]=[c,p]}let o=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Ap);for(let l of o){let u=this.nodesByDepth[l];for(let c of u){let p=c.outboundLayer,m=c.inputTensors,f=c.outputTensors,d=new Array;for(let g of m)g.id in n&&d.push(n[g.id]);if(d.length===m.length){let g={},h,x,y,v;if(c.callArgs!=null&&(g=c.callArgs),d.length===1){let[w,I]=d[0];g.mask==null&&(g.mask=I),y=rt(p.call(w,g)),v=rt(p.computeMask(w,I)),h=[w],x=[I]}else h=d.map(w=>w[0]),x=d.map(w=>w[1]),g.mask==null&&(g.mask=x),y=rt(p.call(h,g)),v=rt(p.computeMask(h,x));if(p.activityRegularizer)throw new Se("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<f.length;++w){let I=f[w],E=y[w],_=v[w];n[I.id]=[E,_]}}}}let s=[],i=[],a=[];for(let l of this.outputs){Zn(l.id in n,`Could not compute output ${l.name} : ${l.id}`);let[u,c]=n[l.id];a.push(u.shape),s.push(u),i.push(c)}return[s,i,a]}buildNodeConversionMap(t){let e={},n;for(let o of this.layers){n=o instanceof r?1:0;for(let s=0;s<o.inboundNodes.length;s++){let i=r.nodeKey(o,s);this.containerNodes.has(i)&&(e[i]=n,n+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new L("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(let n of this.layers)if(n.name===t)return n;throw new L(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new L(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return B(()=>{let t=[];for(let e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){let o=r.nodeKey(e,n);this.containerNodes.has(o)&&t.push(...e.calculateLosses())}return t})}getConfig(){let t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(let i of this.layers){let a=i.getClassName(),l=i.getConfig(),u=[];for(let p=0;p<i.inboundNodes.length;p++){let m=i.inboundNodes[p],f=r.nodeKey(i,p),d={};if(this.containerNodes.has(f)){if(m.callArgs)try{JSON.stringify(m.callArgs),d=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),d={}}if(m.inboundLayers.length>0){let g=[];for(let h=0;h<m.inboundLayers.length;h++){let x=m.inboundLayers[h],y=m.nodeIndices[h],v=m.tensorIndices[h],w=r.nodeKey(x,y),I=e[w];I==null&&(I=0),g.push([x.name,I,v,d])}u.push(g)}}}let c={};c.name=i.name,c.className=a,c.config=l,c.inboundNodes=u,n.push(c)}t.layers=n;let o=[];for(let i=0;i<this.inputLayers.length;i++){let a=this.inputLayers[i],l=this.inputLayersNodeIndices[i],u=r.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=e[u];c==null&&(c=0);let p=this.inputLayersTensorIndices[i];o.push([a.name,c,p])}t.inputLayers=o;let s=[];for(let i=0;i<this.outputLayers.length;i++){let a=this.outputLayers[i],l=this.outputLayersNodeIndices[i],u=r.nodeKey(a,l);if(!this.containerNodes.has(u))continue;let c=e[u];c==null&&(c=0);let p=this.outputLayersTensorIndices[i];s.push([a.name,c,p])}return t.outputLayers=s,t}static fromConfig(t,e,n={},o=!1){let s={},i={};function a(h,x){h.name in i?i[h.name].push(x):i[h.name]=[x]}function l(h,x){let y=[],v;for(let w of x){let I=w[0],E=w[1],_=w[2];if(v=w[3]==null?{}:w[3],!(I in s)){a(h,x);return}let D=s[I];if(D.inboundNodes.length<=E){a(h,x);return}let M=D.inboundNodes[E];y.push(M.outputTensors[_])}y.length>0&&h.apply(Sr(y),v)}function u(h){let x=h.name,y=Fn(h,e.customObjects!=null?e.customObjects:{});y.setFastWeightInitDuringBuild(o),s[x]=y,h.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new L(`Corrupted configuration, expected array for nodeData: ${w}`);a(y,w)})}let c=e.name,p=e.layers;for(let h of p)u(h);for(;!NC(i);)for(let h of p){let x=s[h.name];if(x.name in i){let y=i[x.name];delete i[x.name];for(let v of y)l(x,v)}}let m=[],f=[],d=e.inputLayers;for(let h of d){let x=h[0],y=h[1],v=h[2];Zn(x in s);let I=s[x].inboundNodes[y].outputTensors;m.push(I[v])}let g=e.outputLayers;for(let h of g){let x=h[0],y=h[1],v=h[2];Zn(x in s);let I=s[x].inboundNodes[y].outputTensors;f.push(I[v])}return new t({inputs:m,outputs:f,name:c})}get stateful(){if(this._stateful)throw new L("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let t of this.layers)if(t.stateful)return!0;return!1}resetStates(){B(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}};function zH(r,t,e){let n=t.length;if(r==null||Array.isArray(r)&&r.length===0)return t.map(o=>null);if(n===1)return Array.isArray(r)&&r.length===1?r:typeof r=="object"&&t[0]in r?[r[t[0]]]:[r];if(Array.isArray(r)){if(r.length!==n)throw new Error(`Provided ${e} is an array of ${r.length} element(s), but the model has ${n} outputs. Make sure a set of weights is provided for each model output.`);return r}else if(typeof r=="object"&&Object.keys(r).length>0&&typeof r[Object.keys(r)[0]]=="object"){let o=[];return t.forEach(s=>{s in r?o.push(r[s]):o.push(null)}),o}else throw new Error(`The model has multiple (${n}) outputs, so ${e} must be either an array with ${n} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(r)}`)}function gf(r,t){return zH(r,t,"classWeight")}function xf(r,t,e,n){return O(this,null,function*(){if(t!=null||n!=null)throw new Error("Support sampleWeight is not implemented yet");if(e!=null){let o=B(()=>{if(r.shape.length===1)return Qr(r);if(r.shape.length===2){if(r.shape[1]>1)return is(r,1);if(r.shape[1]===1)return $(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(yield o.data());Ae(o);let i=[];return s.forEach(a=>{if(e[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);i.push(e[a])}),Dt(i,"float32")}else return null})}function bS(r,t){return R(r,t)}var BH=32;function TS(r,t){let e,n,o=t;e=o.xs,n=o.ys,b.assert(e!=null&&n!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=vS("input",r.inputNames,e),i=vS("output",r.outputNames,n),a=s[0].shape[0];b.assert(s.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),b.assert(i.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let l=0;l<s.length;l++)b.assert(s[l].shape[0]===a,()=>`Batch size mismatch: input ${r.inputNames[l]} has ${s[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);for(let l=0;l<i.length;l++)b.assert(i[l].shape[0]===a,()=>`Batch size mismatch: output ${r.outputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${r.inputNames[0]}.`);return{xs:s,ys:i}}function vS(r,t,e){if(e instanceof Ke)return[e];if(Array.isArray(e))return b.assert(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${r} keys ${t}.`),e;{let n=[];for(let o of t){if(e[o]==null)throw new L(`The feature data generated by the dataset lacks the required ${r} key '${o}'.`);n.push(e[o])}return n}}function GH(r){if(r.length===3)throw new Se("Validation with sample weights is not implemented yet.");return{xs:r[0],ys:r[1]}}function CS(r,t,e){return O(this,null,function*(){let n=e.batchesPerEpoch!=null;if(b.assert(r.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),b.assert(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),b.assert(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),b.assert(!n||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),b.assert(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),r.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");r.isTraining=!0;try{let o=e.validationData!=null,s,i;if(o)if(wS(e.validationData))b.assert(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{let h=GH(e.validationData);s=h.xs,i=h.ys}let a=r.makeTrainFunction(),l=r.getDedupedMetricsNames(),u;o?u=l.slice().concat(l.map(h=>"val_"+h)):u=l.slice();let c=of(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:f}=sf(c,p,e.epochs,null,null,VH(t,e),null,o,u);m.setModel(r),r.history=f,yield m.onTrainBegin(),r.stopTraining_=!1;let d=e.initialEpoch==null?0:e.initialEpoch,g=yield t.iterator();for(;d<e.epochs;){let h={};yield m.onEpochBegin(d);let x=0,y=0;for(n||(g=yield t.iterator());!n||x<e.batchesPerEpoch;){let v=yield g.next();if(n&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${x} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:w,ys:I}=TS(r,v.value),E={};E.batch=y,E.size=w[0].shape[0],yield m.onBatchBegin(y,E);let _=[];if(e.classWeight!=null){let P=gf(e.classWeight,r.outputNames);for(let V=0;V<P.length;++V)_.push(yield xf(I[V],null,P[V]))}let D=w.concat(I).concat(_),M=a(D);Ae(D);for(let P=0;P<l.length;++P){let V=l[P],U=M[P];E[V]=U,Ct(U)}yield m.onBatchEnd(y,E),ef(E),y++,x++}if(n?x>=e.batchesPerEpoch:v.done){if(o){let w;wS(e.validationData)?w=rt(yield r.evaluateDataset(e.validationData,{batches:e.validationBatches})):w=rt(r.evaluate(s,i,{batchSize:e.validationBatchSize==null?BH:e.validationBatchSize,verbose:0}));for(let I=0;I<r.metricsNames.length;++I)h[`val_${r.metricsNames[I]}`]=w[I]}break}if(r.stopTraining_)break}if(yield m.onEpochEnd(d,h),d++,r.stopTraining_)break}return yield m.onTrainEnd(),yield r.history.syncData(),r.history}finally{r.isTraining=!1}})}function VH(r,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(r.size)&&(e=r.size),e}function wS(r){return typeof r.iterator=="function"}function UH(r){return typeof r.next=="function"}function SS(r,t,e){return O(this,null,function*(){e=e||{};let n=e.batches!=null,o=r.testFunction,s=[];if(e.verbose>0)throw new Se("Verbose mode is not implemented yet.");b.assert(!n||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);let i=UH(t)?t:yield t.iterator(),a=0,l=0;for(;!n||l<e.batches;){let u=yield i.next();if(s=B(()=>{if(u.value){let{xs:c,ys:p}=TS(r,u.value),m=c.concat(p),f=B(()=>o(m));if(Ae(m),l===0)for(let g=0;g<f.length;++g)s.push(ce(0));let d=m[0].shape[0];for(let g=0;g<f.length;++g){let h=f[g],x=s[g];s[g]=B(()=>H(s[g],R(d,h))),l>0&&Ae(x)}Ae(f),a+=d,++l}return s}),u.done){n&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){let c=s[u];s[u]=se(s[u],a),Ae(c)}return Sr(s)})}function yf(r){b.assert(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function xu(r,t,e){return r==null?[null]:Array.isArray(r)?r.map(n=>$i(n,t,e-t)):$i(r,t,e-t)}function bf(r,t){return B(()=>r==null?null:Array.isArray(r)?r.map(e=>bf(e,t)):j3(r,t.dtype==="int32"?t:J(t,"int32")))}function vf(r,t){let e=[],n=0,o=null;for(;n<r;)o=n+t,o>=r&&(o=r),e.push([n,o]),n=o;return e}function C6(r){let t=[];r instanceof Ke&&(r=[r]);for(let e=0;e<r.length;++e){let n=r[e];if(n.rank===1)t.push(Fi(n,1));else{if(n.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(n)}}return t}function xo(r,t){if(r==null)return;let e=[];if(t instanceof Ke)e.push(t.id);else if(Array.isArray(t))t.forEach(o=>e.push(o.id));else if(t!=null)for(let o in t){let s=t[o];e.push(s.id)}let n=[];if(r instanceof Ke)e.indexOf(r.id)===-1&&n.push(r);else if(Array.isArray(r))r.forEach(o=>{e.indexOf(o.id)===-1&&n.push(o)});else if(r!=null)for(let o in r){let s=r[o];e.indexOf(s.id)===-1&&n.push(s)}n.forEach(o=>{o.isDisposed||o.dispose()})}function WH(r){return r instanceof Ke}function S6(r){return Array.isArray(r)}function IS(r){return!WH(r)&&!S6(r)}function NS(r,t,e,n=!0,o=""){if(t==null||t.length===0){if(r!=null){let i=!1;if(S6(r)&&r.length>0)i=!0;else if(IS(r)){for(let a in r)if(r.hasOwnProperty(a)){i=!0;break}}else i=!0;if(i)throw new L(`Error when checking model ${o} expected no data, but got ${r}`)}return[]}if(r==null)return t.map(i=>null);let s;if(IS(r)){r=r,s=[];for(let i of t){if(r[i]==null)throw new L(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(r[i])}}else if(S6(r)){if(r=r,r.length!==t.length)throw new L(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);s=r}else{if(r=r,t.length>1)throw new L(`The model ${o} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);s=[r]}if(s=C6(s),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new L(`Error when checking ${o}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<e[i].length;++l){if(l===0&&!n)continue;let u=a.shape[l],c=e[i][l];if(c!=null&&c>=0&&u!==c)throw new L(`${o} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${o} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return s}function qH(r,t,e){let n=fo(r.map(s=>s.shape[0]));n.sort();let o=fo(t.map(s=>s.shape[0]));if(o.sort(),n.length>1)throw new L(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(r.map(s=>s.shape))}`);if(o.length>1)throw new L(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(n.length>0&&o.length>0&&!b.arraysEqual(n,o))throw new L(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${o[0]} target sample(s).`)}function HH(r,t,e){let n=[Ll,hu,zl];for(let o=0;o<r.length;++o){let s=r[o],i=t[o],a=e[o];if(i!=null){if(i===zl&&s.shape[s.shape.length-1]===1)throw new L(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(n.indexOf(i)!==-1){let l=s.shape.slice(1),u=a.slice(1);for(let c=0;c<l.length;++c){let p=l[c],m=u[c];if(m!=null&&p!==m)throw new L(`A target Tensor with shape ${s.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function kS(r,t,e,n=!0,o=""){let s;if(Array.isArray(r)){if(r.length!==t.length)throw new L(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${r.length} Tensors(s).`);s=r}else{if(t.length>1)throw new L(`The model expects ${t.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);s=[r]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;let a=s[i];if(a.shape.length!==e[i].length)throw new L(`Error when checking ${o}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<e[i].length;++l){if(l===0&&!n)continue;let u=a.shape[l],c=e[i][l];if(c!=null&&c!==u)throw new L(`Error when checking ${o}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function KH(r,t){if(r==null||Array.isArray(r)&&r.length===0)return t.map(n=>[]);let e;if(typeof r=="string"||typeof r=="function")e=[r];else if(Array.isArray(r)||typeof r=="object")e=r;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${r}`);if(Array.isArray(e))return t.map(n=>e);{let n=[];for(let o of t){let s=e.hasOwnProperty(o)?e[o]:[];Array.isArray(s)||(s=[s]),n.push(s)}return n}}var jH="layers-model",Pi=(()=>{class r extends hf{constructor(e){super(e),this.isTraining=!1}summary(e,n,o=console.log){if(!this.built)throw new L("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");xS(this,e,n,o)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=gS(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Lr))throw new L("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let n=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new L(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),n.push(lf(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new L(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);n=e.loss.map(l=>lf(l))}else{let a=lf(e.loss);this.outputs.forEach(l=>{n.push(a)})}this.lossFunctions=n,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let l=this.internalOutputShapes[a],u=this.outputNames[a];this.feedOutputNames.push(u),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[a])}let o=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Mo("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(o.indexOf(a)!==-1)continue;let l=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([l,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=KH(e.metrics,this.outputNames),i=(a,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[a]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,a])};Mo("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(o.indexOf(a)!==-1)continue;let l=s[a];(c=>{let p="",m,f,d;for(let g of c){if(typeof g=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(g)!==-1){let x=this.internalOutputShapes[a];x[x.length-1]===1||this.lossFunctions[a]===hu?["accuracy","acc"].indexOf(g)!==-1?f=uf:["crossentropy","ce"].indexOf(g)!==-1&&(f=y6):this.lossFunctions[a]===du?["accuracy","acc"].indexOf(g)!==-1?f=b6:["crossentropy","ce"].indexOf(g)!==-1&&(f=v6):["accuracy","acc"].indexOf(g)!==-1?f=pf:["crossentropy","ce"].indexOf(g)!==-1&&(f=mf);let y;["accuracy","acc"].indexOf(g)!==-1?y="acc":["crossentropy","ce"].indexOf(g)!==-1&&(y="ce"),d=f,m=p+y}else d=dS(g),m=p+Pp(g);let h;Mo(m,()=>{h=d}),i(a,m,h)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,n,o={}){let s=o.batchSize==null?32:o.batchSize;yf(s);let a=this.standardizeUserDataXY(e,n,!0,s);try{let l=a[0].concat(a[1]);this.makeTestFunction();let u=this.testFunction,c=this.testLoop(u,l,s,o.verbose,o.steps);return Sr(c)}finally{xo(a[0],e),xo(a[1],n)}}evaluateDataset(e,n){return O(this,null,function*(){return this.makeTestFunction(),SS(this,e,n)})}checkNumSamples(e,n,o,s="steps"){let i;if(o!=null){if(i=null,n!=null)throw new L(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${n}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new L(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return i}execute(e,n){if(Array.isArray(n)&&n.length===0)throw new L("`outputs` is an empty Array, which is not allowed.");let o=Array.isArray(n),s=o?n:[n],i=this.retrieveSymbolicTensors(s),a=new xs;if(e instanceof Ke&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new L(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)a.add(this.inputs[u],e[u])}else for(let u of this.inputs){let c=e[u.name];if(c==null)throw new L(`No value is provided for the model's input ${u.name}`);a.add(u,c)}let l=Ml(i,a);return o?l:l[0]}retrieveSymbolicTensors(e){let n=po(null,e.length),o=e.length;for(let s of this.layers){let i=Array.isArray(s.output)?s.output:[s.output],a=i.map(l=>l.name);for(let l=0;l<e.length;++l){let u=a.indexOf(e[l]);if(u!==-1&&(n[l]=i[u],o--),o===0)break}if(o===0)break}if(o>0){let s=[];throw n.forEach((i,a)=>{i==null&&s.push(e[a])}),new L(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return n}predictLoop(e,n=32,o=!1){return B(()=>{let s=this.checkNumSamples(e);if(o)throw new Se("Verbose predictLoop() is not implemented yet.");let i=vf(s,n),a=this.outputs.map(l=>[]);for(let l=0;l<i.length;++l)B(()=>{let c=i[l][0],p=i[l][1],m=xu(e,c,p),f=[];if(Array.isArray(m))for(let g=0;g<m.length;++g)f.push({key:this.inputs[g],value:m[g]});else f.push({key:this.inputs[0],value:m});let d=new xs(f);return Ml(this.outputs,d)}).forEach((c,p)=>a[p].push(c));return Sr(a.map(l=>Ye(l,0)))})}predict(e,n={}){let o=C6(e);kS(o,this.inputNames,this.feedInputShapes,!1);try{let s=n.batchSize==null?32:n.batchSize;return yf(s),this.predictLoop(o,s)}finally{xo(o,e)}}predictOnBatch(e){kS(e,this.inputNames,this.feedInputShapes,!0);let n=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,n)}standardizeUserDataXY(e,n,o=!0,s){if(this.optimizer_==null)throw new rn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let i=[];for(let a=0;a<this.feedOutputShapes.length;++a){let l=this.feedOutputShapes[a];this.feedLossFns[a]===du?i.push(l.slice(0,l.length-1).concat([1])):i.push(l)}if(e=NS(e,this.feedInputNames,this.feedInputShapes,!1,"input"),n=NS(n,this.feedOutputNames,i,!1,"target"),qH(e,n,null),HH(n,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new L(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,n]}standardizeUserData(e,n,o,s,i=!0,a){return O(this,null,function*(){let[l,u]=this.standardizeUserDataXY(e,n,i,a);if(o!=null)throw new Error("sample weight is not supported yet.");let c=null;if(s!=null){let p=gf(s,this.outputNames);c=[];for(let m=0;m<p.length;++m)c.push(yield xf(u[m],null,p[m]))}return[l,u,c]})}testLoop(e,n,o,s=0,i){return B(()=>{let a=this.checkNumSamples(n,o,i,"steps"),l=[];if(s>0)throw new Se("Verbose mode is not implemented yet.");if(i!=null)throw new Se("steps mode in testLoop() is not implemented yet");{let u=vf(a,o),c=Dt(on(0,a));for(let p=0;p<u.length;++p){let m=u[p][0],f=u[p][1],d=$i(c,m,f-m),g=bf(n,d),h=e(g);if(p===0)for(let x=0;x<h.length;++x)l.push(ce(0));for(let x=0;x<h.length;++x){let y=h[x];l[x]=H(l[x],R(f-m,y))}}for(let p=0;p<l.length;++p)l[p]=se(l[p],a)}return l})}getDedupedMetricsNames(){let e=this.metricsNames,n=[];for(let o=0;o<e.length;++o){let s=e[o],i=s;if(r6(e,s)>1){let a=r6(e.slice(0,o),s);i+=`_${a}`}n.push(i)}return n}makeTrainFunction(){return e=>{let n=[],o=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],l=()=>{let m=[];for(let h=0;h<this.inputs.length;++h)m.push({key:this.inputs[h],value:o[h]});let f=new xs(m),d=Ml(this.outputs,f,{training:!0}),g;for(let h=0;h<this.lossFunctions.length;++h){let x=this.lossFunctions[h],y=x(s[h],d[h]);i[h]!=null&&(y=bS(y,i[h]));let v=xt(y);n.push(v),h===0?g=y:g=H(g,y)}for(let h=0;h<this.metricsTensors.length;++h){let x;if(this.outputs.length>1&&h<this.outputs.length)x=n[h];else{let y=this.metricsTensors[h][0],v=this.metricsTensors[h][1];x=xt(y(s[v],d[v]))}Ct(x),a.push(x)}return g=xt(g),this.calculateLosses().forEach(h=>{g=H(g,h)}),g},u=this.collectedTrainableWeights.map(m=>m.read());return[this.optimizer_.minimize(l,!0,u)].concat(a)}}makeTestFunction(){this.testFunction=e=>B(()=>{let n=[],o,s=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let c=0;c<this.inputs.length;++c)a.push({key:this.inputs[c],value:s[c]});let l=new xs(a),u=Ml(this.outputs,l);for(let c=0;c<this.lossFunctions.length;++c){let p=this.lossFunctions[c],m=xt(p(i[c],u[c]));c===0?o=m:o=H(o,m),n.push(o)}for(let c=0;c<this.metricsTensors.length;++c){let p=this.metricsTensors[c][0],m=this.metricsTensors[c][1],f=xt(p(i[m],u[m]));n.push(f)}return n})}fit(s,i){return O(this,arguments,function*(e,n,o={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,l,u,c,p,m,f,d,g;try{let h=o.batchSize==null?32:o.batchSize;yf(h);let y=yield this.standardizeUserData(e,n,o.sampleWeight,o.classWeight,!1,h);a=y[0],l=y[1],g=y[2];let v=!1,w;if(o.validationData!=null&&o.validationData.length>0){if(v=!0,o.validationData.length===2)p=o.validationData[0],m=o.validationData[1];else throw o.validationData.length===3?new Se("validationData including sample weights is not supported yet."):new L(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${o.validationData} is invalid.`);let q=yield this.standardizeUserData(p,m,null,null,!0,h);f=q[0],d=q[1],w=f.concat(d)}else if(o.validationSplit!=null&&o.validationSplit>0&&o.validationSplit<1){v=!0;let U=Math.floor(a[0].shape[0]*(1-o.validationSplit)),q=a[0].shape[0];f=xu(a,U,q),u=a,a=xu(a,0,U),d=xu(l,U,q),c=l,l=xu(l,0,U),w=f.concat(d)}else o.validationSteps!=null&&(v=!0);let I=a.concat(l).concat(g);this.checkTrainableWeightsConsistency();let E=this.makeTrainFunction(),_=this.getDedupedMetricsNames(),D,M;v?(this.makeTestFunction(),D=this.testFunction,M=_.slice().concat(_.map(U=>"val_"+U))):(D=null,w=[],M=_.slice());let P=of(o.callbacks,o.yieldEvery);return yield this.fitLoop(E,I,_,h,o.epochs,o.verbose,P,D,w,o.shuffle,M,o.initialEpoch,null,null)}finally{this.isTraining=!1,xo(a,e),xo(l,n),xo(u,e),xo(c,n),xo(f,p),xo(d,m),g!=null&&Ae(g)}})}fitLoop(e,n,o,s,i,a,l,u,c,p,m,f,d,g){return O(this,null,function*(){s==null&&(s=32),i==null&&(i=1),p==null&&(p=!0),f==null&&(f=0);let h=!1;if(u!=null&&c!=null&&(h=!0),g!=null&&(h=!0,d==null))throw new L("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let x=this.checkNumSamples(n,s,d,"steps_per_epoch"),y;x!=null&&(y=on(0,x)),a==null&&(a=1);let{callbackList:v,history:w}=sf(l,a,i,f,x,d,s,h,m);v.setModel(this),this.history=w,yield v.onTrainBegin(),this.stopTraining_=!1;for(let I=f;I<i;++I){yield v.onEpochBegin(I);let E={};if(d!=null)throw new Se("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Se("batch shuffling is not implemneted yet");p&&b.shuffle(y);let _=Dt(y),D=vf(x,s);for(let M=0;M<D.length;++M){let P={};if(yield v.onBatchBegin(M,P),B(()=>{let V=D[M][0],U=D[M][1],q=$i(_,V,U-V);P.batch=M,P.size=U-V;let K=bf(n,q),j=e(K);for(let Y=0;Y<o.length;++Y){let ee=o[Y],Z=j[Y];P[ee]=Z,Ct(Z)}if(M===D.length-1&&h){let Y=this.testLoop(u,c,s);for(let ee=0;ee<o.length;++ee){let Z=o[ee],Q=Y[ee];Ct(Q),E["val_"+Z]=Q}}}),yield v.onBatchEnd(M,P),ef(P),this.stopTraining_)break}_.dispose()}if(yield v.onEpochEnd(I,E),this.stopTraining_)break}return yield v.onTrainEnd(),yield this.history.syncData(),this.history})}fitDataset(e,n){return O(this,null,function*(){return CS(this,e,n)})}trainOnBatch(e,n){return O(this,null,function*(){let o=yield this.standardizeUserData(e,n),s=o[0],i=o[1],l=this.makeTrainFunction()(s.concat(i)),u=[];for(let c of l){let p=yield c.data();u.push(p[0])}return Ae(l),xo(o[0],e),xo(o[1],n),Sr(u)})}getNamedWeights(e){let n=[],o=e!=null&&e.trainableOnly,s=o?this.trainableWeights:this.weights,i=this.getWeights(o);for(let a=0;a<s.length;++a)o&&!s[a].trainable||n.push({name:s[a].originalName,tensor:i[a]});return n}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let n=fp().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=n-fp().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=mo(this.loss);else if(Array.isArray(this.loss)){for(let n of this.loss)if(typeof n!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(n=>mo(n))}else{let n=Object.keys(this.loss);e={};let o=this.loss;for(let s of n)if(typeof o[s]=="string")e[s]=mo(o[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[mo(Pp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>mo(Pp(e)));{let e={};for(let n in this.metrics)e[n]=mo(Pp(this.metrics[n]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let n=Lp(e.optimizer_config),o=Fn(n),s;if(typeof e.loss=="string")s=Ri(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Ri(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=Ri(e.loss[a])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(a=>Ri(a));else if(e.metrics!=null){i={};for(let a in e.metrics)i[a]=Ri(e.metrics[a])}this.compile({loss:s,metrics:i,optimizer:o})}save(e,n){return O(this,null,function*(){if(typeof e=="string"){let c=Fo.getSaveHandlers(e);if(c.length===0)throw new L(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new L(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new L("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let o=yield Fo.encodeWeights(this.getNamedWeights(n)),l={modelTopology:this.toJSON(null,!1),format:jH,generatedBy:`TensorFlow.js tfjs-layers v${gu}`,convertedBy:null};if((n==null?!1:n.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();let c="optimizer",{data:p,specs:m}=yield Fo.encodeWeights(yield this.optimizer.getWeights(),c);o.specs.push(...m),o.data=Fo.concatenateArrayBuffers([o.data,p])}return this.userDefinedMetadata!=null&&(T6(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=o.data,l.weightSpecs=o.specs,e.save(l)})}setUserDefinedMetadata(e){T6(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}return r.className="Model",r})();X.registerClass(Pi);var XH=(()=>{class r extends Pi{}return r.className="Functional",r})();X.registerClass(XH);var I6=(()=>{class r extends Pi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:C0("sequential_"),e.layers!=null)for(let n of e.layers)this.add(n)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(o=>o<0))throw new L(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let n=e instanceof r||e instanceof Pi,o;if(n){if(o=e,o.outputs.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(o.inputs.length!==1)throw new L("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new L("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=h6({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(n)this.outputs=o.outputs,this.inputs=o.inputs;else{if(e.inboundNodes.length!==1)throw new L(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new L("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=d6(this.outputs[0])}this.inboundNodes=[],new Oi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:po(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,n){return this.model==null&&this.build(),this.model.call(e,n)}build(e){if(Fe(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Pi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,n,o=console.log){this.built||this.build(),super.summary(e,n,o)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,n,o={}){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.evaluate(e,n,o)}evaluateDataset(e,n){return O(this,null,function*(){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,n)})}predict(e,n={}){return this.model==null&&this.build(),this.model.predict(e,n)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}fit(s,i){return O(this,arguments,function*(e,n,o={}){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.fit(e,n,o)})}fitDataset(e,n){return O(this,null,function*(){if(!this.built)throw new rn("The model needs to be compiled before being used.");return this.model.fitDataset(e,n)})}trainOnBatch(e,n){return O(this,null,function*(){return this.model.trainOnBatch(e,n)})}static fromConfig(e,n,o={},s=!1){let i,a={};if(n instanceof Array){if(n[0].className==null||n[0].className==="Merge")throw new L("Legacy serialization format not supported yet.");i=n}else b.assert(n.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=n.layers,delete n.layers,a=n;let l=new e(a);if(!(l instanceof r))throw new Se(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(let u of i){let p=Fn(u,void 0,s);s&&p.setFastWeightInitDuringBuild(!0),l.add(p)}return l}set stopTraining(e){if(this.model==null)throw new L("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new L("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let n of this.layers){let o={};o.className=n.getClassName(),o.config=n.getConfig(),e.push(o)}return{name:this.name,layers:e}}}return r.className="Sequential",r})();X.registerClass(I6);var Dr=class extends X.Serializable{getConfig(){return{}}},ZH=(()=>{class r extends Dr{apply(e,n=1){return GC(e,n)}}return r.className="elu",r})();X.registerClass(ZH);var JH=(()=>{class r extends Dr{apply(e){return Wc(e)}}return r.className="selu",r})();X.registerClass(JH);var QH=(()=>{class r extends Dr{apply(e){return _r(e)}}return r.className="relu",r})();X.registerClass(QH);var eK=(()=>{class r extends Dr{apply(e){return B(()=>Xn(6,_r(e)))}}return r.className="relu6",r})();X.registerClass(eK);var tK=(()=>{class r extends Dr{apply(e){return e}}return r.className="linear",r})();X.registerClass(tK);var rK=(()=>{class r extends Dr{apply(e){return Wr(e)}}return r.className="sigmoid",r})();X.registerClass(rK);var nK=(()=>{class r extends Dr{apply(e){return UC(e)}}return r.className="hardSigmoid",r})();X.registerClass(nK);var oK=(()=>{class r extends Dr{apply(e){return Ro(e)}}return r.className="softplus",r})();X.registerClass(oK);var sK=(()=>{class r extends Dr{apply(e){return VC(e)}}return r.className="softsign",r})();X.registerClass(sK);var iK=(()=>{class r extends Dr{apply(e){return Do(e)}}return r.className="tanh",r})();X.registerClass(iK);var k6=(()=>{class r extends Dr{apply(e,n=-1){return y0(e,n)}}return r.className="softmax",r})();X.registerClass(k6);var aK=(()=>{class r extends Dr{apply(e,n=-1){return zc(e,n)}}return r.className="logSoftmax",r})();X.registerClass(aK);var lK=(()=>{class r extends Dr{apply(e){return B(()=>B(()=>{let n=Math.sqrt(2),o=R(.5,H(1,Lc(se(e,n))));return R(e,o)}))}}return r.className="gelu",r})();X.registerClass(lK);var cK=(()=>{class r extends Dr{apply(e){return B(()=>R(.5,R(e,H(1,Do(R(lt(se(2,Math.PI)),H(e,R(.044715,Or(e,3)))))))))}}return r.className="gelu_new",r})();X.registerClass(cK);var uK=(()=>{class r extends Dr{apply(e){return B(()=>R(e,Do(Ro(e))))}}return r.className="mish",r})();X.registerClass(uK);var pK=(()=>{class r extends Dr{apply(e,n=1){return B(()=>R(Wr(R(e,n)),e))}}return r.className="swish",r})();X.registerClass(pK);function Lo(r){return r.getClassName()}function N6(r,t={}){return hs(r,X.SerializationMap.getMap().classNameMap,t,"activation")}function zo(r){if(r==null){let t={};return t.className="linear",t.config={},N6(t)}if(typeof r=="string"){let t={};return t.className=r,t.config={},N6(t)}else return r instanceof Dr?r:N6(r)}function mK(r){if(r!=null&&typeof r!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}var wf=class extends X.Serializable{},_S=(()=>{class r extends wf{constructor(e){super(),mK(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return B(()=>{let n=yt([1]);return this.hasL1&&(n=H(n,ue(R(this.l1,wt(e))))),this.hasL2&&(n=H(n,ue(R(this.l2,Fl(e))))),$(n,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,n){return new e({l1:n.l1,l2:n.l2})}}return r.className="L1L2",r})();X.registerClass(_S);var AS={l1l2:"L1L2"};function ot(r){return au(r)}function ES(r,t={}){return hs(r,X.SerializationMap.getMap().classNameMap,t,"regularizer")}function mt(r){if(r==null)return null;if(typeof r=="string"){let e={className:r in AS?AS[r]:r,config:{}};return ES(e)}else return r instanceof wf?r:ES(r)}var DS=(()=>{class r extends Ie{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,n){e=we(e);let o=_r(e);return this.maxValue!=null&&(o=vr(o,0,this.maxValue)),o}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},n=super.getConfig();return Object.assign(e,n),e}}return r.className="ReLU",r})();X.registerClass(DS);var RS=(()=>{class r extends Ie{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=we(e);return p0(o,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}return r.className="LeakyReLU",r})();X.registerClass(RS);var $S=(()=>{class r extends Ie{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ct(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=mt(e.alphaRegularizer),this.alphaConstraint=$t(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new L(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Fe(e);let n=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)n[s-1]=1;this.alpha=this.addWeight("alpha",n,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let o={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)o[s]=e[s];this.inputSpec=[new pt({ndim:e.length,axes:o})],this.built=!0}call(e,n){return e=we(e),x0(e,this.alpha.read())}getConfig(){let e={alphaInitializer:bt(this.alphaInitializer),alphaRegularizer:ot(this.alphaRegularizer),alphaConstraint:Rt(this.alphaConstraint),sharedAxes:this.sharedAxes},n=super.getConfig();return Object.assign(e,n),e}}return r.className="PReLU",r})();X.registerClass($S);var FS=(()=>{class r extends Ie{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Se(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,n){let o=we(e);return ps(o)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},n=super.getConfig();return Object.assign(e,n),e}}return r.className="ELU",r})();X.registerClass(FS);var OS=(()=>{class r extends Ie{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,n){let o=we(e);return R(o,J(Et(o,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},n=super.getConfig();return Object.assign(e,n),e}}return r.className="ThresholdedReLU",r})();X.registerClass(OS);var MS=(()=>{class r extends Ie{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new k6().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,n){return B(()=>{let o=we(e),s=n.mask;if(s!=null){let i=R(oe(Qt(o.shape),J(s,o.dtype)),ce(-1e9));o=H(o,i)}return this.axis instanceof Array?this.axis.length>1?Gt(oe(o,f0(o,this.axis,!0))):this.softmax(o,this.axis[0]):this.softmax(o,this.axis)})}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Softmax",r})();X.registerClass(MS);function N0(r,t,e){if(typeof r=="number")return po(r,t);if(r.length!==t)throw new L(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${r.length} elements.`);for(let n=0;n<t;++n){let o=r[n];if(!PC(o))throw new L(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r}function vn(r,t,e,n,o=1){if(r==null)return r;let s=t+(t-1)*(o-1),i;return e==="same"?i=r:i=r-s+1,Math.floor((i+n-1)/n)}function Bo(r,t,e,n){if(r==null)return null;if(n==="valid")r=r*t+Po([e-t,0]);else if(n==="same")r=r*t;else throw new L(`Unsupport padding mode: ${n}.`);return r}function Bp(r,t){return B(()=>(St(t),t==="channelsFirst"?Pe(r,[0,2,3,1]):r))}function A6(r,t){return B(()=>(St(t),t==="channelsFirst"?Pe(r,[0,2,3,4,1]):r))}function dK(r,t,e,n=1,o="valid",s,i=1){return B(()=>{if(s==null&&(s=sn()),St(s),r.shape.length!==3)throw new L(`The input of a conv1dWithBias operation should be 3, but is ${r.shape.length} instead.`);if(t.shape.length!==3)throw new L(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new L(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(s==="channelsFirst"&&(r=Pe(r,[0,2,1])),o==="causal")throw new Se("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=$c(r,t,n,o==="same"?"same":"valid","NWC",i);return e!=null&&(a=an(a,e)),a})}function PS(r,t,e,n=[1,1],o="valid",s,i,a=null){return B(()=>{if(s==null&&(s=sn()),St(s),r.rank!==3&&r.rank!==4)throw new L(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(t.rank!==3&&t.rank!==4)throw new L(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let l=Bp(r,s);if(o==="causal")throw new Se("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=w0.conv2d({x:l,filter:t,strides:n,pad:o==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:a}),s==="channelsFirst"&&(l=Pe(l,[0,3,1,2])),l})}function hK(r,t,e,n=[1,1,1],o="valid",s,i){return B(()=>{if(s==null&&(s=sn()),St(s),r.rank!==4&&r.rank!==5)throw new L(`conv3dWithBias expects input to be of rank 4 or 5, but received ${r.rank}.`);if(t.rank!==4&&t.rank!==5)throw new L(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${r.rank}.`);let a=A6(r,s);if(o==="causal")throw new Se("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=Vm(a,t,n,o==="same"?"same":"valid","NDHWC",i),e!=null&&(a=an(a,e)),s==="channelsFirst"&&(a=Pe(a,[0,4,1,2,3])),a})}var zp=class r extends Ie{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",r.verifyArgs(e),this.rank=t,Ht(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Se(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=N0(e.kernelSize,t,"kernelSize"),this.strides=N0(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,nn(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,St(this.dataFormat),this.activation=zo(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=$t(e.biasConstraint),this.biasRegularizer=mt(e.biasRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.dilationRate=N0(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new L(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new L(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new L(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Zn("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!B3(t.kernelSize,"number",1,3))throw new L(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){let t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Lo(this.activation),useBias:this.useBias,biasInitializer:bt(this.biasInitializer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),biasConstraint:Rt(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}},yu=class r extends zp{constructor(t,e){super(t,e),this.kernel=null,r.verifyArgs(e),this.filters=e.filters,Ht(this.filters,"filters"),this.kernelInitializer=ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=$t(e.kernelConstraint),this.kernelRegularizer=mt(e.kernelRegularizer)}build(t){t=Fe(t);let e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new L(`The channel dimension of the input should be defined. Found ${t[e]}`);let n=t[e],o=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return B(()=>{t=we(t);let n,o=this.bias==null?null:this.bias.read(),s=G3(this.activation.getClassName());if(s!=null&&this.rank===2)n=PS(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(this.rank===1)n=dK(t,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=PS(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=hK(t,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Se("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(t){t=Fe(t);let e=[],n=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let s=0;s<n.length;++s){let i=vn(n[s],this.kernelSize[s],this.padding,this.strides[s],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[s]);e.push(i)}let o=[t[0]];return this.dataFormat==="channelsLast"?(o=o.concat(e),o.push(this.filters)):(o.push(this.filters),o=o.concat(e)),o}getConfig(){let t={filters:this.filters,kernelInitializer:bt(this.kernelInitializer),kernelRegularizer:ot(this.kernelRegularizer),kernelConstraint:Rt(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new L(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}},E6=(()=>{class r extends yu{constructor(e){super(2,e),r.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!B3(e.kernelSize,"number",1,2))throw new L(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}return r.className="Conv2D",r})();X.registerClass(E6);var _6=(()=>{class r extends yu{constructor(e){super(3,e),r.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new L(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}return r.className="Conv3D",r})();X.registerClass(_6);var LS=(()=>{class r extends E6{constructor(e){if(super(e),this.inputSpec=[new pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Fe(e),e.length!==4)throw new L("Input should have rank 4; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pt({ndim:4,axes:{[n]:o}})],this.built=!0}call(e,n){return B(()=>{let o=we(e);if(o.shape.length!==4)throw new L(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,i=s[0],a,l;this.dataFormat==="channelsFirst"?(a=2,l=3):(a=1,l=2);let u=s[a],c=s[l],p=this.kernelSize[0],m=this.kernelSize[1],f=this.strides[0],d=this.strides[1],g=Bo(u,f,p,this.padding),h=Bo(c,d,m,this.padding),x=[i,g,h,this.filters];this.dataFormat!=="channelsLast"&&(o=Pe(o,[0,2,3,1]));let y=Oc(o,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(y=Pe(y,[0,3,1,2])),this.bias!=null&&(y=an(y,this.bias.read(),this.dataFormat)),this.activation!=null&&(y=this.activation.apply(y)),y})}computeOutputShape(e){e=Fe(e);let n=e.slice(),o,s,i;this.dataFormat==="channelsFirst"?(o=1,s=2,i=3):(o=3,s=1,i=2);let a=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return n[o]=this.filters,n[s]=Bo(n[s],u,a,this.padding),n[i]=Bo(n[i],c,l,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}return r.className="Conv2DTranspose",r})();X.registerClass(LS);var zS=(()=>{class r extends _6{constructor(e){if(super(e),this.inputSpec=[new pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new L(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Fe(e),e.length!==5)throw new L("Input should have rank 5; Received input shape: "+JSON.stringify(e));let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new L("The channel dimension of the inputs should be defined. Found `None`.");let o=e[n],s=this.kernelSize.concat([this.filters,o]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new pt({ndim:5,axes:{[n]:o}})],this.built=!0}call(e,n){return B(()=>{let o=we(e);if(o.shape.length!==5)throw new L(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${o.shape.length}`);let s=o.shape,i=s[0],a,l,u;this.dataFormat==="channelsFirst"?(u=2,a=3,l=4):(u=1,a=2,l=3);let c=s[u],p=s[a],m=s[l],f=this.kernelSize[0],d=this.kernelSize[1],g=this.kernelSize[2],h=this.strides[0],x=this.strides[1],y=this.strides[2],v=Bo(c,h,f,this.padding),w=Bo(p,x,d,this.padding),I=Bo(m,y,g,this.padding),E=[i,v,w,I,this.filters];this.dataFormat!=="channelsLast"&&(o=Pe(o,[0,2,3,4,1]));let _=Wm(o,this.kernel.read(),E,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=Pe(_,[0,4,1,2,3])),this.bias!==null&&(_=an(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(e){e=Fe(e);let n=e.slice(),o,s,i,a;this.dataFormat==="channelsFirst"?(o=1,s=2,i=3,a=4):(o=4,s=1,i=2,a=3);let l=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],p=this.strides[0],m=this.strides[1],f=this.strides[2];return n[o]=this.filters,n[s]=Bo(n[s],p,l,this.padding),n[i]=Bo(n[i],m,u,this.padding),n[a]=Bo(n[a],f,c,this.padding),n}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}}return r.className="Conv3DTranspose",r})();X.registerClass(zS);var gK=(()=>{class r extends yu{constructor(e,n){if(super(e,n),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,n.filters==null)throw new L("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(n.kernelInitializer!=null||n.kernelRegularizer!=null||n.kernelConstraint!=null)throw new L("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(n.padding!=null&&n.padding!=="same"&&n.padding!=="valid")throw new L(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(n.padding)}`);this.depthMultiplier=n.depthMultiplier==null?1:n.depthMultiplier,this.depthwiseInitializer=ct(n.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=mt(n.depthwiseRegularizer),this.depthwiseConstraint=$t(n.depthwiseConstraint),this.pointwiseInitializer=ct(n.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=mt(n.pointwiseRegularizer),this.pointwiseConstraint=$t(n.pointwiseConstraint)}build(e){if(e=Fe(e),e.length<this.rank+2)throw new L(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null||e[n]<0)throw new L(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[n])}`);let o=e[n],s=this.kernelSize.concat([o,this.depthMultiplier]),i=[];for(let l=0;l<this.rank;++l)i.push(1);i.push(o*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new pt({ndim:this.rank+2,axes:{[n]:o}})],this.built=!0}call(e,n){return B(()=>{e=we(e);let o;if(this.rank===1)throw new Se("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Pe(e,[0,2,3,1])),o=qc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(o=an(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),this.dataFormat==="channelsFirst"&&(o=Pe(o,[0,3,1,2])),o})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=bt(this.depthwiseInitializer),e.pointwiseInitializer=bt(this.pointwiseInitializer),e.depthwiseRegularizer=ot(this.depthwiseRegularizer),e.pointwiseRegularizer=ot(this.pointwiseRegularizer),e.depthwiseConstraint=Rt(this.depthwiseConstraint),e.pointwiseConstraint=Rt(this.pointwiseConstraint),e}}return r.className="SeparableConv",r})();var BS=(()=>{class r extends gK{constructor(e){super(2,e)}}return r.className="SeparableConv2D",r})();X.registerClass(BS);var GS=(()=>{class r extends yu{constructor(e){super(1,e),r.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!B3(e.kernelSize,"number",1,1))throw new L(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}return r.className="Conv1D",r})();X.registerClass(GS);var VS=(()=>{class r extends Ie{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,n){return B(()=>{if(e=we(e),this.dataFormat==="channelsLast"){let o=_p(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return _p(o,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let o=_p(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return _p(o,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Cropping2D",r})();X.registerClass(VS);var US=(()=>{class r extends Ie{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,St(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,OC(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let n=e[2]==null?null:this.size[0]*e[2],o=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],n,o]}else{let n=e[1]==null?null:this.size[0]*e[1],o=e[2]==null?null:this.size[1]*e[2];return[e[0],n,o,e[3]]}}call(e,n){return B(()=>{let o=we(e),s=o.shape;if(this.dataFormat==="channelsFirst"){o=Pe(o,[0,2,3,1]);let i=this.size[0]*s[2],a=this.size[1]*s[3],l=this.interpolation==="nearest"?bn.resizeNearestNeighbor(o,[i,a]):bn.resizeBilinear(o,[i,a]);return Pe(l,[0,3,1,2])}else{let i=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?bn.resizeNearestNeighbor(o,[i,a]):bn.resizeBilinear(o,[i,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}}return r.className="UpSampling2D",r})();X.registerClass(US);function xK(r,t,e=[1,1],n="valid",o,s){return B(()=>{o==null&&(o=sn()),St(o);let i=Bp(r,o);if(r.rank!==4)throw new L(`Input for depthwiseConv2d is required to be 4-D, but is instead ${r.rank}-D`);if(t.rank!==4)throw new L(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=us(i,t,e,n==="same"?"same":"valid","NHWC",s),o==="channelsFirst"&&(i=Pe(i,[0,3,1,2])),i})}var WS=(()=>{class r extends zp{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ct(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=$t(e.depthwiseConstraint),this.depthwiseRegularizer=mt(e.depthwiseRegularizer)}build(e){if(e=Fe(e),e.length<4)throw new L(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let n=this.dataFormat==="channelsFirst"?1:3;if(e[n]==null||e[n]<0)throw new L(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[n]}).`);let o=e[n],s=[this.kernelSize[0],this.kernelSize[1],o,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[o*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return B(()=>{e=we(e);let o=xK(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(o=an(o,this.bias.read(),this.dataFormat)),this.activation!=null&&(o=this.activation.apply(o)),o})}computeOutputShape(e){e=Fe(e);let n=this.dataFormat==="channelsFirst"?e[2]:e[1],o=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=vn(n,this.kernelSize[0],this.padding,this.strides[0]),a=vn(o,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,i,a]:[e[0],i,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=bt(this.depthwiseInitializer),e.depthwiseRegularizer=ot(this.depthwiseRegularizer),e.depthwiseConstraint=Rt(this.depthwiseRegularizer),e}}return r.className="DepthwiseConv2D",r})();X.registerClass(WS);function D6(r,t,e,n){if(Array.isArray(r)){if(t!=null||e!=null)throw new L("When inputs is an array, neither initialState or constants should be provided");n!=null&&(e=r.slice(r.length-n,r.length),r=r.slice(0,r.length-n)),r.length>1&&(t=r.slice(1,r.length)),r=r[0]}function o(s){return s==null||Array.isArray(s)?s:[s]}return t=o(t),e=o(e),{inputs:r,initialState:t,constants:e}}function R6(r,t,e,n=!1,o,s,i=!1,a=!1){return B(()=>{let l=t.shape.length;if(l<3)throw new L(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(on(2,l));if(t=Pe(t,u),s!=null)throw new Se("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=J(J(o,"bool"),"float32"),o.rank===l-1&&(o=Wt(o,-1)),o=Pe(o,u)),n&&(t=ur(t,0),o!=null&&(o=ur(o,0)));let c=[],p,m=e,f=t.shape[0],d=mr(t),g;o!=null&&(g=mr(o));for(let x=0;x<f;++x){let y=d[x],v=B(()=>r(y,m));if(o==null)p=v[0],m=v[1];else{let w=B(()=>{let I=g[x],E=oe(hr(I),I),_=H(R(v[0],I),R(m[0],E)),D=m.map((M,P)=>H(R(v[1][P],I),R(M,E)));return{output:_,newStates:D}});p=w.output,m=w.newStates}a&&c.push(p)}let h;return a&&(h=_t(c,1)),[p,h,m]})}var A0=(()=>{class r extends Ie{constructor(e){super(e);let n;if(e.cell==null)throw new L("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?n=new O6({cells:e.cell}):n=e.cell,n.stateSize==null)throw new L("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=n,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return on(0,e).map(n=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Z3(e)&&(e=e[0]),e=e;let n=this.cell.stateSize;Array.isArray(n)||(n=[n]);let o=n[0],s;if(this.returnSequences?s=[e[0],e[1],o]:s=[e[0],o],this.returnState){let i=[];for(let a of n)i.push([e[0],a]);return[s].concat(i)}else return s}computeMask(e,n){return B(()=>{Array.isArray(n)&&(n=n[0]);let o=this.returnSequences?n:null;if(this.returnState){let s=this.states.map(i=>null);return[o].concat(s)}else return o})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,n=[];for(let o=0;o<e;++o)n.push(null);return n}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Se("Constants support is not implemented in RNN yet.");Z3(e)&&(e=e[0]),e=e;let o=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new pt({shape:[o,null,...s]});let i=[e[0]].concat(e.slice(2));this.cell.build(i);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!b.arraysEqual(this.stateSpec.map(l=>l.shape[l.shape.length-1]),a))throw new L(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(l=>new pt({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,n=!1){B(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape[0];if(o==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>yt([o,s])):this.states_=[yt([o,this.cell.stateSize])];else if(e==null)Ae(this.states_),this.keptStates!=null&&(Ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>yt([o,s])):this.states_[0]=yt([o,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n===!0?this.keptStates.push(this.states_.slice()):Ae(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,l=[o,a];if(!b.arraysEqual(i.shape,l))throw new L(`State ${s} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Ct(s.clone()))})}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let i=D6(e,o,s,this.numConstants);e=i.inputs,o=i.initialState,s=i.constants;let a=[],l=[];if(o!=null){n.initialState=o,a=a.concat(o),this.stateSpec=[];for(let c of o)this.stateSpec.push(new pt({shape:c.shape}));l=l.concat(this.stateSpec)}if(s!=null&&(n.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Kr){let c=[e].concat(a),p=this.inputSpec.concat(l),m=this.inputSpec;this.inputSpec=p;let f=super.apply(c,n);return this.inputSpec=m,f}else return super.apply(e,n)}call(e,n){return B(()=>{let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;e=we(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new L(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let l={training:s},c=R6((g,h)=>{let x=this.cell.call([g].concat(h),l);return[x[0],x.slice(1)]},e,i,this.goBackwards,o,null,this.unroll,this.returnSequences),p=c[0],m=c[1],f=c[2];this.stateful&&this.resetStates(f,s);let d=this.returnSequences?m:p;return this.returnState?[d].concat(f):d})}getInitialState(e){return B(()=>{let n=yt(e.shape);return n=ue(n,[1,2]),n=Fi(n),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(o=>o>1?K3(n,[1,o]):n):this.cell.stateSize>1?[K3(n,[1,this.cell.stateSize])]:[n]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),n={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(n.numConstants=this.numConstants);let o=this.cell.getConfig();return this.getClassName()===r.className&&(n.cell={className:this.cell.getClassName(),config:o}),Object.assign(Object.assign(Object.assign({},o),e),n)}static fromConfig(e,n,o={}){let s=n.cell,i=Fn(s,o);return new e(Object.assign(n,{cell:i}))}}return r.className="RNN",r})();X.registerClass(A0);var k0=class extends Ie{},$6=(()=>{class r extends k0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ht(this.units,"units"),this.activation=zo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=$t(e.kernelConstraint),this.recurrentConstraint=$t(e.recurrentConstraint),this.biasConstraint=$t(e.biasConstraint),this.dropout=$l([1,Po([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$l([1,Po([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Fe(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return B(()=>{if(e=e,e.length!==2)throw new L(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let o=e[1];e=e[0];let s=n.training==null?!1:n.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Li({ones:()=>hr(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Li({ones:()=>hr(o),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let i,a=this.dropoutMask,l=this.recurrentDropoutMask;a!=null?i=go(R(e,a),this.kernel.read()):i=go(e,this.kernel.read()),this.bias!=null&&(i=an(i,this.bias.read())),l!=null&&(o=R(o,l));let u=H(i,go(o,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Lo(this.activation),useBias:this.useBias,kernelInitializer:bt(this.kernelInitializer),recurrentInitializer:bt(this.recurrentInitializer),biasInitializer:bt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),recurrentConstraint:Rt(this.recurrentConstraint),biasConstraint:Rt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),n)}}return r.className="SimpleRNNCell",r})();X.registerClass($6);var qS=(()=>{class r extends A0{constructor(e){e.cell=new $6(e),super(e)}call(e,n){return B(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:i})})}static fromConfig(e,n){return new e(n)}}return r.className="SimpleRNN",r})();X.registerClass(qS);var F6=(()=>{class r extends k0{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new L("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ht(this.units,"units"),this.activation=zo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=$t(e.kernelConstraint),this.recurrentConstraint=$t(e.recurrentConstraint),this.biasConstraint=$t(e.biasConstraint),this.dropout=$l([1,Po([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$l([1,Po([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Fe(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,n){return B(()=>{if(e=e,e.length!==2)throw new L(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training==null?!1:n.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Li({ones:()=>hr(e),rate:this.dropout,training:o,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Li({ones:()=>hr(s),rate:this.recurrentDropout,training:o,count:3,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,a=this.recurrentDropoutMask,l,u,c;0<this.dropout&&this.dropout<1&&(e=R(e,i[0]));let p=go(e,this.kernel.read());this.useBias&&(p=an(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=R(s,a[0]));let m=this.recurrentKernel.read(),[f,d]=pr(m,[2*this.units,this.units],m.rank-1),g=go(s,f),[h,x,y]=pr(p,3,p.rank-1),[v,w]=pr(g,2,g.rank-1);l=this.recurrentActivation.apply(H(h,v)),u=this.recurrentActivation.apply(H(x,w));let I=go(R(u,s),d);c=this.activation.apply(H(y,I));let E=H(R(l,s),R(H(1,Le(l)),c));return[E,E]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Lo(this.activation),recurrentActivation:Lo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:bt(this.kernelInitializer),recurrentInitializer:bt(this.recurrentInitializer),biasInitializer:bt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),recurrentConstraint:Rt(this.recurrentConstraint),biasConstraint:Rt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),n)}}return r.className="GRUCell",r})();X.registerClass(F6);var HS=(()=>{class r extends A0{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new F6(e),super(e)}call(e,n){return B(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:i})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}return r.className="GRU",r})();X.registerClass(HS);var Gp=(()=>{class r extends k0{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ht(this.units,"units"),this.activation=zo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ct(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=mt(e.kernelRegularizer),this.recurrentRegularizer=mt(e.recurrentRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.kernelConstraint=$t(e.kernelConstraint),this.recurrentConstraint=$t(e.recurrentConstraint),this.biasConstraint=$t(e.biasConstraint),this.dropout=$l([1,Po([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=$l([1,Po([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var n;e=Fe(e);let o=e[e.length-1];this.kernel=this.addWeight("kernel",[o,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let i=this.biasInitializer,a=this.units;s=new(n=class extends ln{apply(u,c){let p=i.apply([a]),m=new Y3().apply([a]),f=i.apply([a*2]);return a6(a6(p,m),f)}},n.className="CustomInit",n)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,n){return B(()=>{let o=n.training==null?!1:n.training;if(e=e,e.length!==3)throw new L(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Li({ones:()=>hr(e),rate:this.dropout,training:o,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Li({ones:()=>hr(s),rate:this.recurrentDropout,training:o,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,l=this.recurrentDropoutMask,u,c,p,m;0<this.dropout&&this.dropout<1&&(e=R(e,a[0]));let f=go(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=R(s,l[0])),f=H(f,go(s,this.recurrentKernel.read())),this.useBias&&(f=an(f,this.bias.read()));let[d,g,h,x]=pr(f,4,f.rank-1);u=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(g),p=H(R(c,i),R(u,this.activation.apply(h))),m=this.recurrentActivation.apply(x);let y=R(m,this.activation.apply(p));return[y,y,p]})}getConfig(){let e=super.getConfig(),n={units:this.units,activation:Lo(this.activation),recurrentActivation:Lo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:bt(this.kernelInitializer),recurrentInitializer:bt(this.recurrentInitializer),biasInitializer:bt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),recurrentConstraint:Rt(this.recurrentConstraint),biasConstraint:Rt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),n)}}return r.className="LSTMCell",r})();X.registerClass(Gp);var KS=(()=>{class r extends A0{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Gp(e),super(e)}call(e,n){return B(()=>{this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:i})})}static fromConfig(e,n){return n.implmentation===0&&(n.implementation=1),new e(n)}}return r.className="LSTM",r})();X.registerClass(KS);var O6=(()=>{class r extends k0{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let n of this.cells.slice().reverse())Array.isArray(n.stateSize)?e.push(...n.stateSize):e.push(n.stateSize);return e}call(e,n){return B(()=>{e=e;let o=e.slice(1),s=[];for(let l of this.cells.slice().reverse())Array.isArray(l.stateSize)?s.push(o.splice(0,l.stateSize.length)):s.push(o.splice(0,1));s.reverse();let i=[],a;for(let l=0;l<this.cells.length;++l){let u=this.cells[l];o=s[l],l===0?a=[e[0]].concat(o):a=[a[0]].concat(o),a=u.call(a,n),i.push(a.slice(1))}o=[];for(let l of i.slice().reverse())o.push(...l);return[a[0]].concat(o)})}build(e){Z3(e)&&(e=e[0]),e=e;let n;this.cells.forEach((o,s)=>{Mo(`RNNCell_${s}`,()=>{o.build(e),Array.isArray(o.stateSize)?n=o.stateSize[0]:n=o.stateSize,e=[e[0],n]})}),this.built=!0}getConfig(){let e=super.getConfig(),n=i=>({className:i.getClassName(),config:i.getConfig()}),s={cells:this.cells.map(n)};return Object.assign(Object.assign({},e),s)}static fromConfig(e,n,o={}){let s=[];for(let i of n.cells)s.push(Fn(i,o));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let n of this.cells)e.push(...n.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let n of this.cells)e.push(...n.nonTrainableWeights);if(!this.trainable){let n=[];for(let o of this.cells)n.push(...o.trainableWeights);return n.concat(e)}return e}getWeights(){let e=[];for(let n of this.cells)e.push(...n.weights);return Rp(e)}setWeights(e){let n=[];for(let o of this.cells){let s=o.weights.length,i=e.splice(s);for(let a=0;a<o.weights.length;++a)n.push([o.weights[a],i[a]])}fu(n)}}return r.className="StackedRNNCells",r})();X.registerClass(O6);function Li(r){let{ones:t,rate:e,training:n=!1,count:o=1,dropoutFunc:s}=r,i=()=>s!=null?s(t(),e):X3(t(),e),a=()=>S0(i,t,n);return!o||o<=1?Ct(a().clone()):Array(o).fill(void 0).map(a).map(u=>Ct(u.clone()))}var yK=function(r,t){var e={};for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&t.indexOf(n)<0&&(e[n]=r[n]);if(r!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,n=Object.getOwnPropertySymbols(r);o<n.length;o++)t.indexOf(n[o])<0&&Object.prototype.propertyIsEnumerable.call(r,n[o])&&(e[n[o]]=r[n[o]]);return e};var bK=(()=>{class r extends A0{constructor(e){if(e.unroll)throw new Se("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Se("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new pt({ndim:5})]}call(e,n){return B(()=>{if(this.cell.dropoutMask!=null&&(Ae(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Ae(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),n&&n.constants)throw new L("ConvRNN2D cell does not support constants");let o=n==null?null:n.mask,s=n==null?null:n.training,i=n==null?null:n.initialState;return super.call(e,{mask:o,training:s,initialState:i})})}computeOutputShape(e){let n=this.computeSingleOutputShape(e);return this.returnSequences||(n=[n[0],...n.slice(2)]),this.returnState&&(n=[n,...Array(2).fill([e[0],...n.slice(-3)])]),n}getInitialState(e){return B(()=>{let{stateSize:n}=this.cell,o=e.shape,s=this.computeSingleOutputShape(o),i=[s[0],...s.slice(2)],a=yt(i);return Array.isArray(n)?Array(n.length).fill(a):[a]})}resetStates(e,n=!1){B(()=>{if(!this.stateful)throw new Yn("Cannot call resetStates() on an RNN Layer that is not stateful.");let o=this.inputSpec[0].shape,s=this.computeSingleOutputShape(o),i=[s[0],...s.slice(2)];if(o[0]==null)throw new L("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>yt(i)):this.states_=[yt(i)];else if(e==null)Ae(this.states_),this.keptStates!=null&&(Ae(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>yt(i)):this.states_[0]=yt(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new L(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);n?this.keptStates.push(this.states_.slice()):Ae(this.states_);for(let l=0;l<this.states_.length;++l){let u=e[l],c=i;if(!b.arraysEqual(u.shape,c))throw new L(`State ${l} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>Ct(l.clone()))})}computeSingleOutputShape(e){let{dataFormat:n,filters:o,kernelSize:s,padding:i,strides:a,dilationRate:l}=this.cell,u=n==="channelsFirst",c=e[u?3:2],p=e[u?4:3],m=vn(c,s[0],i,a[0],l[0]),f=vn(p,s[1],i,a[1],l[1]);return[...e.slice(0,2),...u?[o,m,f]:[m,f,o]]}}return r.className="ConvRNN2D",r})(),M6=(()=>{class r extends Gp{constructor(e){let{filters:n,kernelSize:o,strides:s,padding:i,dataFormat:a,dilationRate:l}=e;super(Object.assign(Object.assign({},e),{units:n})),this.filters=n,Ht(this.filters,"filters"),this.kernelSize=N0(o,2,"kernelSize"),this.kernelSize.forEach(u=>Ht(u,"kernelSize")),this.strides=N0(s||1,2,"strides"),this.strides.forEach(u=>Ht(u,"strides")),this.padding=i||"valid",nn(this.padding),this.dataFormat=a||"channelsLast",St(this.dataFormat),this.dilationRate=N0(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>Ht(u,"dilationRate"))}build(e){var n;e=Fe(e);let o=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[o]==null)throw new L(`The channel dimension of the input should be defined. Found ${e[o]}`);let s=e[o],i=4,a=this.kernelSize.concat([s,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let l=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){let c=this.biasInitializer,p=this.filters;u=new(n=class extends ln{apply(f,d){let g=c.apply([p]),h=Qt([p]),x=c.apply([p*2]);return cu([g,h,x])}},n.className="CustomInit",n)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,n){return B(()=>{if(e.length!==3)throw new L(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=n.training||!1,s=e[0],i=e[1],a=e[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Li({ones:()=>hr(s),rate:this.dropout,training:o,count:l,dropoutFunc:this.dropoutFunc}));let u=this.dropoutMask,c=(le,pe,ae)=>!pe||!pe[ae]?le:R(pe[ae],le),p=c(s,u,0),m=c(s,u,1),f=c(s,u,2),d=c(s,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Li({ones:()=>hr(i),rate:this.recurrentDropout,training:o,count:l,dropoutFunc:this.dropoutFunc}));let g=this.recurrentDropoutMask,h=c(i,g,0),x=c(i,g,1),y=c(i,g,2),v=c(i,g,3),w=3,[I,E,_,D]=pr(this.kernel.read(),l,w),[M,P,V,U]=this.useBias?pr(this.bias.read(),l):[null,null,null,null];p=this.inputConv(p,I,M,this.padding),m=this.inputConv(m,E,P,this.padding),f=this.inputConv(f,_,V,this.padding),d=this.inputConv(d,D,U,this.padding);let[q,K,j,Y]=pr(this.recurrentKernel.read(),l,w);h=this.recurrentConv(h,q),x=this.recurrentConv(x,K),y=this.recurrentConv(y,j),v=this.recurrentConv(v,Y);let ee=this.recurrentActivation.apply(H(p,h)),Z=this.recurrentActivation.apply(H(m,x)),Q=H(R(Z,a),R(ee,this.activation.apply(H(f,y)))),ie=R(this.recurrentActivation.apply(H(d,v)),this.activation.apply(Q));return[ie,ie,Q]})}getConfig(){let e=super.getConfig(),{units:n}=e,o=yK(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},o),s)}inputConv(e,n,o,s){let i=gn(e,n,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return o?an(i,o,this.dataFormat):i}recurrentConv(e,n){return gn(e,n,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}return r.className="ConvLSTM2DCell",r})();X.registerClass(M6);var jS=(()=>{class r extends bK{constructor(e){let n=new M6(e);super(Object.assign(Object.assign({},e),{cell:n}))}static fromConfig(e,n){return new e(n)}}return r.className="ConvLSTM2D",r})();X.registerClass(jS);var P6=(()=>{class r extends Ie{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let n=e.shape,o=[];for(let s=0;s<this.noiseShape.length;++s)o.push(this.noiseShape[s]==null?n[s]:this.noiseShape[s]);return o}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e);if(0<this.rate&&this.rate<1){let s=n.training==null?!1:n.training,i=this.getNoiseShape(o);return S0(()=>X3(o,this.rate,i,this.seed),()=>o,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},n=super.getConfig();return Object.assign(e,n),e}dispose(){return super.dispose()}}return r.className="Dropout",r})();X.registerClass(P6);var XS=(()=>{class r extends P6{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let n=e.shape;return[n[0],1,n[2]]}}return r.className="SpatialDropout1D",r})();X.registerClass(XS);var YS=(()=>{class r extends Ie{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let n=null;e.batchSize!=null&&(n=e.batchSize),this.batchInputShape=[n,e.inputDim]}this.units=e.units,Ht(this.units,"units"),this.activation=zo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ct(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ct(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=$t(e.kernelConstraint),this.biasConstraint=$t(e.biasConstraint),this.kernelRegularizer=mt(e.kernelRegularizer),this.biasRegularizer=mt(e.biasRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Fe(e);let n=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[n,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:n}}],this.built=!0}computeOutputShape(e){e=Fe(e);let n=e.slice();return n[n.length-1]=this.units,n}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e),s=G3(this.activation.getClassName()),i;return s!=null?i=go(o,this.kernel.read(),s,this.bias?this.bias.read():null):(i=go(o,this.kernel.read()),this.bias!=null&&(i=an(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){let e={units:this.units,activation:Lo(this.activation),useBias:this.useBias,kernelInitializer:bt(this.kernelInitializer),biasInitializer:bt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Rt(this.kernelConstraint),biasConstraint:Rt(this.biasConstraint)},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Dense",r})();X.registerClass(YS);var ZS=(()=>{class r extends Ie{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Fe(e);for(let n of e.slice(1))if(n==null)throw new L(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ho(e,1)]}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e);if(this.dataFormat==="channelsFirst"&&o.rank>1){let s=[0];for(let i=2;i<o.rank;++i)s.push(i);s.push(1),o=Pe(o,s)}return BC(o)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let n=super.getConfig();return Object.assign(e,n),e}}return r.className="Flatten",r})();X.registerClass(ZS);var JS=(()=>{class r extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.activation=zo(e.activation)}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e);return this.activation.apply(o)})}getConfig(){let e={activation:Lo(this.activation)},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Activation",r})();X.registerClass(JS);var QS=(()=>{class r extends Ie{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,n){return B(()=>(e=we(e),LC(e,this.n)))}getConfig(){let e={n:this.n},n=super.getConfig();return Object.assign(e,n),e}}return r.className="RepeatVector",r})();X.registerClass(QS);var eI=(()=>{class r extends Ie{constructor(e){super(e),this.targetShape=e.targetShape;for(let n=0;n<this.targetShape.length;++n)this.isUnknown(this.targetShape[n])&&(this.targetShape[n]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,n){let o="Total size of new array must be unchanged.",s=n.slice(),i=1,a=null;for(let u=0;u<s.length;++u){let c=s[u];if(this.isUnknown(c))if(a===null)a=u;else throw new L("Can only specifiy one unknown dimension.");else i*=c}let l=ho(e);if(a!==null){if(i===0||l%i!==0)throw new L(o);s[a]=l/i}else if(l!==i)throw new L(o);return s}computeOutputShape(e){let n=!1;for(let o=0;o<e.length;++o)if(this.isUnknown(e[o])){n=!0;break}return n?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e),s=o.shape,i=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return $(o,i)})}getConfig(){let e={targetShape:this.targetShape},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Reshape",r})();X.registerClass(eI);var tI=(()=>{class r extends Ie{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let n=on(1,e.dims.length+1);if(!b.arraysEqual(e.dims.slice().sort(),n))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=Fe(e);let n=e.slice();return this.dims.forEach((o,s)=>{n[s+1]=e[o]}),n}call(e,n){return Pe(we(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Permute",r})();X.registerClass(tI);var rI=(()=>{class r extends Ie{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={maskValue:this.maskValue};return Object.assign(n,e),n}computeMask(e,n){let o=we(e);return yl($o(o,this.maskValue),-1)}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e),a=yl($o(o,this.maskValue),-1,!0);return R(o,J(a,o.dtype))})}}return r.className="Masking",r})();X.registerClass(rI);var nI=(()=>{class r extends Ie{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let n=null;e.batchSize!=null&&(n=e.batchSize),e.inputLength==null?this.batchInputShape=[n,null]:this.batchInputShape=[n].concat(rt(e.inputLength))}this.inputDim=e.inputDim,Ht(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ht(this.outputDim,"outputDim"),this.embeddingsInitializer=ct(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=mt(e.embeddingsRegularizer),this.activityRegularizer=mt(e.activityRegularizer),this.embeddingsConstraint=$t(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,n){return B(()=>this.maskZero?(e=we(e),$o(e,ve(e))):null)}computeOutputShape(e){if(e=Fe(e),this.inputLength==null)return[...e,this.outputDim];let n=rt(this.inputLength);if(n.length!==e.length-1)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let o=0;for(let s=0;s<n.length;++s){let i=n[s],a=e[s+1];if(i!=null&&a!=null&&i!==a)throw new L(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(n[o]=a),o++}}return[e[0],...n,this.outputDim]}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e);o.dtype!=="int32"&&(o=Hr(o,"int32"));let s=j3(this.embeddings.read(),$(o,[o.size]));return $(s,Fe(this.computeOutputShape(o.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:bt(this.embeddingsInitializer),embeddingsRegularizer:ot(this.embeddingsRegularizer),activityRegularizer:ot(this.activityRegularizer),embeddingsConstraint:Rt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Embedding",r})();X.registerClass(nI);var zi=class extends Ie{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Se}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;let n=t.slice(0,t.length-e.length);for(let o=0;o<e.length;++o){let s=t[t.length-e.length+o],i=e[o];if(s==null||i==null||s<0||i<0)n.push(null);else if(s===1)n.push(i);else if(i===1)n.push(s);else{if(s!==i)throw new L("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(s)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Fe(t)]),t=t,t.length<2)throw new L(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(let s of t)s!=null&&s[0]!==null&&e.push(s[0]);if(e=fo(e),e.length>1)throw new L(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let n=t[0]==null?null:t[0].slice(1);for(let s=1;s<t.length;++s){let i=t[s]==null?null:t[s].slice(1);n=this.computeElementwiseOpOutputShape(n,i)}let o=t.map(s=>s.length);t.indexOf(null)===-1&&fo(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return B(()=>{if(t=t,this.reshapeRequired){let n=[],o=t.map(s=>s.rank);if(o.indexOf(null)===-1){let s=Po(o);for(let i of t){let a=i.rank;for(let l=0;l<s-a;++l)i=Fi(i,1);n.push(i)}return this.mergeFunction(n)}else{let s=!1;for(let l of t){let u=l.rank;if(u==null){let c=l.shape,p=c[0],m=c.slice(1).concat([p]),f=$(l,[p].concat(ho(c.slice(1))));f=Pe(f,[1,0]),f=$(f,m),n.push(f),s=!0}else if(u>1){let c=on(1,u).concat([0]);n.push(Pe(l,c)),s=!0}else n.push(l)}let i=this.mergeFunction(n),a=i.rank;if(s){if(a==null){let l=i.shape,u=l.length,c=l[u-1],p=[c].concat(l.slice(0,l.length-1));i=$(Pe($(i,[-1,c]),[1,0]),p)}else if(a>1){let l=[a-1].concat(on(0,a-1));i=Pe(i,l)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let o=1;o<t.length;++o){let s=t[o]==null?null:t[o].slice(1);e=this.computeElementwiseOpOutputShape(e,s)}let n=[];for(let o of t)o!=null&&o[0]!==null&&n.push(o[0]);return n=fo(n),n.length===1?e=n.concat(e):e=[null].concat(e),e}computeMask(t,e){return B(()=>{if(e==null)return null;if(!Array.isArray(e))throw new L("`mask` should be an Array");if(!Array.isArray(t))throw new L("`inputs` should be an Array");if(e.length!==t.length)throw new L(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(o=>o==null))return null;e=e.map(o=>o==null?o:Wt(o,0));let n=e[0];for(let o=1;o<e.length-1;++o)n=Mr(n,e[o]);return n})}},oI=(()=>{class r extends zi{constructor(e){super(e)}mergeFunction(e){return B(()=>{let n=e[0].clone();for(let o=1;o<e.length;++o)n=H(n,e[o]);return n})}}return r.className="Add",r})();X.registerClass(oI);var sI=(()=>{class r extends zi{constructor(e){super(e)}mergeFunction(e){return B(()=>{let n=e[0].clone();for(let o=1;o<e.length;++o)n=R(n,e[o]);return n})}}return r.className="Multiply",r})();X.registerClass(sI);var iI=(()=>{class r extends zi{constructor(e){super(e)}mergeFunction(e){return B(()=>{let n=e[0].clone();for(let o=1;o<e.length;++o)n=H(n,e[o]);return R(1/e.length,n)})}}return r.className="Average",r})();X.registerClass(iI);var aI=(()=>{class r extends zi{constructor(e){super(e)}mergeFunction(e){return B(()=>{let n=e[0];for(let o=1;o<e.length;++o)n=yn(n,e[o]);return n})}}return r.className="Maximum",r})();X.registerClass(aI);var lI=(()=>{class r extends zi{constructor(e){super(e)}mergeFunction(e){return B(()=>{let n=e[0];for(let o=1;o<e.length;++o)n=Xn(n,e[o]);return n})}}return r.className="Minimum",r})();X.registerClass(lI);var cI=(()=>{class r extends zi{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new L("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let n=!0;for(let s of e)if(s!=null){n=!1;break}if(n)return;let o=[];for(let s=0;s<e.length;++s){let i=e[s].slice();i.splice(this.axis,1);let a=!1;for(let l of o)if(b.arraysEqual(l,i)){a=!0;break}a||o.push(i)}if(o.length>1)throw new L("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return B(()=>cu(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new L("A `Concatenate` layer should be called on a list of inputs.");let n=e,o=n[0].slice(),s=this.axis<0?o.length+this.axis:this.axis;for(let i of n.slice(1)){if(o[s]==null||i[s]==null){o[s]=null;break}o[s]+=i[s]}return o}computeMask(e,n){if(n==null)return null;if(!Array.isArray(n))throw new L("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new L("`inputs` should be an array for Concatenate");if(n.length!==e.length)throw new L(`Mismatch in the length of mask (${n.length}) and the legnth of inputs (${e.length})`);return B(()=>{let o=!0;if(n.forEach(a=>{if(a!=null){o=!1;return}}),o)return null;let s=[];for(let a=0;a<e.length;++a)n[a]==null?s.push(J(hr(e[a]),"bool")):n[a].rank<e[a].rank?s.push(Wt(n[a],-1)):s.push(n[a]);let i=Ye(s,this.axis);return Dc(i,-1,!1)})}getConfig(){let e={axis:this.axis},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Concatenate",r})();X.registerClass(cI);function Vp(r,t){for(;r<0;)r+=t;return r}function vK(r,t,e){if(r.shape.length>3||t.shape.length>3)throw new Se("batchDot is not implemented for tensors of 4D or higher rank yet");if(b.assert(r.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${r.shape.length}`),b.assert(r.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),r.dtype==="complex64"||t.dtype==="complex64")throw new Se("batchDot is not implemented for complex64-type Tensors yet.");let n=r.shape.length,o=t.shape.length;e==null&&(e=[n-1,o-2]);let s=e;return B(()=>{let i;if(n>o){i=n-o;let l=[];for(let u=0;u<i;++u)l.push(1);t=$(t,t.shape.concat(l))}else if(o>n){i=o-n;let l=[];for(let u=0;u<i;++u)l.push(1);r=$(r,r.shape.concat(l))}else i=0;let a;if(r.shape.length===2&&t.shape.length===2)s[0]===s[1]?a=ue(R(r,t),s[0]):a=ue(R(Pe(r,[1,0]),t),s[1]);else{let l=s[0]!==r.shape.length-1,u=s[1]===t.shape.length-1;a=Me(r,t,l,u)}if(i>0){let l;n>o?l=n+o-3:l=n-1;let u=[];for(let c=l;c<l+i;++c)u.push(c);a=Rn(a,u)}return a.shape.length===1&&(a=Wt(a,1)),a})}var uI=(()=>{class r extends zi{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0],o=e[1];if(n.length>3||o.length>3)throw new Se("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);if(n[s[0]]!==o[s[1]])throw new L(`Dimension incompatibility: ${n[s[0]]} !== ${o[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new L(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let n=e[0],o=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((i,a)=>Vp(i,e[a].shape.length)):s=[Vp(this.axes,n.shape.length),Vp(this.axes,o.shape.length)],this.normalize&&(n=$p(n,s[0]),o=$p(o,s[1])),vK(n,o,s)}interpretAxes(e,n){let o;return Array.isArray(this.axes)?o=this.axes:o=[Vp(this.axes,e.length),Vp(this.axes,n.length)],o}computeOutputShape(e){b.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let n=e[0].slice(),o=e[1].slice();if(n.length>3||o.length>3)throw new Se("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(n,o);n.splice(s[0],1),o.splice(s[1],1),o.splice(0,1);let i=n.concat(o);return i.length===1&&i.push(1),i}computeMask(e,n){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},n=super.getConfig();return Object.assign(e,n),e}}return r.className="Dot",r})();X.registerClass(uI);var pI=(()=>{class r extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={stddev:this.stddev};return Object.assign(n,e),n}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e);return S0(()=>H(uu(o.shape,0,this.stddev),o),()=>o,n.training||!1)})}}return r.className="GaussianNoise",r})();X.registerClass(pI);var mI=(()=>{class r extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return B(()=>{this.invokeCallHook(e,n);let o=we(e);return this.rate>0&&this.rate<1?S0(()=>{let i=Math.sqrt(this.rate/(1-this.rate));return R(o,uu(o.shape,1,i))},()=>o,n.training||!1):o})}}return r.className="GaussianDropout",r})();X.registerClass(mI);var fI=(()=>{class r extends Ie{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||we(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),n={rate:this.rate};return Object.assign(n,e),n}call(e,n){return B(()=>{if(this.rate<1&&this.rate>0){let o=this._getNoiseShape(e);return S0(()=>{let i=we(e),u=-1.6732632423543772*1.0507009873554805,c=en(Dn(o),this.rate);c=Hr(c,"float32");let p=((1-this.rate)*(1+this.rate*u**2))**-.5,m=-p*u*this.rate,f=H(R(i,c),R(H(c,-1),u));return H(R(f,p),m)},()=>we(e),n.training||!1)}return e})}}return r.className="AlphaDropout",r})();X.registerClass(fI);function Up(r,t,e,n,o,s=.001){let i;if(r.rank===2)i=$m(r,t,e,n,o,s);else if(r.rank===3)i=Fm(r,t,e,n,o,s);else if(r.rank===4)i=Om(r,t,e,n,o,s);else throw new Se(`batchNormalization is not implemented for array of rank ${r.rank} yet`);return i}function wK(r,t,e,n,o=.001){return B(()=>{let s=Tl(r,n),i=s.mean,a=s.variance;return[Up(r,i,a,e,t,o),i,a]})}function TK(r,t,e,n,o=.001){return B(()=>{let s=Tl(r,n),i=s.mean,a=s.variance,l=[];for(let d of on(0,r.rank))n.indexOf(d)!==-1?l.push(1):l.push(r.shape[d]);let u=$(i,l),c=$(a,l),p=t==null?null:$(t,l),m=e==null?null:$(e,l);return[Up(r,u,c,m,p,o),i,a]})}function CK(r,t,e,n,o=.001){return b.arraysEqual(n.slice().sort(),on(0,r.rank-1))?wK(r,t,e,n,o):TK(r,t,e,n,o)}var dI=(()=>{class r extends Ie{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ct(e.betaInitializer||"zeros"),this.gammaInitializer=ct(e.gammaInitializer||"ones"),this.movingMeanInitializer=ct(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ct(e.movingVarianceInitializer||"ones"),this.betaConstraint=$t(e.betaConstraint),this.gammaConstraint=$t(e.gammaConstraint),this.betaRegularizer=mt(e.betaRegularizer),this.gammaRegularizer=mt(e.gammaRegularizer)}build(e){e=Fe(e);let n=this.axis>=0?this.axis:this.axis+e.length,o=e[n];if(o==null)throw new L(`Axis ${n} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new pt({ndim:e.length,axes:{[n]:o}})];let s=[o];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,n){return B(()=>{let o=n.training==null?!1:n.training,s=we(e),i=s.shape,a=i.length,l=on(0,a),u=this.axis>=0?this.axis:this.axis+a;l.splice(u,1);let c=po(1,a);c[u]=i[u];let p=l.slice();p.sort();let m=!b.arraysEqual(p,on(0,a).slice(0,a-1)),f=()=>{if(m){let v=$(this.movingMean.read(),c),w=$(this.movingVariance.read(),c),I=this.center?$(this.beta.read(),c):null,E=this.scale?$(this.gamma.read(),c):null;return Up(s,v,w,I,E,this.epsilon)}else return Up(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!o)return f();let[d,g,h]=CK(s,this.gamma.read(),this.beta.read(),l,this.epsilon),x=(v,w,I)=>{B(()=>{let E=1-I,_=v.read(),D=R(oe(_,w),E);v.write(oe(_,D))})};return(()=>{x(this.movingMean,g,this.momentum),x(this.movingVariance,h,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:bt(this.betaInitializer),gammaInitializer:bt(this.gammaInitializer),movingMeanInitializer:bt(this.movingMeanInitializer),movingVarianceInitializer:bt(this.movingVarianceInitializer),betaRegularizer:ot(this.betaRegularizer),gammaRegularizer:ot(this.gammaRegularizer),betaConstraint:Rt(this.betaConstraint),gammaConstraint:Rt(this.gammaConstraint)},n=super.getConfig();return Object.assign(e,n),e}}return r.className="BatchNormalization",r})();X.registerClass(dI);var hI=(()=>{class r extends Ie{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let n of this.axis)if(!Number.isInteger(n))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ct(e.betaInitializer||"zeros"),this.gammaInitializer=ct(e.gammaInitializer||"ones"),this.betaRegularizer=mt(e.betaRegularizer),this.gammaRegularizer=mt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Fe(e);let n=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=n);for(let i of this.axis)if(i<0||i>=n)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==fo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let o=this.axis.map(i=>e[i]),s=!0;this.scale?this.gamma=this.addWeight("gamma",o,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",o,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,n){let o=we(e),s=o.shape,i=s.length;return B(()=>{let{mean:l,variance:u}=Tl(o,this.axis,!0),c=po(1,i);for(let h of this.axis)c[h]=s[h];let p=h=>h!=null&&h.shape.length!==i?$(h,c):h,m=this.scale?p(this.gamma.read()):null,f=this.center?p(this.beta.read()):null,d=[],g=[];for(let h=0;h<i;++h)this.axis.indexOf(h)!==-1?(d.push(s[h]),g.push(1)):(d.push(1),g.push(s[h]));return l=Er(l,d),u=Er(u,d),m!=null&&(m=Er(m,g)),f!=null&&(f=Er(f,g)),Up(o,l,u,f,m,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:bt(this.betaInitializer),gammaInitializer:bt(this.gammaInitializer),betaRegularizer:ot(this.betaRegularizer),gammaRegularizer:ot(this.gammaRegularizer)},n=super.getConfig();return Object.assign(e,n),e}}return r.className="LayerNormalization",r})();X.registerClass(hI);function SK(r,t,e){return B(()=>{if(r.rank!==4)throw new L(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new L("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=sn()),e!=="channelsLast"&&e!=="channelsFirst")throw new L(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let n;return e==="channelsFirst"?n=[[0,0],[0,0],t[0],t[1]]:n=[[0,0],t[0],t[1],[0,0]],tn(r,n)})}var gI=(()=>{class r extends Ie{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?sn():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new L(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let n,o;if(typeof e.padding[0]=="number")n=[e.padding[0],e.padding[0]],o=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new L(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(n=e.padding[0],e.padding[1].length!==2)throw new L(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);o=e.padding[1]}this.padding=[n,o]}this.inputSpec=[new pt({ndim:4})]}computeOutputShape(e){e=Fe(e);let n,o;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?n=e[2]+this.padding[0][0]+this.padding[0][1]:n=null,e[3]!=null&&e[3]>=0?o=e[3]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],e[1],n,o]):(e[1]!=null&&e[1]>=0?n=e[1]+this.padding[0][0]+this.padding[0][1]:n=null,e[2]!=null&&e[2]>=0?o=e[2]+this.padding[1][0]+this.padding[1][1]:o=null,[e[0],n,o,e[3]])}call(e,n){return B(()=>SK(we(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},n=super.getConfig();return Object.assign(e,n),e}}return r.className="ZeroPadding2D",r})();X.registerClass(gI);function kf(r,t,e,n,o,s){return B(()=>{St(o),n6(s),nn(n),e==null&&(e=[1,1]),n==null&&(n="valid"),o==null&&(o=sn()),s==null&&(s="max"),r=Bp(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=h0(r,t,e,a):i=i0(r,t,e,a),o==="channelsFirst"&&(i=Pe(i,[0,3,1,2])),i})}function xI(r,t,e,n,o,s){return B(()=>{St(o),n6(s),nn(n),e==null&&(e=[1,1,1]),n==null&&(n="valid"),o==null&&(o=sn()),s==null&&(s="max"),r=A6(r,o);let i,a=n==="same"?"same":"valid";return s==="max"?i=o3(r,t,e,a):i=Rm(r,t,e,a),o==="channelsFirst"&&(i=Pe(i,[0,4,1,2,3])),i})}var Tf=class extends Ie{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new L(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(Ht(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new L(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);Ht(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,nn(this.padding),this.inputSpec=[new pt({ndim:3})]}computeOutputShape(t){t=Fe(t);let e=vn(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return B(()=>{this.invokeCallHook(t,e),t=Fi(we(t),2);let n=this.poolingFunction(we(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Rn(n,[2])})}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}},yI=(()=>{class r extends Tf{constructor(e){super(e)}poolingFunction(e,n,o,s,i){return St(i),nn(s),kf(e,n,o,s,i,"max")}}return r.className="MaxPooling1D",r})();X.registerClass(yI);var bI=(()=>{class r extends Tf{constructor(e){super(e)}poolingFunction(e,n,o,s,i){return St(i),nn(s),kf(e,n,o,s,i,"avg")}}return r.className="AveragePooling1D",r})();X.registerClass(bI);var Cf=class extends Ie{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new L(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Ht(this.poolSize,"poolSize"),Ht(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,St(this.dataFormat),nn(this.padding),this.inputSpec=[new pt({ndim:4})]}computeOutputShape(t){t=Fe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=vn(e,this.poolSize[0],this.padding,this.strides[0]),n=vn(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return B(()=>(this.invokeCallHook(t,e),this.poolingFunction(we(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},vI=(()=>{class r extends Cf{constructor(e){super(e)}poolingFunction(e,n,o,s,i){return St(i),nn(s),kf(e,n,o,s,i,"max")}}return r.className="MaxPooling2D",r})();X.registerClass(vI);var wI=(()=>{class r extends Cf{constructor(e){super(e)}poolingFunction(e,n,o,s,i){return St(i),nn(s),kf(e,n,o,s,i,"avg")}}return r.className="AveragePooling2D",r})();X.registerClass(wI);var Sf=class extends Ie{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new L(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Ht(this.poolSize,"poolSize"),Ht(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,St(this.dataFormat),nn(this.padding),this.inputSpec=[new pt({ndim:5})]}computeOutputShape(t){t=Fe(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],n=this.dataFormat==="channelsFirst"?t[3]:t[2],o=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=vn(e,this.poolSize[0],this.padding,this.strides[0]),n=vn(n,this.poolSize[1],this.padding,this.strides[1]),o=vn(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,n,o]:[t[0],e,n,o,t[4]]}call(t,e){return B(()=>(this.invokeCallHook(t,e),this.poolingFunction(we(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},TI=(()=>{class r extends Sf{constructor(e){super(e)}poolingFunction(e,n,o,s,i){return St(i),nn(s),xI(e,n,o,s,i,"max")}}return r.className="MaxPooling3D",r})();X.registerClass(TI);var CI=(()=>{class r extends Sf{constructor(e){super(e)}poolingFunction(e,n,o,s,i){return St(i),nn(s),xI(e,n,o,s,i,"avg")}}return r.className="AveragePooling3D",r})();X.registerClass(CI);var If=class extends Ie{constructor(t){super(t),this.inputSpec=[new pt({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Se}},SI=(()=>{class r extends If{constructor(e){super(e||{})}call(e,n){return B(()=>{let o=we(e);return xt(o,1)})}}return r.className="GlobalAveragePooling1D",r})();X.registerClass(SI);var II=(()=>{class r extends If{constructor(e){super(e||{})}call(e,n){return B(()=>{let o=we(e);return wr(o,1)})}}return r.className="GlobalMaxPooling1D",r})();X.registerClass(II);var Nf=class extends Ie{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,St(this.dataFormat),this.inputSpec=[new pt({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Se}getConfig(){let t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}},NI=(()=>{class r extends Nf{call(e,n){return B(()=>{let o=we(e);return this.dataFormat==="channelsLast"?xt(o,[1,2]):xt(o,[2,3])})}}return r.className="GlobalAveragePooling2D",r})();X.registerClass(NI);var kI=(()=>{class r extends Nf{call(e,n){return B(()=>{let o=we(e);return this.dataFormat==="channelsLast"?wr(o,[1,2]):wr(o,[2,3])})}}return r.className="GlobalMaxPooling2D",r})();X.registerClass(kI);var Af=class extends Ie{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){let t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,n={}){let o=e.layer,s=Fn(o,n);delete e.layer;let i={layer:s};return Object.assign(i,e),new t(i)}},AI=(()=>{class r extends Af{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Fe(e),e.length<3)throw new L(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let n=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(n),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Fe(e);let n=[e[0]].concat(e.slice(2)),o=this.layer.computeOutputShape(n),s=e[1];return[o[0],s].concat(o.slice(1))}call(e,n){return B(()=>(e=we(e),R6((a,l)=>[we(this.layer.call(a,n)),[]],e,[],!1,null,null,!1,!0)[1]))}}return r.className="TimeDistributed",r})();X.registerClass(AI);function IK(r){gs($C,"BidirectionalMergeMode",r)}var NK="concat",EI=(()=>{class r extends Af{constructor(e){super(e);let n=e.layer.getConfig(),o={};o.className=e.layer.getClassName(),o.config=n,this.forwardLayer=Fn(o),n.goBackwards=n.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=n,this.backwardLayer=Fn(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?NK:e.mergeMode,IK(this.mergeMode),e.weights)throw new Se("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let n=e.length,o=Math.floor(n/2);this.forwardLayer.setWeights(e.slice(0,o)),this.backwardLayer.setWeights(e.slice(o))}computeOutputShape(e){let n=this.forwardLayer.computeOutputShape(e);Array.isArray(n)&&Array.isArray(n[0])||(n=[n]),n=n;let o,s,i;return this.returnState&&(i=n.slice(1)),o=n[0],o=o,this.mergeMode==="concat"?(o[o.length-1]*=2,s=[o]):this.mergeMode==null?s=[o,o.slice()]:s=[o],this.returnState?this.mergeMode==null?s.concat(i).concat(i.slice()):[o].concat(i).concat(i.slice()):Sr(s)}apply(e,n){let o=n==null?null:n.initialState,s=n==null?null:n.constants;n==null&&(n={});let i=D6(e,o,s,this.numConstants);if(e=i.inputs,o=i.initialState,s=i.constants,Array.isArray(e)&&(o=e.slice(1),e=e[0]),(o==null||o.length===0)&&s==null)return super.apply(e,n);let a=[],l=[];if(o!=null){let c=o.length;if(c%2>0)throw new L("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");n.initialState=o,a.push(...o);let p=o.map(m=>new pt({shape:m.shape}));this.forwardLayer.stateSpec=p.slice(0,c/2),this.backwardLayer.stateSpec=p.slice(c/2),l.push(...p)}if(s!=null)throw new Se("Support for constants in Bidirectional layers is not implemented yet.");let u=a[0]instanceof Kr;for(let c of a)if(c instanceof Kr!==u)throw new L("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){let c=[e].concat(a),p=this.inputSpec.concat(l),m=this.inputSpec;this.inputSpec=p;let f=super.apply(c,n);return this.inputSpec=m,f}else return super.apply(e,n)}call(e,n){return B(()=>{let o=n.initialState,s,i;if(o==null)s=this.forwardLayer.call(e,n),i=this.backwardLayer.call(e,n);else{let u=o.slice(0,o.length/2),c=o.slice(o.length/2);s=this.forwardLayer.call(e,Object.assign(n,{initialState:u})),i=this.backwardLayer.call(e,Object.assign(n,{initialState:c}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=ur(i,1));let l;return this.mergeMode==="concat"?l=cu([s,i]):this.mergeMode==="sum"?l=H(s,i):this.mergeMode==="ave"?l=R(.5,H(s,i)):this.mergeMode==="mul"?l=R(s,i):this.mergeMode==null&&(l=[s,i]),this.returnState?this.mergeMode==null?l.concat(a):[l].concat(a):l})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Mo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Mo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,n){Array.isArray(n)&&(n=n[0]);let o;if(this.returnSequences?this.mergeMode==null?o=[n,n]:o=n:this.mergeMode==null?o=[null,null]:o=null,this.returnState){let i=this.forwardLayer.states.map(a=>null);return Array.isArray(o)?o.concat(i).concat(i):[o].concat(i).concat(i)}else return o}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},n=super.getConfig();return Object.assign(e,n),e}static fromConfig(e,n){let o=Fn(n.layer);if(delete n.layer,n.numConstants!=null)throw new Se("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=n;return s.layer=o,new e(s)}}return r.className="Bidirectional",r})();X.registerClass(EI);var _I=(()=>{class r extends Ie{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return B(()=>(e=we(e),e.dtype!=="float32"&&(e=Hr(e,"float32")),H(R(e,this.scale),this.offset)))}}return r.className="Rescaling",r})();X.registerClass(_I);var{resizeBilinear:kK,cropAndResize:AK}=bn,DI=(()=>{class r extends Ie{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,n,o,s,i,a,l,u){return B(()=>{let c,p=!1,m=n/a,f=o/l,d=(s+n)/a,g=(i+o)/l,h=[m,f,d,g],x=[];e.rank===3?(p=!0,c=_t([e])):c=e;for(let E=0;E<c.shape[0];E++)x.push(h);let y=yr(x,[x.length,4]),v=ds(0,x.length,1,"int32"),I=AK(c,y,v,[s,i],"nearest");return p?Hr(we(mr(I)),u):Hr(I,u)})}upsize(e,n,o,s){return B(()=>{let i=kK(e,[n,o]);return Hr(i,s)})}call(e,n){return B(()=>{let o=we(e),s=o.dtype,i=o.shape,a=i[i.length-3],l=i[i.length-2],u=0;a!==this.height&&(u=Math.floor((a-this.height)/2));let c=0;return l!==this.width&&(c=Math.floor((l-this.width)/2),c===0&&(c=1)),u>=0&&c>=0?this.centerCrop(o,u,c,this.height,this.width,a,l,s):this.upsize(e,this.height,this.width,s)})}getConfig(){let e={height:this.height,width:this.width},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Fe(e);let n=e.length-3,o=e.length-2;return e[n]=this.height,e[o]=this.width,e}}return r.className="CenterCrop",r})();X.registerClass(DI);function RI(r,t,e,n){let o=we(r);if(o.dtype!=="int32"&&(o=Hr(o,"int32")),t==="int")return o;let s=o.shape;if(o.rank===0&&(o=Wt(o,-1)),t==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=Wt(o,-1)),o.rank>2)throw new L(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${o.rank}.`);let i=["multiHot","oneHot"].includes(t),a=o,l;if(typeof n<"u"&&t==="count"?l=xp(a,n,e,i):l=xp(a,[],e,i),t!=="tfIdf")return l;if(n)return R(l,n);throw new L("When outputMode is 'tfIdf', weights must be provided.")}var $I=(()=>{class r extends Ie{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){return e=Fe(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,n){return B(()=>{e=we(e),e.dtype!=="int32"&&(e=Hr(e,"int32"));let o;if(typeof n.countWeights<"u"){if(this.outputMode!=="count")throw new L(`countWeights is not used when outputMode !== count.
              Received countWeights=${n.countWeights}`);o=we(n.countWeights)}let s=wr(e),i=Ii(e),a=Et(this.numTokens,s).bufferSync().get(0),l=en(i,0).bufferSync().get(0);if(!(a&&l))throw new L(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return RI(e,this.outputMode,this.numTokens,o)})}}return r.className="CategoryEncoding",r})();X.registerClass($I);var _K=["bilinear","nearest"],FI=new Set(_K),OI=(()=>{class r extends Ie{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(FI.has(e.interpolation))this.interpolation=e.interpolation;else throw new L(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Fe(e);let n=e[2];return[this.height,this.width,n]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},n=super.getConfig();return Object.assign(e,n),e}call(e,n){return B(()=>{let o=[this.height,this.width];if(this.interpolation==="bilinear")return bn.resizeBilinear(e,o,!this.cropToAspectRatio);if(this.interpolation==="nearest")return bn.resizeNearestNeighbor(e,o,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...FI]} are supported`)})}}return r.className="Resizing",r})();X.registerClass(OI);var MI=(()=>{class r{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}return r.className="RandomSeed",r})();var PI=(()=>{class r extends Ie{constructor(e){super(e),this.randomGenerator=new MI(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},n=super.getConfig();return Object.assign(e,n),e}}return r.className="BaseRandomLayer",r})();var DK=["bilinear","nearest"],LI=new Set(DK),zI=(()=>{class r extends PI{constructor(e){super(e);let{factor:n,interpolation:o="bilinear"}=e;if(this.factor=n,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new L(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new L(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new L(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(o)if(LI.has(o))this.interpolation=o;else throw new L(`Invalid interpolation parameter: ${o} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},n=super.getConfig();return Object.assign(e,n),e}computeOutputShape(e){e=Fe(e);let n=e[2];return[this.imgHeight,-1,n]}call(e,n){return B(()=>{let o=we(e);this.imgHeight=o.shape[o.shape.length-3];let s=o.shape[o.shape.length-2];this.widthFactor=Dn([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*s;i=Math.round(i);let a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return bn.resizeBilinear(e,a);case"nearest":return bn.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...LI]} are supported`)}})}}return r.className="RandomWidth",r})();X.registerClass(zI);var PK=z();PK.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,r=>{r&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var On=function(r){return r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_QINT16=15]="DT_QINT16",r[r.DT_QUINT16=16]="DT_QUINT16",r[r.DT_UINT16=17]="DT_UINT16",r[r.DT_COMPLEX128=18]="DT_COMPLEX128",r[r.DT_HALF=19]="DT_HALF",r[r.DT_RESOURCE=20]="DT_RESOURCE",r[r.DT_VARIANT=21]="DT_VARIANT",r[r.DT_UINT32=22]="DT_UINT32",r[r.DT_UINT64=23]="DT_UINT64",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",r[r.DT_QINT16_REF=115]="DT_QINT16_REF",r[r.DT_QUINT16_REF=116]="DT_QUINT16_REF",r[r.DT_UINT16_REF=117]="DT_UINT16_REF",r[r.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",r[r.DT_HALF_REF=119]="DT_HALF_REF",r[r.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",r[r.DT_VARIANT_REF=121]="DT_VARIANT_REF",r[r.DT_UINT32_REF=122]="DT_UINT32_REF",r[r.DT_UINT64_REF=123]="DT_UINT64_REF",r}(On||{}),BI;(function(r){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))})(BI||(BI={}));var zK={};function Ef(r){return zK[r]}function T(r,t,e,n,o){let s=t.inputParams[r];if(s&&s.inputIndexStart!==void 0){let a=s.inputIndexStart,l=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?a+1:s.inputIndexEnd,u=a<0?t.inputNames.length+a:a;if(s.type==="tensor")return ar(t.inputNames[u],e,n,o);if(s.type==="tensors"){let m=t.inputs.slice(a,l);return t.inputNames.slice(a,l).filter((d,g)=>{var h;return((h=m[g])===null||h===void 0?void 0:h.op)!=="NoOp"}).map(d=>ar(d,e,n,o))}let c=ar(t.inputNames[u],e,n,o),p=c.dataSync();return s.type==="number"?p[0]:b.toNestedArray(c.shape,p)}let i=t.attrParams[r];return i&&i.value}function ar(r,t,e,n){let[o,s]=cn(r,e);if(n!=null){let a=n.getHashTableHandleByName(o);if(a!=null)return a}let i=e.currentContextIds.find(a=>!!t[_f(o,a)]);return i!==void 0?t[_f(o,i)][s]:void 0}function L6(r,t,e){return t[_f(r,e.currentContextId)]}function Go(r,t){let[e,n,o]=cn(r,t);return[_f(e,t&&t.currentContextId),n,o]}function _f(r,t){return t?`${r}-${t}`:r}function cn(r,t){if(r==="")return["",0,void 0];let e=t!=null&&t.parseNodeNameCache!=null;if(e){let s=t.parseNodeNameCache.get(r);if(s!=null)return s}let n=r.split(":"),o;if(n.length===1)o=[r,0,void 0];else{let s=n[0],i=n.length===3?n[1]:void 0,a=Number(n[n.length-1]);o=[s,a,i]}return e&&t.parseNodeNameCache.set(r,o),o}function Wp(r,t,e){let n=T("pad",r,t,e);if(n==="explicit"){n=T("explicitPaddings",r,t,e);let o=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)o[s][0]=n[s*2],o[s][1]=n[s*2+1];return o}return n}function Vo(r){return r.kept?r:Qr(r)}var z6={};ft(z6,{json:()=>BK});var BK=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var B6={};ft(B6,{json:()=>GK});var GK=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var G6={};ft(G6,{json:()=>VK});var VK=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var V6={};ft(V6,{json:()=>UK});var UK=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var U6={};ft(U6,{json:()=>WK});var WK=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var W6={};ft(W6,{json:()=>qK});var qK=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var q6={};ft(q6,{json:()=>HK});var HK=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var H6={};ft(H6,{json:()=>KK});var KK=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var K6={};ft(K6,{json:()=>jK});var jK=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var j6={};ft(j6,{json:()=>XK});var XK=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var X6={};ft(X6,{json:()=>YK});var YK=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var Y6={};ft(Y6,{json:()=>ZK});var ZK=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var Z6={};ft(Z6,{json:()=>JK});var JK=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var J6={};ft(J6,{json:()=>QK});var QK=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var Q6={};ft(Q6,{json:()=>ej});var ej=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var e7={};ft(e7,{json:()=>tj});var tj=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var t7={};ft(t7,{json:()=>rj});var rj=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var r7={};ft(r7,{json:()=>nj});var nj=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var n7={};ft(n7,{json:()=>oj});var oj=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var qp=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let t=[z6,B6,G6,V6,U6,W6,q6,H6,K6,j6,X6,Y6,Z6,J6,Q6,e7,t7,r7,n7],e=[].concat(...t.map(n=>n.json));this.opMappers=e.reduce((n,o)=>(n[o.tfOpName]=o,n),{})}transformGraph(t,e={}){let n=t.node,o=[],s=[],i=[],a=n.reduce((g,h)=>(g[h.name]=this.mapNode(h),h.op.startsWith("Placeholder")?o.push(g[h.name]):h.op==="Const"?s.push(g[h.name]):(h.input==null||h.input.length===0)&&i.push(g[h.name]),g),{}),l=[],u=[],c={},p={};e!=null&&(c=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));let m=Object.keys(a);m.forEach(g=>{let h=a[g];h.inputNames.forEach((x,y)=>{let[v,,w]=Go(x),I=a[v];if(I.outputs!=null){let E=I.outputs.indexOf(w);if(E!==-1){let _=`${v}:${E}`;h.inputNames[y]=_}}h.inputs.push(I),I.children.push(h)})}),Object.keys(p).length===0?m.forEach(g=>{let h=a[g];h.children.length===0&&u.push(h)}):Object.keys(p).forEach(g=>{let[h]=Go(g),x=a[h];x!=null&&(x.signatureKey=p[g],u.push(x))}),Object.keys(c).length>0?Object.keys(c).forEach(g=>{let[h]=Go(g),x=a[h];x&&(x.signatureKey=c[g],l.push(x))}):l=o;let f={};t.library!=null&&t.library.function!=null&&(f=t.library.function.reduce((g,h)=>(g[h.signature.name]=this.mapFunction(h),g),{}));let d={nodes:a,inputs:l,outputs:u,weights:s,placeholders:o,signature:e,functions:f};return i.length>0&&(d.initNodes=i),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){let e=Ef(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});let n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(o=>o.startsWith("^")?o.slice(1):o),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(n.inputParams=e.inputs.reduce((o,s)=>(o[s.name]={type:s.type,inputIndexStart:s.start,inputIndexEnd:s.end},o),{})),e.attrs!=null&&(n.attrParams=e.attrs.reduce((o,s)=>{let i=s.type,a;switch(s.type){case"string":a=Df(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Df(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"string[]":a=Lf(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Lf(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number":a=$f(t.attr,s.tfName,s.defaultValue||0),a===void 0&&s.tfDeprecatedName&&(a=$f(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"number[]":a=Pf(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Pf(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool":a=Rf(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Rf(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"bool[]":a=Bf(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Bf(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape":a=Mf(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Mf(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"shape[]":a=zf(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=zf(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype":a=Ff(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Ff(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"dtype[]":a=Of(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=Of(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"func":a=GI(t.attr,s.tfName,s.defaultValue),a===void 0&&s.tfDeprecatedName&&(a=GI(t.attr,s.tfDeprecatedName,s.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${s.type} for op: ${t.op}`)}return o[s.name]={value:a,type:i},o},{})),n}mapFunction(t){let e=t.nodeDef,n=[],o=[],s={};e!=null&&(s=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&o.push(p[m.name]),p),{}));let i=[],a=[];t.signature.inputArg.forEach(p=>{let[m]=Go(p.name),f={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:o7(p.type),type:"dtype"}},children:[]};f.signatureKey=p.name,i.push(f),s[m]=f}),Object.keys(s).forEach(p=>{let m=s[p];m.inputNames.forEach((f,d)=>{let[g,,h]=Go(f),x=s[g];if(x.outputs!=null){let y=x.outputs.indexOf(h);if(y!==-1){let v=`${g}:${y}`;m.inputNames[d]=v}}m.inputs.push(x),x.children.push(m)})});let u=t.ret;t.signature.outputArg.forEach(p=>{let[m,f]=Go(u[p.name]),d=s[m];d!=null&&(d.defaultOutput=f,a.push(d))});let c=this.mapArgsToSignature(t);return{nodes:s,inputs:i,outputs:a,weights:o,placeholders:n,signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n),e),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return e!=null&&(n=e[n]),{name:n,dtype:t.type}}};function sj(r){let t=z().global;if(typeof t.atob<"u")return t.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function VI(r,t){let e=Array.isArray(r)?String.fromCharCode.apply(null,r):sj(r);return t?e:e.toLowerCase()}function Df(r,t,e,n=!1){let o=r[t];return o!=null?VI(o.s,n):e}function Rf(r,t,e){let n=r[t];return n?n.b:e}function $f(r,t,e){let n=r[t]||{},o=n.i!=null?n.i:n.f!=null?n.f:e;return typeof o=="number"?o:parseInt(o,10)}function o7(r){switch(typeof r=="string"&&(r=On[r]),r){case On.DT_FLOAT:case On.DT_HALF:return"float32";case On.DT_INT32:case On.DT_INT64:case On.DT_INT8:case On.DT_UINT8:return"int32";case On.DT_BOOL:return"bool";case On.DT_DOUBLE:return"float32";case On.DT_STRING:return"string";case On.DT_COMPLEX64:case On.DT_COMPLEX128:return"complex64";default:return null}}function GI(r,t,e){let n=r[t];return n&&n.func?n.func.name:e}function Ff(r,t,e){let n=r[t];return n&&n.type?o7(n.type):e}function Of(r,t,e){let n=r[t];return n&&n.list&&n.list.type?n.list.type.map(o=>o7(o)):e}function UI(r){if(!r.unknownRank)return r.dim!=null?r.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function Mf(r,t,e){let n=r[t];return n&&n.shape?UI(n.shape):e}function Pf(r,t,e){let n=r[t];return n?((n.list.f&&n.list.f.length?n.list.f:n.list.i)||[]).map(o=>typeof o=="number"?o:parseInt(o,10)):e}function Lf(r,t,e,n=!1){let o=r[t];return o&&o.list&&o.list.s?o.list.s.map(s=>VI(s,n)):e}function zf(r,t,e){let n=r[t];return n&&n.list&&n.list.shape?n.list.shape.map(o=>UI(o)):e}function Bf(r,t,e){let n=r[t];return n&&n.list&&n.list.b?n.list.b:e}var Gf=class{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(o=>this.getInput(o)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((o,s)=>(o[s]=this.getAttr(s),o),{}))}getInput(t){return ar(t,this.tensorMap,this.context)}getAttr(t,e){let n=this.node.rawAttrs[t];if(n.tensor!=null)return ar(t,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return $f(this.node.rawAttrs,t,e);if(n.s!=null)return Df(this.node.rawAttrs,t,e);if(n.b!=null)return Rf(this.node.rawAttrs,t,e);if(n.shape!=null)return Mf(this.node.rawAttrs,t,e);if(n.type!=null)return Ff(this.node.rawAttrs,t,e);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return Pf(this.node.rawAttrs,t,e);if(n.list.s!=null)return Lf(this.node.rawAttrs,t,e);if(n.list.shape!=null)return zf(this.node.rawAttrs,t,e);if(n.list.b!=null)return Bf(this.node.rawAttrs,t,e);if(n.list.type!=null)return Of(this.node.rawAttrs,t,e)}return e}};var Ze={};ft(Ze,{OP_SCOPE_SUFFIX:()=>l5,abs:()=>wt,acos:()=>Sm,acosh:()=>Im,add:()=>H,addN:()=>hb,all:()=>Dc,any:()=>yl,argMax:()=>is,argMin:()=>Nm,asin:()=>km,asinh:()=>Am,atan:()=>Em,atan2:()=>_m,atanh:()=>Dm,avgPool:()=>i0,avgPool3d:()=>Rm,basicLSTMCell:()=>yb,batchNorm:()=>ls,batchNorm2d:()=>$m,batchNorm3d:()=>Fm,batchNorm4d:()=>Om,batchToSpaceND:()=>a0,bincount:()=>Mm,bitwiseAnd:()=>vb,booleanMaskAsync:()=>QV,broadcastArgs:()=>wb,broadcastTo:()=>cs,buffer:()=>ye,cast:()=>J,ceil:()=>Pm,clipByValue:()=>vr,clone:()=>Qr,complex:()=>hn,concat:()=>Ye,concat1d:()=>Lm,concat2d:()=>zm,concat3d:()=>Bm,concat4d:()=>Gm,conv1d:()=>$c,conv2d:()=>gn,conv2dTranspose:()=>Oc,conv3d:()=>Vm,conv3dTranspose:()=>Wm,cos:()=>l0,cosh:()=>Mc,cosineWindow:()=>Cp,cumprod:()=>vl,cumsum:()=>Pc,denseBincount:()=>xp,depthToSpace:()=>qm,depthwiseConv2d:()=>us,diag:()=>Tb,dilation2d:()=>Hm,div:()=>se,divNoNan:()=>Km,dot:()=>jm,dropout:()=>R5,einsum:()=>c0,elu:()=>ps,enclosingPowerOfTwo:()=>$5,ensureShape:()=>Sb,equal:()=>qr,erf:()=>Lc,euclideanNorm:()=>Xm,exp:()=>Gt,expandDims:()=>Wt,expm1:()=>Ym,eye:()=>wl,fft:()=>b0,fill:()=>io,floor:()=>ms,floorDiv:()=>_c,fused:()=>w0,gather:()=>fs,gatherND:()=>cU,greater:()=>Et,greaterEqual:()=>en,ifft:()=>Ei,imag:()=>u0,image:()=>bn,inTopKAsync:()=>mU,irfft:()=>Yc,isFinite:()=>Zm,isInf:()=>Jm,isNaN:()=>Qm,leakyRelu:()=>p0,less:()=>ki,lessEqual:()=>_n,linalg:()=>O5,linspace:()=>kb,localResponseNormalization:()=>e3,log:()=>Tr,log1p:()=>m0,logSigmoid:()=>t3,logSoftmax:()=>zc,logSumExp:()=>f0,logicalAnd:()=>Mr,logicalNot:()=>d0,logicalOr:()=>Bc,logicalXor:()=>r3,losses:()=>dW,lowerBound:()=>Ab,matMul:()=>Me,max:()=>wr,maxPool:()=>h0,maxPool3d:()=>o3,maxPoolWithArgmax:()=>Eb,maximum:()=>yn,mean:()=>xt,meshgrid:()=>_b,min:()=>Ii,minimum:()=>Xn,mirrorPad:()=>s3,mod:()=>i3,moments:()=>Tl,movingAverage:()=>rU,mul:()=>R,multiRNNCell:()=>Db,multinomial:()=>Rb,neg:()=>Le,norm:()=>Ni,notEqual:()=>$o,oneHot:()=>Cl,ones:()=>Qt,onesLike:()=>hr,op:()=>S,outerProduct:()=>$b,pad:()=>tn,pad1d:()=>Fb,pad2d:()=>Ob,pad3d:()=>Mb,pad4d:()=>Pb,pool:()=>a3,pow:()=>Or,prelu:()=>x0,print:()=>Cm,prod:()=>l3,raggedGather:()=>Lb,raggedRange:()=>zb,raggedTensorToTensor:()=>Bb,rand:()=>Gb,randomGamma:()=>ov,randomNormal:()=>Nl,randomStandardNormal:()=>sv,randomUniform:()=>Dn,randomUniformInt:()=>iv,range:()=>ds,real:()=>Ai,reciprocal:()=>f3,relu:()=>_r,relu6:()=>Gc,reshape:()=>$,reverse:()=>ur,reverse1d:()=>av,reverse2d:()=>lv,reverse3d:()=>cv,reverse4d:()=>uv,rfft:()=>v0,round:()=>Vc,rsqrt:()=>Uc,scalar:()=>ce,scatterND:()=>oU,searchSorted:()=>bp,selu:()=>Wc,separableConv2d:()=>qc,setdiff1dAsync:()=>pv,sigmoid:()=>Wr,sign:()=>d3,signal:()=>fW,sin:()=>Hc,sinh:()=>Kc,slice:()=>De,slice1d:()=>jc,slice2d:()=>wp,slice3d:()=>Xc,slice4d:()=>kl,softmax:()=>y0,softplus:()=>Ro,spaceToBatchND:()=>g0,sparse:()=>hW,sparseToDense:()=>aU,spectral:()=>mW,split:()=>pr,sqrt:()=>lt,square:()=>Oe,squaredDifference:()=>Zc,squeeze:()=>Rn,stack:()=>_t,step:()=>lo,stridedSlice:()=>h3,string:()=>gW,sub:()=>oe,sum:()=>ue,tan:()=>g3,tanh:()=>Do,tensor:()=>yr,tensor1d:()=>Dt,tensor2d:()=>_i,tensor3d:()=>mv,tensor4d:()=>fv,tensor5d:()=>dv,tensor6d:()=>hv,tensorScatterUpdate:()=>yv,tile:()=>Er,topk:()=>x3,transpose:()=>Pe,truncatedNormal:()=>Jc,unique:()=>y3,unsortedSegmentSum:()=>Qc,unstack:()=>mr,upperBound:()=>bv,variable:()=>b3,where:()=>gt,whereAsync:()=>w3,zeros:()=>yt,zerosLike:()=>ve});var WI=(r,t,e,n=Ze)=>{switch(r.op){case"BiasAdd":case"AddV2":case"Add":return[n.add(T("a",r,t,e),T("b",r,t,e))];case"AddN":return[n.addN(T("tensors",r,t,e))];case"FloorMod":case"Mod":return[n.mod(T("a",r,t,e),T("b",r,t,e))];case"Mul":return[n.mul(T("a",r,t,e),T("b",r,t,e))];case"RealDiv":case"Div":return[n.div(T("a",r,t,e),T("b",r,t,e))];case"DivNoNan":return[n.divNoNan(T("a",r,t,e),T("b",r,t,e))];case"FloorDiv":return[n.floorDiv(T("a",r,t,e),T("b",r,t,e))];case"Sub":return[n.sub(T("a",r,t,e),T("b",r,t,e))];case"Minimum":return[n.minimum(T("a",r,t,e),T("b",r,t,e))];case"Maximum":return[n.maximum(T("a",r,t,e),T("b",r,t,e))];case"Pow":return[n.pow(T("a",r,t,e),T("b",r,t,e))];case"SquaredDifference":return[n.squaredDifference(T("a",r,t,e),T("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var qI=(r,t,e,n=Ze)=>{switch(r.op){case"Abs":case"ComplexAbs":return[n.abs(T("x",r,t,e))];case"Acos":return[n.acos(T("x",r,t,e))];case"Acosh":return[n.acosh(T("x",r,t,e))];case"Asin":return[n.asin(T("x",r,t,e))];case"Asinh":return[n.asinh(T("x",r,t,e))];case"Atan":return[n.atan(T("x",r,t,e))];case"Atan2":return[n.atan2(T("x",r,t,e),T("y",r,t,e))];case"Atanh":return[n.atanh(T("x",r,t,e))];case"Ceil":return[n.ceil(T("x",r,t,e))];case"Complex":return[n.complex(T("real",r,t,e),T("imag",r,t,e))];case"Cos":return[n.cos(T("x",r,t,e))];case"Cosh":return[n.cosh(T("x",r,t,e))];case"Elu":return[n.elu(T("x",r,t,e))];case"Erf":return[n.erf(T("x",r,t,e))];case"Exp":return[n.exp(T("x",r,t,e))];case"Expm1":return[n.expm1(T("x",r,t,e))];case"Floor":return[n.floor(T("x",r,t,e))];case"Log":return[n.log(T("x",r,t,e))];case"Log1p":return[n.log1p(T("x",r,t,e))];case"Imag":return[n.imag(T("x",r,t,e))];case"Neg":return[n.neg(T("x",r,t,e))];case"Reciprocal":return[n.reciprocal(T("x",r,t,e))];case"Real":return[n.real(T("x",r,t,e))];case"Relu":return[n.relu(T("x",r,t,e))];case"Round":return[n.round(T("x",r,t,e))];case"Selu":return[n.selu(T("x",r,t,e))];case"Sigmoid":return[n.sigmoid(T("x",r,t,e))];case"Sin":return[n.sin(T("x",r,t,e))];case"Sign":return[n.sign(T("x",r,t,e))];case"Sinh":return[n.sinh(T("x",r,t,e))];case"Softplus":return[n.softplus(T("x",r,t,e))];case"Sqrt":return[n.sqrt(T("x",r,t,e))];case"Square":return[n.square(T("x",r,t,e))];case"Tanh":return[n.tanh(T("x",r,t,e))];case"Tan":return[n.tan(T("x",r,t,e))];case"ClipByValue":return[n.clipByValue(T("x",r,t,e),T("clipValueMin",r,t,e),T("clipValueMax",r,t,e))];case"Relu6":return[n.relu6(T("x",r,t,e))];case"Rsqrt":return[n.rsqrt(ar(r.inputNames[0],t,e))];case"LeakyRelu":return[n.leakyRelu(T("x",r,t,e),T("alpha",r,t,e))];case"Prelu":return[n.prelu(T("x",r,t,e),T("alpha",r,t,e))];case"IsNan":return[n.isNaN(ar(r.inputNames[0],t,e))];case"IsInf":return[n.isInf(ar(r.inputNames[0],t,e))];case"IsFinite":return[n.isFinite(ar(r.inputNames[0],t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function Mn(r,t,e=""){if(!(typeof r=="number"||typeof t=="number")){b.assert(r.length===t.length,()=>e+` Shapes ${r} and ${t} must match`);for(let n=0;n<r.length;n++){let o=r[n],s=t[n];b.assert(o<0||s<0||o===s,()=>e+` Shapes ${r} and ${t} must match`)}}}function HI(r){return!(typeof r=="number"||r.some(t=>t<0))}function bu(r,t,e){let n=Vf(r,e),o=!HI(n);if(o&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${n}`);if(o&&t.forEach(s=>{n=Vf(s.shape,n)}),!HI(n))throw new Error(`Non-fully-defined elementShape: ${n}`);return n}function Vf(r,t){if(typeof r=="number")return t;if(typeof t=="number")return r;if(r.length!==t.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${t}`);let e=[];for(let n=0;n<r.length;++n){let o=r[n],s=t[n];if(o>=0&&s>=0&&o!==s)throw new Error(`Incompatible shape during merge: ${r} vs. ${t}`);e[n]=o>=0?o:s}return e}var Uf=class{constructor(t,e,n,o,s,i,a){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=o,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=ce(0),Ct(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);let e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),Mn(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,Ct(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((n,o)=>this.write(n,e[o]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let o=0;o<this.size();o++)t.push(o)}if(t.length===0)return yr([],[0].concat(this.elementShape));let n=this.readMany(t);return Mn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),_t(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return yr([],[0].concat(this.elementShape));let e=[];for(let o=0;o<this.size();o++)e.push(o);let n=this.readMany(e);return Mn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Ye(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,mr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0,o=t.map(l=>(n+=l,n));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);let s=n===0?0:e.size/n,i=[];B(()=>{e=$(e,[1,n,s]);for(let l=0;l<t.length;++l){let c=[0,l===0?0:o[l-1],0],p=[1,t[l],s];i[l]=$(De(e,c,p),this.elementShape)}return i});let a=[];for(let l=0;l<t.length;l++)a[l]=l;this.writeMany(a,i)}};var vu=class r{get id(){return this.idTensor.id}constructor(t,e,n,o=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,t?.forEach(s=>{if(n!==s.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${s.dtype}`);Mn(e,s.shape,"TensorList shape mismatch: "),Ct(s)}),this.idTensor=ce(0),this.maxNumElements=o,Ct(this.idTensor)}copy(){return new r([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Mn(t,this.elementShape,"TensorList shape mismatch: ");let o=bu(this.elementShape,this.tensors,t);return B(()=>{let s=this.tensors.map(i=>$(i,o));return _t(s,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=bu(this.elementShape,this.tensors,t),o=this.tensors.pop();return o.kept=!1,Mn(o.shape,t,"TensorList shape mismatch: "),$(o,n)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Mn(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ct(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);let e=new r([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let n=0;n<Math.min(this.tensors.length,t);++n)e.tensors[n]=this.tensors[n];return e}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);Mn(this.tensors[t].shape,e,"TensorList shape mismatch: ");let o=bu(this.elementShape,this.tensors,e);return $(this.tensors[t],o)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Mn(this.elementShape,e.shape,"TensorList shape mismatch: "),Ct(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Mn(this.elementShape,n,"TensorList shape mismatch: "),t=t.slice(0,this.size());let o=bu(this.elementShape,this.tensors,n);return t.length===0?yr([],[0].concat(o)):B(()=>{let s=t.map(i=>$(this.tensors[i],o));return _t(s,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Mn(this.elementShape,e,"TensorList shape mismatch: ");let n=bu(this.elementShape,this.tensors,e);return this.size()===0?yr([],[0].concat(n)):B(()=>{let o=this.tensors.map(s=>$(s,n));return Ye(o,0)})}};function KI(r,t,e){let n=r.dtype;if(r.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${r.shape}`);if(r.dtype!==e)throw new Error(`Invalid data types; op elements ${r.dtype}, but list elements ${e}`);let o=r.shape.slice(1);Mn(o,t,"TensorList shape mismatch: ");let s=mr(r);return new vu(s,t,n)}function jI(r,t,e,n){return new vu([],r,t,n)}function XI(r,t,e,n){if(t.length!==r.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${r.shape[0]}`);let o=Math.max(...t);if(n!=null&&n!==-1&&o>=n)throw new Error(`Max index must be < array size (${o}  vs. ${n})`);let s=new vu([],e,r.dtype,n),i=mr(r,0);return t.forEach((a,l)=>{s.setItem(a,i[l])}),s}function YI(r,t,e){let n=0,o=t.map(c=>(n+=c,n));if(n!==r.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${r.shape}`);let s=r.shape.slice(1),i=Vf(s,e),a=n===0?0:r.size/n,l=B(()=>{let c=[];r=$(r,[1,n,a]);for(let p=0;p<t.length;++p){let f=[0,p===0?0:o[p-1],0],d=[1,t[p],a];c[p]=$(De(r,f,d),i)}return r.dispose(),c}),u=new vu([],e,r.dtype,t.length);for(let c=0;c<l.length;c++)u.setItem(c,l[c]);return u}var ZI=(r,t,e)=>O(null,null,function*(){switch(r.op){case"If":case"StatelessIf":{let n=T("thenBranch",r,t,e),o=T("elseBranch",r,t,e),s=T("cond",r,t,e),i=T("args",r,t,e);return(yield s.data())[0]?e.functionMap[n].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[o].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{let n=T("body",r,t,e),o=T("cond",r,t,e),s=T("args",r,t,e),i=yield e.functionMap[o].executeFunctionAsync(s,e.tensorArrayMap,e.tensorListMap),a=s.map(c=>c.id),l=yield i[0].data();i.forEach(c=>{!c.kept&&a.indexOf(c.id)===-1&&c.dispose()});let u=s;for(;l[0];){let c=u;u=yield e.functionMap[n].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);let p=u.map(f=>f.id);c.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()});let m=yield e.functionMap[o].executeFunctionAsync(u,e.tensorArrayMap,e.tensorListMap);l=yield m[0].data(),m.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&p.indexOf(f.id)===-1&&f.dispose()})}return u}case"LoopCond":{let n=T("pred",r,t,e);return[Vo(n)]}case"Switch":{let n=T("pred",r,t,e),o=T("data",r,t,e);return o.kept||(o=Vo(o)),(yield n.data())[0]?[void 0,o]:[o,void 0]}case"Merge":{let n=r.inputNames.find(o=>ar(o,t,e)!==void 0);if(n){let o=ar(n,t,e);return[Vo(o)]}return}case"Enter":{let n=T("frameName",r,t,e),o=T("tensor",r,t,e);return e.enterFrame(n),[Vo(o)]}case"Exit":{let n=T("tensor",r,t,e);return e.exitFrame(),[Vo(n)]}case"NextIteration":{let n=T("tensor",r,t,e);return e.nextIteration(),[Vo(n)]}case"TensorArrayV3":{let n=T("size",r,t,e),o=T("dtype",r,t,e),s=T("elementShape",r,t,e),i=T("dynamicSize",r,t,e),a=T("clearAfterRead",r,t,e),l=T("identicalElementShapes",r,t,e),u=T("name",r,t,e),c=new Uf(u,o,n,s,l,i,a);return e.addTensorArray(c),[c.idTensor,ce(1)]}case"TensorArrayWriteV3":{let n=T("tensorArrayId",r,t,e),o=T("index",r,t,e),s=T("tensor",r,t,e),i=e.getTensorArray(n.id);return i.write(o,s),[i.idTensor]}case"TensorArrayReadV3":{let n=T("tensorArrayId",r,t,e),o=T("index",r,t,e);return[e.getTensorArray(n.id).read(o)]}case"TensorArrayGatherV3":{let n=T("tensorArrayId",r,t,e),o=T("indices",r,t,e),s=T("dtype",r,t,e);return[e.getTensorArray(n.id).gather(o,s)]}case"TensorArrayScatterV3":{let n=T("tensorArrayId",r,t,e),o=T("indices",r,t,e),s=T("tensor",r,t,e),i=e.getTensorArray(n.id);return i.scatter(o,s),[i.idTensor]}case"TensorArrayConcatV3":{let n=T("tensorArrayId",r,t,e),o=e.getTensorArray(n.id),s=T("dtype",r,t,e);return[o.concat(s)]}case"TensorArraySplitV3":{let n=T("tensorArrayId",r,t,e),o=T("tensor",r,t,e),s=T("lengths",r,t,e),i=e.getTensorArray(n.id);return i.split(s,o),[i.idTensor]}case"TensorArraySizeV3":{let n=T("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return[ce(o.size(),"int32")]}case"TensorArrayCloseV3":{let n=T("tensorArrayId",r,t,e),o=e.getTensorArray(n.id);return o.clearAndClose(),[o.idTensor]}case"TensorListSetItem":{let n=T("tensorListId",r,t,e),o=T("index",r,t,e),s=T("tensor",r,t,e),i=e.getTensorList(n.id);return i.setItem(o,s),[i.idTensor]}case"TensorListGetItem":{let n=T("tensorListId",r,t,e),o=T("index",r,t,e),s=T("elementShape",r,t,e),i=T("elementDType",r,t,e);return[e.getTensorList(n.id).getItem(o,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let n=T("indices",r,t,e),o=T("tensor",r,t,e),s=T("elementShape",r,t,e),i=T("numElements",r,t,e),a=XI(o,n,s,i);return e.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let n=T("elementShape",r,t,e),o=T("elementDType",r,t,e),s;r.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=T(s,r,t,e),a=r.op==="TensorListReserve"?-1:i,l=jI(n,o,i,a);return e.addTensorList(l),[l.idTensor]}case"TensorListGather":{let n=T("tensorListId",r,t,e),o=T("indices",r,t,e),s=T("elementShape",r,t,e),i=T("elementDType",r,t,e);return[e.getTensorList(n.id).gather(o,i,s)]}case"TensorListStack":{let n=T("tensorListId",r,t,e),o=T("elementShape",r,t,e),s=T("elementDType",r,t,e),i=T("numElements",r,t,e);return[e.getTensorList(n.id).stack(o,s,i)]}case"TensorListFromTensor":{let n=T("tensor",r,t,e),o=T("elementShape",r,t,e),s=T("elementDType",r,t,e),i=KI(n,o,s);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let n=T("tensorListId",r,t,e),o=e.getTensorList(n.id),s=T("dtype",r,t,e),i=T("elementShape",r,t,e);return[o.concat(s,i)]}case"TensorListPushBack":{let n=T("tensorListId",r,t,e),o=T("tensor",r,t,e),s=e.getTensorList(n.id);return s.pushBack(o),[s.idTensor]}case"TensorListPopBack":{let n=T("tensorListId",r,t,e),o=T("elementShape",r,t,e),s=T("elementDType",r,t,e);return[e.getTensorList(n.id).popBack(o,s)]}case"TensorListSplit":{let n=T("tensor",r,t,e),o=T("elementShape",r,t,e),s=T("lengths",r,t,e),i=YI(n,s,o);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{let n=T("tensorListId",r,t,e),o=e.getTensorList(n.id);return[ce(o.size(),"int32")]}case"TensorListResize":{let n=T("tensorListId",r,t,e),o=T("size",r,t,e),i=e.getTensorList(n.id).resize(o);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});function JI(r,t,e){let[n,o]=T("fusedOps",r,t,e),s=n==="biasadd",i=!s,a=o==="prelu",l=n==="fusedbatchnorm",u=T("numArgs",r,t,e);if(s){if(a&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&s&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=T("strides",r,t,e),p=Wp(r,t,e),m=T("dataFormat",r,t,e).toUpperCase(),f=T("dilations",r,t,e),[d,g]=T("args",r,t,e);i&&(g=d,d=void 0);let h=T("leakyreluAlpha",r,t,e);return{stride:c,pad:p,dataFormat:m,dilations:f,biasArg:d,preluArg:g,activationFunc:o,leakyreluAlpha:h}}var QI=(r,t,e,n=Ze)=>{switch(r.op){case"Conv1D":{let o=T("stride",r,t,e),s=T("pad",r,t,e),i=T("dataFormat",r,t,e).toUpperCase(),a=T("dilation",r,t,e);return[n.conv1d(T("x",r,t,e),T("filter",r,t,e),o,s,i,a)]}case"Conv2D":{let o=T("strides",r,t,e),s=Wp(r,t,e),i=T("dataFormat",r,t,e).toUpperCase(),a=T("dilations",r,t,e);return[n.conv2d(T("x",r,t,e),T("filter",r,t,e),[o[1],o[2]],s,i,[a[1],a[2]])]}case"_FusedConv2D":{let{stride:o,pad:s,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=JI(r,t,e);return[n.fused.conv2d({x:T("x",r,t,e),filter:T("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:o,pad:s,dataFormat:i,dilations:a,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:p}=JI(r,t,e);return[n.fused.depthwiseConv2d({x:T("x",r,t,e),filter:T("filter",r,t,e),strides:[o[1],o[2]],pad:s,dataFormat:i,dilations:[a[1],a[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let o=T("outputShape",r,t,e),s=T("strides",r,t,e),i=Wp(r,t,e);return[n.conv2dTranspose(T("x",r,t,e),T("filter",r,t,e),o,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let o=T("strides",r,t,e),s=Wp(r,t,e),i=T("dilations",r,t,e),a=T("dataFormat",r,t,e).toUpperCase();return[n.depthwiseConv2d(T("input",r,t,e),T("filter",r,t,e),[o[1],o[2]],s,a,[i[1],i[2]])]}case"Conv3D":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("dataFormat",r,t,e).toUpperCase(),a=T("dilations",r,t,e);return[n.conv3d(T("x",r,t,e),T("filter",r,t,e),[o[1],o[2],o[3]],s,i,[a[1],a[2],a[3]])]}case"AvgPool":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[n.avgPool(T("x",r,t,e),[i[1],i[2]],[o[1],o[2]],s)]}case"MaxPool":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[n.maxPool(T("x",r,t,e),[i[1],i[2]],[o[1],o[2]],s)]}case"MaxPoolWithArgmax":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e),a=T("includeBatchInIndex",r,t,e),{result:l,indexes:u}=n.maxPoolWithArgmax(T("x",r,t,e),[i[1],i[2]],[o[1],o[2]],s,a);return[l,u]}case"AvgPool3D":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[n.avgPool3d(T("x",r,t,e),[i[1],i[2],i[3]],[o[1],o[2],o[3]],s)]}case"MaxPool3D":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("kernelSize",r,t,e);return[n.maxPool3d(T("x",r,t,e),[i[1],i[2],i[3]],[o[1],o[2],o[3]],s)]}case"Dilation2D":{let o=T("strides",r,t,e),s=T("pad",r,t,e),i=T("dilations",r,t,e),a=o[1],l=o[2],u=i[1],c=i[2];return[n.dilation2d(T("x",r,t,e),T("filter",r,t,e),[a,l],s,[u,c],"NHWC")]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var eN=(r,t,e,n=Ze)=>{switch(r.op){case"Fill":{let o=T("shape",r,t,e),s=T("dtype",r,t,e),i=T("value",r,t,e);return[n.fill(o,i,s)]}case"LinSpace":{let o=T("start",r,t,e),s=T("stop",r,t,e),i=T("num",r,t,e);return[n.linspace(o,s,i)]}case"Multinomial":{let o=T("logits",r,t,e),s=T("numSamples",r,t,e),i=T("seed",r,t,e);return[n.multinomial(o,s,i)]}case"OneHot":{let o=T("indices",r,t,e),s=T("depth",r,t,e),i=T("onValue",r,t,e),a=T("offValue",r,t,e),l=T("dtype",r,t,e);return[n.oneHot(o,s,i,a,l)]}case"Ones":return[n.ones(T("shape",r,t,e),T("dtype",r,t,e))];case"OnesLike":return[n.onesLike(T("x",r,t,e))];case"RandomStandardNormal":return[n.randomStandardNormal(T("shape",r,t,e),T("dtype",r,t,e),T("seed",r,t,e))];case"RandomUniform":return[n.randomUniform(T("shape",r,t,e),T("minval",r,t,e),T("maxval",r,t,e),T("dtype",r,t,e))];case"RandomUniformInt":return[n.randomUniformInt(T("shape",r,t,e),T("minval",r,t,e),T("maxval",r,t,e),T("seed",r,t,e))];case"Range":{let o=T("start",r,t,e),s=T("stop",r,t,e),i=T("step",r,t,e);return[n.range(o,s,i,T("dtype",r,t,e))]}case"TruncatedNormal":{let o=T("shape",r,t,e),s=T("mean",r,t,e),i=T("stdDev",r,t,e),a=T("seed",r,t,e);return[n.truncatedNormal(o,s,i,T("dtype",r,t,e),a)]}case"Zeros":return[n.zeros(T("shape",r,t,e),T("dtype",r,t,e))];case"ZerosLike":return[n.zerosLike(T("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function s7(r,t,e){let n=T("boxes",r,t,e),o=T("scores",r,t,e),s=T("maxOutputSize",r,t,e),i=T("iouThreshold",r,t,e),a=T("scoreThreshold",r,t,e),l=T("softNmsSigma",r,t,e);return{boxes:n,scores:o,maxOutputSize:s,iouThreshold:i,scoreThreshold:a,softNmsSigma:l}}var tN=(s,i,a,l,...u)=>O(null,[s,i,a,l,...u],function*(r,t,e,n,o=Ze){switch(r.op){case"NonMaxSuppressionV5":{let{boxes:c,scores:p,maxOutputSize:m,iouThreshold:f,scoreThreshold:d,softNmsSigma:g}=s7(r,t,e),h=yield o.image.nonMaxSuppressionWithScoreAsync(c,p,m,f,d,g);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:c,scores:p,maxOutputSize:m,iouThreshold:f,scoreThreshold:d}=s7(r,t,e),g=T("padToMaxOutputSize",r,t,e),h=yield o.image.nonMaxSuppressionPaddedAsync(c,p,m,f,d,g);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:c,scores:p,maxOutputSize:m,iouThreshold:f,scoreThreshold:d}=s7(r,t,e);return[yield o.image.nonMaxSuppressionAsync(c,p,m,f,d)]}case"Where":{let c=o.cast(T("condition",r,t,e),"bool"),p=[yield o.whereAsync(c)];return c.dispose(),p}case"ListDiff":return o.setdiff1dAsync(T("x",r,t,e),T("y",r,t,e));default:throw TypeError(`Node type ${r.op} is not implemented`)}});var rN=(r,t,e,n=Ze)=>{switch(r.op){case"LowerBound":{let o=T("sortedSequence",r,t,e),s=T("values",r,t,e);return[n.lowerBound(o,s)]}case"TopKV2":{let o=T("x",r,t,e),s=T("k",r,t,e),i=T("sorted",r,t,e),a=n.topk(o,s,i);return[a.values,a.indices]}case"UpperBound":{let o=T("sortedSequence",r,t,e),s=T("values",r,t,e);return[n.upperBound(o,s)]}case"Unique":{let o=T("x",r,t,e),s=n.unique(o);return[s.values,s.indices]}case"UniqueV2":{let o=T("x",r,t,e),s=T("axis",r,t,e),i=n.unique(o,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var nN=(r,t,e,n=Ze)=>{switch(r.op){case"Const":return t[r.name];case"PlaceholderWithDefault":let o=T("default",r,t,e);return[ar(r.name,t,e)||o];case"Placeholder":return[ar(r.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=T("x",r,t,e);return[Vo(c)]}case"IdentityN":return T("x",r,t,e).map(c=>Vo(c));case"Snapshot":let s=T("x",r,t,e);return[Vo(s)];case"Shape":return[n.tensor1d(T("x",r,t,e).shape,"int32")];case"ShapeN":return T("x",r,t,e).map(c=>n.tensor1d(c.shape));case"Size":return[n.scalar(T("x",r,t,e).size,"int32")];case"Rank":return[n.scalar(T("x",r,t,e).rank,"int32")];case"NoOp":return[n.scalar(1)];case"Print":let i=T("x",r,t,e),a=T("data",r,t,e),l=T("message",r,t,e),u=T("summarize",r,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[i];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var Wf=class{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=ce(0),this.tensorMap=new Map,Ct(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ce(this.size(),"int32")}import(t,e){return O(this,null,function*(){this.checkKeyAndValueTensor(t,e);let n=yield t.data();return this.tensorMap.forEach(o=>o.dispose()),this.tensorMap.clear(),B(()=>{let o=mr(e),s=n.length,i=o.length;b.assert(s===i,()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${i} elements.`);for(let a=0;a<s;a++){let l=n[a],u=o[a];Ct(u),this.tensorMap.set(l,u)}return this.handle})})}find(t,e){return O(this,null,function*(){this.checkKeyAndValueTensor(t,e);let n=yield t.data();return B(()=>{let o=[];for(let s=0;s<n.length;s++){let i=n[s],a=this.findWithDefault(i,e);o.push(a)}return _t(o)})})}findWithDefault(t,e){let n=this.tensorMap.get(t);return n??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}};var oN=(r,t,e,n)=>O(null,null,function*(){switch(r.op){case"HashTable":case"HashTableV2":{let o=n.getHashTableHandleByName(r.name);if(o!=null)return[o];{let s=T("keyDType",r,t,e),i=T("valueDType",r,t,e),a=new Wf(s,i);return n.addHashTable(r.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let o=T("tableHandle",r,t,e,n),s=T("keys",r,t,e),i=T("values",r,t,e);return[yield n.getHashTableById(o.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let o=T("tableHandle",r,t,e,n),s=T("keys",r,t,e),i=T("defaultValue",r,t,e);return[yield n.getHashTableById(o.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let o=T("tableHandle",r,t,e,n);return[n.getHashTableById(o.id).tensorSize()]}default:throw TypeError(`Node type ${r.op} is not implemented`)}});var sN=(r,t,e,n=Ze)=>{switch(r.op){case"ResizeBilinear":{let o=T("images",r,t,e),s=T("size",r,t,e),i=T("alignCorners",r,t,e),a=T("halfPixelCenters",r,t,e);return[n.image.resizeBilinear(o,[s[0],s[1]],i,a)]}case"ResizeNearestNeighbor":{let o=T("images",r,t,e),s=T("size",r,t,e),i=T("alignCorners",r,t,e),a=T("halfPixelCenters",r,t,e);return[n.image.resizeNearestNeighbor(o,[s[0],s[1]],i,a)]}case"CropAndResize":{let o=T("image",r,t,e),s=T("boxes",r,t,e),i=T("boxInd",r,t,e),a=T("cropSize",r,t,e),l=T("method",r,t,e),u=T("extrapolationValue",r,t,e);return[n.image.cropAndResize(o,s,i,a,l,u)]}case"ImageProjectiveTransformV3":{let o=T("images",r,t,e),s=T("transforms",r,t,e),i=T("outputShape",r,t,e),a=T("fillValue",r,t,e),l=T("interpolation",r,t,e),u=T("fillMode",r,t,e);return[n.image.transform(o,s,l.toLowerCase(),u.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var iN=(r,t,e,n=Ze)=>{switch(r.op){case"Equal":return[n.equal(T("a",r,t,e),T("b",r,t,e))];case"NotEqual":return[n.notEqual(T("a",r,t,e),T("b",r,t,e))];case"Greater":return[n.greater(T("a",r,t,e),T("b",r,t,e))];case"GreaterEqual":return[n.greaterEqual(T("a",r,t,e),T("b",r,t,e))];case"Less":return[n.less(T("a",r,t,e),T("b",r,t,e))];case"LessEqual":return[n.lessEqual(T("a",r,t,e),T("b",r,t,e))];case"LogicalAnd":return[n.logicalAnd(T("a",r,t,e),T("b",r,t,e))];case"LogicalNot":return[n.logicalNot(T("a",r,t,e))];case"LogicalOr":return[n.logicalOr(T("a",r,t,e),T("b",r,t,e))];case"Select":case"SelectV2":return[n.where(T("condition",r,t,e),T("a",r,t,e),T("b",r,t,e))];case"BitwiseAnd":return[n.bitwiseAnd(T("a",r,t,e),T("b",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var aN=(r,t,e,n=Ze)=>{switch(r.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[n.matMul(T("a",r,t,e),T("b",r,t,e),T("transposeA",r,t,e),T("transposeB",r,t,e))];case"Einsum":return[n.einsum(T("equation",r,t,e),...T("tensors",r,t,e))];case"Transpose":return[n.transpose(T("x",r,t,e),T("perm",r,t,e))];case"_FusedMatMul":let[o,s]=T("fusedOps",r,t,e),i=o==="biasadd",a=s==="prelu",l=T("numArgs",r,t,e),u=T("leakyreluAlpha",r,t,e);if(i){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=T("args",r,t,e);return[n.fused.matMul({a:T("a",r,t,e),b:T("b",r,t,e),transposeA:T("transposeA",r,t,e),transposeB:T("transposeB",r,t,e),bias:c,activation:s,preluActivationWeights:p,leakyreluAlpha:u})];case"MatrixBandPart":return[n.linalg.bandPart(T("a",r,t,e),T("numLower",r,t,e),T("numUpper",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var lN=(r,t,e,n=Ze)=>{switch(r.op){case"EuclideanNorm":return[n.euclideanNorm(T("x",r,t,e),T("axis",r,t,e),T("keepDims",r,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[n.batchNorm(T("x",r,t,e),T("mean",r,t,e),T("variance",r,t,e),T("offset",r,t,e),T("scale",r,t,e),T("epsilon",r,t,e))];case"FusedBatchNormV3":return[n.batchNorm(T("x",r,t,e),T("mean",r,t,e),T("variance",r,t,e),T("offset",r,t,e),T("scale",r,t,e),T("epsilon",r,t,e))];case"LRN":return[n.localResponseNormalization(T("x",r,t,e),T("radius",r,t,e),T("bias",r,t,e),T("alpha",r,t,e),T("beta",r,t,e))];case"Softmax":return[n.softmax(T("x",r,t,e))];case"LogSoftmax":return[n.logSoftmax(T("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var cN=(r,t,e,n=Ze)=>{switch(r.op){case"RaggedGather":{let{outputNestedSplits:o,outputDenseValues:s}=n.raggedGather(T("paramsNestedSplits",r,t,e),T("paramsDenseValues",r,t,e),T("indices",r,t,e),T("outputRaggedRank",r,t,e));return o.concat(s)}case"RaggedRange":{let{rtNestedSplits:o,rtDenseValues:s}=n.raggedRange(T("starts",r,t,e),T("limits",r,t,e),T("splits",r,t,e));return[o,s]}case"RaggedTensorToTensor":return[n.raggedTensorToTensor(T("shape",r,t,e),T("values",r,t,e),T("defaultValue",r,t,e),T("rowPartitionTensors",r,t,e),T("rowPartitionTypes",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var uN=(r,t,e,n=Ze)=>{switch(r.op){case"Max":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.max(T("x",r,t,e),a,l)]}case"Mean":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.mean(T("x",r,t,e),a,l)]}case"Min":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.min(T("x",r,t,e),a,l)]}case"Sum":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.sum(T("x",r,t,e),a,l)]}case"All":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.all(T("x",r,t,e),a,l)]}case"Any":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.any(T("x",r,t,e),a,l)]}case"ArgMax":{let a=T("axis",r,t,e);return[n.argMax(T("x",r,t,e),a)]}case"ArgMin":{let a=T("axis",r,t,e);return[n.argMin(T("x",r,t,e),a)]}case"Prod":{let a=T("axis",r,t,e),l=T("keepDims",r,t,e);return[n.prod(T("x",r,t,e),a,l)]}case"Cumprod":{let a=T("axis",r,t,e),l=T("exclusive",r,t,e),u=T("reverse",r,t,e);return[n.cumprod(T("x",r,t,e),a,l,u)]}case"Cumsum":{let a=T("axis",r,t,e),l=T("exclusive",r,t,e),u=T("reverse",r,t,e);return[n.cumsum(T("x",r,t,e),a,l,u)]}case"Bincount":let o=T("x",r,t,e),s=T("weights",r,t,e),i=T("size",r,t,e);return[n.bincount(o,s,i)];case"DenseBincount":{let a=T("x",r,t,e),l=T("weights",r,t,e),u=T("size",r,t,e),c=T("binaryOutput",r,t,e);return[n.denseBincount(a,l,u,c)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var pN=(r,t,e,n=Ze)=>{switch(r.op){case"ConcatV2":case"Concat":{let o=T("n",r,t,e),s=T("axis",r,t,e),i=T("tensors",r,t,e);return i=i.slice(0,o),[n.concat(i,s)]}case"Gather":{let o=T("x",r,t,e),s=T("indices",r,t,e);return[n.gather(o,n.cast(s,"int32"),0)]}case"GatherV2":{let o=T("axis",r,t,e),s=T("batchDims",r,t,e),i=T("x",r,t,e),a=T("indices",r,t,e);return[n.gather(i,n.cast(a,"int32"),o,s)]}case"Reverse":{let o=T("dims",r,t,e),s=[];for(let a=0;a<o.length;a++)o[a]&&s.push(a);let i=T("x",r,t,e);return[n.reverse(i,s)]}case"ReverseV2":{let o=T("axis",r,t,e),s=T("x",r,t,e);return[n.reverse(s,o)]}case"Slice":{let o=T("begin",r,t,e),s=T("size",r,t,e);return[n.slice(T("x",r,t,e),o,s)]}case"StridedSlice":{let o=T("begin",r,t,e),s=T("end",r,t,e),i=T("strides",r,t,e),a=T("beginMask",r,t,e),l=T("endMask",r,t,e),u=T("ellipsisMask",r,t,e),c=T("newAxisMask",r,t,e),p=T("shrinkAxisMask",r,t,e),m=T("x",r,t,e);return[n.stridedSlice(m,o,s,i,a,l,u,c,p)]}case"Pack":return B(()=>{let o=T("axis",r,t,e),s=T("tensors",r,t,e),i=s[0].shape,a=n.squeeze(s[0]).shape,l=s.map(u=>{let c=b.arraysEqual(u.shape,i);if(!c&&!b.arraysEqual(n.squeeze(u).shape,a))throw new Error("the input tensors shape does not match");return c?u:n.reshape(u,i)});return[n.stack(l,o)]});case"Unpack":{let o=T("axis",r,t,e),s=T("tensor",r,t,e);return n.unstack(s,o)}case"Tile":{let o=T("reps",r,t,e);return[n.tile(T("x",r,t,e),o)]}case"Split":case"SplitV":{let o=T("axis",r,t,e),s=T("numOrSizeSplits",r,t,e),i=T("x",r,t,e);return n.split(i,s,o)}case"ScatterNd":{let o=T("indices",r,t,e),s=T("values",r,t,e),i=T("shape",r,t,e);return[n.scatterND(o,s,i)]}case"GatherNd":{let o=T("x",r,t,e),s=T("indices",r,t,e);return[n.gatherND(o,s)]}case"SparseToDense":{let o=T("sparseIndices",r,t,e),s=T("outputShape",r,t,e),i=T("sparseValues",r,t,e),a=T("defaultValue",r,t,e);return[n.sparseToDense(o,i,s,i.dtype===a.dtype?a:n.cast(a,i.dtype))]}case"TensorScatterUpdate":{let o=T("indices",r,t,e),s=T("values",r,t,e),i=T("tensor",r,t,e);return[n.tensorScatterUpdate(i,o,s)]}default:throw TypeError(`Node type ${r.op} is not implemented`)}};var mN=(r,t,e,n=Ze)=>{switch(r.op){case"SparseFillEmptyRows":{let{outputIndices:o,outputValues:s,emptyRowIndicator:i,reverseIndexMap:a}=n.sparse.sparseFillEmptyRows(T("indices",r,t,e),T("values",r,t,e),T("denseShape",r,t,e),T("defaultValue",r,t,e));return[o,s,i,a]}case"SparseReshape":{let{outputIndices:o,outputShape:s}=n.sparse.sparseReshape(T("inputIndices",r,t,e),T("inputShape",r,t,e),T("newShape",r,t,e));return[o,s]}case"SparseSegmentMean":return[n.sparse.sparseSegmentMean(T("data",r,t,e),T("indices",r,t,e),T("segmentIds",r,t,e))];case"SparseSegmentSum":return[n.sparse.sparseSegmentSum(T("data",r,t,e),T("indices",r,t,e),T("segmentIds",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var fN=(r,t,e,n=Ze)=>{switch(r.op){case"FFT":return[n.fft(T("x",r,t,e))];case"IFFT":return[n.ifft(T("x",r,t,e))];case"RFFT":return[n.rfft(T("x",r,t,e))];case"IRFFT":return[n.irfft(T("x",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var dN=(r,t,e,n=Ze)=>{switch(r.op){case"StaticRegexReplace":return[n.string.staticRegexReplace(T("input",r,t,e),T("pattern",r,t,e),T("rewrite",r,t,e),T("replaceGlobal",r,t,e))];case"StringNGrams":{let{nGrams:o,nGramsSplits:s}=n.string.stringNGrams(T("data",r,t,e),T("dataSplits",r,t,e),T("separator",r,t,e),T("nGramWidths",r,t,e),T("leftPad",r,t,e),T("rightPad",r,t,e),T("padWidth",r,t,e),T("preserveShortSequences",r,t,e));return[o,s]}case"StringSplit":{let{indices:o,values:s,shape:i}=n.string.stringSplit(T("input",r,t,e),T("delimiter",r,t,e),T("skipEmpty",r,t,e));return[o,s,i]}case"StringToHashBucketFast":return[n.string.stringToHashBucketFast(T("input",r,t,e),T("numBuckets",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};var hN=(r,t,e,n=Ze)=>{switch(r.op){case"Cast":return[n.cast(T("x",r,t,e),T("dtype",r,t,e))];case"ExpandDims":{let o=T("axis",r,t,e);return[n.expandDims(T("x",r,t,e),o)]}case"Squeeze":{let o=T("axis",r,t,e);return[n.squeeze(T("x",r,t,e),o)]}case"Reshape":return[n.reshape(T("x",r,t,e),T("shape",r,t,e))];case"EnsureShape":return[n.ensureShape(T("x",r,t,e),T("shape",r,t,e))];case"MirrorPad":return[n.mirrorPad(T("x",r,t,e),T("padding",r,t,e),T("mode",r,t,e))];case"PadV2":case"Pad":return[n.pad(T("x",r,t,e),T("padding",r,t,e),T("constantValue",r,t,e))];case"SpaceToBatchND":{let o=T("blockShape",r,t,e),s=T("paddings",r,t,e);return[n.spaceToBatchND(T("x",r,t,e),o,s)]}case"BatchToSpaceND":{let o=T("blockShape",r,t,e),s=T("crops",r,t,e);return[n.batchToSpaceND(T("x",r,t,e),o,s)]}case"DepthToSpace":{let o=T("blockSize",r,t,e),s=T("dataFormat",r,t,e).toUpperCase();return[n.depthToSpace(T("x",r,t,e),o,s)]}case"BroadcastTo":return[n.broadcastTo(T("x",r,t,e),T("shape",r,t,e))];case"BroadcastArgs":return[n.broadcastArgs(T("s0",r,t,e),T("s1",r,t,e))];default:throw TypeError(`Node type ${r.op} is not implemented`)}};function i7(r,t,e,n,o=B){let s=((i,a,l)=>{switch(i.category){case"arithmetic":return o(()=>WI(i,a,l));case"basic_math":return o(()=>qI(i,a,l));case"control":return ZI(i,a,l);case"convolution":return o(()=>QI(i,a,l));case"creation":return o(()=>eN(i,a,l));case"dynamic":return tN(i,a,l);case"evaluation":return o(()=>rN(i,a,l));case"image":return o(()=>sN(i,a,l));case"graph":return o(()=>nN(i,a,l));case"logical":return o(()=>iN(i,a,l));case"matrices":return o(()=>aN(i,a,l));case"normalization":return o(()=>lN(i,a,l));case"ragged":return o(()=>cN(i,a,l));case"reduction":return o(()=>uN(i,a,l));case"slice_join":return o(()=>pN(i,a,l));case"sparse":return o(()=>mN(i,a,l));case"spectral":return o(()=>fN(i,a,l));case"string":return o(()=>dN(i,a,l));case"transformation":return o(()=>hN(i,a,l));case"hash_table":return oN(i,a,l,n);case"custom":let u=Ef(i.op);if(u&&u.customExecutor)return u.customExecutor(new Gf(i,a,l));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,t,e);return b.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var Hp=class{constructor(t={},e={},n={},o={},s){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=o,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let t=[];for(let e=0;e<this.contexts.length-1;e++){let n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(let e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(let e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}};function a7(r,t,e,n){let o=new Set,s=[],i=null,a=null,l=new Set,u=new Set(Object.keys(r).map(m=>cn(m)[0]));n=n||[];let c=new Set(n.map(m=>cn(m.name)[0])),p=[...t];for(;p.length>0;){let m=p.pop();if((E0(m)||Dj(m)||Rj(m))&&i==null&&(i=m,a=i.children.map(f=>f.name).filter(f=>o.has(f))),o.add(m.name),e[m.name]==null&&!u.has(m.name)&&!c.has(m.name)){if(m.inputs.length===0){s.push(m.name);continue}m.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),p.push(f))})}}return{inputs:r,outputs:t,usedNodes:o,missingInputs:s,dynamicNode:i,syncInputs:a}}function gN(r,t){let{usedNodes:e,inputs:n}=t,o=Object.keys(n).map(h=>cn(h)[0]).map(h=>r.nodes[h]),s=r.initNodes||[],i=h=>e.has(typeof h=="string"?h:h.name);function a(h){return[...new Map(h.map(x=>[x.name,x])).values()]}let l=a([...o,...r.weights,...s]).filter(i),u=a([...l,...Object.values(r.nodes)]).filter(i),c=new Map(u.map(h=>[h.name,h])),p={};for(let h of u){p[h.name]=p[h.name]||0;for(let x of h.children)i(x)||(p[x.name]=Number.POSITIVE_INFINITY),p[x.name]=(p[x.name]||0)+1}let m=Object.entries(p).filter(([,h])=>h===0).map(([h])=>h),f=[...m];for(;m.length>0;){let h=m.pop(),x=c.get(h);for(let y of x.children.filter(i))--p[y.name]===0&&(f.push(y.name),m.push(y.name))}let d=f.map(h=>c.get(h)),g=Nj(d,l);return kj(g,l),g}function Nj(r,t){let e=new Map(r.map(i=>[i.name,i])),n=t.map(i=>i.name),o=new Set(n);for(;n.length>0;){let i=n.pop(),a=e.get(i);for(let l of a.children)!e.has(l.name)||o.has(l.name)||(o.add(l.name),n.push(l.name))}return r.filter(i=>o.has(i.name))}var wu=class extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}};function kj(r,t){let e=new Map(r.map((a,l)=>[a.name,l])),n=new Set(t.map(a=>a.name)),o=a=>n.has(typeof a=="string"?a:a.name),s=new Set(r.map(a=>a.name)),i=a=>s.has(typeof a=="string"?a:a.name);for(let a of r){for(let l of a.children.filter(i)){if(!e.has(l.name))throw new wu(`Child ${l.name} of node ${a.name} is unreachable.`);if(e.get(a.name)>e.get(l.name))throw new wu(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!o(a))for(let l of a.inputs){if(!e.has(l.name))throw new wu(`Input ${l.name} of node ${a.name} is unreachable.`);if(e.get(l.name)>e.get(a.name))throw new wu(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function xN(r){let t=new Map(r.map((a,l)=>[a.name,l])),e=Number.MAX_SAFE_INTEGER,n=r.map((a,l)=>E0(a)?e:l),o=a=>{let l=n[t.get(a.name)];return l??-1},s=r.map((a,l)=>a.children.map(o).reduce((u,c)=>Math.max(u,c),n[l])),i=new Map;for(let a=0;a<r.length;++a){let l=s[a];if(l===e)continue;let u=r[a],c=r[l];i.has(c.name)||i.set(c.name,[]),i.get(c.name).push(u)}return i}var Aj=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Ej=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),_j=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function E0(r){return Aj.has(r.op)}function Dj(r){return Ej.has(r.op)}function Rj(r){return _j.has(r.op)}var Kp=class r{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){let e=Object.keys(t).map(n=>t[n].map(o=>o.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{let e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(n=>{this._functionExecutorMap[n]=new r(t.functions[n],this)})}getCompilationKey(t,e){let n=t.map(s=>s.name).sort(),o=e.map(s=>s.name).sort();return n.join(this.SEPARATOR)+"--"+o.join(this.SEPARATOR)}compile(t,e){let n=a7(t,e,this.weightMap,this._initNodes),{missingInputs:o,dynamicNode:s,syncInputs:i}=n;if(s!=null)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(o.length>0){let u=e.map(p=>p.name),c=Object.keys(t);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${c}]. Missing the following inputs: [${o}]`)}let a=gN(this.graph,n),l=xN(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(t){if(t==null)return null;let e=t.clone();return Ct(e),e}cloneTensorList(t){return t?t.map(n=>this.cloneAndKeepTensor(n)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,n])=>[e,this.cloneTensorList(n)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);let n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);let o=n.map(m=>this.graph.nodes[cn(m)[0]]),s=e.map(m=>cn(m)[0]),i=new Set(s),a=s.map(m=>this.graph.nodes[m]);a.length===0&&(a=this._outputs);let l=this.getCompilationKey(o,a),u=this.compiledMap.get(l);u==null&&(u=this.compile(t,a),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}let c={},p={};return B(()=>{let m=new Hp(this.weightMap,c,p,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(x=>{let[y,v]=cn(x,m),w=[];w[v]=t[x],f[y]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(w))});let d=this.getFrozenTensorIds(f),{orderedNodes:g,nodeLiveUntilMap:h}=u;for(let x of g){if(f[x.name])continue;let y=i7(x,f,m,this._resourceManager);if(b.isPromise(y))throw new Error(`The execution of the op '${x.op}' returned a promise. Please use model.executeAsync() instead.`);f[x.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[x.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(x,f,m,d,i,h.get(x.name))}return this.parent==null&&m.dispose(d),e.map(x=>ar(x,f,m))})}getFrozenTensorIds(t){let e=[].concat.apply([],Object.keys(t).map(n=>t[n]).map(n=>n.map(o=>o.id)));return new Set(e)}checkTensorForDisposal(t,e,n,o,s,i,a){if(!(E0(e)||i.has(t))){for(let l of n[t])l!=null&&(a[l.id]=(a[l.id]||0)+e.children.length);for(let l of e.inputs){if(E0(l))continue;let u=L6(l.name,n,o);if(u!=null)for(let c of u){if(!c||c.kept||s.has(c.id))continue;let p=a[c.id];p===1?(c.dispose(),delete a[c.id]):p!=null&&a[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,n,o,s,i){function a(l){return E0(l)||s.has(l.name)}if(!(E0(t)||i==null))for(let l of i){if(a(l))continue;let u=L6(l.name,e,n);for(let c of u)!c||c.kept||o.has(c.id)||c.dispose()}}executeAsync(t,e){return O(this,null,function*(){return this._executeAsync(t,e)})}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(let e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}_executeAsync(i,a){return O(this,arguments,function*(t,e,n=!1,o={},s={}){this.disposeIntermediateTensors(),n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let l=new Hp(this.weightMap,o,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let u=yield this.executeWithControlFlow(t,l,e,n),c=e.map(d=>ar(d,u,l)),p=c.map(d=>d.id),m=Object.keys(t).map(d=>t[d].id),f=new Set([...p,...m,...this.weightIds]);return Object.values(u).forEach(d=>{d.forEach(g=>{g&&!g.isDisposed&&!f.has(g.id)&&g.dispose()})}),this.parent==null&&l.dispose(f),c})}executeFunctionAsync(t,e,n){return O(this,null,function*(){let o=t.reduce((s,i,a)=>(s[this.inputs[a].name]=i,s),{});return this._executeAsync(o,this.outputNodes,!0,e,n)})}executeWithControlFlow(t,e,n,o){return O(this,null,function*(){let s=Object.keys(t),i=s.map(w=>this.graph.nodes[cn(w)[0]]),a=n.map(w=>cn(w)[0]),l=new Set(a),u=a.map(w=>this.graph.nodes[w]);u.length===0&&(u=this._outputs);let{usedNodes:c,missingInputs:p,dynamicNode:m,syncInputs:f}=a7(t,u,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map(w=>({node:w,contexts:e.currentContext})),g=Object.assign({},this.weightMap);Object.keys(t).forEach(w=>{let[I,E]=cn(w),_=[];_[E]=t[w],g[I]=_});let h={},x=this.getFrozenTensorIds(g),y={};for(;d.length>0;){let w=this.processStack(i,d,e,g,y,x,l,h,c);yield Promise.all(w)}m==null&&!o&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let v=u.filter(w=>!E0(w)&&!ar(w.name,g,e)).map(w=>w.name);if(v.length>0){let w="";throw m!=null&&(w=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${v}] from the provided inputs [${s}]. Consider providing the following inputs: [${p}]. ${w}`)}return g})}processStack(t,e,n,o,s,i,a,l,u){let c=[];for(;e.length>0;){let p=e.pop();n.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&T("isConstant",p.node,o,n)&&([m]=Go(p.node.name,n)),o[p.node.name]==null){let f=i7(p.node,o,n,this._resourceManager);m||([m]=Go(p.node.name,n));let d=n.currentContext;b.isPromise(f)?c.push(f.then(g=>(o[m]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(g)),n.currentContext=d,this.checkTensorForDisposal(m,p.node,o,n,i,a,l),this.processChildNodes(p.node,e,n,o,s,u),g))):(o[m]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(f)),this.checkTensorForDisposal(m,p.node,o,n,i,a,l),this.processChildNodes(p.node,e,n,o,s,u))}else this.processChildNodes(p.node,e,n,o,s,u)}return c}processChildNodes(t,e,n,o,s,i){t.children.forEach(a=>{let[l]=Go(a.name,n);s[l]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(u=>!!ar(u,o,n))&&(s[l]=!0,e.push({contexts:n.currentContext,node:a})):a.inputNames.every(u=>!!ar(u,o,n))&&(s[l]=!0,e.push({contexts:n.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{let n=t[e],[o]=cn(e),s=this.graph.nodes[o];if(s.attrParams.shape&&s.attrParams.shape.value){let i=s.attrParams.shape.value,a=i.length===n.shape.length&&n.shape.every((l,u)=>i[u]===-1||i[u]===l);b.assert(a,()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${i}], but was [${n.shape}]`)}s.attrParams.dtype&&s.attrParams.dtype.value&&b.assert(n.dtype===s.attrParams.dtype.value,()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(t){var e,n;let o={};for(let s in t){let i=(n=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||n===void 0?void 0:n[s];i!=null?o[i.name]=t[s]:o[s]=t[s]}return o}checkInputs(t){let e=Object.keys(t).filter(n=>{let[o]=cn(n);return this.graph.nodes[o]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var n,o;let s=(o=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||o===void 0?void 0:o[e];return s!=null?s.name:e},{})}checkOutputs(t){t.forEach(e=>{let[n]=cn(e);if(!this.graph.nodes[n])throw new Error(`The output '${e}' is not found in the graph`)})}};var qf=class{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(let t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(let t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}};var $j="?tfjs-format=file",Fj="model.json",Hf=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},n=Fo){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=n,e==null&&(this.loadOptions={}),this.resourceManager=new qf}findIOHandler(){let t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{let e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let t=this.handler.load();return b.isPromise(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){let e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}loadStreaming(t){return O(this,null,function*(){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");let e=yield ym(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)})}loadWithWeightMap(t,e){this.artifacts=t;let n=this.artifacts.modelTopology,o=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let s=this.artifacts.userDefinedMetadata;s.signature!=null&&(o=s.signature),s.structuredOutputKeys!=null&&(this.structuredOutputKeys=s.structuredOutputKeys)}if(this.signature=o,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new Kp(qp.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){let s=qp.Instance.transformGraph(t.modelInitializer);this.initializer=new Kp(s),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}save(t,e){return O(this,null,function*(){if(typeof t=="string"){let n=this.io.getSaveHandlers(t);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${t}'`);t=n[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)})}addStructuredOutputNames(t){if(this.structuredOutputKeys){let e=t instanceof Ke?[t]:t,n={};return e.forEach((o,s)=>n[this.structuredOutputKeys[s]]=o),n}return t}predict(t,e){let n=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(n)}predictAsync(t,e){return O(this,null,function*(){let n=yield this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(n)})}normalizeInputs(t){var e;if(!(t instanceof Ke)&&!Array.isArray(t)){let s=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(s!=null)for(let i in s){let a=s[i];a.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[a.resourceId])}return t}t=Array.isArray(t)?t:[t];let n=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${t.length} input tensors provided.`);let o=0;return this.inputNodes.reduce((s,i)=>{var a,l,u;let c=(u=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[i])===null||u===void 0?void 0:u.resourceId;return c!=null?s[i]=this.resourceIdToCapturedInput[c]:s[i]=t[o++],s},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}executeInitializerGraphAsync(){return O(this,null,function*(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))})}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){let e=this.initializerSignature.outputs,n=Object.keys(e);for(let o=0;o<n.length;o++){let s=n[o],i=e[s];this.resourceIdToCapturedInput[i.resourceId]=t[o]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=this.executor.execute(t,e);return n.length>1?n:n[0]}executeAsync(t,e){return O(this,null,function*(){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(yield this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);let n=yield this.executor.executeAsync(t,e);return n.length>1?n:n[0]})}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Ae(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};function l7(n){return O(this,arguments,function*(r,t={},e=Fo){if(r==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof r=="string"&&(r=Oj(r));let o=new Hf(r,t,e);return yield o.load(),o})}function Oj(r){return r.endsWith("/")||(r=r+"/"),`${r}${Fj}${$j}`}var Vj=Vn(vp());var Bj=Vn(vp());var Zlt=Symbol("out"),Jlt=Symbol("field"),Qlt=Symbol("quote"),e1t=Symbol("quoteafterquote"),t1t=Symbol("quoteinquote");function re(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&b.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var Qj=zr.whereImpl,bN=(()=>{class r extends As{nextDataId(){return r.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new W0(this,so())}write(e,n,o){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&N.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:o,refCount:1}),s}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&b.isString(o[0])){let i=o.map(a=>b.encodeString(a));s=this.write(i,e,n)}else s=this.write(o,e,n);return{dataId:s,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){let n=this.data.get(e);n.refCount--}}move(e,n,o,s,i){this.data.set(e,{values:n,dtype:s,refCount:i})}numDataIds(){return this.data.numDataIds()}read(e){return O(this,null,function*(){return this.readSync(e)})}readSync(e){let{dtype:n,complexTensorInfos:o}=this.data.get(e);if(n==="complex64"){let s=this.readSync(o.real.dataId),i=this.readSync(o.imag.dataId);return N.mergeRealAndImagArrays(s,i)}return b.convertBackendValuesAndArrayBuffer(this.data.get(e).values,n)}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>b.decodeString(s));return ye(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ye(e.shape,e.dtype,n)}makeOutput(e,n,o){return so().makeTensorFromTensorInfo(this.makeTensorInfo(n,o,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:o}=this.data.get(e);o!=null&&(this.disposeData(o.real.dataId,!0),this.disposeData(o.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}time(e){return O(this,null,function*(){let n=b.now();return e(),{kernelMs:b.now()-n}})}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){re([e],"where");let n=this.readSync(e.dataId);return Qj(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}return r.nextDataId=0,r})();var B7={};ft(B7,{addImpl:()=>m7,bincountImpl:()=>Su,bincountReduceImpl:()=>Kf,bitwiseAndImpl:()=>f7,castImpl:()=>p7,ceilImpl:()=>d7,concatImpl:()=>jf,equalImpl:()=>h7,expImpl:()=>x7,expm1Impl:()=>b7,floorDivImpl:()=>w7,floorImpl:()=>v7,gatherNdImpl:()=>Xf,gatherV2Impl:()=>Yf,greaterEqualImpl:()=>C7,greaterImpl:()=>T7,lessEqualImpl:()=>I7,lessImpl:()=>S7,linSpaceImpl:()=>Zf,logImpl:()=>N7,maxImpl:()=>Jf,maximumImpl:()=>k7,minimumImpl:()=>A7,multiplyImpl:()=>jp,negImpl:()=>E7,notEqualImpl:()=>_7,prodImpl:()=>D7,raggedGatherImpl:()=>Qf,raggedRangeImpl:()=>ed,raggedTensorToTensorImpl:()=>td,rangeImpl:()=>rd,rsqrtImpl:()=>$7,scatterImpl:()=>Uo,sigmoidImpl:()=>YN,simpleAbsImpl:()=>u7,sliceImpl:()=>O7,sparseFillEmptyRowsImpl:()=>nd,sparseReshapeImpl:()=>od,sparseSegmentReductionImpl:()=>Nu,sqrtImpl:()=>QN,squaredDifferenceImpl:()=>M7,staticRegexReplaceImpl:()=>P7,stridedSliceImpl:()=>sd,stringNGramsImpl:()=>id,stringSplitImpl:()=>ad,stringToHashBucketFastImpl:()=>ld,subImpl:()=>z7,tileImpl:()=>cd,topKImpl:()=>ud,transposeImpl:()=>Iu,uniqueImpl:()=>pd});function u7(r){let t=new Float32Array(r.length);for(let e=0;e<r.length;++e)t[e]=Math.abs(r[e]);return t}var eX=r=>{let{x:t}=r.inputs,e=r.backend;re(t,"abs");let n=new Float32Array(b.sizeFromShape(t.shape)),o=e.data.get(t.dataId).values;return n=u7(o),e.makeOutput(n,t.shape,t.dtype)},vN={kernelName:la,backendName:"cpu",kernelFunc:eX};function We(r){return(t,e,n,o,s)=>{let i=N.assertAndGetBroadcastShape(t,e),a=i.length,l=b.computeStrides(i),u=b.sizeFromShape(i),c=b.getTypedArrayFromDType(s,u),p=t.length,m=e.length,f=b.computeStrides(t),d=b.computeStrides(e),g=N.getBroadcastDims(t,i),h=N.getBroadcastDims(e,i);if(g.length+h.length===0)for(let x=0;x<c.length;++x)c[x]=r(n[x%n.length],o[x%o.length]);else for(let x=0;x<c.length;++x){let y=b.indexToLoc(x,a,l),v=y.slice(-p);g.forEach(_=>v[_]=0);let w=b.locToIndex(v,p,f),I=y.slice(-m);h.forEach(_=>I[_]=0);let E=b.locToIndex(I,m,d);c[x]=r(n[w],o[E])}return[c,i]}}function gr(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,a=e.makeTensorInfo(n.shape,"complex64"),l=e.data.get(a.dataId);return l.complexTensorInfos={real:e.makeTensorInfo(n.shape,"float32",s),imag:e.makeTensorInfo(o.shape,"float32",i)},a}var wN={kernelName:T1,backendName:"cpu",kernelFunc:gr};function Tu(r,t,e="float32"){if(e==="complex64"){let o=Tu(r,t,"float32"),s=Tu(r,t,"float32");return gr({inputs:{real:o,imag:s},backend:r})}let n=b.makeZerosTypedArray(b.sizeFromShape(t),e);return r.makeTensorInfo(t,e,n)}function Br(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var TN={kernelName:ts,backendName:"cpu",kernelFunc:Br};function yo(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.real,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var CN={kernelName:ec,backendName:"cpu",kernelFunc:yo};function p7(r,t,e,n){if(n==="int32"){let o=Int32Array.from(r);return[t,"int32",o]}if(n==="bool"){let o=b.toTypedArray([0],e),[s,i]=We((a,l)=>a!==l?1:0)(t,[],r,o,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${e} to ${n}`)}function bo(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return Br({inputs:{x:o},backend:e});let c=Tu(e,o.shape,o.dtype),p=bo({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),m=gr({inputs:{real:p,imag:c},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),m}if(o.dtype==="complex64"){let c=yo({inputs:{input:o},backend:e}),p=bo({inputs:{x:c},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(c),p}if(!b.hasEncodingLoss(o.dtype,s)){let c=Br({inputs:{x:o},backend:e});return{dataId:c.dataId,shape:c.shape,dtype:s}}let i=e.data.get(o.dataId).values,[a,l,u]=p7(i,o.shape,o.dtype,s);return e.makeTensorInfo(a,l,u)}var SN={kernelName:es,backendName:"cpu",kernelFunc:bo};function je(r,t,e,n){return e==null?({inputs:o,backend:s})=>{let{a:i,b:a}=o,l=s;re([i,a],r);let u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,p=i.dtype==="string"?N.fromUint8ToStringArray(u):u,m=i.dtype==="string"?N.fromUint8ToStringArray(c):c,f=n||i.dtype,[d,g]=t(i.shape,a.shape,p,m,f);return l.makeTensorInfo(g,f,d)}:({inputs:o,backend:s})=>{let{a:i,b:a}=o,l=s;if(i.dtype==="complex64"||a.dtype==="complex64"){let u=bo({inputs:{x:i},backend:l,attrs:{dtype:"complex64"}}),c=l.data.get(u.dataId),p=c.complexTensorInfos.real,m=c.complexTensorInfos.imag,f=l.data.get(p.dataId).values,d=l.data.get(m.dataId).values,g=bo({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(g.dataId),x=h.complexTensorInfos.real,y=h.complexTensorInfos.imag,v=l.data.get(x.dataId).values,w=l.data.get(y.dataId).values,[I,E,_]=e(i.shape,a.shape,f,d,v,w),D=l.makeTensorInfo(_,"float32",I),M=l.makeTensorInfo(_,"float32",E),P=gr({inputs:{real:D,imag:M},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(D),l.disposeIntermediateTensorInfo(M),P}else{let u=l.data.get(i.dataId).values,c=l.data.get(a.dataId).values,p=n||i.dtype,[m,f]=t(i.shape,a.shape,u,c,p);return l.makeTensorInfo(f,p,m)}}}function Cu(r){return(t,e,n,o,s,i)=>{let a=N.assertAndGetBroadcastShape(t,e),l=b.sizeFromShape(a),u=a.length,c=b.computeStrides(a),p=b.getTypedArrayFromDType("float32",l),m=b.getTypedArrayFromDType("float32",l),f=N.getBroadcastDims(t,a),d=N.getBroadcastDims(e,a),g=N.mergeRealAndImagArrays(n,o),h=N.mergeRealAndImagArrays(s,i),x=t.length,y=b.computeStrides(t),v=e.length,w=b.computeStrides(e);if(f.length+d.length===0)for(let I=0;I<p.length;I++){let E=I%g.length,_=I%h.length,D=r(g[E*2],g[E*2+1],h[_*2],h[_*2+1]);p[I]=D.real,m[I]=D.imag}else for(let I=0;I<p.length;I++){let E=b.indexToLoc(I,u,c),_=E.slice(-x);f.forEach(U=>_[U]=0);let D=b.locToIndex(_,x,y),M=E.slice(-v);d.forEach(U=>M[U]=0);let P=b.locToIndex(M,v,w),V=r(g[D*2],g[D*2+1],h[P*2],h[P*2+1]);p[I]=V.real,m[I]=V.imag}return[p,m,a]}}var m7=We((r,t)=>r+t),tX=Cu((r,t,e,n)=>({real:r+e,imag:t+n})),ys=je(ko,m7,tX),IN={kernelName:ko,backendName:"cpu",kernelFunc:ys};function Su(r,t,e,n,o){let s=b.sizeFromShape(n),i=b.makeZerosTypedArray(o,e);for(let a=0;a<r.length;a++){let l=r[a];if(l<0)throw new Error("Input x must be non-negative!");l>=o||(s>0?i[l]+=t[a]:i[l]+=1)}return i}function Kf(r,t,e,n=!1){let o=r.shape[0],s=r.shape[1],i=ye([o,e],t.dtype);for(let a=0;a<o;a++)for(let l=0;l<s;l++){let u=r.get(a,l);if(u<0)throw new Error("Input x must be non-negative!");u>=e||(n?i.set(1,a,u):t.size>0?i.set(i.get(a,u)+t.get(a,l),a,u):i.set(i.get(a,u)+1,a,u))}return i}var f7=We((r,t)=>r&t),rX=je(j0,f7),NN={kernelName:j0,backendName:"cpu",kernelFunc:rX};function Nr(r){return(t,e,n)=>{let o=b.getArrayFromDType(e,t.length);for(let s=0;s<t.length;++s)o[s]=r(t[s],n);return o}}function Ne(r,t,e){let n=Nr(t);return wn(r,n,e)}function wn(r,t,e){return({inputs:n,attrs:o,backend:s})=>{let{x:i}=n;re(i,r);let a=s,l=a.data.get(i.dataId).values,u;if(i.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=N.fromUint8ToStringArray(l)}else u=l;let c=e||i.dtype,p=t(u,c,o);return a.makeTensorInfo(i.shape,c,p)}}var d7=Nr(r=>Math.ceil(r)),nX=wn(Ps,d7),kN={kernelName:Ps,backendName:"cpu",kernelFunc:nX};function jf(r,t,e,n){let o=b.getArrayFromDType(e,b.sizeFromShape(t));if(n&&e!=="string"){let s=0;r.forEach(i=>{let a=b.sizeFromShape(i.shape);o.set(i.vals,s),s+=a})}else{let s=0;r.forEach(i=>{let a=e==="string"?N.fromUint8ToStringArray(i.vals):i.vals,l=0;for(let u=0;u<i.shape[0];++u){let c=u*t[1]+s;for(let p=0;p<i.shape[1];++p)o[c+p]=a[l++]}s+=i.shape[1]})}return o}var h7=We((r,t)=>r===t?1:0),g7=je(X0,h7,null,"bool"),AN={kernelName:X0,backendName:"cpu",kernelFunc:g7};var x7=Nr(r=>Math.exp(r)),y7=wn(Ws,x7,"float32"),EN={kernelName:Ws,backendName:"cpu",kernelFunc:y7};var b7=Nr(r=>Math.expm1(r)),oX=wn(qs,b7),_N={kernelName:qs,backendName:"cpu",kernelFunc:oX};var v7=Nr(r=>Math.floor(r)),sX=wn(Hs,v7),DN={kernelName:Hs,backendName:"cpu",kernelFunc:sX};var w7=We((r,t)=>Math.floor(r/t)),iX=je(Ks,w7,null,"int32"),RN={kernelName:Ks,backendName:"cpu",kernelFunc:iX};function Xf(r,t,e,n,o,s,i,a,l){let u=ye([n,s],e);for(let c=0;c<n;c++){let p=[],m=0;for(let f=0;f<o;f++){let d=r[c*o+f];m+=d*i[f],p.push(d)}if(m<0||m>=l/s)throw new Error(`Invalid indices: ${p} does not index into ${a}`);for(let f=0;f<s;f++)u.values[c*s+f]=t.get(...t.indexToLoc(m*s+f))}return u}function Yf(r,t,e){let n=ye(e,r.dtype);for(let o=0;o<n.size;++o){let i=n.indexToLoc(o).slice(),a=i[0],l=i[2],u=t.locToIndex([a,l]);i[2]=t.values[u];let c=r.locToIndex(i);0<=c&&c<r.values.length&&(n.values[o]=r.values[c])}return n}var T7=We((r,t)=>r>t?1:0),aX=je(Y0,T7,null,"bool"),$N={kernelName:Y0,backendName:"cpu",kernelFunc:aX};var C7=We((r,t)=>r>=t?1:0),lX=je(js,C7,null,"bool"),FN={kernelName:js,backendName:"cpu",kernelFunc:lX};var S7=We((r,t)=>r<t?1:0),cX=je(Z0,S7,null,"bool"),ON={kernelName:Z0,backendName:"cpu",kernelFunc:cX};var I7=We((r,t)=>r<=t?1:0),uX=je(J0,I7,null,"bool"),MN={kernelName:J0,backendName:"cpu",kernelFunc:uX};function Zf(r,t,e){let n=(t-r)/(e-1),o=b.makeZerosTypedArray(e,"float32");o[0]=r;for(let s=1;s<o.length;s++)o[s]=o[s-1]+n;return o}var N7=Nr(r=>Math.log(r)),pX=wn(Js,N7),PN={kernelName:Js,backendName:"cpu",kernelFunc:pX};function Jf(r,t,e,n){let o=b.getTypedArrayFromDType(n,b.sizeFromShape(e));for(let s=0;s<o.length;++s){let i=s*t,a=r[i];for(let l=0;l<t;++l){let u=r[i+l];(Number.isNaN(u)||u>a)&&(a=u)}o[s]=a}return o}var k7=We((r,t)=>Math.max(r,t)),mX=je(ei,k7),LN={kernelName:ei,backendName:"cpu",kernelFunc:mX};var A7=We((r,t)=>Math.min(r,t)),fX=je(ti,A7),zN={kernelName:ti,backendName:"cpu",kernelFunc:fX};var jp=We((r,t)=>r*t),dX=Cu((r,t,e,n)=>({real:r*e-t*n,imag:r*n+t*e})),Bl=je(ni,jp,dX),BN={kernelName:ni,backendName:"cpu",kernelFunc:Bl};function E7(r,t,e){let n=b.createScalarValue(-1,e);return jp([],t,n,r,e)}function hX(r){let{inputs:t,backend:e}=r,{x:n}=t;re(n,"neg");let o=e.data.get(n.dataId).values,[s,i]=E7(o,n.shape,n.dtype);return e.makeTensorInfo(i,n.dtype,s)}var GN={kernelName:Oa,backendName:"cpu",kernelFunc:hX};var _7=We((r,t)=>r!==t?1:0),gX=je(rl,_7,null,"bool"),VN={kernelName:rl,backendName:"cpu",kernelFunc:gX};function Iu(r,t,e,n,o){let s=t.length,i=b.sizeFromShape(t),a=b.computeStrides(t),l=b.computeStrides(o),u=b.getTypedArrayFromDType(e,b.sizeFromShape(o));for(let c=0;c<i;++c){let p=b.indexToLoc(c,s,a),m=new Array(p.length);for(let d=0;d<m.length;d++)m[d]=p[n[d]];let f=b.locToIndex(m,s,l);u[f]=r[c]}return u}function Ft(r){let{inputs:t,attrs:e,backend:n}=r,{x:o}=t,{perm:s}=e;re(o,"transpose");let i=o.shape.length,a=new Array(i);for(let p=0;p<a.length;p++)a[p]=o.shape[s[p]];let l=n.data.get(o.dataId).values,u=Iu(l,o.shape,o.dtype,s,a);return{dataId:n.write(u,a,o.dtype),shape:a,dtype:o.dtype}}var UN={kernelName:ns,backendName:"cpu",kernelFunc:Ft};function D7(r,t,e,n){let[o,s]=N.computeOutAndReduceShapes(r,n),i=or(t,"int32"),a=b.makeZerosTypedArray(b.sizeFromShape(o),i),l=b.sizeFromShape(s);for(let u=0;u<a.length;++u){let c=u*l,p=1;for(let m=0;m<l;++m)p*=e[c+m];a[u]=p}return{outVals:a,outShape:o,outDtype:i}}function xX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;re(o,"prod");let a=o.shape.length,l=b.parseAxisParam(s,o.shape),u=N.getAxesPermutation(l,a),c=l,p=o,m=[];u!=null&&(p=Ft({inputs:{x:o},backend:e,attrs:{perm:u}}),m.push(p),c=N.getInnerMostAxes(c.length,a));let f=e.data.get(p.dataId).values,{outVals:d,outShape:g,outDtype:h}=D7(p.shape,p.dtype,f,c),x=g;return i&&(x=N.expandShapeToKeepDim(g,l)),m.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.makeTensorInfo(x,h,d)}var WN={kernelName:Ga,backendName:"cpu",kernelFunc:xX};function yX(r,t,e){r.forEach((n,o)=>{if(n<0||n>=e){let s=b.indexToLoc(o,t.length,b.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${n} is not in [0, ${e})`)}})}function bX(r,t){for(let e=0;e<r.length;++e){let n=r[e],o=e===r.length-1?t:r[e+1].length;if(n.length===0)throw new Error("Ragged splits may not be empty");if(n[0]<0)throw new Error("Ragged splits must be non-negative");if(n[n.length-1]>o)throw new Error("Ragged splits must not point past values");for(let s=1;s<n.length;++s)if(n[s-1]>n[s])throw new Error("Ragged splits must be sorted in ascending order")}}function vX(r,t,e,n){let o=[],s=0,i=t.length-1+e.length,a=new Array(i).fill(null).map(()=>[0]);bX(e,n);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];let c=t[u+1];for(let p=1;p<l+1;++p)a[u].push(p*c)}for(let u=0;u<r.length;++u){let c=r[u],p=r[u]+1;for(let m=0;m<e.length;++m){let f=e[m],d=m+t.length-1;if(d>=0){let g=a[d],h=g[g.length-1]-f[c];for(let x=c;x<p;++x)a[d].push(f[x+1]+h)}c=f[c],p=f[p]}p!==c&&(o.push([c,p]),s+=p-c)}return{outSplits:a,valueSlices:o,numValues:s}}function wX(r){let t=[];for(let e=0;e<r.length;++e){let n=r[e].length,o=b.getArrayFromDType("int32",n);t.push(o),r[e].forEach((s,i)=>o[i]=s)}return t}function qN(r,t){let e=r.slice(0,t);for(;e.length<t;)e.push(1);for(let n=t;n<r.length;n++)e[t-1]*=r[n];return e}function TX(r,t,e,n,o,s){let i=qN(t,2)[1],a=qN(s,2)[1],l=0;for(let u of e)for(let c=u[0];c<u[1];++c){for(let p=0;p<n;++p)o[l*a+p]=r[c*i+p];++l}}function CX(r,t,e,n,o){let s=t.slice();s[0]=o;let i=b.getArrayFromDType(e,b.sizeFromShape(s)),a=r.length,l=a===0?0:a/t[0];return TX(r,t,n,l,i,s),[i,s]}function Qf(r,t,e,n,o,s,i,a){if(r.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let l=t[0][0]-1;if(yX(s,i,l),n.length===0)throw new Error("params.rank must be nonzero");let u=n[0],{outSplits:c,valueSlices:p,numValues:m}=vX(s,i,r,u),f=wX(c),d=CX(e,n,o,p,m);return[f,d[0],d[1]]}var HN=2147483647;function ed(r,t,e,n,o,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let a=t.length===0,l=o.length===0,u=i.length===0,c=[];a||c.push(t[0]),l||c.push(o[0]),u||c.push(i[0]);for(let h=1;h<c.length;++h)if(c[h]!==c[h-1])throw new Error("starts, limits, and deltas must have the same shape");let p=c.length===0?1:c[0],m=b.getArrayFromDType("int32",p+1);m[0]=0;for(let h=0;h<p;++h){let x=a?r[0]:r[h],y=l?n[0]:n[h],v=u?s[0]:s[h];if(v===0)throw new Error("Requires delta != 0");let w;if(v>0&&y<x||v<0&&y>x)w=0;else if(w=Math.ceil(Math.abs((y-x)/v)),w>HN)throw new Error(`Requires ((limit - start) / delta) <= ${HN}`);m[h+1]=m[h]+w}let f=m[p],d=b.getArrayFromDType(e,f),g=0;for(let h=0;h<p;++h){let x=m[h+1]-m[h],y=a?r[0]:r[h],v=u?s[0]:s[h];for(let w=0;w<x;++w)d[g++]=y,y+=v}return[m,d]}var vo=N.RowPartitionType,R7=class r{constructor(t,e,n,o,s,i,a,l,u,c){this.shape=t,this.shapeShape=e,this.values=n,this.valuesShape=o,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=N.getRowPartitionTypesHelper(c),this.raggedRank=N.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===vo.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===vo.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){let e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case vo.VALUE_ROWIDS:return r.getMaxWidthValueRowID(e);case vo.ROW_SPLITS:return r.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${vo[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){let e=t.length;if(e===0||e===1)return 0;let n=0;for(let o=0;o<e-1;++o){let s=t[o+1]-t[o];s>n&&(n=s)}return n}static getMaxWidthValueRowID(t){let e=t.length;if(e===0)return 0;let n=0,o=t[0],s=0;for(let i=1;i<e;++i){let a=t[i];a!==o&&(o=a,s=Math.max(i-n,s),n=i)}return Math.max(e-n,s)}tensorShapeFromTensor(t,e,n=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return jN(t,n)}calculateOutputSize(t){let e=this.valuesShape,n=this.defaultValueShape;N.validateDefaultValueShape(n,e);let o=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=N.combineRaggedTensorToTensorShapes(this.raggedRank,o,e);i[0]<0&&(i[0]=t);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(t,e,n){let o=Math.min(t,n),s=[],i=0;for(let a=0;a<o;++a,i+=e)s.push(i);for(let a=o;a<t;++a)s.push(-1);return b.assert(s.length===t,()=>"Final length of result must be equal to firstDimension."),s}calculateOutputIndexRowSplit(t,e,n,o){let s=t.length,i=[];for(let a=0;a<s-1;++a){let l=t[a+1]-t[a],u=Math.min(o,l),c=e[a];c===-1&&(u=0);for(let p=0;p<u;++p)i.push(c),c+=n;for(let p=0;p<l-u;++p)i.push(-1)}if(s>0&&i.length!==t[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,n,o){let s=t.length,i=[];if(s===0)return[];let a=0,l=t[0];if(l>=e.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${e.length}`);let u=e[l];i.push(u);for(let c=1;c<s;++c){let p=t[c];if(p===l)u>=0&&(++a,a<o?u+=n:u=-1);else{if(a=0,l=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);u=e[p]}i.push(u)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,n,o){let s=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case vo.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,e,n,o);case vo.ROW_SPLITS:if(s.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(s,e,n,o);default:throw new Error(`Unsupported partition type: ${vo[i]}`)}}getFirstDimensionSize(){let t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let e=this.rowPartitionTypes[0];switch(e){case vo.FIRST_DIM_SIZE:return t[0];case vo.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case vo.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${vo[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),n=this.calculateOutputSize(e),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let l=o.length-2;l>=0;--l)o[l]=o[l+1]*n[l+1];let s=jN(n,!1),i=b.getArrayFromDType(this.valuesDType,b.sizeFromShape(s));if(o[0]*n[0]>0){let l=this.calculateFirstParentOutputIndex(e,o[0],n[0]);for(let u=1;u<=this.raggedRank;++u)l=this.calculateOutputIndex(u-1,l,o[u],n[u]);this.setOutput(this.raggedRank,l,i,s)}return[s,i]}setOutput(t,e,n,o){if(n.length===0)return;let s=this.values,i=n,a=o.slice();a=a.slice(t+1);let l=b.sizeFromShape(a),u=e.length,c=this.defaultValue;if(c.length!==l&&c.length!==1){let d=this.defaultValueShape;B(()=>{let g=$(c,d);c=cs(g,a).dataSync()})}let p=0,m=0,f=0;for(let d=0;d<=u;++d){let g=d<u?e[d]:-1;if(g===f){++f;continue}if(m<f){let h=s.subarray(p*l),x=i.subarray(m*l),y=(f-m)*l;KN(x,h,y)}if(d>=u){let h=n.length;g=Math.floor(h/l)}if(g>f)if(this.defaultValue.length===1)i.subarray(f*l,g*l).fill(this.defaultValue[0]),f=g;else for(;g>f;){let h=i.slice(f*l);KN(h,c,l),++f}g<0?(p=d+1,m=f):(p=d,m=f,f=m+1)}}};function KN(r,t,e){for(let n=0;n<e;n++)r[n]=t[n]}function jN(r,t){let e=[];for(let n of r){if(n<0){if(!t)throw new Error(`Dimension ${n} must be >= 0`);if(n<-1)throw new Error(`Dimension ${n} must be >= -1`);n=-1}e.push(n)}return e}function td(r,t,e,n,o,s,i,a,l,u){return new R7(r,t,e,n,o,s,i,a,l,u).compute()}function rd(r,t,e,n){let o=r===t,s=r<t&&e<0,i=t<r&&e>1;if(o||s||i)return b.makeZerosTypedArray(0,n);let a=Math.abs(Math.ceil((t-r)/e)),l=b.makeZerosTypedArray(a,n);t<r&&e===1&&(e=-1),l[0]=r;for(let u=1;u<l.length;u++)l[u]=l[u-1]+e;return l}var $7=Nr(r=>1/Math.sqrt(r)),SX=wn(ci,$7),XN={kernelName:ci,backendName:"cpu",kernelFunc:SX};function Uo(r,t,e,n,o,s,i,a,l,u){let c=[n/o,o],p=r.values,m=t.values;if(n===0)return ye(e,t.dtype);let f=l instanceof Qe?l:ye(c,t.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let d=0;d<s;d++){let g=[],h=0;for(let x=0;x<i;x++){let y=p[d*i+x];g.push(y),h+=y*a[x]}if(h<0||h>=n/o)throw new Error(`Invalid indices: ${g} does not index into ${e}`);for(let x=0;x<o;x++)u?f.values[h*o+x]+=m[d*o+x]:f.values[h*o+x]=t.rank===0?m[0]:m[d*o+x]}return f}var YN=Nr(r=>1/(1+Math.exp(-r))),F7=Ne(di,r=>1/(1+Math.exp(-r))),ZN={kernelName:di,backendName:"cpu",kernelFunc:F7};function O7(r,t,e,n,o){let s=Cr.isSliceContinous(n,t,e),i=b.sizeFromShape(e),a=b.computeStrides(n);if(s){let p=Cr.computeFlatOffset(t,a);return o==="string"?r.slice(p,p+i):r.subarray(p,p+i)}let l=o==="string"?N.fromUint8ToStringArray(r):r,u=ye(n,o,l),c=ye(e,o);for(let p=0;p<c.size;++p){let m=c.indexToLoc(p),f=m.map((d,g)=>d+t[g]);c.set(u.get(...f),...m)}return o==="string"?N.fromStringArrayToUint8(c.values):c.values}function wo(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:i}=n;re(o,"slice");let[a,l]=Cr.parseSliceParams(o,s,i);Cr.assertParamsValid(o,a,l);let u=e.data.get(o.dataId).values,c=O7(u,a,l,o.shape,o.dtype);return e.makeTensorInfo(l,o.dtype,c)}var JN={kernelName:Ka,backendName:"cpu",kernelFunc:wo};function nd(r,t,e,n,o,s,i){let a=t[0],l=s[0],u=new Array(l),c=new Array(a),p=t[1];if(l===0){if(a!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(a));let h=b.getArrayFromDType(e,0),x=b.getArrayFromDType(o,0);return[h,[0,p],x,u,c]}let m=!0,f=0,d=new Array(l).fill(0);for(let h=0;h<a;++h){let x=r[h*p];if(x<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(h,x));if(x>=l)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(h,x,l));++d[x],m=m&&x>=f,f=x}let g=!0;for(let h=0;h<l;++h){let x=d[h]===0;u[h]=x,g=g&&!x,d[h]=Math.max(d[h],1),h>0&&(d[h]+=d[h-1])}if(g&&m){let h=r,x=n;for(let y=0;y<a;++y)c[y]=y;return[h,[a,p],x,u,c]}else{let h=d[l-1],x=b.getArrayFromDType(e,h*p),y=b.getArrayFromDType(o,h),v=new Array(l).fill(0);for(let w=0;w<a;++w){let I=r[w*p],E=v[I],_=(I===0?0:d[I-1])+E;v[I]++;for(let D=0;D<p;++D)x[_*p+D]=r[w*p+D];y[_]=n[w],c[w]=_}for(let w=0;w<l;++w)if(v[w]===0){let E=w===0?0:d[w-1];x[E*p+0]=w;for(let _=1;_<p;++_)x[E*p+_]=0;y[E]=i}return[x,[h,p],y,u,c]}}function od(r,t,e,n,o){let s=b.sizeFromShape(n),i=t[0],a=o.length,l=[],u=1,c=-1;for(let h=0;h<a;++h){let x=o[h];if(x===-1){if(c!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,h));c=h,l.push(1)}else{if(x<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(h,x));u*=x,l.push(x)}}if(c!==-1){if(u<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let h=Math.trunc(s/u);if(u*h!==s)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(n,l));l[c]=h}if(b.sizeFromShape(l)!==s)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(n,l));let m=n.length,f=[];if(m>0){f[m-1]=1;for(let h=m-2;h>=0;--h)f[h]=f[h+1]*n[h+1]}let d=[];if(a>0){d[a-1]=1;for(let h=a-2;h>=0;--h)d[h]=d[h+1]*l[h+1]}let g=b.getArrayFromDType(e,i*a);for(let h=0;h<i;++h){let x=0;for(let y=0;y<m;++y)x+=r[h*m+y]*f[y];for(let y=0;y<a;++y)g[h*a+y]=Math.trunc(x/d[y]),x%=d[y]}return[g,[i,a],l]}function Nu(r,t,e,n,o,s=!1,i=0){let a=n.length,l=[t[0],r.length/t[0]],u=l[1],p=a>0?o[a-1]+1:0;if(p<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=t.slice();m[0]=p;let f=m.reduce((v,w)=>v*w,1),d=b.getArrayFromDType(e,f);if(a===0)return p>0&&d.fill(i),[d,m];if(p<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,h=1,x=0,y=o[g];for(;;){let v=0;if(h<a){if(v=o[h],y===v){++h;continue}if(y>=v)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>x&&d.fill(i,x*u,y*u);for(let w=g;w<h;++w){let I=n[w];if(I<0||I>=l[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(w,n[w],l[0]));for(let E=0;E<u;E++)d[y*u+E]+=r[I*u+E]}if(s)for(let w=0;w<u;w++)d[y*u+w]/=h-g;if(g=h,++h,x=y+1,y=v,h>a)break}return x<p&&d.fill(i,x*u,p*u),[d,m]}var QN=Nr(r=>Math.sqrt(r)),IX=Ne(gi,r=>Math.sqrt(r)),ek={kernelName:gi,backendName:"cpu",kernelFunc:IX};var M7=We((r,t)=>{let e=r-t;return e*e}),NX=je(xi,M7),tk={kernelName:xi,backendName:"cpu",kernelFunc:NX};var P7=Nr((r,t)=>{let{pattern:e,replaceGlobal:n,rewrite:o}=t;return r.replace(new RegExp(e,n?"g":""),o)}),kX=wn(nl,P7),rk={kernelName:nl,backendName:"cpu",kernelFunc:kX};function sd(r,t,e,n){let o=ye(r,t.dtype);for(let s=0;s<o.size;s++){let i=o.indexToLoc(s),a=new Array(i.length);for(let l=0;l<a.length;l++)a[l]=i[l]*e[l]+n[l];o.set(t.get(...a),...i)}return o}var L7=class{constructor(t,e,n,o,s,i){this.separator=b.encodeString(t),this.nGramWidths=e,this.leftPad=b.encodeString(n),this.rightPad=b.encodeString(o),this.padWidth=s,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){let n=this.getPadWidth(e);return Math.max(0,t+2*n-e+1)}createNGrams(t,e,n,o,s,i){for(let a=0;a<s;++a){let l=this.getPadWidth(i),u=Math.max(0,l-a),c=Math.max(0,l-(s-(a+1))),p=i-(u+c),m=e+(u>0?0:a-l),f=0;f+=u*this.leftPad.length;for(let y=0;y<p;++y)f+=t[m+y].length;f+=c*this.rightPad.length;let d=u+c+p-1;f+=d*this.separator.length,n[o+a]=new Uint8Array(f);let g=n[o+a],h=0,x=y=>y.forEach(v=>g[h++]=v);for(let y=0;y<u;++y)x(this.leftPad),x(this.separator);for(let y=0;y<p-1;++y)x(t[m+y]),x(this.separator);if(p>0){x(t[m+p-1]);for(let y=0;y<c;++y)x(this.separator),x(this.rightPad)}else{for(let y=0;y<c-1;++y)x(this.rightPad),x(this.separator);x(this.rightPad)}}}compute(t,e){let n=t.length,o=e.length;if(o>0){let l=e[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<o;++u){let c=e[u]>=l;if(c=c&&e[u]<=n,!c)throw new Error(`Invalid split value ${e[u]}, must be in [${l}, ${n}]`);l=e[u]}if(l!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${l}`)}let s=o-1,i=b.getArrayFromDType("int32",o);if(n===0||o===0){let l=new Array(n);for(let u=0;u<=s;++u)i[u]=0;return[l,i]}i[0]=0;for(let l=1;l<=s;++l){let u=e[l]-e[l-1],c=0;this.nGramWidths.forEach(p=>{c+=this.getNumNGrams(u,p)}),this.preserveShort&&u>0&&c===0&&(c=1),i[l]=i[l-1]+c}let a=new Array(i[s]);for(let l=0;l<s;++l){let u=e[l],c=i[l];if(this.nGramWidths.forEach(p=>{let m=e[l+1]-e[l],f=this.getNumNGrams(m,p);this.createNGrams(t,u,a,c,f,p),c+=f}),this.preserveShort&&c===i[l]){let p=e[l+1]-e[l];if(p===0)continue;let m=p+2*this.padWidth;this.createNGrams(t,u,a,c,1,m)}}return[a,i]}};function id(r,t,e,n,o,s,i,a){return new L7(e,n,o,s,i,a).compute(r,t)}function AX(r,t,e,n){if(!r.length)return;if(t.length===0){for(let s=0;s<r.length;++s)n.push(r.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=r.indexOf(s);for(;i!==-1;){let a=r.subarray(0,i);(!e||a.length!==0)&&n.push(a),r=r.subarray(i+1),i=r.indexOf(s)}(!e||r.length!==0)&&n.push(r);return}let o=0;for(let s=0;s<r.length+1;s++)if(s===r.length||t.indexOf(r[s])!==-1){let i=r.subarray(o,s);(!e||i.length!==0)&&n.push(i),o=s+1}}function ad(r,t,e){let n=r.length,o=[],s=0,i=0,a=new Array(n);for(let m=0;m<n;++m){let f=o.length;AX(r[m],t,e,o);let d=o.length-f;a[m]=d,s+=d,i=Math.max(i,d)}let l=b.getArrayFromDType("int32",s*2),u=new Array(s),c=[n,i],p=0;for(let m=0;m<n;++m)for(let f=0;f<a[m];++f)l[p*2]=m,l[p*2+1]=f,u[p]=o[p],++p;return[l,u,c]}function ld(r,t){let e=b.getArrayFromDType("int32",r.length);for(let n=0;n<r.length;++n)e[n]=b.fingerPrint64(r[n]).modulo(t).getLowBitsUnsigned();return e}var z7=We((r,t)=>r-t),EX=Cu((r,t,e,n)=>({real:r-e,imag:t-n})),Xp=je(yi,z7,EX),nk={kernelName:yi,backendName:"cpu",kernelFunc:Xp};function cd(r,t){let e=new Array(r.rank);for(let o=0;o<e.length;o++)e[o]=r.shape[o]*t[o];let n=ye(e,r.dtype);for(let o=0;o<n.values.length;++o){let s=n.indexToLoc(o),i=new Array(r.rank);for(let l=0;l<i.length;l++)i[l]=s[l]%r.shape[l];let a=r.locToIndex(i);n.values[o]=r.values[a]}return n}var Yp=(r,t)=>{let e=t.value-r.value;return e===0?r.index-t.index:e};function ok(r,t,e=0,n=r.length-1){for(;n>e;){if(n-e>600){let a=n-e+1,l=t-e+1,u=Math.log(a),c=.5*Math.exp(2*u/3),p=.5*Math.sqrt(u*c*(a-c)/a)*Math.sign(l-a/2),m=Math.max(e,Math.floor(t-l*c/a+p)),f=Math.min(n,Math.floor(t+(a-l)*c/a+p));ok(r,t,m,f)}let o=r[t],s=e,i=n;for(b.swap(r,e,t),Yp(r[n],o)>0&&b.swap(r,e,n);s<i;){for(b.swap(r,s,i),s++,i--;Yp(r[s],o)<0;)s=s+1;for(;Yp(r[i],o)>0;)i=i-1}Yp(r[e],o)===0?b.swap(r,e,i):(i=i+1,b.swap(r,i,n)),i<=t&&(e=i+1),t<=i&&(n=i-1)}}function ud(r,t,e,n,o){let s=t[t.length-1],[i,a]=[r.length/s,s],l=b.getTypedArrayFromDType(e,i*n),u=b.getTypedArrayFromDType("int32",i*n);for(let p=0;p<i;p++){let m=p*a,f=r.subarray(m,m+a),d=new Array(f.length);f.forEach((y,v)=>d[v]={value:y,index:v}),n<d.length&&(ok(d,n),d=d.slice(0,n)),o&&d.sort(Yp);let g=p*n,h=l.subarray(g,g+n),x=u.subarray(g,g+n);for(let y=0;y<n;y++)h[y]=d[y].value,x[y]=d[y].index}let c=t.slice();return c[c.length-1]=n,[ye(c,e,l),ye(c,"int32",u)]}function pd(r,t,e,n){let o=b.parseAxisParam(t,e)[0],s=[1,e[0],1];for(let d=0;d<o;d++)s[0]*=e[d];s[1]=e[o];for(let d=o+1;d<e.length;d++)s[2]*=e[d];let i=new Map,a=new Int32Array(e[o]),l=new Qe(s,n,r),u=[],c=s[0]===1&&s[2]===1;for(let d=0;d<e[o];d++){let g;if(c)g=r[d].toString();else{let x=[];for(let y=0;y<s[0];y++)for(let v=0;v<s[2];v++)x.push(l.get(y,d,v));g=x.join(",")}let h=i.get(g);if(h!=null)a[d]=h;else{let x=i.size;i.set(g,x),a[d]=x,u.push(d)}}let p=s.slice();p[1]=i.size;let m=new Qe(p,n);u.forEach((d,g)=>{for(let h=0;h<s[0];h++)for(let x=0;x<s[2];x++)m.set(l.get(h,d,x),h,g,x)});let f=e.slice();return f[o]=p[1],{outputValues:m.values,outputShape:f,indices:a}}hm("cpu",()=>new bN,1);var G7=Ne(Vs,r=>r>=0?r:Math.exp(r)-1),sk={kernelName:Vs,backendName:"cpu",kernelFunc:G7};function V7(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n;re([o],"leakyRelu");let i=b.sizeFromShape(o.shape),a=e.data.get(o.dataId).values,l=b.getTypedArrayFromDType("float32",i);for(let u=0;u<a.length;u++)l[u]=a[u]<0?s*a[u]:a[u];return e.makeTensorInfo(o.shape,"float32",l)}var ik={kernelName:ka,backendName:"cpu",kernelFunc:V7};var _X=We((r,t)=>r<0?t*r:r);function U7(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t;re([n,o],"prelu");let s=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,[a,l]=_X(n.shape,o.shape,s,i,"float32");return e.makeTensorInfo(l,"float32",a)}var ak={kernelName:Ba,backendName:"cpu",kernelFunc:U7};var W7=Ne(ii,r=>Math.max(0,r)),lk={kernelName:ii,backendName:"cpu",kernelFunc:W7};var q7=Ne(ai,r=>Math.min(Math.max(0,r),6)),ck={kernelName:ai,backendName:"cpu",kernelFunc:q7};function Gl(r,t,e,n,o){if(e==="linear")return Br({inputs:{x:t},backend:r});if(e==="relu")return W7({inputs:{x:t},backend:r});if(e==="elu")return G7({inputs:{x:t},backend:r});if(e==="relu6")return q7({inputs:{x:t},backend:r});if(e==="prelu")return U7({inputs:{x:t,alpha:n},backend:r});if(e==="leakyrelu")return V7({inputs:{x:t},backend:r,attrs:{alpha:o}});if(e==="sigmoid")return F7({inputs:{x:t},backend:r});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function qe(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,i=b.sizeFromShape(o.shape),a=b.inferFromImplicitShape(s,i),l=b.sizeFromShape(a);b.assert(i===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(o.dataId);let u=e.data.get(o.dataId);if(u.complexTensorInfos!=null){let c=u.complexTensorInfos.real,p=u.complexTensorInfos.imag;c.shape=a,p.shape=a}return{dataId:o.dataId,shape:a,dtype:o.dtype}}var uk={kernelName:Va,backendName:"cpu",kernelFunc:qe};function H7(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:i,transposeB:a}=n;re([o,s],"matMul");let l=o.shape.length,u=s.shape.length,c=i?o.shape[l-2]:o.shape[l-1],p=a?s.shape[u-1]:s.shape[u-2],m=i?o.shape[l-1]:o.shape[l-2],f=a?s.shape[u-2]:s.shape[u-1],d=o.shape.slice(0,-2),g=s.shape.slice(0,-2),h=b.sizeFromShape(d),x=b.sizeFromShape(g),v=En.assertAndGetBroadcastShape(o.shape.slice(0,-2),s.shape.slice(0,-2)).concat([m,f]);b.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${o.shape} and ${s.shape} and transposeA=${i} and transposeB=${a} must match.`);let w=i?[h,c,m]:[h,m,c],I=a?[x,f,p]:[x,p,f],E=qe({inputs:{x:o},backend:e,attrs:{shape:w}}),_=qe({inputs:{x:s},backend:e,attrs:{shape:I}}),D=i?E.shape[1]:E.shape[2],M=i?E.shape[2]:E.shape[1],P=a?_.shape[1]:_.shape[2],V=Math.max(h,x),U=e.data.get(E.dataId).values,q=e.data.get(_.dataId).values,K=b.computeStrides(E.shape),j=b.computeStrides(_.shape),[Y,ee,Z]=i?[K[0],1,K[1]]:[K[0],K[1],1],[Q,ie,le]=a?[1,j[1],j[0]]:[j[1],1,j[0]],pe=M*P,ae=ye([V,M,P],E.dtype),fe=ae.values,me=e.blockSize;for(let xe=0;xe<V;xe++){let Ce=xe%h,_e=xe%x;for(let Ee=0;Ee<M;Ee+=me){let Ve=Math.min(Ee+me,M);for(let Ue=0;Ue<P;Ue+=me){let at=Math.min(Ue+me,P);for(let vt=0;vt<D;vt+=me){let er=Math.min(vt+me,D);for(let Nt=Ee;Nt<Ve;Nt++)for(let Tt=Ue;Tt<at;Tt++){let Xt=0;for(let Vt=vt;Vt<er;Vt++){let Cs=U[Ce*Y+Nt*ee+Vt*Z],$r=q[Vt*Q+Tt*ie+_e*le];Xt+=Cs*$r}fe[xe*pe+(Nt*P+Tt)]+=Xt}}}}}return e.disposeIntermediateTensorInfo(E),e.disposeIntermediateTensorInfo(_),e.makeTensorInfo(v,ae.dtype,ae.values)}var pk={kernelName:da,backendName:"cpu",kernelFunc:H7};function DX(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n,m,f,d,g=[];m=H7({inputs:{a:o,b:s},attrs:{transposeA:l,transposeB:u},backend:e}),i&&(f=ys({inputs:{a:m,b:i},backend:e}),g.push(m),m=f),c&&(d=Gl(e,m,c,a,p),g.push(m),m=d);for(let x of g)e.disposeIntermediateTensorInfo(x);return m}var mk={kernelName:ol,backendName:"cpu",kernelFunc:DX};var RX=Ne(_s,r=>Math.acos(r)),fk={kernelName:_s,backendName:"cpu",kernelFunc:RX};var $X=Ne(Ds,r=>Math.acosh(r)),dk={kernelName:Ds,backendName:"cpu",kernelFunc:$X};function FX(r){let{inputs:t,backend:e}=r,n=t;re(t,"addN");let o=n.map(a=>e.data.get(a.dataId).values),s=ye(n[0].shape,n[0].dtype),i=s.values;for(let a=0;a<n.length;a++){let l=o[a];for(let u=0;u<i.length;u++)i[u]+=l[u]}return e.makeTensorInfo(s.shape,s.dtype,s.values)}var hk={kernelName:ca,backendName:"cpu",kernelFunc:FX};function OX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;re(o,"all");let a=b.parseAxisParam(s,o.shape),l=a,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=Ft({inputs:{x:o},backend:e,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("all",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),g=e.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,v=g[y];for(let w=0;w<f;++w){let I=g[y+w];v=v&&I}d[x]=v}u!=null&&e.disposeIntermediateTensorInfo(c);let h=e.makeTensorInfo(p,c.dtype,d);if(i){let x=N.expandShapeToKeepDim(p,a),y=qe({inputs:{x:h},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(h),y}return h}var gk={kernelName:g1,backendName:"cpu",kernelFunc:OX};function MX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;re(o,"any");let a=b.parseAxisParam(s,o.shape),l=a,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=Ft({inputs:{x:o},backend:e,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("any",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),g=e.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,v=g[y];for(let w=0;w<f;++w){let I=g[y+w];v=v||I}d[x]=v}u!=null&&e.disposeIntermediateTensorInfo(c);let h=e.makeTensorInfo(p,c.dtype,d);if(i){let x=N.expandShapeToKeepDim(p,a),y=qe({inputs:{x:h},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(h),y}return h}var xk={kernelName:x1,backendName:"cpu",kernelFunc:MX};function PX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;re(o,"argMax");let i=b.parseAxisParam(s,o.shape),a=N.getAxesPermutation(i,o.shape.length),l=o,u=[];a!=null&&(l=Ft({inputs:{x:o},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,i),m=b.sizeFromShape(c),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(p),g=e.data.get(l.dataId).values;for(let h=0;h<f.length;++h){let x=h*d,y=g[x],v=0;for(let w=0;w<d;++w){let I=g[x+w];I>y&&(y=I,v=w)}f[h]=v}return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),e.makeTensorInfo(c,"int32",f)}var yk={kernelName:ua,backendName:"cpu",kernelFunc:PX};function LX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n;re(o,"argMin");let i=b.parseAxisParam(s,o.shape),a=N.getAxesPermutation(i,o.shape.length),l=o,u=[];a!=null&&(l=Ft({inputs:{x:o},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[c,p]=N.computeOutAndReduceShapes(l.shape,i),m=b.sizeFromShape(c),f=b.makeZerosTypedArray(m,"int32"),d=b.sizeFromShape(p),g=e.data.get(l.dataId).values;for(let h=0;h<f.length;++h){let x=h*d,y=g[x],v=0;for(let w=0;w<d;++w){let I=g[x+w];I<y&&(y=I,v=w)}f[h]=v}return u.forEach(h=>e.disposeIntermediateTensorInfo(h)),e.makeTensorInfo(c,"int32",f)}var bk={kernelName:pa,backendName:"cpu",kernelFunc:LX};var zX=Ne(Rs,r=>Math.asin(r)),vk={kernelName:Rs,backendName:"cpu",kernelFunc:zX};var BX=Ne($s,r=>Math.asinh(r)),wk={kernelName:$s,backendName:"cpu",kernelFunc:BX};var GX=Ne(Fs,r=>Math.atan(r)),Tk={kernelName:Fs,backendName:"cpu",kernelFunc:GX};var VX=We((r,t)=>Math.atan2(r,t)),UX=je(Ms,VX),Ck={kernelName:Ms,backendName:"cpu",kernelFunc:UX};var WX=Ne(Os,r=>Math.atanh(r)),Sk={kernelName:Os,backendName:"cpu",kernelFunc:WX};function ku(r,t,e,n,o,s){let i=o.strideHeight,a=o.strideWidth,l=o.dilationHeight,u=o.dilationWidth,c=o.effectiveFilterHeight,p=o.effectiveFilterWidth,m=o.padInfo.top,f=o.padInfo.left,d=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ye(o.outShape,e),h=g.values,x=o.outShape[1]*o.outShape[2]*o.outShape[3],y=o.outShape[2]*o.outShape[3],v=o.outShape[3];for(let w=0;w<o.batchSize;++w){let I=w*x,E=w*n[0];for(let _=0;_<o.inChannels;++_)for(let D=0;D<o.outHeight;++D){let M=D*i-m,P=Math.max(0,M),V=Math.min(o.inHeight,c+M),U=I+D*y;for(let q=0;q<o.outWidth;++q){let K=q*a-f,j=Math.max(0,K),Y=Math.min(o.inWidth,p+K),ee=d,Z=0,Q=0;for(let le=P;le<V;le+=l){let pe=E+le*n[1];for(let ae=j;ae<Y;ae+=u){let fe=pe+ae*n[2],me=r[fe+_];s==="max"&&me>ee?ee=me:s==="avg"&&(Z+=me,Q++)}if(isNaN(ee))break}let ie=U+q*v+_;h[ie]=s==="avg"?Z/Q:ee}}}return g}function md(r,t,e,n,o=!1,s=!1){let i=ye(n.outShape,"int32"),a=n.strideHeight,l=n.strideWidth,u=n.dilationHeight,c=n.dilationWidth,p=n.effectiveFilterHeight,m=n.effectiveFilterWidth,f=n.padInfo.top,d=n.padInfo.left,g=ye(t,e,r);for(let h=0;h<n.batchSize;++h)for(let x=0;x<n.inChannels;++x)for(let y=0;y<n.outHeight;++y){let v=y*a-f,w=v;for(;w<0;)w+=u;let I=Math.min(n.inHeight,p+v);for(let E=0;E<n.outWidth;++E){let _=E*l-d,D=_;for(;D<0;)D+=c;let M=Math.min(n.inWidth,m+_),P=Number.NEGATIVE_INFINITY,V=-1;for(let U=w;U<I;U+=u){let q=U-v;for(let K=D;K<M;K+=c){let j=K-_,Y=g.get(h,U,K,x);Y>P&&(P=Y,o?V=s?((h*n.inHeight+U)*n.inWidth+K)*n.inChannels+x:(U*n.inWidth+K)*n.inChannels+x:V=q*m+j)}}i.set(V,h,y,E,x)}}return i}function fd(r,t,e,n,o,s){let i=o.strideDepth,a=o.strideHeight,l=o.strideWidth,u=o.dilationDepth,c=o.dilationHeight,p=o.dilationWidth,m=o.effectiveFilterDepth,f=o.effectiveFilterHeight,d=o.effectiveFilterWidth,g=o.padInfo.front,h=o.padInfo.top,x=o.padInfo.left,y=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=ye(o.outShape,e),w=v.values,I=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],E=o.outShape[2]*o.outShape[3]*o.outShape[4],_=o.outShape[3]*o.outShape[4],D=o.outShape[4];for(let M=0;M<o.batchSize;++M){let P=M*I,V=M*n[0];for(let U=0;U<o.inChannels;++U)for(let q=0;q<o.outDepth;++q){let K=q*i-g,j=K;for(;j<0;)j+=u;let Y=Math.min(o.inDepth,m+K),ee=P+q*E;for(let Z=0;Z<o.outHeight;++Z){let Q=Z*a-h,ie=Q;for(;ie<0;)ie+=c;let le=Math.min(o.inHeight,f+Q),pe=ee+Z*_;for(let ae=0;ae<o.outWidth;++ae){let fe=ae*l-x,me=fe;for(;me<0;)me+=p;let xe=Math.min(o.inWidth,d+fe),Ce=pe+ae*D,_e=y,Ee=0,Ve=0;for(let at=j;at<Y;at+=u){let vt=V+at*n[1];for(let er=ie;er<le;er+=c){let Nt=vt+er*n[2];for(let Tt=me;Tt<xe;Tt+=p){let Xt=Nt+Tt*n[3],Vt=r[Xt+U];if(s==="max"&&Vt>_e?_e=Vt:s==="avg"&&(Ee+=Vt,Ve++),isNaN(_e))break}if(isNaN(_e))break}if(isNaN(_e))break}let Ue=Ce+U;w[Ue]=s==="avg"?Ee/Math.max(Ve,1):_e}}}}return v}function Ik(r,t){let e=ye(t.outShape,"int32"),n=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,a=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,f=t.padInfo.top,d=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let h=0;h<t.inChannels;++h)for(let x=0;x<t.outDepth;++x){let y=x*n-m,v=y;for(;v<0;)v+=i;let w=Math.min(t.inDepth,u+y);for(let I=0;I<t.outHeight;++I){let E=I*o-f,_=E;for(;_<0;)_+=a;let D=Math.min(t.inHeight,c+E);for(let M=0;M<t.outWidth;++M){let P=M*s-d,V=P;for(;V<0;)V+=l;let U=Math.min(t.inWidth,p+P),q=Number.NEGATIVE_INFINITY,K=-1;for(let j=v;j<w;j+=i){let Y=j-y;for(let ee=_;ee<D;ee+=a){let Z=ee-E;for(let Q=V;Q<U;Q+=l){let ie=Q-P,le=r.get(g,j,ee,Q,h);le>=q&&(q=le,K=Y*c*p+Z*c+ie)}}}e.set(K,g,x,I,M,h)}}}return e}function qX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;re(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=n,u=1;b.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,i,u,a,l),p;if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))p=Br({inputs:{x:o},backend:e});else{let m=e.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=ku(m,o.shape,o.dtype,f,c,"avg");p=e.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var Nk={kernelName:ma,backendName:"cpu",kernelFunc:qX};function HX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=n;re(o,"avgPool3d");let c=N.computePool3DInfo(o.shape,s,i,1,a,l,u),p=e.data.get(o.dataId).values,m=fd(p,o.shape,o.dtype,b.computeStrides(o.shape),c,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}var kk={kernelName:fa,backendName:"cpu",kernelFunc:HX};function KX(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=n;re([o,s],"avgPool3DGrad");let c=N.computePool3DInfo(s.shape,i,a,1,l,u),p=c.strideDepth,m=c.strideHeight,f=c.strideWidth,d=c.filterDepth,g=c.filterHeight,h=c.filterWidth,x=c.dilationDepth,y=c.dilationHeight,v=c.dilationWidth,w=c.effectiveFilterDepth,I=c.effectiveFilterHeight,E=c.effectiveFilterWidth,_=w-1-c.padInfo.front,D=E-1-c.padInfo.left,M=I-1-c.padInfo.top,P=ye(s.shape,"float32"),V=1/(d*g*h),U=e.bufferSync(o);for(let q=0;q<c.batchSize;++q)for(let K=0;K<c.inChannels;++K)for(let j=0;j<c.inDepth;++j)for(let Y=0;Y<c.inHeight;++Y)for(let ee=0;ee<c.inWidth;++ee){let Z=j-_,Q=Y-M,ie=ee-D,le=0;for(let pe=0;pe<w;pe+=x){let ae=(Z+pe)/p;if(!(ae<0||ae>=c.outDepth||Math.floor(ae)!==ae))for(let fe=0;fe<I;fe+=y){let me=(Q+fe)/m;if(!(me<0||me>=c.outHeight||Math.floor(me)!==me))for(let xe=0;xe<E;xe+=v){let Ce=(ie+xe)/f;if(Ce<0||Ce>=c.outWidth||Math.floor(Ce)!==Ce)continue;let _e=U.get(q,ae,me,Ce,K);le+=_e}}}P.set(le*V,q,j,Y,ee,K)}return e.makeTensorInfo(P.shape,P.dtype,P.values)}var Ak={kernelName:b1,backendName:"cpu",kernelFunc:KX};function jX(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s;re([o,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=n,c=N.computePool2DInfo(i.shape,a,l,1,u),p=c.strideHeight,m=c.strideWidth,f=c.filterHeight,d=c.filterWidth,g=c.dilationHeight,h=c.dilationWidth,x=c.effectiveFilterHeight,y=c.effectiveFilterWidth,v=y-1-c.padInfo.left,w=x-1-c.padInfo.top,I=ye(i.shape,"float32"),E=1/(f*d),_=e.data.get(o.dataId).values,D=ye(o.shape,"float32",_);for(let M=0;M<c.batchSize;++M)for(let P=0;P<c.inChannels;++P)for(let V=0;V<c.inHeight;++V)for(let U=0;U<c.inWidth;++U){let q=V-w,K=U-v,j=0;for(let Y=0;Y<x;Y+=g){let ee=(q+Y)/p;if(!(ee<0||ee>=c.outHeight||Math.floor(ee)!==ee))for(let Z=0;Z<y;Z+=h){let Q=(K+Z)/m;if(Q<0||Q>=c.outWidth||Math.floor(Q)!==Q)continue;let ie=D.get(M,ee,Q,P);j+=ie}}I.set(j*E,M,V,U,P)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}var Ek={kernelName:y1,backendName:"cpu",kernelFunc:jX};function XX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,scale:s,offset:i,mean:a,variance:l}=t;b.assert(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(s==null||a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),re([o,a,l,s,i],"batchNorm");let{varianceEpsilon:u}=n;u==null&&(u=.001);let c=e.data.get(o.dataId).values,p=e.data.get(a.dataId).values,m=e.data.get(l.dataId).values,f=s?e.data.get(s.dataId).values:new Float32Array([1]),d=i?e.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),h=d.length,x=f.length,y=m.length,v=p.length,w=0,I=0,E=0,_=0;for(let D=0;D<c.length;++D)g[D]=d[w++]+(c[D]-p[I++])*f[E++]/Math.sqrt(m[_++]+u),w>=h&&(w=0),I>=v&&(I=0),E>=x&&(E=0),_>=y&&(_=0);return e.makeTensorInfo(o.shape,o.dtype,g)}var _k={kernelName:Ia,backendName:"cpu",kernelFunc:XX};function YX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:i}=n;re([o],"batchToSpaceND");let a=s.reduce((x,y)=>x*y),l=N.getReshaped(o.shape,s,a),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(o.shape,s,a),p=N.getSliceBeginCoords(i,s.length),m=N.getSliceSize(c,i,s.length),f=qe({inputs:{x:o},backend:e,attrs:{shape:l}}),d=Ft({inputs:{x:f},backend:e,attrs:{perm:u}}),g=qe({inputs:{x:d},backend:e,attrs:{shape:c}}),h=wo({inputs:{x:g},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),h}var Dk={kernelName:ha,backendName:"cpu",kernelFunc:YX};function ZX(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i}=n,a=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,u=Su(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}var Rk={kernelName:v1,backendName:"cpu",kernelFunc:ZX};function JX(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.data.get(n.dataId).values,i=e.data.get(o.dataId).values,a=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var $k={kernelName:w1,backendName:"cpu",kernelFunc:JX};var QX=Ne(Ls,(r,t)=>{let e=t;return r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r}),Fk={kernelName:Ls,backendName:"cpu",kernelFunc:QX};var eY=r=>{let{x:t}=r.inputs,e=r.backend,n=new Float32Array(b.sizeFromShape(t.shape)),o=e.data.get(t.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values;for(let u=0;u<a.length;u++){let c=a[u],p=l[u];n[u]=Math.hypot(c,p)}return e.makeOutput(n,t.shape,"float32")},Ok={kernelName:ga,backendName:"cpu",kernelFunc:eY};function bs(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.data.get(n.dataId).complexTensorInfos.imag,s=e.data.get(o.dataId).values;return e.makeTensorInfo(o.shape,o.dtype,s)}var Mk={kernelName:B1,backendName:"cpu",kernelFunc:bs};function _0(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,t[0].shape)[0],i=t.map(g=>g.shape);N.assertParamsConsistent(i,s);let a=N.computeOutShape(t.map(g=>g.shape),s);if(b.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(g=>b.sizeFromShape(g.shape)>0);if(l.length===1)return Br({inputs:{x:l[0]},backend:e});if(l[0].dtype==="complex64"){let g=l.map(w=>yo({inputs:{input:w},backend:e})),h=l.map(w=>bs({inputs:{input:w},backend:e})),x=_0({inputs:g,backend:e,attrs:{axis:s}}),y=_0({inputs:h,backend:e,attrs:{axis:s}}),v=gr({inputs:{real:x,imag:y},backend:e});return g.forEach(w=>e.disposeIntermediateTensorInfo(w)),h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),v}let u=l.map(g=>{let x=[-1,b.sizeFromShape(g.shape.slice(s))];return qe({inputs:{x:g},backend:e,attrs:{shape:x}})}),c=u.map(g=>({vals:e.data.get(g.dataId).values,shape:g.shape}));a=N.computeOutShape(u.map(g=>g.shape),1);let p=u[0].shape[0]===1,m=jf(c,a,t[0].dtype,p),f=N.computeOutShape(l.map(g=>g.shape),s),d=e.makeTensorInfo(f,t[0].dtype,m);return u.forEach(g=>e.disposeIntermediateTensorInfo(g)),d}var Pk={kernelName:xa,backendName:"cpu",kernelFunc:_0};function K7(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=n;re([o,s],"conv2d");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,s.shape,i,u,a,c,!1,p),f=m.filterHeight,d=m.filterWidth,g=m.dilationHeight,h=m.dilationWidth,x=m.padInfo.left,y=m.padInfo.top,v=m.dataFormat==="channelsLast",w=new Qe(m.outShape,o.dtype),I=b.computeStrides(o.shape),E=b.computeStrides(s.shape),_=I[0],D=v?I[1]:I[2],M=v?I[2]:1,P=v?1:I[1],V=w.strides[0],U=v?w.strides[1]:w.strides[2],q=v?w.strides[2]:1,K=v?1:w.strides[1],j=e.data.get(o.dataId).values,Y=e.data.get(s.dataId).values,ee=w.values;for(let Z=0;Z<m.batchSize;++Z){let Q=Z*_,ie=Z*V;for(let le=0;le<m.outHeight;++le){let pe=ie+le*U,ae=le*m.strideHeight-y;for(let fe=0;fe<f;++fe){let me=ae+fe*g;if(me<0||me>=m.inHeight)continue;let xe=fe*E[0],Ce=Q+me*D;for(let _e=0;_e<m.outWidth;++_e){let Ee=pe+_e*q,Ve=_e*m.strideWidth-x;for(let Ue=0;Ue<d;++Ue){let at=Ve+Ue*h;if(at<0||at>=m.inWidth)continue;let vt=xe+Ue*E[1],er=Ce+at*M,Nt=vt;for(let Tt=0;Tt<m.inChannels;++Tt){let Xt=j[er+Tt*P];for(let Vt=0;Vt<m.outChannels;++Vt)ee[Ee+Vt*K]+=Xt*Y[Nt+Vt];Nt+=m.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,ee)}var Lk={kernelName:ya,backendName:"cpu",kernelFunc:K7};function tY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=n;re([o,s],"conv2dBackpropFilter");let p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,c,i,1,a,u,!1,p),{strideHeight:f,strideWidth:d,filterHeight:g,filterWidth:h}=m,x=m.dataFormat==="channelsLast",y=new Qe(m.filterShape,"float32"),v=m.padInfo.left,w=m.padInfo.top,I=e.data.get(o.dataId).values,E=e.data.get(s.dataId).values,_=new Qe(o.shape,o.dtype,I),D=new Qe(s.shape,s.dtype,E);for(let M=0;M<g;++M){let P=Math.max(0,Math.ceil((w-M)/f)),V=Math.min(m.outHeight,(m.inHeight+w-M)/f);for(let U=0;U<h;++U){let q=Math.max(0,Math.ceil((v-U)/d)),K=Math.min(m.outWidth,(m.inWidth+v-U)/d);for(let j=0;j<m.inChannels;++j)for(let Y=0;Y<m.outChannels;++Y){let ee=0;for(let Z=0;Z<m.batchSize;++Z)for(let Q=P;Q<V;++Q){let ie=M+Q*f-w;for(let le=q;le<K;++le){let pe=U+le*d-v;x?ee+=_.get(Z,ie,pe,j)*D.get(Z,Q,le,Y):ee+=_.get(Z,j,ie,pe)*D.get(Z,Y,Q,le)}}y.set(ee,M,U,j,Y)}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}var zk={kernelName:C1,backendName:"cpu",kernelFunc:tY};function rY(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=n;re([o,s],"conv2dBackpropInput");let p=b.computeStrides(s.shape),m=b.computeStrides(o.shape),f=N.convertConv2DDataFormat(u),d=N.computeConv2DInfo(i,s.shape,a,1,l,c,!1,f),g=new Qe(d.inShape,"float32"),h=g.values,x=e.data.get(o.dataId).values,y=e.data.get(s.dataId).values,[v,w,I]=p,{batchSize:E,filterHeight:_,filterWidth:D,inChannels:M,inHeight:P,inWidth:V,outChannels:U,outHeight:q,outWidth:K,strideHeight:j,strideWidth:Y}=d;f=d.dataFormat;let ee=_-1-d.padInfo.top,Z=D-1-d.padInfo.left,Q=f==="channelsLast",ie=g.strides[0],le=Q?g.strides[1]:g.strides[2],pe=Q?g.strides[2]:1,ae=Q?1:g.strides[1],fe=m[0],me=Q?m[1]:m[2],xe=Q?m[2]:1,Ce=Q?1:m[1];for(let _e=0;_e<E;++_e)for(let Ee=0;Ee<M;++Ee)for(let Ve=0;Ve<P;++Ve){let Ue=Ve-ee,at=Math.max(0,Math.ceil(Ue/j)),vt=Math.min(q,(_+Ue)/j);for(let er=0;er<V;++er){let Nt=er-Z,Tt=Math.max(0,Math.ceil(Nt/Y)),Xt=Math.min(K,(D+Nt)/Y),Vt=0;for(let $r=at;$r<vt;++$r){let qi=$r*j-Ue;for(let Gn=Tt;Gn<Xt;++Gn){let M0=Gn*Y-Nt,Co=fe*_e+me*$r+xe*Gn,Ss=v*(_-1-qi)+w*(D-1-M0)+I*Ee;for(let Hi=0;Hi<U;++Hi){let Ki=x[Co+Ce*Hi],ji=y[Ss+Hi];Vt+=Ki*ji}}}let Cs=ie*_e+le*Ve+pe*er+ae*Ee;h[Cs]=Vt}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}var Bk={kernelName:ba,backendName:"cpu",kernelFunc:rY};function nY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:l}=n;re([o,s],"conv3d");let u=N.computeConv3DInfo(o.shape,s.shape,i,l,a),{filterDepth:c,filterHeight:p,filterWidth:m,dilationDepth:f,dilationHeight:d,dilationWidth:g,padInfo:h}=u,x=h.front,y=h.left,v=h.top,w=new Qe(u.outShape,o.dtype),I=e.data.get(o.dataId).values,E=e.data.get(s.dataId).values,_=w.values,D=b.computeStrides(o.shape),M=b.computeStrides(s.shape);for(let P=0;P<u.batchSize;++P){let V=P*D[0],U=P*w.strides[0];for(let q=0;q<u.outDepth;++q){let K=U+q*w.strides[1],j=q*u.strideDepth-x;for(let Y=0;Y<c;++Y){let ee=j+Y*f;if(ee<0||ee>=u.inDepth)continue;let Z=Y*M[0],Q=V+ee*D[1];for(let ie=0;ie<u.outHeight;++ie){let le=K+ie*w.strides[2],pe=ie*u.strideHeight-v;for(let ae=0;ae<p;++ae){let fe=pe+ae*d;if(fe<0||fe>=u.inHeight)continue;let me=Z+ae*M[1],xe=Q+fe*D[2];for(let Ce=0;Ce<u.outWidth;++Ce){let _e=le+Ce*u.outChannels,Ee=Ce*u.strideWidth-y;for(let Ve=0;Ve<m;++Ve){let Ue=Ee+Ve*g;if(Ue<0||Ue>=u.inWidth)continue;let at=me+Ve*M[2],vt=xe+Ue*u.inChannels,er=at;for(let Nt=0;Nt<u.inChannels;++Nt){let Tt=I[vt+Nt];for(let Xt=0;Xt<u.outChannels;++Xt)_[_e+Xt]+=Tt*E[er+Xt];er+=u.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}var Gk={kernelName:va,backendName:"cpu",kernelFunc:nY};function oY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,filterShape:l}=n;re([o,s],"conv3dBackpropFilterV2");let u=b.computeStrides(o.shape),c=b.computeStrides(s.shape),p=N.computeConv3DInfo(o.shape,l,i,1,a),m=p.strideDepth,f=p.strideHeight,d=p.strideWidth,g=p.filterDepth,h=p.filterHeight,x=p.filterWidth,y=new Qe(p.filterShape,"float32"),v=y.values,[w,I,E,_]=y.strides,D=e.data.get(s.dataId).values,[M,P,V,U]=c,q=e.data.get(o.dataId).values,[K,j,Y,ee]=u,Z=p.padInfo.front,Q=p.padInfo.left,ie=p.padInfo.top;for(let le=0;le<g;++le){let pe=Math.max(0,Math.ceil((Z-le)/m)),ae=Math.min(p.outDepth,(p.inDepth+Z-le)/m),fe=le*w;for(let me=0;me<h;++me){let xe=Math.max(0,Math.ceil((ie-me)/f)),Ce=Math.min(p.outHeight,(p.inHeight+ie-me)/f),_e=me*I+fe;for(let Ee=0;Ee<x;++Ee){let Ve=Math.max(0,Math.ceil((Q-Ee)/d)),Ue=Math.min(p.outWidth,(p.inWidth+Q-Ee)/d),at=Ee*E+_e;for(let vt=0;vt<p.inChannels;++vt){let er=vt*_+at;for(let Nt=0;Nt<p.outChannels;++Nt){let Tt=0;for(let Xt=0;Xt<p.batchSize;++Xt){let Vt=Xt*K,Cs=Xt*M;for(let $r=pe;$r<ae;++$r){let Gn=(le+$r*m-Z)*j+Vt,M0=$r*P+Cs;for(let Co=xe;Co<Ce;++Co){let Hi=(me+Co*f-ie)*Y+Gn,Ki=Co*V+M0;for(let ji=Ve;ji<Ue;++ji){let s4=(Ee+ji*d-Q)*ee+Hi,i4=ji*U+Ki;Tt+=q[s4+vt]*D[i4+Nt]}}}}v[er+Nt]=Tt}}}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}var Vk={kernelName:S1,backendName:"cpu",kernelFunc:oY};function sY(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:i,strides:a,inputShape:l}=n;re([o],"conv3dBackpropInputV2");let u=b.computeStrides(o.shape),c=b.computeStrides(s.shape),p=N.computeConv3DInfo(l,s.shape,a,1,i),m=new Qe(p.inShape,"float32"),f=m.values,[d,g,h,x]=m.strides,y=e.data.get(o.dataId).values,[v,w,I,E]=u,_=e.data.get(s.dataId).values,[D,M,P,V]=c,{batchSize:U,filterDepth:q,filterHeight:K,filterWidth:j,inChannels:Y,inDepth:ee,inHeight:Z,inWidth:Q,outChannels:ie,outDepth:le,outHeight:pe,outWidth:ae,strideDepth:fe,strideHeight:me,strideWidth:xe}=p,Ce=q-1-p.padInfo.front,_e=K-1-p.padInfo.top,Ee=j-1-p.padInfo.left;for(let Ve=0;Ve<U;++Ve)for(let Ue=0;Ue<Y;++Ue)for(let at=0;at<ee;++at){let vt=at-Ce,er=Math.max(0,Math.ceil(vt/fe)),Nt=Math.min(le,(q+vt)/fe);for(let Tt=0;Tt<Z;++Tt){let Xt=Tt-_e,Vt=Math.max(0,Math.ceil(Xt/me)),Cs=Math.min(pe,(K+Xt)/me);for(let $r=0;$r<Q;++$r){let qi=$r-Ee,Gn=Math.max(0,Math.ceil(qi/xe)),M0=Math.min(ae,(j+qi)/xe),Co=0;for(let Ss=er;Ss<Nt;++Ss){let Hi=Ss*fe-vt;for(let Ki=Vt;Ki<Cs;++Ki){let ji=Ki*me-Xt;for(let Ku=Gn;Ku<M0;++Ku){let s4=Ku*xe-qi,i4=v*Ve+w*Ss+I*Ki+E*Ku,TO=D*(q-1-Hi)+M*(K-1-ji)+P*(j-1-s4)+V*Ue;for(let h2=0;h2<ie;++h2){let CO=y[i4+h2],SO=_[TO+h2];Co+=CO*SO}}}}f[d*Ve+g*at+h*Tt+x*$r+Ue]=Co}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}var Uk={kernelName:I1,backendName:"cpu",kernelFunc:sY};var iY=Ne(zs,r=>Math.cos(r)),Wk={kernelName:zs,backendName:"cpu",kernelFunc:iY};var aY=Ne(Bs,r=>Math.cosh(r)),qk={kernelName:Bs,backendName:"cpu",kernelFunc:aY};function lY(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:u}=n,[c,p,m,f]=o.shape,d=s.shape[0],[g,h]=a,x=ye([d,g,h,f],"float32"),y=e.data.get(s.dataId).values,v=e.data.get(i.dataId).values,w=e.data.get(o.dataId).values,I=b.computeStrides(o.shape),E=b.computeStrides(x.shape);for(let _=0;_<d;_++){let D=_*4,M=y[D],P=y[D+1],V=y[D+2],U=y[D+3],q=v[_];if(q>=c)continue;let K=g>1?(V-M)*(p-1)/(g-1):0,j=h>1?(U-P)*(m-1)/(h-1):0;for(let Y=0;Y<g;Y++){let ee=g>1?M*(p-1)+Y*K:.5*(M+V)*(p-1);if(ee<0||ee>p-1){for(let Z=0;Z<h;Z++)for(let Q=0;Q<f;Q++){let ie=Q+Z*E[2]+Y*E[1]+_*E[0];x.values[ie]=u}continue}if(l==="bilinear"){let Z=Math.floor(ee),Q=Math.ceil(ee),ie=ee-Z;for(let le=0;le<h;le++){let pe=h>1?P*(m-1)+le*j:.5*(P+U)*(m-1);if(pe<0||pe>m-1){for(let xe=0;xe<f;xe++){let Ce=xe+le*E[2]+Y*E[1]+_*E[0];x.values[Ce]=u}continue}let ae=Math.floor(pe),fe=Math.ceil(pe),me=pe-ae;for(let xe=0;xe<f;xe++){let Ce=xe+ae*I[2]+Z*I[1]+q*I[0],_e=w[Ce];Ce=xe+fe*I[2]+Z*I[1]+q*I[0];let Ee=w[Ce];Ce=xe+ae*I[2]+Q*I[1]+q*I[0];let Ve=w[Ce];Ce=xe+fe*I[2]+Q*I[1]+q*I[0];let Ue=w[Ce],at=_e+(Ee-_e)*me,vt=Ve+(Ue-Ve)*me;Ce=xe+le*E[2]+Y*E[1]+_*E[0],x.values[Ce]=at+(vt-at)*ie}}}else for(let Z=0;Z<h;++Z){let Q=h>1?P*(m-1)+Z*j:.5*(P+U)*(m-1);if(Q<0||Q>m-1){for(let pe=0;pe<f;pe++){let ae=pe+Z*E[2]+Y*E[1]+_*E[0];x.values[ae]=u}continue}let ie=Math.round(Q),le=Math.round(ee);for(let pe=0;pe<f;pe++){let ae=pe+ie*I[2]+le*I[1]+q*I[0],fe=pe+Z*E[2]+Y*E[1]+_*E[0];x.values[fe]=w[ae]}}}}return e.makeTensorInfo(x.shape,x.dtype,x.values)}var Hk={kernelName:k1,backendName:"cpu",kernelFunc:lY};function cY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;re(o,"cumprod");let l=N.getAxesPermutation([s],o.shape.length),u=o;l!=null&&(u=Ft({inputs:{x:o},backend:e,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=or(u.dtype,"int32"),m=b.makeOnesTypedArray(b.sizeFromShape(u.shape),p),f=e.data.get(u.dataId).values,d=u.shape[u.shape.length-1],g=a?(x,y)=>x+d-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=d)for(let y=0;y<d;y++){let v=g(x,y);if(y===0)m[v]=i?1:f[v];else{let w=g(x,y-1);m[v]=i?f[w]*m[w]:f[v]*m[w]}}let h=e.makeTensorInfo(u.shape,p,m);if(l!=null){let x=N.getUndoAxesPermutation(l),y=Ft({inputs:{x:h},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(u),y}return h}var Kk={kernelName:N1,backendName:"cpu",kernelFunc:cY};function uY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;re(o,"cumsum");let l=N.getAxesPermutation([s],o.shape.length),u=o;l!=null&&(u=Ft({inputs:{x:o},backend:e,attrs:{perm:l}}));let c=N.getInnerMostAxes(1,o.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);let p=or(u.dtype,"int32"),m=b.makeZerosTypedArray(b.sizeFromShape(u.shape),p),f=e.data.get(u.dataId).values,d=u.shape[u.shape.length-1],g=a?(x,y)=>x+d-y-1:(x,y)=>x+y;for(let x=0;x<f.length;x+=d)for(let y=0;y<d;y++){let v=g(x,y);if(y===0)m[v]=i?0:f[v];else{let w=g(x,y-1);m[v]=i?f[w]+m[w]:f[v]+m[w]}}let h=e.makeTensorInfo(u.shape,p,m);if(l!=null){let x=N.getUndoAxesPermutation(l),y=Ft({inputs:{x:h},backend:e,attrs:{perm:x}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(u),y}return h}var jk={kernelName:wa,backendName:"cpu",kernelFunc:uY};function pY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let l=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,c=Su(l,u,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}else if(o.shape.length===2){let l=e.bufferSync(o),u=e.bufferSync(s),c=Kf(l,u,i,a);return e.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var Xk={kernelName:A1,backendName:"cpu",kernelFunc:pY};function mY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n;b.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let a=o.shape[0],l=o.shape[1],u=o.shape[2],c=o.shape[3],p=l*s,m=u*s,f=c/(s*s),d=e.data.get(o.dataId).values,g=new Float32Array(a*p*m*f),h=0;for(let x=0;x<a;++x)for(let y=0;y<p;++y){let v=Math.floor(y/s),w=y%s;for(let I=0;I<m;++I){let E=Math.floor(I/s),_=I%s,D=(w*s+_)*f;for(let M=0;M<f;++M){let V=M+D+c*(E+u*(v+l*x));g[h++]=d[V]}}}return e.makeTensorInfo([a,p,m,f],o.dtype,g)}var Yk={kernelName:E1,backendName:"cpu",kernelFunc:mY};function j7(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=n;re([o,s],"depthwiseConv2DNative");let c=b.computeStrides(o.shape),p=b.computeStrides(s.shape),m=l;m==null&&(m=[1,1]),b.assert(N.eitherStridesOrDilationsAreOne(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);let f=N.computeConv2DInfo(o.shape,s.shape,i,m,a,u,!0),{filterHeight:d,filterWidth:g,dilationHeight:h,dilationWidth:x,padInfo:y}=f,v=y.left,w=y.top,I=f.outChannels/f.inChannels,E=new Qe(f.outShape,o.dtype),_=e.data.get(o.dataId).values,D=e.data.get(s.dataId).values,M=E.values;for(let P=0;P<f.batchSize;++P){let V=P*c[0],U=P*E.strides[0];for(let q=0;q<f.outHeight;++q){let K=U+q*E.strides[1],j=q*f.strideHeight-w;for(let Y=0;Y<d;++Y){let ee=j+Y*h;if(ee<0||ee>=f.inHeight)continue;let Z=Y*p[0],Q=V+ee*c[1];for(let ie=0;ie<f.outWidth;++ie){let le=K+ie*E.strides[2],pe=ie*f.strideWidth-v;for(let ae=0;ae<g;++ae){let fe=pe+ae*x;if(fe<0||fe>=f.inWidth)continue;let me=Z+ae*p[1],xe=Q+fe*f.inChannels,Ce=le,_e=me;for(let Ee=0;Ee<f.inChannels;++Ee){let Ve=_[xe+Ee];for(let Ue=0;Ue<I;++Ue)M[Ce+Ue]+=Ve*D[_e+Ue];Ce+=I,_e+=I}}}}}}return e.makeTensorInfo(E.shape,E.dtype,E.values)}var Zk={kernelName:Ta,backendName:"cpu",kernelFunc:j7};function fY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=n;re([o,s],"depthwiseConv2dNativeBackpropFilter");let p=N.computeConv2DInfo(o.shape,c,i,a,l,u,!0),{strideHeight:m,strideWidth:f,filterHeight:d,filterWidth:g}=p,h=new Qe(p.filterShape,"float32"),x=p.padInfo.left,y=p.padInfo.top,v=p.outChannels/p.inChannels,w=e.data.get(o.dataId).values,I=new Qe(o.shape,o.dtype,w),E=e.data.get(s.dataId).values,_=new Qe(s.shape,s.dtype,E);for(let D=0;D<d;++D){let M=Math.max(0,Math.ceil((y-D)/m)),P=Math.min(p.outHeight,(p.inHeight+y-D)/m);for(let V=0;V<g;++V){let U=Math.max(0,Math.ceil((x-V)/f)),q=Math.min(p.outWidth,(p.inWidth+x-V)/f);for(let K=0;K<p.outChannels;++K){let j=Math.trunc(K/v),Y=K%v,ee=0;for(let Z=0;Z<p.batchSize;++Z)for(let Q=M;Q<P;++Q){let ie=D+Q*m-y;for(let le=U;le<q;++le){let pe=V+le*f-x;ee+=I.get(Z,ie,pe,j)*_.get(Z,Q,le,K)}}h.set(ee,D,V,j,Y)}}}return e.makeTensorInfo(h.shape,h.dtype,h.values)}var Jk={kernelName:_1,backendName:"cpu",kernelFunc:fY};function dY(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=n;re([o,s],"depthwiseConv2DNativeBackpropInput");let p=b.computeStrides(o.shape),m=b.computeStrides(s.shape),f=N.computeConv2DInfo(c,s.shape,i,a,l,u,!0),d=new Qe(f.inShape,"float32"),g=d.values,[h,x,y]=d.strides,v=e.data.get(o.dataId).values,[w,I,E]=p,_=e.data.get(s.dataId).values,[D,M,P]=m,{batchSize:V,filterHeight:U,filterWidth:q,inChannels:K,inHeight:j,inWidth:Y,outChannels:ee,outHeight:Z,outWidth:Q,strideHeight:ie,strideWidth:le}=f,pe=U-1-f.padInfo.top,ae=q-1-f.padInfo.left,fe=ee/K;for(let me=0;me<V;++me)for(let xe=0;xe<K;++xe)for(let Ce=0;Ce<j;++Ce){let _e=Ce-pe,Ee=Math.max(0,Math.ceil(_e/ie)),Ve=Math.min(Z,(U+_e)/ie);for(let Ue=0;Ue<Y;++Ue){let at=Ue-ae,vt=Math.max(0,Math.ceil(at/le)),er=Math.min(Q,(q+at)/le),Nt=0;for(let Tt=Ee;Tt<Ve;++Tt){let Xt=Tt*ie-_e;for(let Vt=vt;Vt<er;++Vt){let Cs=Vt*le-at,$r=w*me+I*Tt+E*Vt,qi=D*(U-1-Xt)+M*(q-1-Cs)+P*xe;for(let Gn=0;Gn<fe;++Gn){let M0=xe*fe+Gn,Co=v[$r+M0],Ss=_[qi+Gn];Nt+=Co*Ss}}}g[h*me+x*Ce+y*Ue+xe]=Nt}}return e.makeTensorInfo(d.shape,d.dtype,d.values)}var Qk={kernelName:D1,backendName:"cpu",kernelFunc:dY};function hY(r){let{inputs:t,backend:e}=r,{x:n}=t,o=b.sizeFromShape(n.shape),s=e.data.get(n.dataId).values,i=ye([o,o],n.dtype),a=i.values;for(let u=0;u<s.length;u++)a[u*o+u]=s[u];let l=[...n.shape,...n.shape];return e.makeTensorInfo(l,i.dtype,i.values)}var eA={kernelName:R1,backendName:"cpu",kernelFunc:hY};var tA={kernelName:Ca,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o}=r,{strides:s,pad:i,dilations:a}=e,l=t,u=l.data.get(n.dataId).values,c=n.shape.length,p=l.data.get(o.dataId).values,m=o.shape.length,{batchSize:f,inHeight:d,inWidth:g,inChannels:h,outHeight:x,outWidth:y,padInfo:v,strideHeight:w,strideWidth:I,filterHeight:E,filterWidth:_,dilationHeight:D,dilationWidth:M,outShape:P}=N.computeDilation2DInfo(n.shape,o.shape,s,i,"NHWC",a),V=b.sizeFromShape(P),U=P.length,q=b.getArrayFromDType(n.dtype,V);for(let j=0;j<f;++j)for(let Y=0;Y<x;++Y){let ee=Y*w-v.top;for(let Z=0;Z<y;++Z){let Q=Z*I-v.left;for(let ie=0;ie<h;++ie){let le=Number.MIN_SAFE_INTEGER;for(let ae=0;ae<E;++ae){let fe=ee+ae*D;if(fe>=0&&fe<d)for(let me=0;me<_;++me){let xe=Q+me*M;if(xe>=0&&xe<g){let Ce=b.locToIndex([j,fe,xe,ie],c,b.computeStrides(n.shape)),_e=b.locToIndex([ae,me,ie],m,b.computeStrides(o.shape)),Ee=u[Ce]+p[_e];Ee>le&&(le=Ee)}}}let pe=b.locToIndex([j,Y,Z,ie],U,b.computeStrides(P));q[pe]=le}}}return{dataId:l.write(b.toTypedArray(q,n.dtype),P,n.dtype),shape:P,dtype:n.dtype}}};var rA={kernelName:lp,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:l}=e,u=t,c=b.toNestedArray(n.shape,u.data.get(n.dataId).values),p=b.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:g,outHeight:h,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:E,dilationHeight:_,dilationWidth:D,outShape:M}=N.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",l);b.assert(s.rank===M.length,()=>`Error in ${lp}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let P=b.toNestedArray(M,u.data.get(s.dataId).values),V=b.makeZerosNestedTypedArray(o.shape,o.dtype);for(let q=0;q<m;++q)for(let K=0;K<h;++K){let j=K*v-y.top;for(let Y=0;Y<x;++Y){let ee=Y*w-y.left;for(let Z=0;Z<g;++Z){let Q=Number.MIN_SAFE_INTEGER,ie=0,le=0;for(let pe=0;pe<I;++pe){let ae=j+pe*_;if(ae>=0&&ae<f)for(let fe=0;fe<E;++fe){let me=ee+fe*D;if(me>=0&&me<d){let xe=c[q][ae][me][Z]+p[pe][fe][Z];xe>Q&&(Q=xe,ie=pe,le=fe)}}}V[ie][le][Z]+=P[q][K][Y][Z]}}}return{dataId:u.write(b.toTypedArray(V,n.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};var nA={kernelName:ap,backendName:"cpu",kernelFunc:({inputs:r,backend:t,attrs:e})=>{let{x:n,filter:o,dy:s}=r,{strides:i,pad:a,dilations:l}=e,u=t,c=b.toNestedArray(n.shape,u.data.get(n.dataId).values),p=b.toNestedArray(o.shape,u.data.get(o.dataId).values),{batchSize:m,inHeight:f,inWidth:d,inChannels:g,outHeight:h,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:I,filterWidth:E,dilationHeight:_,dilationWidth:D,outShape:M}=N.computeDilation2DInfo(n.shape,o.shape,i,a,"NHWC",l);b.assert(s.rank===M.length,()=>`Error in ${ap}, dy must have the same rank as output ${M.length}, but got ${s.rank}`);let P=b.toNestedArray(M,u.data.get(s.dataId).values),V=b.makeZerosNestedTypedArray(n.shape,n.dtype);for(let q=0;q<m;++q)for(let K=0;K<h;++K){let j=K*v-y.top;for(let Y=0;Y<x;++Y){let ee=Y*w-y.left;for(let Z=0;Z<g;++Z){let Q=Number.MIN_SAFE_INTEGER,ie=j<0?0:j,le=ee<0?0:ee;for(let pe=0;pe<I;++pe){let ae=j+pe*_;if(ae>=0&&ae<f)for(let fe=0;fe<E;++fe){let me=ee+fe*D;if(me>=0&&me<d){let xe=c[q][ae][me][Z]+p[pe][fe][Z];xe>Q&&(Q=xe,ie=ae,le=me)}}}V[q][ie][le][Z]+=P[q][K][Y][Z]}}}return{dataId:u.write(b.toTypedArray(V,n.dtype),n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function gY(r){let{inputs:t,backend:e,attrs:n}=r,{image:o}=t,{canvas:s,options:i}=n,{contextOptions:a,imageOptions:l}=i||{},u=l?.alpha||1,c=a?.contextType||"2d";if(c!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);let p=s.getContext(c,a?.contextAttributes||{});if(p==null)throw new Error(`Could not get the context with ${c} type.`);let[m,f]=o.shape.slice(0,2),d=o.shape.length===2?1:o.shape[2],g=e.data.get(o.dataId).values,h=o.dtype==="float32"?255:1,x=new Uint8ClampedArray(f*m*4);for(let v=0;v<m*f;++v){let w=[0,0,0,255*u];for(let E=0;E<d;E++){let _=g[v*d+E];if(o.dtype==="float32"){if(_<0||_>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${_}.`)}else if(o.dtype==="int32"&&(_<0||_>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${_}.`);d===1?(w[0]=_*h,w[1]=_*h,w[2]=_*h):w[E]=_*h}let I=v*4;x[I+0]=Math.round(w[0]),x[I+1]=Math.round(w[1]),x[I+2]=Math.round(w[2]),x[I+3]=Math.round(w[3])}s.width=f,s.height=m;let y=new ImageData(x,f,m);return p.putImageData(y,0,0),o}var oA={kernelName:ay,backendName:"cpu",kernelFunc:gY};function Bi(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;re(o,"sum");let a;o.dtype==="bool"?a=bo({inputs:{x:o},backend:e,attrs:{dtype:"int32"}}):a=Br({inputs:{x:o},backend:e});let l=a.shape.length,u=b.parseAxisParam(s,a.shape),c=N.getAxesPermutation(u,l),p=u,m=a;c!=null&&(m=Ft({inputs:{x:a},backend:e,attrs:{perm:c}}),p=N.getInnerMostAxes(p.length,l)),N.assertAxesAreInnerMostDims("sum",p,m.shape.length);let[f,d]=N.computeOutAndReduceShapes(m.shape,p),g=N.upcastType(m.dtype,"int32"),h=Tu(e,f,g),x=b.sizeFromShape(d),y=e.data.get(h.dataId).values,v=e.data.get(m.dataId).values;for(let w=0;w<y.length;++w){let I=w*x,E=0;for(let _=0;_<x;++_)E+=v[I+_];y[w]=E}if(i){let w=N.expandShapeToKeepDim(h.shape,u),I=h;h=qe({inputs:{x:h},backend:e,attrs:{shape:w}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(a),c!=null&&e.disposeIntermediateTensorInfo(m),h}var sA={kernelName:ja,backendName:"cpu",kernelFunc:Bi};function xY(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:i,summedDims:a,idDims:l}=N.decodeEinsumEquation(o,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:c}=N.getEinsumComputePath(a,l),p=c.length,m=null,f=i.length,d=[];for(let g=0;g<p;++g){for(let h of c[g]){let{permutationIndices:x,expandDims:y}=N.getEinsumPermutation(f,l[h]),v;N.isIdentityPermutation(x)?v=s[h]:(v=Ft({inputs:{x:s[h]},backend:e,attrs:{perm:x}}),d.push(v));let w=v.shape.slice();for(let I=0;I<y.length;++I)w.splice(y[I],0,1);b.arraysEqual(v.shape,w)||(v=qe({inputs:{x:v},backend:e,attrs:{shape:w}}),d.push(v)),m===null?m=v:(m=Bl({inputs:{a:v,b:m},backend:e}),d.push(m))}g<p-1&&(u[g]>=0&&(m=Bi({inputs:{x:m},backend:e,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let g of d)g!==m&&e.disposeIntermediateTensorInfo(g);return m}var iA={kernelName:$1,backendName:"cpu",kernelFunc:xY};function yY(r){let{inputs:t,backend:e}=r,{dy:n,y:o}=t;re([n,o],"eluGrad");let s=new Float32Array(b.sizeFromShape(o.shape)),i=e.data.get(o.dataId).values,a=e.data.get(n.dataId).values;for(let l=0;l<i.length;++l){let u=i[l];u>=0?s[l]=a[l]:s[l]=a[l]*(u+1)}return e.makeTensorInfo(o.shape,"float32",s)}var aA={kernelName:F1,backendName:"cpu",kernelFunc:yY};var bY=N.ERF_P,vY=N.ERF_A1,wY=N.ERF_A2,TY=N.ERF_A3,CY=N.ERF_A4,SY=N.ERF_A5,IY=Ne(Us,r=>{let t=Math.sign(r),e=Math.abs(r),n=1/(1+bY*e);return t*(1-((((SY*n+CY)*n+TY)*n+wY)*n+vY)*n*Math.exp(-e*e))}),lA={kernelName:Us,backendName:"cpu",kernelFunc:IY};function Au(r){let{inputs:t,backend:e,attrs:n}=r,{input:o}=t,{dim:s}=n,i=o.shape.length,a=o.shape.slice(),l=s;return s<0&&(b.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+s+1),a.splice(l,0,1),qe({inputs:{x:o},backend:e,attrs:{shape:a}})}var cA={kernelName:Sa,backendName:"cpu",kernelFunc:Au};var NY=We((r,t)=>r/t),Zp=je(Gs,NY),Jp={kernelName:Gs,backendName:"cpu",kernelFunc:Zp};function dd(r,t,e){let n=r.shape,o=n[0],s=n[1],i=e.data.get(r.dataId),a=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[o,s],c=b.sizeFromShape(u),p=b.getTypedArrayFromDType("float32",c),m=b.getTypedArrayFromDType("float32",c);for(let h=0;h<o;h++){let x=wo({inputs:{x:a},backend:e,attrs:{begin:[h,0],size:[1,s]}}),y=wo({inputs:{x:l},backend:e,attrs:{begin:[h,0],size:[1,s]}}),v=gr({inputs:{real:x,imag:y},backend:e}),{real:w,imag:I}=kY(v,t,e),E=N.mergeRealAndImagArrays(w,I);for(let _=0;_<s;_++){let D=N.getComplexWithIndex(E,_);p[h*s+_]=D.real,m[h*s+_]=D.imag}e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(v)}let f=e.makeTensorInfo(u,"float32",p),d=e.makeTensorInfo(u,"float32",m),g=gr({inputs:{real:f,imag:d},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),g}function kY(r,t,e){let n=b.sizeFromShape(r.shape),o=e.data.get(r.dataId),s=e.data.get(o.complexTensorInfos.real.dataId).values,i=e.data.get(o.complexTensorInfos.imag.dataId).values;if(AY(n)){let a=X7(s,i,n,t,e),l=[r.shape[0],r.shape[1]];if(t){let u=e.makeTensorInfo(l,"float32",a.real),c=e.makeTensorInfo(l,"float32",a.imag),p=e.makeTensorInfo([],"float32",b.createScalarValue(n,"float32")),m=Br({inputs:{x:p},backend:e}),f=Jp.kernelFunc({inputs:{a:u,b:p},backend:e}),d=Jp.kernelFunc({inputs:{a:c,b:m},backend:e}),g=e.data.get(f.dataId).values,h=e.data.get(d.dataId).values;return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),{real:g,imag:h}}return a}else{let a=N.mergeRealAndImagArrays(s,i),l=EY(a,n,t);return N.splitRealAndImagArrays(l)}}function AY(r){return(r&r-1)===0}function X7(r,t,e,n,o){if(e===1)return{real:r,imag:t};let s=N.mergeRealAndImagArrays(r,t),i=e/2,a=N.complexWithEvenIndex(s),l=a.real,u=a.imag,c=[l.length],p=o.makeTensorInfo(c,"float32",l),m=o.makeTensorInfo(c,"float32",u),f=gr({inputs:{real:p,imag:m},backend:o}),d=N.complexWithOddIndex(s),g=d.real,h=d.imag,x=[g.length],y=o.makeTensorInfo(x,"float32",g),v=o.makeTensorInfo(x,"float32",h),w=gr({inputs:{real:y,imag:v},backend:o}),I=X7(l,u,i,n,o),E=I.real,_=I.imag,D=[E.length],M=o.makeTensorInfo(D,"float32",E),P=o.makeTensorInfo(D,"float32",_),V=gr({inputs:{real:M,imag:P},backend:o}),U=X7(g,h,i,n,o),q=U.real,K=U.imag,j=[q.length],Y=o.makeTensorInfo(j,"float32",q),ee=o.makeTensorInfo(j,"float32",K),Z=gr({inputs:{real:Y,imag:ee},backend:o}),Q=N.exponents(e,n),ie=[Q.real.length],le=o.makeTensorInfo(ie,"float32",Q.real),pe=o.makeTensorInfo(ie,"float32",Q.imag),ae=gr({inputs:{real:le,imag:pe},backend:o}),fe=Bl({inputs:{a:ae,b:Z},backend:o}),me=ys({inputs:{a:V,b:fe},backend:o}),xe=Xp({inputs:{a:V,b:fe},backend:o}),Ce=yo({inputs:{input:me},backend:o}),_e=yo({inputs:{input:xe},backend:o}),Ee=bs({inputs:{input:me},backend:o}),Ve=bs({inputs:{input:xe},backend:o}),Ue=_0({inputs:[Ce,_e],backend:o,attrs:{axis:0}}),at=_0({inputs:[Ee,Ve],backend:o,attrs:{axis:0}}),vt=o.data.get(Ue.dataId).values,er=o.data.get(at.dataId).values;return o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(m),o.disposeIntermediateTensorInfo(f),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(M),o.disposeIntermediateTensorInfo(P),o.disposeIntermediateTensorInfo(V),o.disposeIntermediateTensorInfo(Y),o.disposeIntermediateTensorInfo(ee),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(le),o.disposeIntermediateTensorInfo(pe),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(fe),o.disposeIntermediateTensorInfo(me),o.disposeIntermediateTensorInfo(xe),o.disposeIntermediateTensorInfo(Ce),o.disposeIntermediateTensorInfo(Ee),o.disposeIntermediateTensorInfo(_e),o.disposeIntermediateTensorInfo(Ve),o.disposeIntermediateTensorInfo(Ue),o.disposeIntermediateTensorInfo(at),{real:vt,imag:er}}function EY(r,t,e){let n=new Float32Array(t*2);for(let o=0;o<t;o++){let s=0,i=0;for(let a=0;a<t;a++){let l=N.exponent(o*a,t,e),u=N.getComplexWithIndex(r,a);s+=u.real*l.real-u.imag*l.imag,i+=u.real*l.imag+u.imag*l.real}e&&(s/=t,i/=t),N.assignToTypedArray(n,s,i,o)}return n}function _Y(r){let{inputs:t,backend:e}=r,{input:n}=t,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=qe({inputs:{x:n},backend:e,attrs:{shape:[i,s]}}),l=dd(a,!1,e),u=qe({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}var uA={kernelName:O1,backendName:"cpu",kernelFunc:_Y};function Qp(r){let{backend:t,attrs:e}=r,{shape:n,value:o,dtype:s}=e,i=s||b.inferDtype(o),a=b.getArrayFromDType(i,b.sizeFromShape(n));return DY(a,o,i),t.makeTensorInfo(n,i,a)}var pA={kernelName:M1,backendName:"cpu",kernelFunc:Qp};function DY(r,t,e){r.fill(t)}var mA={kernelName:P1,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,o=e,s=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[i,a,l,u]=n.shape,c=o.data.get(n.dataId).values;for(let m=0;m<i;m++){let f=m*l*a*u;for(let d=0;d<a;d++){let g=d*(l*u);for(let h=0;h<l;h++){let x=h*u;for(let y=0;y<u;y++){let v=Math.round(l-h-1),w=f+g+x+y,I=c[w];if(v>=0&&v<l){let E=v*u,_=f+g+E+y;I=c[_]}s[w]=I}}}}return{dataId:o.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};function RY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,g=K7({inputs:{x:o,filter:s},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let h=g;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let x=qe({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});g=ys({inputs:{a:g,b:x},backend:e}),e.disposeIntermediateTensorInfo(x)}else g=ys({inputs:{a:g,b:i},backend:e});e.disposeIntermediateTensorInfo(h)}if(f){let h=g;if(c==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){let x=qe({inputs:{x:a},backend:e,attrs:{shape:[a.shape[0],1,1]}});g=Gl(e,g,f,x,d),e.disposeIntermediateTensorInfo(x)}else g=Gl(e,g,f,a,d);e.disposeIntermediateTensorInfo(h)}return g}var fA={kernelName:sl,backendName:"cpu",kernelFunc:RY};function $Y(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,g=j7({inputs:{x:o,filter:s},backend:e,attrs:{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m}});if(i){let h=g;g=ys({inputs:{a:g,b:i},backend:e}),e.disposeIntermediateTensorInfo(h)}if(f){let h=g;g=Gl(e,g,f,a,d),e.disposeIntermediateTensorInfo(h)}return g}var dA={kernelName:il,backendName:"cpu",kernelFunc:$Y};function FY(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=b.sizeFromShape(n.shape),i=o.shape,a=i[i.length-1],[l,u,c,p]=N.prepareAndValidate(n,o);if(u===0)return e.makeTensorInfo(l,n.dtype,[]);let m=e.data.get(o.dataId).values,f=e.bufferSync(n),d=Xf(m,f,n.dtype,u,a,c,p,n.shape,s);return e.makeTensorInfo(l,n.dtype,d.values)}var hA={kernelName:L1,backendName:"cpu",kernelFunc:FY};function OY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n;re([o,s],"gatherV2");let l=b.parseAxisParam(i,o.shape)[0],u=e.data.get(s.dataId).values,c=o.shape[l];for(let w=0;w<u.length;++w){let I=u[w];b.assert(I<=c-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${c-1}]`)}let p=a;a==null&&(p=0);let m=b.sizeFromShape(s.shape),f=N.segment_util.collectGatherOpShapeInfo(o,s,l,p),d=qe({inputs:{x:o},backend:e,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),g=qe({inputs:{x:s},backend:e,attrs:{shape:[f.batchSize,m/f.batchSize]}}),h=[f.batchSize,f.outerSize,m/f.batchSize,f.sliceSize],x=e.bufferSync(g),y=e.bufferSync(d),v=Yf(y,x,h);return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),e.makeTensorInfo(f.outputShape,v.dtype,v.values)}var gA={kernelName:Na,backendName:"cpu",kernelFunc:OY};function MY(r){let{inputs:t,backend:e}=r,{input:n}=t,o=b.sizeFromShape(n.shape),s=n.shape[n.shape.length-1],i=o/s,a=qe({inputs:{x:n},backend:e,attrs:{shape:[i,s]}}),l=dd(a,!0,e),u=qe({inputs:{x:l},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(l),u}var xA={kernelName:z1,backendName:"cpu",kernelFunc:MY};var PY=Ne(Xs,r=>Number.isFinite(r)?1:0,"bool"),yA={kernelName:Xs,backendName:"cpu",kernelFunc:PY};var LY=Ne(Ys,r=>Math.abs(r)===1/0?1:0,"bool"),bA={kernelName:Ys,backendName:"cpu",kernelFunc:LY};var zY=Ne(Zs,r=>Number.isNaN(r)?1:0,"bool"),vA={kernelName:Zs,backendName:"cpu",kernelFunc:zY};function BY(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,i=Zf(n,o,s);return t.makeTensorInfo([i.length],"float32",i)}var wA={kernelName:G1,backendName:"cpu",kernelFunc:BY};var GY=Ne(Qs,r=>Math.log1p(r)),TA={kernelName:Qs,backendName:"cpu",kernelFunc:GY};var VY=We((r,t)=>r&&t),UY=je(Q0,VY,null,"bool"),CA={kernelName:Q0,backendName:"cpu",kernelFunc:UY};var WY=Ne(el,r=>r?0:1,"bool"),SA={kernelName:el,backendName:"cpu",kernelFunc:WY};var qY=We((r,t)=>r||t),HY=je(tl,qY,null,"bool"),IA={kernelName:tl,backendName:"cpu",kernelFunc:HY};function KY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=n;re(o,"LRN");let u=o.shape[3],c=u-1,p=e.data.get(o.dataId).values,m=b.sizeFromShape(o.shape),f=new Float32Array(m);function d(g){let h=g%u,x=g-h+Math.max(0,h-s),y=g-h+Math.min(h+s,c),v=0;for(;x<=y;x++){let w=p[x];v+=w*w}return v}for(let g=0;g<m;g++){let h=d(g),x=p[g]*Math.pow(i+a*h,-l);f[g]=x}return e.makeTensorInfo(o.shape,o.dtype,f)}var NA={kernelName:Aa,backendName:"cpu",kernelFunc:KY};function jY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=n;re(i,"LRNGrad");let p=b.sizeFromShape(i.shape),m=i.shape[3],f=e.data.get(i.dataId).values,d=e.data.get(o.dataId).values,g=e.data.get(s.dataId).values,h=new Float32Array(p),x=p;for(let y=0;y<x;y++){let v=y%m,w=y-v+Math.max(0,v-a),I=y-v+Math.min(m,v+a+1),E=0;for(let _=w;_<I;_++)E+=Math.pow(d[_],2);E=u*E+l;for(let _=w;_<I;_++){let D=-2*u*c*d[_]*g[y]/E;y===_&&(D+=Math.pow(E,-c)),D*=f[y],h[_]+=D}}return e.makeTensorInfo(i.shape,o.dtype,h)}var kA={kernelName:V1,backendName:"cpu",kernelFunc:jY};function Y7(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:i}=n,a=e,l=o.shape,u=l.length,c=b.parseAxisParam(s,l),p=c,m=N.getAxesPermutation(p,u),f=a.data.get(o.dataId).values;if(m!=null){let w=new Array(u);for(let I=0;I<w.length;I++)w[I]=l[m[I]];f=Iu(f,l,o.dtype,m,w),p=N.getInnerMostAxes(p.length,u),l=w}re(o,"max"),N.assertAxesAreInnerMostDims("max",p,u);let[d,g]=N.computeOutAndReduceShapes(l,p),h=b.sizeFromShape(g),x=Jf(f,h,d,o.dtype),y=a.write(x,d,o.dtype),v=d;return i&&(v=N.expandShapeToKeepDim(d,c)),{dataId:y,shape:v,dtype:o.dtype}}var AA={kernelName:Ea,backendName:"cpu",kernelFunc:Y7};function XY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;re(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=n,u=1;b.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,i,u,a,l),p;if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))p=Br({inputs:{x:o},backend:e});else{let m=e.data.get(o.dataId).values,f=b.computeStrides(o.shape),d=ku(m,o.shape,o.dtype,f,c,"max");p=e.makeTensorInfo(c.outShape,o.dtype,d.values)}return p}var EA={kernelName:_a,backendName:"cpu",kernelFunc:XY};function YY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=n;re(o,"maxPool3d");let c=N.computePool3DInfo(o.shape,s,i,1,a,l,u),p=e.data.get(o.dataId).values,m=fd(p,o.shape,o.dtype,b.computeStrides(o.shape),c,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}var _A={kernelName:Da,backendName:"cpu",kernelFunc:YY};function ZY(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,{filterSize:i,strides:a,pad:l,dimRoundingMode:u}=n;re([o,s],"maxPool3DGrad");let c=N.computePool3DInfo(s.shape,i,a,1,l,u),p=e.bufferSync(s),m=Ik(p,c),f=c.strideDepth,d=c.strideHeight,g=c.strideWidth,h=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,I=c.effectiveFilterWidth,E=v-1-c.padInfo.front,_=I-1-c.padInfo.left,D=w-1-c.padInfo.top,M=ye(s.shape,"float32"),P=e.bufferSync(o);for(let V=0;V<c.batchSize;++V)for(let U=0;U<c.inChannels;++U)for(let q=0;q<c.inDepth;++q)for(let K=0;K<c.inHeight;++K)for(let j=0;j<c.inWidth;++j){let Y=q-E,ee=K-D,Z=j-_,Q=0;for(let ie=0;ie<v;ie+=h){let le=(Y+ie)/f;if(!(le<0||le>=c.outDepth||Math.floor(le)!==le))for(let pe=0;pe<w;pe+=x){let ae=(ee+pe)/d;if(!(ae<0||ae>=c.outHeight||Math.floor(ae)!==ae))for(let fe=0;fe<I;fe+=y){let me=(Z+fe)/g;if(me<0||me>=c.outWidth||Math.floor(me)!==me)continue;let xe=v*w*I-1-m.get(V,le,ae,me,U),Ce=ie*w*I+pe*I+fe,_e=xe===Ce?1:0;if(_e===0)continue;let Ee=P.get(V,le,ae,me,U);Q+=Ee*_e}}}M.set(Q,V,q,K,j,U)}return e.makeTensorInfo(M.shape,M.dtype,M.values)}var DA={kernelName:W1,backendName:"cpu",kernelFunc:ZY};function JY(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:i}=t,a=s;re([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=N.computePool2DInfo(a.shape,l,u,1,c,p),f=e.data.get(a.dataId).values,d=ye(m.outShape,a.dtype,md(f,a.shape,a.dtype,m).values),g=m.strideHeight,h=m.strideWidth,x=m.dilationHeight,y=m.dilationWidth,v=m.effectiveFilterHeight,w=m.effectiveFilterWidth,I=w-1-m.padInfo.left,E=v-1-m.padInfo.top,_=ye(a.shape,"float32"),D=e.data.get(o.dataId).values,M=ye(o.shape,"float32",D);for(let P=0;P<m.batchSize;++P)for(let V=0;V<m.inChannels;++V)for(let U=0;U<m.inHeight;++U)for(let q=0;q<m.inWidth;++q){let K=U-E,j=q-I,Y=0;for(let ee=0;ee<v;ee+=x){let Z=(K+ee)/g;if(!(Z<0||Z>=m.outHeight||Math.floor(Z)!==Z))for(let Q=0;Q<w;Q+=y){let ie=(j+Q)/h;if(ie<0||ie>=m.outWidth||Math.floor(ie)!==ie)continue;let le=v*w-1-d.get(P,Z,ie,V),pe=ee*w+Q,ae=le===pe?1:0;if(ae===0)continue;let fe=M.get(P,Z,ie,V);Y+=fe*ae}}_.set(Y,P,U,q,V)}return e.makeTensorInfo(_.shape,_.dtype,_.values)}var RA={kernelName:U1,backendName:"cpu",kernelFunc:JY};function $A(r,t,e,n,o){let s=b.computeStrides(t),i=ku(r,t,e,s,o,"max"),a=md(r,t,e,o,!0,n);return[i.values,a.values]}var FA={kernelName:q1,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;re(n,"MaxPoolWithArgmax");let u=l.data.get(n.dataId).values,c=N.computePool2DInfo(n.shape,o,s,[1,1],i),[p,m]=$A(u,n.shape,n.dtype,a,c),f=l.write(p,c.outShape,n.dtype),d=l.write(m,c.outShape,n.dtype);return[{dataId:f,shape:c.outShape,dtype:n.dtype},{dataId:d,shape:c.outShape,dtype:"int32"}]}};function QY(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=b.parseAxisParam(s,o.shape),u=N.computeOutAndReduceShapes(o.shape,a)[1],c=b.sizeFromShape(u),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([c]));p.push(m);let f=bo({inputs:{x:o},backend:e,attrs:{dtype:"float32"}});p.push(f);let d=Zp({inputs:{a:f,b:m},backend:e});p.push(d);let g=Bi({inputs:{x:d},backend:e,attrs:{axis:s,keepDims:i}});return p.forEach(h=>e.disposeIntermediateTensorInfo(h)),g}var OA={kernelName:Ra,backendName:"cpu",kernelFunc:QY};function eZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;re(o,"min");let a=b.parseAxisParam(s,o.shape),l=a,u=N.getAxesPermutation(l,o.shape.length),c=o;u!=null&&(c=Ft({inputs:{x:o},backend:e,attrs:{perm:u}}),l=N.getInnerMostAxes(l.length,o.shape.length)),N.assertAxesAreInnerMostDims("min",l,c.shape.length);let[p,m]=N.computeOutAndReduceShapes(c.shape,l),f=b.sizeFromShape(m),d=b.makeZerosTypedArray(b.sizeFromShape(p),c.dtype),g=e.data.get(c.dataId).values;for(let x=0;x<d.length;++x){let y=x*f,v=g[y];for(let w=0;w<f;++w){let I=g[y+w];(Number.isNaN(I)||I<v)&&(v=I)}d[x]=v}u!=null&&e.disposeIntermediateTensorInfo(c);let h=e.makeTensorInfo(p,c.dtype,d);if(i){let x=N.expandShapeToKeepDim(p,a),y=qe({inputs:{x:h},backend:e,attrs:{shape:x}});return e.disposeIntermediateTensorInfo(h),y}return h}var MA={kernelName:$a,backendName:"cpu",kernelFunc:eZ};function tZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,mode:i}=n;re(o,"mirrorPad");let a=s.map((v,w)=>v[0]+o.shape[w]+v[1]),l=s.map(v=>v[0]),u=s.map((v,w)=>v[0]+o.shape[w]),c=i==="reflect"?0:1,p=e.data.get(o.dataId).values,m=o.shape.length,f=b.computeStrides(o.shape),d=b.sizeFromShape(a),g=a.length,h=b.computeStrides(a),x=b.getTypedArrayFromDType(o.dtype,d);for(let v=0;v<d;v++){let w=b.indexToLoc(v,g,h);for(let E=0;E<g;E++)w[E]<l[E]?w[E]=l[E]*2-w[E]-c:w[E]>=u[E]&&(w[E]=(u[E]-1)*2-w[E]+c);w=w.map((E,_)=>E-l[_]);let I=b.locToIndex(w,m,f);x[v]=p[I]}return{dataId:e.write(x,a,o.dtype),shape:a,dtype:o.dtype}}var PA={kernelName:Fa,backendName:"cpu",kernelFunc:tZ};var rZ=We((r,t)=>{let e=r%t;return r<0&&t<0||r>=0&&t>=0?e:(e+t)%t}),nZ=je(ri,rZ),LA={kernelName:ri,backendName:"cpu",kernelFunc:nZ};var BA=Vn(vp());function Z7(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,i=o.shape.length,a=s;if(a===-1&&(a=i-1),a!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${a}`);let l=b.parseAxisParam([a],o.shape),u=Y7({inputs:{x:o},backend:e,attrs:{reductionIndices:l,keepDims:!1}}),c=N.expandShapeToKeepDim(u.shape,l),p=qe({inputs:{x:u},backend:e,attrs:{shape:c}}),m=Xp({inputs:{a:o,b:p},backend:e}),f=y7({inputs:{x:m},backend:e}),d=Bi({inputs:{x:f},backend:e,attrs:{axis:l,keepDims:!1}}),g=qe({inputs:{x:d},backend:e,attrs:{shape:c}}),h=Zp({inputs:{a:f,b:g},backend:e});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),h}var zA={kernelName:Za,backendName:"cpu",kernelFunc:Z7};function oZ(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:i,normalized:a}=n;re(o,"multinomial");let l=a?o:Z7({inputs:{logits:o},backend:e,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],p=e.data.get(l.dataId).values,m=[u,s],f=b.makeZerosTypedArray(b.sizeFromShape(m),"int32");for(let d=0;d<u;++d){let g=d*c,h=new Float32Array(c-1);h[0]=p[g];for(let v=1;v<h.length;++v)h[v]=h[v-1]+p[g+v];let x=BA.alea(i.toString()),y=d*s;for(let v=0;v<s;++v){let w=x();f[y+v]=h.length;for(let I=0;I<h.length;I++)if(w<h[I]){f[y+v]=I;break}}}return a||e.disposeIntermediateTensorInfo(l),e.makeTensorInfo(m,"int32",f)}var GA={kernelName:H1,backendName:"cpu",kernelFunc:oZ};var sZ=zr.nonMaxSuppressionV3Impl;function iZ(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=n;re(o,"NonMaxSuppression");let u=e.data.get(o.dataId).values,c=e.data.get(s.dataId).values,{selectedIndices:p}=sZ(u,c,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var VA={kernelName:K1,backendName:"cpu",kernelFunc:iZ};var aZ=zr.nonMaxSuppressionV4Impl;function lZ(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=n;re(o,"NonMaxSuppressionPadded");let c=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,{selectedIndices:m,validOutputs:f}=aZ(c,p,i,a,l,u);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var UA={kernelName:j1,backendName:"cpu",kernelFunc:lZ};var cZ=zr.nonMaxSuppressionV5Impl;function uZ(r){let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=n;re(o,"NonMaxSuppressionWithScore");let c=e.data.get(o.dataId).values,p=e.data.get(s.dataId).values,m=i,f=a,d=l,g=u,{selectedIndices:h,selectedScores:x}=cZ(c,p,m,f,d,g);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var WA={kernelName:X1,backendName:"cpu",kernelFunc:uZ};function pZ(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:i,onValue:a,offValue:l}=n;re(o,"oneHot");let u=b.sizeFromShape(o.shape),c=new Float32Array(u*i);c.fill(l);let p=e.data.get(o.dataId).values;for(let m=0;m<u;++m)p[m]>=0&&p[m]<i&&(c[m*i+p[m]]=a);return e.makeTensorInfo([...o.shape,i],s,c)}var qA={kernelName:Pa,backendName:"cpu",kernelFunc:pZ};function e2(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(n.dtype==="complex64"){let o=yo({inputs:{input:n},backend:e}),s=e2({inputs:{x:o},backend:e}),i=bs({inputs:{input:n},backend:e}),a=e2({inputs:{x:i},backend:e}),l=gr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return Qp({backend:e,attrs:{shape:n.shape,value:0,dtype:n.dtype}})}var HA={kernelName:e0,backendName:"cpu",kernelFunc:e2};function KA(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(n.dtype==="complex64"){let o=yo({inputs:{input:n},backend:e}),s=KA({inputs:{x:o},backend:e}),i=bs({inputs:{input:n},backend:e}),a=e2({inputs:{x:i},backend:e}),l=gr({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return Qp({backend:e,attrs:{shape:n.shape,value:1,dtype:n.dtype}})}var jA={kernelName:Ma,backendName:"cpu",kernelFunc:KA};function J7(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return Au({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=Au({inputs:{input:c},backend:e,attrs:{dim:o}});return a.push(p),p}),u=_0({inputs:l,backend:e,attrs:{axis:o}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var XA={kernelName:La,backendName:"cpu",kernelFunc:J7};function mZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:i}=n;re(o,"pad");let a=s.map((y,v)=>y[0]+o.shape[v]+y[1]),l=s.map(y=>y[0]),u=e.data.get(o.dataId).values,c=b.sizeFromShape(o.shape),p=o.shape.length,m=b.computeStrides(o.shape),f=b.sizeFromShape(a),d=a.length,g=b.computeStrides(a),h=b.getTypedArrayFromDType(o.dtype,f);i!==0&&h.fill(i);for(let y=0;y<c;y++){let w=b.indexToLoc(y,p,m).map((E,_)=>E+l[_]),I=b.locToIndex(w,d,g);h[I]=u[y]}return{dataId:e.write(h,a,o.dtype),shape:a,dtype:o.dtype}}var hd={kernelName:za,backendName:"cpu",kernelFunc:mZ};var fZ=We((r,t)=>Math.pow(r,t)),dZ=je(oi,fZ),YA={kernelName:oi,backendName:"cpu",kernelFunc:dZ};function hZ(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=n,l=o.map(x=>e.data.get(x.dataId).values),u=o.map(x=>x.shape),c=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,[m,f,d]=Qf(l,u,c,s.shape,s.dtype,p,i.shape,a),g=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),h=e.makeTensorInfo(d,s.dtype,f);return g.concat([h])}var ZA={kernelName:Y1,backendName:"cpu",kernelFunc:hZ};function gZ(r){let{inputs:t,backend:e}=r,{starts:n,limits:o,deltas:s}=t,i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,[u,c]=ed(i,n.shape,n.dtype,a,o.shape,l,s.shape),p=e.makeTensorInfo([u.length],"int32",u),m=e.makeTensorInfo([c.length],n.dtype,c);return[p,m]}var JA={kernelName:Z1,backendName:"cpu",kernelFunc:gZ};function xZ(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,u=e.data.get(o.dataId).values,c=e.data.get(s.dataId).values,p=e.data.get(i.dataId).values,m=a.map(h=>e.data.get(h.dataId).values),f=a.map(h=>h.shape),[d,g]=td(u,o.shape,c,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(d,s.dtype,g)}var QA={kernelName:J1,backendName:"cpu",kernelFunc:xZ};function yZ(r){let{backend:t,attrs:e}=r,{start:n,stop:o,dtype:s,step:i}=e,a=rd(n,o,i,s);return t.makeTensorInfo([a.length],s,a)}var eE={kernelName:Q1,backendName:"cpu",kernelFunc:yZ};var bZ=Ne(si,r=>1/r),tE={kernelName:si,backendName:"cpu",kernelFunc:bZ};function vZ(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n;re(o,"resizeBilinear");let l=b.computeStrides(o.shape),[u,c]=a,[p,m,f,d]=o.shape,g=e.data.get(o.dataId).values,h=new Float32Array(b.sizeFromShape([p,u,c,d])),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],y=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=0,w=x[0]/y[0],I=x[1]/y[1];for(let E=0;E<p;E++)for(let _=0;_<u;_++){let D;i?D=w*(_+.5)-.5:D=w*_;let M=Math.max(0,Math.floor(D)),P=D-M,V=Math.min(m-1,Math.ceil(D)),U=E*l[0]+M*l[1],q=E*l[0]+V*l[1];for(let K=0;K<c;K++){let j;i?j=I*(K+.5)-.5:j=I*K;let Y=Math.max(0,Math.floor(j)),ee=j-Y,Z=Math.min(f-1,Math.ceil(j)),Q=U+Y*l[2],ie=q+Y*l[2],le=U+Z*l[2],pe=q+Z*l[2];for(let ae=0;ae<d;ae++){let fe=g[Q+ae],me=g[ie+ae],xe=g[le+ae],Ce=g[pe+ae],_e=fe+(xe-fe)*ee,Ee=me+(Ce-me)*ee,Ve=_e+(Ee-_e)*P;h[v++]=Ve}}}return e.makeTensorInfo([p,u,c,d],"float32",h)}var rE={kernelName:Wa,backendName:"cpu",kernelFunc:vZ};function wZ(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n;re([s,o],"resizeBilinearGrad");let a=b.computeStrides(o.shape),[l,u,c,p]=o.shape,[,m,f]=s.shape,d=new Float32Array(l*u*c*p),g=[i&&m>1?u-1:u,i&&f>1?c-1:c],h=[i&&m>1?m-1:m,i&&f>1?f-1:f],x=g[0]/h[0],y=g[1]/h[1],v=e.data.get(s.dataId).values,w=0;for(let I=0;I<l;I++){let E=I*a[0];for(let _=0;_<m;_++){let D=_*x,M=Math.floor(D),P=Math.min(Math.ceil(D),u-1),V=E+M*a[1],U=E+P*a[1],q=D-M,K=1-q;for(let j=0;j<f;j++){let Y=j*y,ee=Math.floor(Y),Z=Math.min(Math.ceil(Y),c-1),Q=Y-ee,ie=1-Q,le=V+ee*a[2],pe=V+Z*a[2],ae=U+ee*a[2],fe=U+Z*a[2],me=K*ie,xe=K*Q,Ce=q*ie,_e=q*Q;for(let Ee=0;Ee<p;Ee++){let Ve=v[w++];d[le+Ee]+=Ve*me,d[pe+Ee]+=Ve*xe,d[ae+Ee]+=Ve*Ce,d[fe+Ee]+=Ve*_e}}}}return e.makeTensorInfo([l,c,u,p],"float32",d)}var nE={kernelName:rc,backendName:"cpu",kernelFunc:wZ};function TZ(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n;re(o,"resizeNearestNeighbor");let l=b.computeStrides(o.shape),[u,c]=a,[p,m,f,d]=o.shape,g=e.data.get(o.dataId).values,h=new Float32Array(p*u*c*d),x=[s&&u>1?m-1:m,s&&c>1?f-1:f],y=[s&&u>1?u-1:u,s&&c>1?c-1:c],v=x[0]/y[0],w=x[1]/y[1],I=0;for(let E=0;E<p;E++){let _=E*l[0];for(let D=0;D<u;D++){let M=i?v*(D+.5):v*D,P=Math.min(m-1,s?Math.round(M):Math.floor(M));i&&(P=Math.max(0,P));let V=_+P*l[1];for(let U=0;U<c;U++){let q=i?w*(U+.5):w*U,K=Math.min(f-1,s?Math.round(q):Math.floor(q));i&&(K=Math.max(0,K));let j=V+K*l[2];for(let Y=0;Y<d;Y++){let ee=g[j+Y];h[I++]=ee}}}}return e.makeTensorInfo([p,u,c,d],o.dtype,h)}var oE={kernelName:Ua,backendName:"cpu",kernelFunc:TZ};function CZ(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n;re([s,o],"resizeNearestNeighborGrad");let a=b.computeStrides(o.shape),l=b.computeStrides(s.shape),[u,c,p,m]=o.shape,[,f,d]=s.shape,g=new Float32Array(u*c*p*m),h=e.data.get(s.dataId).values,x=[i&&f>1?c-1:c,i&&d>1?p-1:p],y=[i&&f>1?f-1:f,i&&d>1?d-1:d],v=x[0]/y[0],w=x[1]/y[1],I=1/v,E=1/w,_=Math.ceil(I)*2+2,D=Math.ceil(E)*2+2;for(let M=0;M<u;M++){let P=M*a[0];for(let V=0;V<c;V++){let U=P+V*a[1],q=Math.floor(V*I),K=Math.floor(q-_/2);for(let j=0;j<p;j++){let Y=U+j*a[2],ee=Math.floor(j*E),Z=Math.floor(ee-D/2);for(let Q=0;Q<m;Q++){let ie=0;for(let le=0;le<_;le++){let pe=le+K;if(pe<0||pe>=f)continue;let ae=P+pe*l[1],fe=pe*v,me=Math.min(c-1,i?Math.round(fe):Math.floor(fe));if(V===me)for(let xe=0;xe<D;xe++){let Ce=xe+Z;if(Ce<0||Ce>=d)continue;let _e=ae+Ce*l[2],Ee=Ce*w,Ve=Math.min(p-1,i?Math.round(Ee):Math.floor(Ee));j===Ve&&(ie+=h[_e+Q])}}g[Y+Q]=ie}}}}return e.makeTensorInfo(o.shape,o.dtype,g)}var sE={kernelName:tc,backendName:"cpu",kernelFunc:CZ};function SZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n;re(o,"reverse");let i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return Br({inputs:{x:o},backend:e});let l=new Qe(o.shape,o.dtype),u=e.bufferSync(o);for(let c=0;c<l.size;c++){let p=l.indexToLoc(c),m=p.slice();a.forEach(f=>m[f]=o.shape[f]-1-m[f]),l.set(u.get(...m),...p)}return e.makeTensorInfo(l.shape,l.dtype,l.values)}var iE={kernelName:qa,backendName:"cpu",kernelFunc:SZ};var aE={kernelName:bc,backendName:"cpu",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=t,a=e,l=b.getTypedArrayFromDType(n.dtype,b.sizeFromShape(n.shape)),[u,c,p,m]=n.shape,[f,d]=N.getImageCenter(i,c,p),g=255,h=Math.sin(o),x=Math.cos(o),y=a.data.get(n.dataId).values;for(let w=0;w<u;w++){let I=w*p*c*m;for(let E=0;E<c;E++){let _=E*(p*m);for(let D=0;D<p;D++){let M=D*m;for(let P=0;P<m;P++){let V=[u,E,D,P],U=V[2],q=V[1],K=(U-f)*x-(q-d)*h,j=(U-f)*h+(q-d)*x;K=Math.round(K+f),j=Math.round(j+d);let Y=s;if(typeof s!="number"&&(P===3?Y=g:Y=s[P]),K>=0&&K<p&&j>=0&&j<c){let Z=j*(p*m),Q=K*m,ie=I+Z+Q+P;Y=y[ie]}let ee=I+_+M+P;l[ee]=Y}}}}return{dataId:a.write(l,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var IZ=Ne(li,r=>{let t=Math.floor(r);return r-t<.5?Math.floor(r):r-t>.5?Math.ceil(r):t%2===0?t:t+1}),lE={kernelName:li,backendName:"cpu",kernelFunc:IZ};function NZ(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,o,i),m=!0,f=e.bufferSync(o),d=e.bufferSync(s),g=Uo(f,d,i,p,u,l,a,c,0,m);return e.makeTensorInfo(i,g.dtype,g.values)}var cE={kernelName:nc,backendName:"cpu",kernelFunc:NZ};function kZ(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<t?e=o+1:n=o;return n}function AZ(r,t){let e=0,n=r.length,o=0;for(;e<n;)o=Math.floor((e+n)/2),r[o]<=t?e=o+1:n=o;return n}function uE(r,t,e,n,o,s){let i=b.getArrayFromDType("int32",e*o);for(let a=0;a<e;++a){let l=r.slice(a*n,(a+1)*n),u=a*o;for(let c=0;c<o;++c)i[u+c]=s==="left"?kZ(l,t[c+u]):AZ(l,t[c+u])}return i}function EZ(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:i}=n,a=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,u=uE(a,l,o.shape[0],o.shape[1],s.shape[1],i);return e.makeTensorInfo(s.shape,"int32",u)}var pE={kernelName:sc,backendName:"cpu",kernelFunc:EZ};function _Z(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t;re([n,o,s],"select");let i=n.shape.length,a=e.data.get(n.dataId).values,l=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,c=or(o.dtype,s.dtype),p=b.makeZerosTypedArray(b.sizeFromShape(o.shape),c),m=0,f=i===0||i>1||o.shape.length===1?1:b.sizeFromShape(o.shape.slice(1));for(let d=0;d<a.length;d++)for(let g=0;g<f;g++)a[d]===1?p[m++]=l[d]:p[m++]=u[d];return e.makeTensorInfo(o.shape,c,p)}var mE={kernelName:Ha,backendName:"cpu",kernelFunc:_Z};var DZ=N.SELU_SCALEALPHA,RZ=N.SELU_SCALE,$Z=Ne(ui,r=>r>=0?RZ*r:DZ*(Math.exp(r)-1)),fE={kernelName:ui,backendName:"cpu",kernelFunc:$Z};var FZ=Ne(fi,r=>r<0?-1:r>0?1:0),dE={kernelName:fi,backendName:"cpu",kernelFunc:FZ};var OZ=Ne(pi,r=>Math.sin(r)),hE={kernelName:pi,backendName:"cpu",kernelFunc:OZ};var MZ=Ne(mi,r=>Math.sinh(r)),gE={kernelName:mi,backendName:"cpu",kernelFunc:MZ};var PZ=11920928955078125e-23,xE=Math.log(PZ)+2,LZ=Ne(hi,r=>{let t=r>-xE,e=r<xE,n=Math.exp(r),o;return e?o=n:t?o=r:o=Math.log(1+n),o}),yE={kernelName:hi,backendName:"cpu",kernelFunc:LZ};function zZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:i}=n;re([o],"spaceToBatchND");let a=b.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let E=1+s.length;E<o.shape.length;++E)l.push([0,0]);let u=hd.kernelFunc({inputs:{x:o},backend:e,attrs:{paddings:l,constantValue:0}}),c=N.getReshaped(u.shape,s,a,!1),p=N.getPermuted(c.length,s.length,!1),m=N.getReshapedPermuted(u.shape,s,a,!1),g=qe({inputs:{x:u},backend:e,attrs:{shape:c}}),y=Ft({inputs:{x:g},backend:e,attrs:{perm:p}}),I=qe({inputs:{x:y},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),I}var bE={kernelName:Xa,backendName:"cpu",kernelFunc:zZ};function BZ(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.data.get(n.dataId).values,l=e.data.get(o.dataId).values,u=e.data.get(s.dataId).values,c=e.data.get(i.dataId).values[0],[p,m,f,d,g]=nd(a,n.shape,n.dtype,l,o.dtype,u,c);return[e.makeTensorInfo(m,n.dtype,p),e.makeTensorInfo([m[0]],o.dtype,f),e.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(h=>Number(h)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}var vE={kernelName:ic,backendName:"cpu",kernelFunc:BZ};function GZ(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.data.get(o.dataId).values),a=e.data.get(n.dataId).values,l=Array.from(e.data.get(s.dataId).values),[u,c,p]=od(a,n.shape,n.dtype,i,l);return[e.makeTensorInfo(c,n.dtype,u),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var wE={kernelName:ac,backendName:"cpu",kernelFunc:GZ};function VZ(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,[u,c]=Nu(i,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(c,n.dtype,u)}var TE={kernelName:lc,backendName:"cpu",kernelFunc:VZ};function UZ(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(o.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=e.data.get(n.dataId).values,a=e.data.get(o.dataId).values,l=e.data.get(s.dataId).values,[u,c]=Nu(i,n.shape,n.dtype,a,l);return e.makeTensorInfo(c,n.dtype,u)}var CE={kernelName:cc,backendName:"cpu",kernelFunc:UZ};function WZ(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,o,a),f=!1,d=e.bufferSync(o),g;switch(s.dtype){case"bool":{let h=e.bufferSync(s),x=!!e.data.get(i.dataId).values[0];g=Uo(d,h,a,m,c,u,l,p,x,f);break}case"float32":{let h=e.bufferSync(s),x=e.data.get(i.dataId).values[0];g=Uo(d,h,a,m,c,u,l,p,x,f);break}case"int32":{let h=e.bufferSync(s),x=e.data.get(i.dataId).values[0];g=Uo(d,h,a,m,c,u,l,p,x,f);break}case"string":{let h=e.bufferSync(s),x=b.decodeString(e.data.get(i.dataId).values[0]);g=Uo(d,h,a,m,c,u,l,p,x,f);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return e.makeTensorInfo(a,g.dtype,g.values)}var SE={kernelName:uc,backendName:"cpu",kernelFunc:WZ};function qZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],l=N.prepareSplitSize(o,s,a),u=new Array(o.shape.length).fill(0),c=o.shape.slice();return l.map(p=>{let m=[...c];m[a]=p;let f=wo({inputs:{x:o},backend:e,attrs:{begin:u,size:m}});return u[a]+=p,f})}var IE={kernelName:Ya,backendName:"cpu",kernelFunc:qZ};var NE={kernelName:pc,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{let{x:e}=r,n=t;re(e,"square");let o=n.data.get(e.dataId).values,s=new Float32Array(o.length);for(let a=0;a<o.length;++a){let l=o[a];s[a]=l*l}return{dataId:n.write(s,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};var HZ=Ne(wi,(r,t)=>{let e=t;return isNaN(r)?NaN:r>0?1:e.alpha}),kE={kernelName:wi,backendName:"cpu",kernelFunc:HZ};function KZ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n;re(o,"stridedSlice");let{finalShapeSparse:f,finalShape:d,isIdentity:g,sliceDim0:h,isSimpleSlice:x,begin:y,end:v,strides:w}=Cr.sliceInfo(o.shape,s,i,a,l,u,c,p,m),I;if(g)I=qe({inputs:{x:o},backend:e,attrs:{shape:d}});else if(h||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let E=Cr.computeOutShape(y,v,w),_=wo({inputs:{x:o},backend:e,attrs:{begin:y,size:E}});I=qe({inputs:{x:_},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(_)}else{let E=e.bufferSync(o),_=sd(f,E,w,y);I=e.makeTensorInfo(d,_.dtype,_.values)}return I}var AE={kernelName:mc,backendName:"cpu",kernelFunc:KZ};function jZ(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=n,{data:c,dataSplits:p}=t,m=e.data.get(c.dataId).values,f=e.data.get(p.dataId).values,[d,g]=id(m,f,o,s,i,a,l,u);return[e.makeTensorInfo([d.length],"string",d),e.makeTensorInfo(p.shape,"int32",g)]}var EE={kernelName:fc,backendName:"cpu",kernelFunc:jZ};function XZ(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.data.get(s.dataId).values,l=e.data.get(i.dataId).values[0],[u,c,p]=ad(a,l,o),m=c.length;return[e.makeTensorInfo([m,2],"int32",u),e.makeTensorInfo([m],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var _E={kernelName:dc,backendName:"cpu",kernelFunc:XZ};function YZ(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=e.data.get(s.dataId).values,a=ld(i,o);return e.makeTensorInfo(s.shape,"int32",a)}var DE={kernelName:hc,backendName:"cpu",kernelFunc:YZ};var ZZ=Ne(bi,r=>Math.tan(r)),RE={kernelName:bi,backendName:"cpu",kernelFunc:ZZ};var JZ=Ne(vi,r=>Math.tanh(r)),$E={kernelName:vi,backendName:"cpu",kernelFunc:JZ};function QZ(r){let{inputs:t,backend:e}=r,{tensor:n,indices:o,updates:s}=t,{sliceRank:i,numUpdates:a,sliceSize:l,strides:u,outputSize:c}=N.calculateShapes(s,o,n.shape),p=!1,m=e.bufferSync(o),f=e.bufferSync(s),d=e.bufferSync(n),g=Uo(m,f,n.shape,c,l,a,i,u,d,p);return e.makeTensorInfo(n.shape,g.dtype,g.values)}var FE={kernelName:oc,backendName:"cpu",kernelFunc:QZ};function eJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;re(o,"tile");let i=cd(e.bufferSync(o),s);return e.makeTensorInfo(i.shape,i.dtype,i.values)}var OE={kernelName:rs,backendName:"cpu",kernelFunc:eJ};function tJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:i}=n;re(o,"topk");let a=e.data.get(o.dataId).values,[l,u]=ud(a,o.shape,o.dtype,s,i);return[e.makeTensorInfo(l.shape,l.dtype,l.values),e.makeTensorInfo(u.shape,u.dtype,u.values)]}var ME={kernelName:gc,backendName:"cpu",kernelFunc:tJ};function rJ(r){let{inputs:t,attrs:e,backend:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=e,[c,p,m,f]=o.shape,[d,g]=u??[p,m],h=[c,d,g,f],x=b.computeStrides(o.shape),y=x[0],v=x[1],w=x[2],I=b.computeStrides(h),E=I[0],_=I[1],D=I[2],M=b.getTypedArrayFromDType(o.dtype,b.sizeFromShape(h));M.fill(l);let P=n.data.get(o.dataId).values,V=n.data.get(s.dataId).values;for(let q=0;q<c;++q){let K=s.shape[0]===1?V:V.subarray(q*8,q*8+8);for(let j=0;j<d;++j)for(let Y=0;Y<g;++Y)for(let ee=0;ee<f;++ee){let Z,Q=K[6]*Y+K[7]*j+1;if(Q===0)continue;let ie=(K[0]*Y+K[1]*j+K[2])/Q,le=(K[3]*Y+K[4]*j+K[5])/Q,pe=PE(ie,m,a),ae=PE(le,p,a);switch(i){case"nearest":Z=aJ(P,p,m,y,v,w,q,ae,pe,ee,l);break;case"bilinear":Z=lJ(P,p,m,y,v,w,q,ae,pe,ee,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let fe=q*E+j*_+Y*D+ee;M[fe]=Z}return n.makeTensorInfo(h,o.dtype,M)}return{dataId:n.write(M,h,o.dtype),shape:o.shape,dtype:o.dtype}}var LE={kernelName:xc,backendName:"cpu",kernelFunc:rJ};function PE(r,t,e){switch(e){case"reflect":return nJ(r,t);case"wrap":return oJ(r,t);case"nearest":return iJ(r,t);case"constant":default:return sJ(r,t)}}function nJ(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=2*t;e<n&&(e=n*Math.trunc(-e/n)+e),e=e<-t?e+n:-e-1}else if(e>t-1)if(t<=1)e=0;else{let n=2*t;e-=n*Math.trunc(e/n),e>=t&&(e=n-e-1)}return b.clamp(0,e,t-1)}function oJ(r,t){let e=r;if(e<0)if(t<=1)e=0;else{let n=t-1;e+=t*(Math.trunc(-e/n)+1)}else if(e>t-1)if(t<=1)e=0;else{let n=t-1;e-=t*Math.trunc(e/n)}return b.clamp(0,e,t-1)}function sJ(r,t){return r}function iJ(r,t){return b.clamp(0,r,t-1)}function t2(r,t,e,n,o,s,i,a,l,u,c){let p=i*n+a*o+l*s+u;return 0<=a&&a<t&&0<=l&&l<e?r[p]:c}function aJ(r,t,e,n,o,s,i,a,l,u,c){let p=Math.round(a),m=Math.round(l);return t2(r,t,e,n,o,s,i,p,m,u,c)}function lJ(r,t,e,n,o,s,i,a,l,u,c){let p=Math.floor(a),m=Math.floor(l),f=p+1,d=m+1,g=(d-l)*t2(r,t,e,n,o,s,i,p,m,u,c)+(l-m)*t2(r,t,e,n,o,s,i,p,d,u,c),h=(d-l)*t2(r,t,e,n,o,s,i,f,m,u,c)+(l-m)*t2(r,t,e,n,o,s,i,f,d,u,c);return(f-a)*g+(a-p)*h}function cJ(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;re(s,"unique");let i=n.data.get(s.dataId).values,{outputValues:a,outputShape:l,indices:u}=pd(i,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,a),n.makeTensorInfo([u.length],"int32",u)]}var zE={kernelName:yc,backendName:"cpu",kernelFunc:cJ};function uJ(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o.shape.length,a=o.shape[s],l=new Array(i-1),u=0;for(let f=0;f<i;f++)f!==s&&(l[u++]=o.shape[f]);let c=new Array(i).fill(0),p=o.shape.slice();p[s]=1;let m=new Array(a);for(let f=0;f<m.length;f++){c[s]=f;let d=wo({inputs:{x:o},backend:e,attrs:{begin:c,size:p}});m[f]=qe({inputs:{x:d},backend:e,attrs:{shape:l}}),e.disposeIntermediateTensorInfo(d)}return m}var BE={kernelName:Ja,backendName:"cpu",kernelFunc:uJ};function pJ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:i}=n;re(o,"unsortedSegmentSum");let a=o.shape.length,l=s.shape.length,u=[],c=[],p=a-l,m=s;for(let d=0;d<p;++d){let g=Au({inputs:{input:m},backend:e,attrs:{dim:d+1}});m=g,c.push(g)}for(let d=0;d<i;++d){let g=b.createScalarValue(d,"int32"),h=e.makeTensorInfo([],"int32",g),x=g7({inputs:{a:h,b:m},backend:e}),y=bo({inputs:{x},backend:e,attrs:{dtype:"float32"}}),v=Bl({inputs:{a:y,b:o},backend:e}),w=Bi({inputs:{x:v},backend:e,attrs:{axis:0,keepDims:!1}});u.push(w),c.push(h),c.push(x),c.push(y),c.push(v),c.push(w)}let f=J7({inputs:u,backend:e,attrs:{axis:0}});return c.forEach(d=>e.disposeIntermediateTensorInfo(d)),f}var GE={kernelName:Qa,backendName:"cpu",kernelFunc:pJ};var mJ=[mk,vN,fk,dk,IN,hk,gk,xk,yk,bk,vk,wk,Tk,Ck,Sk,Nk,kk,Ak,Ek,pk,_k,Dk,Rk,NN,$k,SN,kN,Fk,wN,Ok,Pk,Lk,zk,Bk,Gk,Vk,Uk,Wk,qk,Hk,Kk,jk,Xk,Yk,Zk,Jk,Qk,eA,tA,rA,nA,oA,iA,sk,aA,AN,lA,EN,cA,_N,uA,pA,mA,DN,RN,fA,dA,hA,gA,$N,FN,TN,xA,Mk,yA,bA,vA,ik,ON,MN,wA,PN,TA,CA,SA,IA,NA,kA,AA,LN,EA,_A,DA,RA,FA,OA,MA,zN,PA,LA,GA,BN,GN,VA,UA,WA,VN,qA,jA,XA,hd,YA,ak,WN,ZA,JA,QA,eE,CN,Jp,tE,lk,ck,uk,rE,nE,oE,sE,iE,aE,lE,XN,cE,pE,mE,fE,ZN,dE,hE,gE,JN,zA,yE,bE,vE,wE,TE,CE,SE,IE,ek,NE,tk,rk,kE,AE,EE,_E,DE,nk,sA,RE,$E,FE,OE,ME,LE,UN,zE,BE,GE,HA];for(let r of mJ)sm(r);var Vl={},gd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function VE(r,t){Vl[r]=t}function Pn(r,t){if(!(r in Vl)||t!=null){let n=dJ(r,t);if(n!==null)Vl[r]=n;else return console.log("Could not get context for WebGL version",r),null}let e=Vl[r];return e==null||e.isContextLost()?(delete Vl[r],Pn(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Vl[r])}function fJ(r){if(!z().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&r===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function dJ(r,t){if(r!==1&&r!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let e=t??fJ(r);return e.addEventListener("webglcontextlost",n=>{n.preventDefault(),delete Vl[r]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(gd.failIfMajorPerformanceCaveat=!1),r===1?e.getContext("webgl",gd)||e.getContext("experimental-webgl",gd):e.getContext("webgl2",gd)}var Ul=function(r){return r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH",r}(Ul||{}),jr=function(r){return r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD",r}(jr||{}),Gr=function(r){return r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",r}(Gr||{});function Wl(r,t){return[t,r]}function UE(r,t){return r*t}function r2(r){let t=b.sizeFromShape(r),e=Math.ceil(t/4);return b.sizeToSquarishShape(e)}function vs(r,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(r/2))]}function WE(r,t){let[e,n]=vs(r,t);return e*n*4}function n2(r,t){let e=r,n,o,s,i,a,l,u,c,p,m;return z().getNumber("WEBGL_VERSION")===2?(n=e.R32F,o=e.R16F,s=e.RGBA16F,i=e.RGBA32F,a=e.RED,u=4,c=1,p=e.HALF_FLOAT,m=e.FLOAT,l=e.RGBA8):(n=r.RGBA,o=r.RGBA,s=r.RGBA,i=e.RGBA,a=r.RGBA,u=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,m=r.FLOAT,l=r.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:m}}function he(r,t){let e=t();return z().getBool("DEBUG")&&hJ(r),e}function hJ(r){let t=r.getError();if(t!==r.NO_ERROR)throw new Error("WebGL Error: "+yJ(r,t))}var gJ=596e-10,xJ=65504;function qE(r){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||r===0||gJ<Math.abs(r)&&Math.abs(r)<xJ)}function yJ(r,t){switch(t){case r.NO_ERROR:return"NO_ERROR";case r.INVALID_ENUM:return"INVALID_ENUM";case r.INVALID_VALUE:return"INVALID_VALUE";case r.INVALID_OPERATION:return"INVALID_OPERATION";case r.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case r.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case r.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function o2(r,t){return Gi(r,()=>r.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function HE(r,t){let e=Gi(r,()=>r.createShader(r.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(he(r,()=>r.shaderSource(e,t)),he(r,()=>r.compileShader(e)),r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw console.log(r.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function KE(r,t){let e=Gi(r,()=>r.createShader(r.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(he(r,()=>r.shaderSource(e,t)),he(r,()=>r.compileShader(e)),z().get("ENGINE_COMPILE_ONLY"))return e;if(r.getShaderParameter(e,r.COMPILE_STATUS)===!1)throw n8(t,r.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}var bJ=/ERROR: [0-9]+:([0-9]+):/g;function n8(r,t){let e=bJ.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(r);return}let n=+e[1],o=r.split(`
`),s=o.length.toString().length+2,i=o.map((p,m)=>b.rightPad((m+1).toString(),s)+p),a=0;for(let p=0;p<i.length;p++)a=Math.max(i[p].length,a);let l=i.slice(0,n-1),u=i.slice(n-1,n),c=i.slice(n);console.log(l.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${b.rightPad(u[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function jE(r){return Gi(r,()=>r.createProgram(),"Unable to create WebGLProgram.")}function XE(r,t){if(he(r,()=>r.linkProgram(t)),!z().get("ENGINE_COMPILE_ONLY")&&r.getProgramParameter(t,r.LINK_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function yd(r,t){if(he(r,()=>r.validateProgram(t)),r.getProgramParameter(t,r.VALIDATE_STATUS)===!1)throw console.log(r.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function YE(r,t){let e=Gi(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return he(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),he(r,()=>r.bufferData(r.ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function ZE(r,t){let e=Gi(r,()=>r.createBuffer(),"Unable to create WebGLBuffer");return he(r,()=>r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e)),he(r,()=>r.bufferData(r.ELEMENT_ARRAY_BUFFER,t,r.STATIC_DRAW)),e}function JE(r){return Gi(r,()=>r.createTexture(),"Unable to create WebGLTexture.")}function QE(r,t){let e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(r<=0||t<=0){let n=`[${r}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(r>e||t>e){let n=`[${r}x${t}]`,o=`[${e}x${e}]`;throw new Error("Requested texture size "+n+" greater than WebGL maximum on this browser / GPU "+o+".")}}function e_(r){return Gi(r,()=>r.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function o8(r,t,e,n,o,s,i){let a=r.getAttribLocation(t,e);return a===-1?!1:(he(r,()=>r.bindBuffer(r.ARRAY_BUFFER,n)),he(r,()=>r.vertexAttribPointer(a,o,r.FLOAT,!1,s,i)),he(r,()=>r.enableVertexAttribArray(a)),!0)}function vJ(r,t,e){TJ(r,e),he(r,()=>r.activeTexture(r.TEXTURE0+e)),he(r,()=>r.bindTexture(r.TEXTURE_2D,t))}function t_(r,t,e){return Gi(r,()=>r.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function r_(r,t,e){return r.getUniformLocation(t,e)}function n_(r,t,e,n){he(r,()=>vJ(r,t,n)),he(r,()=>r.uniform1i(e,n))}function bd(r,t,e){he(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),he(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0))}function s8(r,t){he(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),he(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function s2(r){let t=r.checkFramebufferStatus(r.FRAMEBUFFER);if(t!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+wJ(r,t))}function wJ(r,t){switch(t){case r.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case r.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case r.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Gi(r,t,e){let n=he(r,()=>t());if(n==null)throw new Error(e);return n}function TJ(r,t){let e=r.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,n=t+r.TEXTURE0;if(n<r.TEXTURE0||n>e){let o=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${o}.`)}}function D0(r,t=2){return b.sizeFromShape(r.slice(0,r.length-t))}function R0(r){if(r.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function i2(r){let t=[1,1,1];return r.length===0||r.length===1&&r[0]===1||(t=[D0(r),...R0(r)]),t}function o_(r,t=!1){let e=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),n=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");n===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(n=e/2),t&&(e=e*2,n=n*2,r=r.map((a,l)=>l>=r.length-2?b.nearestLargerEven(r[l]):r[l]),r.length===1&&(r=[2,r[0]])),r.length!==2&&(r=b.squeezeShape(r).newShape);let o=b.sizeFromShape(r),s=null;r.length<=1&&o<=e?s=[1,o]:r.length===2&&r[0]<=e&&r[1]<=e?s=r:r.length===3&&r[0]*r[1]<=e&&r[2]<=e?s=[r[0]*r[1],r[2]]:r.length===3&&r[0]<=e&&r[1]*r[2]<=e?s=[r[0],r[1]*r[2]]:r.length===4&&r[0]*r[1]*r[2]<=e&&r[3]<=e?s=[r[0]*r[1]*r[2],r[3]]:r.length===4&&r[0]<=e&&r[1]*r[2]*r[3]<=e&&(s=[r[0],r[1]*r[2]*r[3]]);let i=s!=null&&Math.max(...s)>n&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let a=D0(r),l=2,u=2;r.length&&([l,u]=R0(r)),o=a*(l/2)*(u/2),s=b.sizeToSquarishShape(o).map(c=>c*2)}else s=b.sizeToSquarishShape(o);return s}function xd(r){return r%2===0}function ql(r,t){if(r=r.slice(-2),t=t.slice(-2),b.arraysEqual(r,t)||!r.length||!t.length||r[0]===0||r[1]===0||t[0]===0||t[1]===0)return!0;if(r.length!==t.length){let e=r[r.length-1],n=t[t.length-1];if(e===n||xd(e)&&xd(n)&&(r[0]===1||t[0]===1))return!0}return r[1]===t[1]&&xd(r[0])&&xd(t[0])}var e8,t8;function s_(r){if(e8==null){let t=Pn(r);e8=t.getParameter(t.MAX_TEXTURE_SIZE)}return e8}function i_(r){if(t8==null){let t=Pn(r);t8=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,t8)}function a_(r){if(r===0)return 0;let t,e=Pn(r);return Jn(e,"EXT_disjoint_timer_query_webgl2")&&r===2?t=2:Jn(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function Jn(r,t){return r.getExtension(t)!=null}function i8(r){try{if(Pn(r)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function l_(r){if(r===0)return!1;let t=Pn(r);if(r===1){if(!Jn(t,"OES_texture_float"))return!1}else if(!Jn(t,"EXT_color_buffer_float"))return!1;return r8(t)}function c_(r){if(r===0)return!1;let t=Pn(r);if(r===1){if(!Jn(t,"OES_texture_float")||!Jn(t,"WEBGL_color_buffer_float"))return!1}else{if(Jn(t,"EXT_color_buffer_float"))return r8(t);let n="EXT_color_buffer_half_float";if(Jn(t,n)){let o=t.getExtension(n);return CJ(t,o)}return!1}return r8(t)}function r8(r){let t=n2(r),e=r.createTexture();r.bindTexture(r.TEXTURE_2D,e),r.texImage2D(r.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0);let i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(e),r.deleteFramebuffer(s),i}function CJ(r,t){let e=n2(r,t),n=r.createTexture();r.bindTexture(r.TEXTURE_2D,n),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);let i=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,i),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,n,0);let a=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(n),r.deleteFramebuffer(i),a}function u_(r){return r!==2?!1:Pn(r).fenceSync!=null}function ws(r,t){Array.isArray(r)||(r=[r]),r.forEach(e=>{e!=null&&b.assert(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Te=z();Te.registerFlag("HAS_WEBGL",()=>Te.getNumber("WEBGL_VERSION")>0);Te.registerFlag("WEBGL_VERSION",()=>i8(2)?2:i8(1)?1:0);Te.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Te.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Te.get("WEBGL_VERSION")===2);Te.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Te.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Te.registerFlag("WEBGL_PACK",()=>Te.getBool("HAS_WEBGL"));Te.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_CLIP",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_REDUCE",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_LAZILY_UNPACK",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_CONV_IM2COL",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Te.getBool("WEBGL_PACK"));Te.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>s_(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>i_(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let r=Te.getNumber("WEBGL_VERSION");return r===0?0:a_(r)});Te.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Te.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!n0.isMobile());Te.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>l_(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Te.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Te.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Te.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>c_(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_FENCE_API_ENABLED",()=>u_(Te.getNumber("WEBGL_VERSION")));Te.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Te.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Te.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)});Te.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>n0.isMobile()?1:-1,r=>{if(typeof r!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${r}.`);if(r<0&&r!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)});Te.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Te.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Te.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Te.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Te.registerFlag("WEBGL_EXP_CONV",()=>!1);Te.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Te.getBool("IS_TEST"));Te.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Te.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Te.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Te.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function Ot(){let r,t,e,n,o,s,i,a,l,u;return z().getNumber("WEBGL_VERSION")===2?(r="#version 300 es",t="in",e="out",n="in",o="texture",s="outputColor",i="out vec4 outputColor;",a=z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(r="",t="attribute",e="varying",n="varying",o="texture2D",s="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:r,attribute:t,varyingVs:e,varyingFs:n,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:l,defineRound:u}}function Wo(r,t,e="index"){let n=b.computeStrides(t);return n.map((o,s)=>{let i=`int ${r[s]} = ${e} / ${o}`,a=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * ${o}`:`index -= ${r[s]} * ${o}`;return`${i}; ${a};`}).join("")}function Hl(r,t,e="index"){let n=b.computeStrides(t);return n.map((o,s)=>{let i=`int ${r[s]} = ${e} / outShapeStrides[${s}]`,a=s===n.length-1?`int ${r[s+1]} = ${e} - ${r[s]} * outShapeStrides[${s}]`:`index -= ${r[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`}).join("")}function SJ(r,t){let e=r.length,n=r.map(s=>`${t}[${s}]`),o=new Array(e-1);o[e-2]=n[e-1];for(let s=e-3;s>=0;--s)o[s]=`(${o[s+1]} * ${n[s+1]})`;return o}function p_(r,t,e="index"){let n=r.map((s,i)=>i),o=SJ(n,t);return o.map((s,i)=>{let a=`int ${r[i]} = ${e} / ${o[i]}`,l=i===o.length-1?`int ${r[i+1]} = ${e} - ${r[i]} * ${o[i]}`:`index -= ${r[i]} * ${o[i]}`;return`${a}; ${l};`}).join("")}function Eu(r){let t=b.computeStrides(r).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function _u(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var wd=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;var{getBroadcastDims:m_}=N;function f_(r,t,e){let n=[];if(r.forEach(f=>{let d=b.sizeFromShape(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?n.push(`uniform float ${f.name}${d>1?`[${d}]`:""};`):(n.push(`uniform sampler2D ${f.name};`),n.push(`uniform int offset${f.name};`)),e.enableShapeUniforms){let{uniformShape:g}=Td(e.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(g.length){case 1:n.push(`uniform int ${f.name}Shape;`);break;case 2:n.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:n.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:n.push(`uniform ivec4 ${f.name}Shape;`);break;default:break}n.push(`uniform ivec2 ${f.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:n.push("uniform int outShape;");break;case 2:n.push("uniform ivec2 outShape;"),n.push("uniform int outShapeStrides;");break;case 3:n.push("uniform ivec3 outShape;"),n.push("uniform ivec2 outShapeStrides;");break;case 4:n.push("uniform ivec4 outShape;"),n.push("uniform ivec3 outShapeStrides;");break;default:break}n.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(f=>{n.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});let o=n.join(`
`),s=r.map(f=>IJ(f,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,a=Ot(),l=AJ(a),u,c,p=DJ(a);return t.isPacked?(u=NJ(t.logicalShape,i,e.enableShapeUniforms),c=_J(a)):(u=kJ(t.logicalShape,i,e.enableShapeUniforms),c=EJ(a)),e.packedInputs&&(p+=OJ),[p,l,c,o,u,s,e.userCode].join(`
`)}function Ru(r,t=!1){let e=r.shapeInfo.logicalShape;switch(e.length){case 0:return KJ(r,t);case 1:return XJ(r,t);case 2:return ZJ(r,t);case 3:return QJ(r,t);case 4:return tQ(r,t);case 5:return rQ(r);case 6:return nQ(r);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function d_(r,t){switch(r.shapeInfo.logicalShape.length){case 0:return HJ(r);case 1:return jJ(r,t);case 2:return YJ(r,t);case 3:return JJ(r,t);default:return eQ(r,t)}}function IJ(r,t,e=!1,n){let o="";e?o+=d_(r,n):o+=Ru(r,n);let s=r.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(e?o+=oQ(r,t):o+=sQ(r,t)),o}function NJ(r,t,e){switch(r.length){case 0:return h_();case 1:return MJ(r,t,e);case 2:return WJ(r,t,e);case 3:return LJ(r,t,e);default:return BJ(r,t,e)}}function kJ(r,t,e){switch(r.length){case 0:return h_();case 1:return PJ(r,t,e);case 2:return qJ(r,t,e);case 3:return zJ(r,t,e);case 4:return GJ(r,t,e);case 5:return VJ(r,t);case 6:return UJ(r,t);default:throw new Error(`${r.length}-D output sampling is not yet supported`)}}function AJ(r){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${r.texture2D}(textureSampler, uv).r;
    }
  `}function EJ(r){return`
    void setOutput(float val) {
      ${r.output} = vec4(val, 0, 0, 0);
    }
  `}function _J(r){return`
    void setOutput(vec4 val) {
      ${r.output} = val;
    }
  `}function DJ(r){return`${r.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${r.varyingFs} vec2 resultUV;
    ${r.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${r.defineSpecialNaN}
    ${r.defineSpecialInf}
    ${r.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${RJ}
    ${$J}
    ${FJ}
  `}var RJ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,$J=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,FJ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OJ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function h_(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function MJ(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return n[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${n[1]}.0);
      }
    `:n[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${n[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);
    }
  `}function PJ(r,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function LJ(r,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[2]/2),s=o*Math.ceil(r[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function zJ(r,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Hl(["r","c","d"],r)}
    return ivec3(r, c, d);
  }
`;let n=Wo(["r","c","d"],r);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec3(r, c, d);
    }
  `}function BJ(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],o=Math.ceil(r[r.length-1]/2),s=o*Math.ceil(r[r.length-2]/2),i=s,a="",l="b, r, c";for(let u=2;u<r.length-1;u++)i*=r[r.length-u-1],a=`
      int b${u} = index / ${i};
      index -= b${u} * ${i};
    `+a,l=`b${u}, `+l;return`
    ivec${r.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));
      int index = resTexRC.x * ${n[1]} + resTexRC.y;

      ${a}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${r.length}(${l});
    }
  `}function GJ(r,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Hl(["r","c","d","d2"],r)}
      return ivec4(r, c, d, d2);
    }
  `;let n=Wo(["r","c","d","d2"],r);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${n}
      return ivec4(r, c, d, d2);
    }
  `}function VJ(r,t){let e=Wo(["r","c","d","d2","d3"],r);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function UJ(r,t){let e=Wo(["r","c","d","d2","d3","d4"],r);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function WJ(r,t,e){let n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(b.arraysEqual(r,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));
      }
    `;let o=Math.ceil(r[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${n[0]}, ${n[1]}));

      int index = resTexRC.x * ${n[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function qJ(r,t,e){return b.arraysEqual(r,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:r[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:r[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${r[1]};
      int c = index - r * ${r[1]};
      return ivec2(r, c);
    }
  `}function Kl(r){return`offset${r}`}function HJ(r){let t=r.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),n=Ot();return`
    vec4 ${e}() {
      return ${n.texture2D}(${t}, halfCR);
    }
  `}function KJ(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;let[o,s]=r.shapeInfo.texShape;if(o===1&&s===1)return`
      float ${n}() {
        return sampleTexture(${e}, halfCR);
      }
    `;let i=Kl(e);if(t)return`
    float ${n}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;let[a,l]=r.shapeInfo.texShape;return`
    float ${n}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function jJ(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=r.shapeInfo.texShape,s=Ot();if(t)return`
    vec4 ${n}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${e}, uv);
    }
  `;let i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${n}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${e}, uv);
    }
  `}function XJ(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(r.shapeInfo.isUniform)return`
      float ${n}(int index) {
        ${$u(r)}
      }
    `;let o=r.shapeInfo.texShape,s=o[0],i=o[1];if(i===1&&s===1)return`
      float ${n}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;let a=Kl(e);return i===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${s}.0);
        return sampleTexture(${e}, uv);
      }
    `:s===1?t?`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${n}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${a});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${n}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${a});
      return sampleTexture(${e}, uv);
    }
  `}function YJ(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=s[0],a=s[1],l=Ot();if(s!=null&&b.arraysEqual(e,s))return t?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);

        return ${l.texture2D}(${n}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${l.texture2D}(${n}, uv);
      }
    `;if(t)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(e[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${n}, uv);
    }
  `}function ZJ(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape;if(s!=null&&b.arraysEqual(e,s)){if(t)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `;let m=s[0],f=s[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${m}.0);
      return sampleTexture(${n}, uv);
    }
  `}let{newShape:i,keptDims:a}=b.squeezeShape(e),l=i;if(l.length<e.length){let m=Fu(r,l),f=["row","col"];return`
      ${Ru(m,t)}
      float ${o}(int row, int col) {
        return ${o}(${Ou(f,a)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${$u(r)}
      }
    `;let u=s[0],c=s[1],p=Kl(n);return c===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${n}, uv);
    }
  `:u===1?t?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${n}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${n}, uv);
    }
  `:t?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${n}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
        return sampleTexture(${n}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${u}, ${c}, index);
    return sampleTexture(${n}, uv);
  }
`}function JJ(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=r.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(e[0]===1){let m=e.slice(1),f=[1,2],d=Fu(r,m),g=["b","row","col"];return`
        ${d_(d,t)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Ou(g,f)});
        }
      `}let a=Ot();if(t)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${n}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `;let l=i[0],u=i[1],c=Math.ceil(e[2]/2),p=c*Math.ceil(e[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${p}, ${c}, b, row, col);
      return ${a.texture2D}(${n}, uv);
    }
  `}function QJ(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[1]*e[2],i=e[2],{newShape:a,keptDims:l}=b.squeezeShape(e),u=a;if(u.length<e.length){let g=Fu(r,u),h=["row","col","depth"];return`
        ${Ru(g,t)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Ou(h,l)});
        }
      `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${$u(r)}
      }
    `;let c=r.shapeInfo.texShape,p=c[0],m=c[1],f=r.shapeInfo.flatOffset;if(m===s&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${n}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${n}, uv);
        }
      `;if(m===i&&f==null)return t?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${n}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${n}, uv);
    }
  `;let d=Kl(n);return t?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${n}Shape[1] * ${n}Shape[2];
      int stride1 = ${n}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${d};
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index);
      return sampleTexture(${n}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${d};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${n}, uv);
      }
  `}function eQ(r,t){let e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=Ot();if(t)return`
    vec4 ${n}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${e}, uv);
    }
  `;let s=r.shapeInfo.logicalShape,i=s.length,a=r.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],u=l[0],c=l[1],p=Math.ceil(s[i-1]/2),m=p*Math.ceil(s[i-2]/2),f="int b, int row, int col",d=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let g=2;g<i-1;g++)f=`int b${g}, `+f,m*=s[i-g-1],d=`b${g} * ${m} + `+d;return`
    vec4 ${n}(${f}) {
      int index = ${d};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});
      return ${o.texture2D}(${e}, uv);
    }
  `}function tQ(r,t){let e=r.shapeInfo.logicalShape,n=r.name,o="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[3],i=e[2]*s,a=e[1]*i,{newShape:l,keptDims:u}=b.squeezeShape(e);if(l.length<e.length){let y=Fu(r,l),v=["row","col","depth","depth2"];return`
      ${Ru(y,t)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Ou(v,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${s}, 1)));
        ${$u(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1],d=`int stride2 = ${n}Shape[3];`,g=`int stride1 = ${n}Shape[2] * stride2;`,h=`int stride0 = ${n}Shape[1] * stride1;`;if(f===a&&c==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${d}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===s&&c==null)return t?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n}Shape[1] * ${n}Shape[2], ${n}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${n}TexShape[1], ${n}TexShape[0]);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${n}, uv);
      }
    `;let x=Kl(n);return t?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${d}
      ${g}
      ${h}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${x});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${m}, ${f}, index + ${x});
      return sampleTexture(${n}, uv);
    }
  `}function rQ(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),o=t[4],s=t[3]*o,i=t[2]*s,a=t[1]*i,{newShape:l,keptDims:u}=b.squeezeShape(t);if(l.length<t.length){let g=Fu(r,l),h=["row","col","depth","depth2","depth3"];return`
      ${Ru(g)}
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        return ${n}(${Ou(h,u)});
      }
    `}if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${s}, ${o})) +
          depth3;
        ${$u(r)}
      }
    `;let c=r.shapeInfo.flatOffset,p=r.shapeInfo.texShape,m=p[0],f=p[1];if(f===a&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(f===o&&c==null)return`
      float ${n}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;let d=Kl(e);return`
    float ${n}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${s} +
          depth2 * ${o} + depth3 + ${d};
      vec2 uv = uvFromFlat(${m}, ${f}, index);
      return sampleTexture(${e}, uv);
    }
  `}function nQ(r){let t=r.shapeInfo.logicalShape,e=r.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:o,keptDims:s}=b.squeezeShape(t);if(o.length<t.length){let h=Fu(r,o),x=["row","col","depth","depth2","depth3","depth4"];return`
      ${Ru(h)}
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${n}(${Ou(x,s)});
      }
    `}let i=t[5],a=t[4]*i,l=t[3]*a,u=t[2]*l,c=t[1]*u;if(r.shapeInfo.isUniform)return`
      float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${u}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${$u(r)}
      }
    `;let p=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,f=m[0],d=m[1];if(d===c&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${d}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(d===i&&p==null)return`
      float ${n}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${d}.0, ${f}.0);
        return sampleTexture(${e}, uv);
      }
    `;let g=Kl(e);return`
    float ${n}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${u} + depth * ${l} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${g};
      vec2 uv = uvFromFlat(${f}, ${d}, index);
      return sampleTexture(${e}, uv);
    }
  `}function $u(r){let t=r.name,e=b.sizeFromShape(r.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function oQ(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=r.shapeInfo.logicalShape.length,i=t.logicalShape.length,a=m_(r.shapeInfo.logicalShape,t.logicalShape),l=$e(i),u=i-s,c,p=["x","y","z","w","u","v"];s===0?c="":i<2&&a.length>=1?c="coords = 0;":c=a.map(y=>`coords.${p[y+u]} = 0;`).join(`
`);let m="";i<2&&s>0?m="coords":m=r.shapeInfo.logicalShape.map((y,v)=>`coords.${p[v+u]}`).join(", ");let f="return outputValue;",g=b.sizeFromShape(r.shapeInfo.logicalShape)===1,x=b.sizeFromShape(t.logicalShape)===1;if(s===1&&!g&&!x)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(g&&!x)i===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){let y=s-2,v=s-1;a.indexOf(y)>-1&&a.indexOf(v)>-1?f="return vec4(outputValue.x);":a.indexOf(y)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${l} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${n}(${m});
      ${f}
    }
  `}function sQ(r,t){let e=r.name,n=e.charAt(0).toUpperCase()+e.slice(1),o="get"+n+"AtOutCoords",s=t.texShape,i=r.shapeInfo.texShape,a=r.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!r.shapeInfo.isUniform&&a===l&&r.shapeInfo.flatOffset==null&&b.arraysEqual(i,s))return`
      float ${o}() {
        return sampleTexture(${e}, resultUV);
      }
    `;let u=$e(l),c=m_(r.shapeInfo.logicalShape,t.logicalShape),p=l-a,m,f=["x","y","z","w","u","v"];a===0?m="":l<2&&c.length>=1?m="coords = 0;":m=c.map(g=>`coords.${f[g+p]} = 0;`).join(`
`);let d="";return l<2&&a>0?d="coords":d=r.shapeInfo.logicalShape.map((g,h)=>`coords.${f[h+p]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${m}
      return get${n}(${d});
    }
  `}function $e(r){if(r<=1)return"int";if(r===2)return"ivec2";if(r===3)return"ivec3";if(r===4)return"ivec4";if(r===5)return"ivec5";if(r===6)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Td(r,t,e){let{newShape:n,keptDims:o}=b.squeezeShape(t),s=t.length,i=r&&s===3&&t[0]===1,a=i?t.slice(1):n,l=!r&&s>1&&!b.arraysEqual(t,e)&&n.length<s||i;return{useSqueezeShape:l,uniformShape:l?a:t,keptDims:o}}function Fu(r,t){let e=JSON.parse(JSON.stringify(r));return e.shapeInfo.logicalShape=t,e}function Ou(r,t){return t.map(e=>r[e]).join(", ")}function x_(r,t,e,n){let o=e.map((c,p)=>{let m={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(m.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),s=o.map(c=>c.shapeInfo),i={logicalShape:n.shape,texShape:n.texData.texShape,isUniform:!1,isPacked:n.texData.isPacked,flatOffset:null},a=f_(o,i,t),l=KE(r.gl,a),u=r.createProgram(l);return z().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(r.buildVao(u),Object.assign({program:t,fragmentShader:l,source:a,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},a8(r,t,u)))}function a8(r,t,e){let n=[],o=[],s,i,a,l=null,u=null;u=r.getUniformLocation(e,"NAN",!1),z().getNumber("WEBGL_VERSION")===1&&(l=r.getUniformLocation(e,"INFINITY",!1));let c=!1;for(let p of t.variableNames){let m={name:p,uniform:r.getUniformLocation(e,p,c),offset:r.getUniformLocation(e,`offset${p}`,c)};t.enableShapeUniforms&&(m.shape=r.getUniformLocation(e,`${p}Shape`,c),m.texShape=r.getUniformLocation(e,`${p}TexShape`,c)),n.push(m)}if(t.enableShapeUniforms&&(s=r.getUniformLocation(e,"outShape",c),a=r.getUniformLocation(e,"outShapeStrides",c),i=r.getUniformLocation(e,"outTexShape",c)),t.customUniforms)for(let p of t.customUniforms)o.push(r.getUniformLocation(e,p.name,c));return{variablesLocations:n,customUniformLocations:o,infLoc:l,nanLoc:u,outShapeLocation:s,outShapeStridesLocation:a,outTexShapeLocation:i}}function g_(r,t){if(r.length!==t.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${t.length} inputs`);r.forEach((e,n)=>{let o=e.logicalShape,s=t[n],i=s.shape;if(!b.arraysEqual(o,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${i} must match`);if(e.isUniform&&s.isUniform)return;let a=e.texShape,l=s.isUniform?null:s.texData.texShape;if(!b.arraysEqual(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function y_(r,t,e,n,o){t.program.enableShapeUniforms||(g_(t.inShapeInfos,e),g_([t.outShapeInfo],[n]));let s=n.texData.texture,i=n.texData.texShape;n.texData.isPacked?r.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):r.setOutputMatrixTexture(s.texture,i[0],i[1]),r.setProgram(t.webGLProgram),r.bindVertexArray(t.webGLProgram.vao),z().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&r.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&r.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<e.length;++l){let u=e[l],{uniform:c,offset:p,shape:m,texShape:f}=t.variablesLocations[l];if(m){let{uniformShape:d}=Td(t.program.packedInputs,u.shape,u.texData.texShape);switch(d.length){case 1:r.gl.uniform1iv(m,new Int32Array(d));break;case 2:r.gl.uniform2iv(m,new Int32Array(d));break;case 3:r.gl.uniform3iv(m,new Int32Array(d));break;case 4:r.gl.uniform4iv(m,new Int32Array(d));break;default:break}}if(f&&r.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),c!=null){if(u.isUniform){if(b.sizeFromShape(u.shape)<2)r.gl.uniform1f(c,u.uniformValues[0]);else{let d=u.uniformValues;d instanceof Float32Array||(d=new Float32Array(d)),r.gl.uniform1fv(c,d)}continue}u.texData.slice!=null&&p!=null&&r.gl.uniform1i(p,u.texData.slice.flatOffset),r.setInputMatrixTexture(u.texData.texture.texture,c,l)}}let a=t.outShapeLocation;if(a)switch(n.shape.length){case 1:r.gl.uniform1iv(a,new Int32Array(n.shape));break;case 2:r.gl.uniform2iv(a,new Int32Array(n.shape));break;case 3:r.gl.uniform3iv(a,new Int32Array(n.shape));break;case 4:r.gl.uniform4iv(a,new Int32Array(n.shape));break;default:break}if(t.outShapeStridesLocation){let l=b.computeStrides(n.shape);switch(n.shape.length){case 2:r.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(l));break;case 3:r.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(l));break;case 4:r.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(l));break;default:break}}if(t.outTexShapeLocation&&r.gl.uniform2i(t.outTexShapeLocation,n.texData.texShape[0],n.texData.texShape[1]),t.program.customUniforms&&o)for(let l=0;l<t.program.customUniforms.length;++l){let u=t.program.customUniforms[l],c=t.customUniformLocations[l],p=o[l];if(u.type==="float")r.gl.uniform1fv(c,p);else if(u.type==="vec2")r.gl.uniform2fv(c,p);else if(u.type==="vec3")r.gl.uniform3fv(c,p);else if(u.type==="vec4")r.gl.uniform4fv(c,p);else if(u.type==="int")r.gl.uniform1iv(c,p);else if(u.type==="ivec2")r.gl.uniform2iv(c,p);else if(u.type==="ivec3")r.gl.uniform3iv(c,p);else if(u.type==="ivec4")r.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}r.executeProgram()}function b_(r,t,e){let n="";t.concat(e).forEach(i=>{let a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(r.enableShapeUniforms&&!i.isUniform){let l=i.texData.texShape,{useSqueezeShape:u,uniformShape:c,keptDims:p}=Td(r.packedInputs,i.shape,l),m="",f="",d="";if(c.length===1&&r.packedInputs){let I=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];m=`${I[0]>1}_${I[1]>1}`}else if(c.length===2&&!r.packedInputs)f=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!r.packedInputs){let I=b.computeStrides(c);d=`${I[0]===l[1]}_${I[I.length-1]===l[1]}`}let g=i.shape.length,h=c.length===2&&b.arraysEqual(i.shape,l),x=b.sizeFromShape(i.shape)===1,y=N.getBroadcastDims(i.shape,e.shape),v=!r.packedInputs&&g===e.shape.length&&b.arraysEqual(l,e.texData.texShape),w=r.packedInputs||c.length>2?"":`${l[0]>1}_${l[1]>1}`;n+=`${g}_${v}_${u?p:""}_${c.length}_${x}_${y}_${h}_${m}_${f}_${d}_${w}_${a}`}else{let l=i.isUniform?"uniform":i.texData.texShape;n+=`${i.shape}_${l}_${a}`}});let o=r.userCode,s=r.constructor.name;return s+="_"+n+"_"+o+`${z().getNumber("WEBGL_VERSION")}`,s}function it(r){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}var Cd=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ul.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Ot();this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hl(["r","c","d"],t):Wo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}};var Sd=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ul.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let e=Ot();this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Hl(["r","c","d"],t):Wo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}};var Id=class{constructor(t){this.variableNames=["A"],this.outTexUsage=jr.DOWNLOAD;let e=Ot();this.outputShape=t,this.userCode=`
      ${wd}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}};var Nd=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=jr.DOWNLOAD;let e=Ot();this.outputShape=t,this.userCode=`
      ${wd}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}};var lQ={R:0,G:1,B:2,A:3},a2=class{constructor(t,e=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let o=Ot();this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){let l=n[a];i+=`
          if(offset == ${a}) {
            result = values[${lQ[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?_u():Eu(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${i}
        }
        ${o.output} = vec4(${s}, 0., 0., 0.);
      }
    `}};var kd=class{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Ot();this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length);let o="",s="result";e&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){let l=i*2+a;o+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?_u():Eu(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${n.output} = ${s};
        }
    `}};function v_(r){let t=Ot(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return HE(r,e)}function w_(r){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return YE(r,t)}function T_(r){let t=new Uint16Array([0,1,2,2,1,3]);return ZE(r,t)}function l2(r,t,e,n,o,s){QE(t,e);let i=JE(r),a=r.TEXTURE_2D;return he(r,()=>r.bindTexture(a,i)),he(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),he(r,()=>r.texParameteri(a,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),he(r,()=>r.texParameteri(a,r.TEXTURE_MIN_FILTER,r.NEAREST)),he(r,()=>r.texParameteri(a,r.TEXTURE_MAG_FILTER,r.NEAREST)),z().getNumber("WEBGL_VERSION")===1?he(r,()=>r.texImage2D(a,0,n,t,e,0,o,s,null)):he(r,()=>r.texStorage2D(a,1,n,t,e)),he(r,()=>r.bindTexture(r.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function l8(r){return r.internalFormatFloat}function C_(r,t,e,n){let[o,s]=Wl(t,e);return l2(r,o,s,l8(n),n.textureFormatFloat,r.FLOAT)}function c8(r){return r.internalFormatHalfFloat}function S_(r,t,e,n){let[o,s]=Wl(t,e);return l2(r,o,s,c8(n),n.textureFormatFloat,n.textureTypeHalfFloat)}function u8(r){return r.downloadTextureFormat}function I_(r,t,e,n){let[o,s]=Wl(t,e);return l2(r,o,s,u8(n),r.RGBA,r.UNSIGNED_BYTE)}function p8(r){return r.internalFormatPackedFloat}function N_(r,t,e,n){let[o,s]=vs(t,e);return l2(r,o,s,p8(n),r.RGBA,r.FLOAT)}function m8(r){return r.internalFormatPackedHalfFloat}function k_(r,t,e,n){let[o,s]=vs(t,e);return l2(r,o,s,m8(n),r.RGBA,n.textureTypeHalfFloat)}function A_(r,t,e){return he(r,()=>r.bindBuffer(r.ARRAY_BUFFER,e)),o8(r,t,"clipSpacePos",e,3,20,0)&&o8(r,t,"uv",e,2,20,12)}function E_(r,t,e,n,o,s){he(r,()=>r.bindTexture(r.TEXTURE_2D,t));let i,a,l;o instanceof Uint8Array?(i=new Uint8Array(e*n*4),a=r.UNSIGNED_BYTE,l=r.RGBA):(i=new Float32Array(e*n*4),a=r.FLOAT,l=s.internalFormatPackedFloat),i.set(o),z().getNumber("WEBGL_VERSION")===2?he(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e,n,r.RGBA,a,i)):he(r,()=>r.texImage2D(r.TEXTURE_2D,0,l,e,n,0,r.RGBA,a,i)),he(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function __(r,t,e){he(r,()=>r.bindTexture(r.TEXTURE_2D,t)),e.data instanceof Uint8Array?z().getNumber("WEBGL_VERSION")===2?he(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,e.width,e.height,r.RGBA,r.UNSIGNED_BYTE,e.data)):he(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e.width,e.height,0,r.RGBA,r.UNSIGNED_BYTE,e.data)):z().getNumber("WEBGL_VERSION")===2?he(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,e)):he(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e)),he(r,()=>r.bindTexture(r.TEXTURE_2D,null))}function D_(r,t,e,n){let o=r.createBuffer();he(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,o));let a=4*4*t*e;return he(r,()=>r.bufferData(r.PIXEL_PACK_BUFFER,a,r.STREAM_READ)),he(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,0)),he(r,()=>r.bindBuffer(r.PIXEL_PACK_BUFFER,null)),o}function R_(r,t,e){let n=r,o=new Float32Array(e);return n.bindBuffer(n.PIXEL_PACK_BUFFER,t),n.getBufferSubData(n.PIXEL_PACK_BUFFER,0,o),n.bindBuffer(n.PIXEL_PACK_BUFFER,null),o}function $_(r,t,e,n){let[o,s]=Wl(t,e),i=4,a=new Uint8Array(UE(t*e,i));return he(r,()=>r.readPixels(0,0,o,s,n.downloadTextureFormat,r.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function F_(r,t,e,n,o,s,i,a){let l=r,u=new Float32Array(WE(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function O_(r,t,e){let n=new Float32Array(t*e*4);return he(r,()=>r.readPixels(0,0,e,t,r.RGBA,r.FLOAT,n)),n}var Mu=class{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let e=z().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,VE(e,t)):this.gl=Pn(e),t=this.gl,z().getNumber("WEBGL_VERSION")===2){let s=t;this.createVertexArray=()=>he(s,()=>s.createVertexArray()),this.bindVertexArray=i=>he(s,()=>s.bindVertexArray(i)),this.deleteVertexArray=i=>he(s,()=>s.deleteVertexArray(i)),this.getVertexArray=()=>he(s,()=>s.getParameter(s.VERTEX_ARRAY_BINDING))}else if(t!=null){let s=t.getExtension("OES_vertex_array_object");if(s==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>he(t,()=>s.createVertexArrayOES()),this.bindVertexArray=i=>he(t,()=>s.bindVertexArrayOES(i)),this.deleteVertexArray=i=>he(t,()=>s.deleteVertexArrayOES(i)),this.getVertexArray=()=>he(t,()=>t.getParameter(s.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),z().getNumber("WEBGL_VERSION")===1){let s="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=o2(this.gl,s),Jn(this.gl,i))this.textureHalfFloatExtension=o2(this.gl,i);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Jn(this.gl,o))this.colorBufferHalfFloatExtension=o2(this.gl,o);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Jn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Jn(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=w_(this.gl),this.indexBuffer=T_(this.gl),this.framebuffer=e_(this.gl),this.textureConfig=n2(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let t=this.gl;he(t,()=>t.finish()),he(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),he(t,()=>t.deleteFramebuffer(this.framebuffer)),he(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),he(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),he(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),C_(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),S_(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),I_(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),__(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,o){this.throwIfDisposed(),E_(this.gl,t,e,n,o,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),k_(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),N_(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(s8(this.gl,this.framebuffer),this.outputTexture=null),he(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>$_(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,o,s,i){return F_(this.gl,t,e,n,o,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return R_(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);let o=D_(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){let t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(z().getBool("WEBGL_FENCE_API_ENABLED")){let o=t,s=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{let i=o.clientWaitSync(s,0,0);return i===o.ALREADY_SIGNALED||i===o.CONDITION_SATISFIED},e=s}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>O_(this.gl,e,n))}createProgram(t){this.throwIfDisposed();let e=this.gl;this.vertexShader==null&&(this.vertexShader=v_(e));let n=jE(e);he(e,()=>e.attachShader(n,this.vertexShader)),he(e,()=>e.attachShader(n,t)),XE(e,n);let o=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&yd(e,o),o}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);let e=this.gl;he(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),A_(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(he(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&yd(this.gl,this.program),he(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?t_(this.gl,t,e):r_(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),he(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),n_(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();let[o,s]=vs(e,n);this.setOutputMatrixTextureDriver(t,o,s)}setOutputMatrixWriteRegion(t,e,n,o){this.setOutputMatrixWriteRegionDriver(n,t,o,e)}setOutputPackedMatrixWriteRegion(t,e,n,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&yd(this.gl,this.program),s2(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let t=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}he(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),he(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=o2(this.gl,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.createQuery();return n.beginQuery(o.TIME_ELAPSED_EXT,s),s}let t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT);return}let t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}waitForQueryAndGetTime(t){return O(this,null,function*(){return yield b.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))})}getQueryTime(t,e){if(e===0)return null;if(e===2){let n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(t,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){let n=this.gl,o=this.getQueryTimerExtensionWebGL2(),s=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),s&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),o=n.getQueryObjectEXT(t,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){let t=uQ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){let{resolveFn:n}=this.itemsToPoll[e];n()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in z().platform&&(n=z().platform.setTimeoutCustom.bind(z().platform)),b.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),bd(this.gl,t,this.framebuffer),this.debug&&s2(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(bd(this.gl,this.outputTexture,this.framebuffer),this.debug&&s2(this.gl)):s8(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);let n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();let o=this.gl;bd(o,t,this.framebuffer),this.debug&&s2(o),this.outputTexture=t,he(o,()=>o.viewport(0,0,e,n)),he(o,()=>o.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,o){this.throwIfDisposed(),he(this.gl,()=>this.gl.scissor(t,e,n,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function uQ(r){let t=0;for(;t<r.length&&r[t]();++t);return t-1}var{addImpl:M_,bincountImpl:Ad,bincountReduceImpl:P_,bitwiseAndImpl:L_,castImpl:z_,ceilImpl:B_,concatImpl:G_,equalImpl:V_,expImpl:U_,expm1Impl:W_,floorImpl:q_,gatherNdImpl:H_,gatherV2Impl:K_,greaterImpl:j_,greaterEqualImpl:X_,lessImpl:Y_,lessEqualImpl:Z_,linSpaceImpl:J_,logImpl:Q_,maxImpl:eD,maximumImpl:tD,minimumImpl:rD,multiplyImpl:nD,negImpl:oD,notEqualImpl:sD,prodImpl:iD,raggedGatherImpl:aD,raggedRangeImpl:lD,raggedTensorToTensorImpl:cD,rangeImpl:uD,rsqrtImpl:pD,scatterImpl:mD,sigmoidImpl:fD,simpleAbsImpl:Ed,sliceImpl:dD,sparseFillEmptyRowsImpl:hD,sparseReshapeImpl:gD,sparseSegmentReductionImpl:_d,sqrtImpl:xD,staticRegexReplaceImpl:yD,stridedSliceImpl:bD,stringNGramsImpl:vD,stringSplitImpl:wD,stringToHashBucketFastImpl:TD,subImpl:CD,tileImpl:SD,topKImpl:ID,transposeImpl:jl,uniqueImpl:ND}=B7;function f8(r,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${r}.${e}`)}function Kt(r,t){return t===1?[r]:f8(r,t)}function kD(r,t){if(r===1)return"rc";let e="";for(let n=0;n<r;n++)e+=t[n],n<r-1&&(e+=",");return e}var Dd=class{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=it(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let e=Kt("rc",this.rank),n=$e(this.rank),o=this.getOutOfBoundsCondition(e),s=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${s}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){let e=[];for(let n=0;n<=1;n++)for(let o=0;o<=1;o++){let s=`${n===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)s=`${t[t.length-1-i]},`+s;e.push(s)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let n=this.rank-2;n<this.rank;n++)e+=`${t[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";let e=t.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${o};
    `}getOutput(t){let e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}};var Pu=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length);let n="";for(let o=0;o<4;o++){let s="thisRC = rc;";o%2===1&&(s+="thisRC.z += 1;"),o>1&&(s+="thisRC.y += 1;"),n+=`
        ${s}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${pQ(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?_u():Eu(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${n}

        setOutput(result);
      }
    `}};function pQ(r,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?p_(["r","c","d"],"inputShape"):Wo(["r","c","d"],r)}
      return ivec3(r, c, d);
    }
  `}var Rd=class{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,n){let o=ED(e,n),s=_D(t,o,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);let i=AD(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let l=this.freeTextures[s].pop();return this.usedTextures[s].push(l),l}let a;return o===Gr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===Gr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===Gr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===Gr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===Gr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(t,e,n,o){if(this.freeTextures==null)return;let s=ED(n,o),i=_D(e,s,o);i in this.freeTextures||(this.freeTextures[i]=[]);let a=AD(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,o),l=z().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;let u=this.usedTextures[i],c=u&&u.indexOf(t);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[c]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);let e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(let t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function mQ(r,t){let e=r;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===r.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function AD(r,t,e,n,o){let s=fQ(t,n),i;if(o){let[l,u]=vs(r[0],r[1]);i=l*u}else{let[l,u]=Wl(r[0],r[1]);i=l*u}let a=mQ(e,s);return i*a}function fQ(r,t){switch(r){case Gr.PACKED_2X2_FLOAT32:return p8(t);case Gr.PACKED_2X2_FLOAT16:return m8(t);case Gr.UNPACKED_FLOAT32:return l8(t);case Gr.UNPACKED_FLOAT16:return c8(t);case Gr.PACKED_4X1_UNSIGNED_BYTE:return u8(t);default:throw new Error(`Unknown physical texture type ${r}`)}}function dQ(r){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?r?Gr.PACKED_2X2_FLOAT32:Gr.UNPACKED_FLOAT32:r?Gr.PACKED_2X2_FLOAT16:Gr.UNPACKED_FLOAT16}function ED(r,t){if(r===jr.UPLOAD)return Gr.PACKED_2X2_FLOAT32;if(r===jr.RENDER||r==null)return dQ(t);if(r===jr.DOWNLOAD||r===jr.PIXELS)return Gr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function _D(r,t,e){return`${r[0]}_${r[1]}_${t}_${e}`}var Rr=class{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},fr="if (isnan(x)) return x;",DD="return x;",d8="return abs(x);";var RD="return (x >= 0.0) ? x : (exp(x) - 1.0);",$D=fr+`
  return (x < 0.0) ? 0.0 : x;
`,FD=fr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ts="return x;",OD="return 1.0 / (1.0 + exp(-1.0 * x));";var PD="return x;",LD=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,zD=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,BD=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GD="return 1.0 / (1.0 + exp(-1.0 * x));",Tn=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}};var $d=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length);let e=t.length,n=Kt("rc",e),o=$e(e),s=kD(e,n),i=n.slice(-2),a=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${s});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}};var gQ=zr.whereImpl,xQ=1e-7,yQ=1e-4,Fd={};function bQ(r){return r in Fd||(Fd[r]={}),Fd[r]}var vQ=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),wQ=600;function TQ(){return z().global.screen==null?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*wQ/1024/1024}var VD=(()=>{class r extends As{nextDataId(){return r.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Mu)n=e;else{let o=Pn(z().getNumber("WEBGL_VERSION"),e);n=new Mu(o)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let o=Pn(z().getNumber("WEBGL_VERSION"));n=new Mu(o),this.binaryCache=bQ(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Rd(this.gpgpu),this.numMBBeforeWarning=TQ(),this.texData=new W0(this,so())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,o,s,i,a){let l=this.makeTensorInfo(n,o),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,i]},u.texShape=[s,i];let c=i2(n),p=new a2(c,!1,a),m=this.runWebGLProgram(p,[l],o,[[s,i]]);return m.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(l),m.dataId}write(e,n,o){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(e),o==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:o,values:e,usage:jr.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){let n=this.texData.get(e);n.refCount--}}move(e,n,o,s,i){if(z().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:o,dtype:s,values:n,usage:jr.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let n=this.texData.get(e),{values:o,dtype:s,complexTensorInfos:i,slice:a,shape:l,isPacked:u}=n;if(a!=null){let f;u?f=new Tn(l,Ts):f=new Rr(l,Ts);let d=this.runWebGLProgram(f,[{dataId:e,shape:l,dtype:s}],s),g=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),g}if(o!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return o;let c=this.activeTimers!=null,p;c&&(p=b.now());let m;if(s==="complex64"){let f=this.readSync(i.real.dataId),d=this.readSync(i.imag.dataId);m=N.mergeRealAndImagArrays(f,d)}else m=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=b.now()-p),this.convertAndCacheOnCPU(e,m)}read(e){return O(this,null,function*(){if(this.pendingRead.has(e)){let g=this.pendingRead.get(e);return new Promise(h=>g.push(h))}let n=this.texData.get(e),{values:o,shape:s,slice:i,dtype:a,complexTensorInfos:l,isPacked:u}=n;if(i!=null){let g;u?g=new Tn(s,Ts):g=new Rr(s,Ts);let h=this.runWebGLProgram(g,[{dataId:e,shape:s,dtype:a}],a),x=this.read(h.dataId);return this.disposeIntermediateTensorInfo(h),x}if(o!=null)return this.convertAndCacheOnCPU(e);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,p;if(a!=="complex64"&&z().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let g=this.texData.get(p.dataId);c=this.gpgpu.createBufferFromTexture(g.texture.texture,...r2(s))}this.pendingRead.set(e,[]),a!=="complex64"&&(yield this.gpgpu.createAndWaitForFence());let m;if(a==="complex64"){let g=yield Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),h=g[0],x=g[1];m=N.mergeRealAndImagArrays(h,x)}else if(c==null)m=this.getValuesFromTexture(e);else{let g=b.sizeFromShape(s);m=this.gpgpu.downloadFloat32MatrixFromBuffer(c,g)}if(p!=null&&this.disposeIntermediateTensorInfo(p),c!=null){let g=this.gpgpu.gl;he(g,()=>g.deleteBuffer(c))}let f=this.convertAndCacheOnCPU(e,m),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(g=>g(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&so().removeDataId(e,this),this.pendingDeletes--),f})}readToGPU(e,n={}){let o=this.texData.get(e),{values:s,shape:i,slice:a,dtype:l,isPacked:u,texture:c}=o;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;u?d=new Tn(i,Ts):d=new Rr(i,Ts);let g=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:l}],l),h=this.readToGPU(g,n);return this.disposeIntermediateTensorInfo(g),h}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,n.customTexShape),m=so().makeTensorFromTensorInfo(p),f=this.texData.get(p.dataId);return Object.assign({tensorRef:m},f.texture)}bufferSync(e){let n=this.readSync(e.dataId);if(e.dtype==="string")try{let o=n.map(s=>b.decodeString(s));return ye(e.shape,e.dtype,o)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return ye(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){let o=e[n];if(!qE(o))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${o} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${o} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:n,dtype:o,isPacked:s}=this.texData.get(e),i=b.sizeFromShape(n);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let f=this.decode(e),d=this.texData.get(f.dataId),g=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...r2(n)).subarray(0,i);return this.disposeIntermediateTensorInfo(f),g}let a=z().getBool("WEBGL_PACK")&&s===!0,l=a?i2(n):n,u=a?new Nd(l):new Id(l),c=this.runWebGLProgram(u,[{shape:l,dtype:o,dataId:e}],"float32"),p=this.texData.get(c.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),m}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let n=this.activeTimers,o=[],s=!1;this.programTimersStack==null?(this.programTimersStack=o,s=!0):this.activeTimers.push(o),this.activeTimers=o,e();let i=b.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=b.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,s&&(this.programTimersStack=null);let l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return O(this,null,function*(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let u=yield Promise.all(i);l.kernelMs=b.sum(u),l.getExtraProfileInfo=()=>u.map((c,p)=>({name:a[p],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:b.now(),endMs:null}}endTimer(e){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=b.now(),e)}getQueryTime(e){return O(this,null,function*(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let n=e;return n.endMs-n.startMs})}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:o}=this.texData.get(e);return o!=null&&(this.disposeData(o.real.dataId,n),this.disposeData(o.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:n,dtype:o,texShape:s,usage:i,isPacked:a,slice:l}=this.texData.get(e),u=l&&l.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,o),this.textureManager.releaseTexture(n,s,i,a)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=vQ){return z().getBool("WEBGL_CPU_FORWARD")&&e.every(o=>this.texData.get(o.dataId).texture==null&&b.sizeFromShape(o.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let n=e.dataSync();return gQ(e.shape,n)}packedUnaryOp(e,n,o){let s=new Tn(e.shape,n),i=this.compileAndRun(s,[e],o);return so().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=Ed(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,d8,e.dtype);let n=new Rr(e.shape,d8),o=this.compileAndRun(n,[e]);return so().makeTensorFromTensorInfo(o)}makeTensorInfo(e,n,o){let s;if(n==="string"&&o!=null&&o.length>0&&b.isString(o[0])){let i=o.map(a=>b.encodeString(a));s=this.write(i,e,n)}else s=this.write(o,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,o){return so().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,o),this)}unpackTensor(e){let n=new $d(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){let n=new Dd(e.shape);return this.runWebGLProgram(n,[e],e.dtype,null,!0)}packedReshape(e,n){let o=[D0(e.shape),...R0(e.shape)],s={dtype:e.dtype,shape:o,dataId:e.dataId},i=[D0(n),...R0(n)],a=new Pu(i,o),l=!0,u=[o],c=this.runWebGLProgram(a,[s],e.dtype,u,l);return{dataId:c.dataId,shape:n,dtype:c.dtype}}decode(e,n){let o=this.texData.get(e),{isPacked:s,shape:i,dtype:a}=o;if(n!=null){let f=b.sizeFromShape(i),d=n[0]*n[1]*4;b.assert(f<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let l=i2(i),u;s?u=new Sd(l):u=new Cd(l);let c=!0,p=[n??r2(l)],m=this.runWebGLProgram(u,[{shape:l,dtype:a,dataId:e}],a,p,c,n);return{dtype:a,shape:i,dataId:m.dataId}}runWebGLProgram(e,n,o,s,i=!1,a){let l=this.makeTensorInfo(e.outputShape,o),u=this.texData.get(l.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Ul.DENSE){let y=a??r2(e.outputShape);u.texShape=y.map(v=>v*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),b.sizeFromShape(l.shape)===0)return u.values=b.getTypedArrayFromDType(l.dtype,0),l;let c=[],p=n.map(y=>{if(y.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let v=this.texData.get(y.dataId);if(v.texture==null){if(!e.packedInputs&&b.sizeFromShape(y.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:v.values};e.packedInputs&&(v.isPacked=!0,v.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!v.isPacked!=!!e.packedInputs)y=v.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),v=this.texData.get(y.dataId);else if(v.isPacked&&!ql(v.shape,y.shape)){let w=y,I=y.shape;y.shape=v.shape,y=this.packedReshape(y,I),c.push(y),v=this.texData.get(y.dataId),w.shape=I}return{shape:y.shape,texData:v,isUniform:!1}});this.uploadToGPU(l.dataId);let m={shape:l.shape,texData:u,isUniform:!1},f=b_(e,p,m),d=this.getAndSaveBinary(f,()=>x_(this.gpgpu,e,p,m)),g=this.activeTimers!=null,h;g&&(h=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||y_(this.gpgpu,d,p,m,s),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),g&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));let x=z().getNumber("WEBGL_FLUSH_THRESHOLD");if(x>0){let y=b.now();y-this.lastGlFlushTime>x&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&i===!1){let y=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),y}return l}compileAndRun(e,n,o,s,i=!1){return o=o||n[0].dtype,this.runWebGLProgram(e,n,o,s,i)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=B(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=z().getBool("DEBUG");z().set("DEBUG",!1);let n=this.abs(ce(1e-8)).dataSync()[0];if(z().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?xQ:yQ}uploadToGPU(e){let n=this.texData.get(e),{shape:o,dtype:s,values:i,texture:a,usage:l,isPacked:u}=n;if(a!=null)return;let c=this.activeTimers!=null,p;c&&(p=b.now());let m=n.texShape;if(m==null&&(m=o_(o,u),n.texShape=m),i!=null){let f=i2(o),d,g=m[1],h=m[0],x=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(u||!x)&&([g,h]=vs(m[0],m[1])),u?d=new kd(f,x):d=new a2(f,x);let y=x?[h,g]:m,v=this.makeTensorInfo(y,s),w=this.texData.get(v.dataId);x?w.usage=jr.PIXELS:w.usage=jr.UPLOAD,w.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),g,h,i);let I=[[h,g]],_=this.runWebGLProgram(d,[v],s,I,!0),D=this.texData.get(_.dataId);n.texShape=D.texShape,n.isPacked=D.isPacked,n.usage=D.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(n.texture=D.texture,n.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(v),c&&(this.uploadWaitMs+=b.now()-p)}else{let f=this.acquireTexture(m,l,s,u);n.texture=f}}convertAndCacheOnCPU(e,n){let o=this.texData.get(e),{dtype:s}=o;return n!=null&&(o.values=CQ(n,s)),o.values}acquireTexture(e,n,o,s){if(this.numBytesInGPU+=this.computeBytes(e,o),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*b.bytesPerElement(n)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}checkCompileCompletionAsync(){return O(this,null,function*(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(let[,n]of Object.entries(this.binaryCache)){let o=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(i){throw i}});e.push(o)}return Promise.all(e)}})}checkCompletionAsync_(e){return O(this,null,function*(){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(yield Np(),this.checkCompletionAsync_(e))})}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(n8(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:n,customUniformLocations:o,infLoc:s,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:l,outTexShapeLocation:u}=a8(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=o,e.infLoc=s,e.nanLoc=i,e.outShapeLocation=a,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromGPUData(e,n,o){e.channels=e.channels||"RGBA";let{texture:s,height:i,width:a,channels:l}=e,u=so().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let c=u.writeTexture(s,n,o,i,a,l);return so().makeTensorFromDataId(c,n,o,u)}}return r.nextDataId=0,r})();function CQ(r,t){if(t==="float32"||t==="complex64")return r;if(t==="int32"||t==="bool"){let e=t==="int32"?new Int32Array(r.length):new Uint8Array(r.length);for(let n=0;n<e.length;++n)e[n]=Math.round(r[n]);return e}else throw new Error(`Unknown dtype ${t}`)}n0.isBrowser()&&hm("webgl",()=>new VD,2);var Lu=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;var Cn=class{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(e,n),this.enableShapeUniforms=it(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};var zn=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;var Ln=class{constructor(t,e,n,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(e,n);let s=this.outputShape.length;this.enableShapeUniforms=it(s);let i="";if(o)if(s===0||b.sizeFromShape(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${$e(s)} coords = getOutputCoords();
        `,s===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let l=Kt("coords",s);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= outShape[${s} - 2];
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= outShape[${s} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${l[s-2]} + 1) >= ${this.outputShape[s-2]};
            bool nextColOutOfBounds =
              (${l[s-1]} + 1) >= ${this.outputShape[s-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}};function jt(r){let{inputs:t,backend:e}=r,{x:n}=t;return e.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var UD={kernelName:ts,backendName:"webgl",kernelFunc:jt};function Sn(r){let{inputs:t,backend:e}=r,{real:n,imag:o}=t,s=e.makeTensorInfo(n.shape,"complex64"),i=e.texData.get(s.dataId),a=jt({inputs:{x:n},backend:e}),l=jt({inputs:{x:o},backend:e});return i.complexTensorInfos={real:a,imag:l},s}var WD={kernelName:T1,backendName:"webgl",kernelFunc:Sn};var h8="return (a < 0.) ? b * a : a;",g8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function SQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{alpha:s}=n,i=e.makeTensorInfo([],"float32",b.createScalarValue(s,"float32")),a=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ln(g8,o.shape,i.shape):new Cn(h8,o.shape,i.shape),l=e.runWebGLProgram(a,[o,i],"float32");return e.disposeIntermediateTensorInfo(i),l}var qD={kernelName:ka,backendName:"webgl",kernelFunc:SQ};var x8="return (a < 0.) ? b * a : a;",y8=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function IQ(r){let{inputs:t,backend:e}=r,{x:n,alpha:o}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ln(y8,n.shape,o.shape):new Cn(x8,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],"float32")}var HD={kernelName:Ba,backendName:"webgl",kernelFunc:IQ};var To="if (isnan(x)) return x;";function be({opSnippet:r,packedOpSnippet:t,cpuKernelImpl:e,dtype:n}){return({inputs:o,backend:s})=>{let{x:i}=o,a=s,l=n||i.dtype;if(a.shouldExecuteOnCPU([i])&&e!=null){let p=a.texData.get(i.dataId),m=e(p.values,l);return a.makeTensorInfo(i.shape,l,m)}let u=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return u?c=new Tn(i.shape,t):c=new Rr(i.shape,r),a.runWebGLProgram(c,[i],l)}}function nt({opSnippet:r,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:n=!1,cpuKernelImpl:o,dtype:s}){return({inputs:i,backend:a})=>{let{a:l,b:u}=i,c=a;if(n&&l.dtype==="complex64"){let d=c.texData.get(l.dataId),g=c.texData.get(u.dataId),[h,x]=[[d.complexTensorInfos.real,g.complexTensorInfos.real],[d.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(v=>{let[w,I]=v,E={dataId:w.dataId,dtype:w.dtype,shape:l.shape},_={dataId:I.dataId,dtype:I.dtype,shape:u.shape},D=new Cn(r,l.shape,u.shape);return c.runWebGLProgram(D,[E,_],or(w.dtype,I.dtype))}),y=Sn({inputs:{real:h,imag:x},backend:c});return c.disposeIntermediateTensorInfo(h),c.disposeIntermediateTensorInfo(x),y}let p=s||or(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||c.shouldExecuteOnCPU([l,u]))&&o!=null){let d=c.texData.get(l.dataId).values,g=c.texData.get(u.dataId).values,h=l.dtype==="string"?N.fromUint8ToStringArray(d):d,x=l.dtype==="string"?N.fromUint8ToStringArray(g):g,[y,v]=o(l.shape,u.shape,h,x,p),w=c.makeTensorInfo(v,p),I=c.texData.get(w.dataId);return I.values=y,w}let m=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,f;return m?f=new Ln(t,l.shape,u.shape,e):f=new Cn(r,l.shape,u.shape),c.runWebGLProgram(f,[l,u],p)}}function Vi(r,t=!1){if(r==="linear")return t?PD:DD;if(r==="relu")return t?zD:$D;if(r==="elu")return t?LD:RD;if(r==="relu6")return t?BD:FD;if(r==="prelu")return t?y8:x8;if(r==="leakyrelu")return t?g8:h8;if(r==="sigmoid")return t?GD:OD;throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}var zu=class{constructor(t,e,n,o=!1,s=!1,i=!1,a=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=it(this.outputShape.length);let c=o?t[1]:t[2],p=Math.ceil(c/2),m=o?"i * 2, rc.y":"rc.y, i * 2",f=s?"rc.z, i * 2":"i * 2, rc.z",d=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],h="",x="";a&&(l?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:u?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:h=`vec4 activation(vec4 x) {
          ${a}
        }`,x="result = activation(result);");let y=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let v="rc.x",w="rc.x";t[0]<e[0]?v=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(w=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${h}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${v};
        int batchB = ${w};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${d[0]} * ${g[0]});
          result += (${d[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${x}

        setOutput(result);
      }
    `}};var b8={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},c2=class{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(e,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};var KD="return a * b;";function u2(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=N.upcastType(n.dtype,o.dtype);if(n.dtype==="complex64"){let a=e.texData.get(n.dataId),l=e.texData.get(o.dataId),u=new c2(b8.REAL,n.shape,o.shape),c=new c2(b8.IMAG,n.shape,o.shape),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:n.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:n.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:o.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:o.shape}],m=e.runWebGLProgram(u,p,"float32"),f=e.runWebGLProgram(c,p,"float32"),d=Sn({inputs:{real:m,imag:f},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),d}if(e.shouldExecuteOnCPU([n,o])){let a=e.texData.get(n.dataId),l=e.texData.get(o.dataId),[u,c]=nD(n.shape,o.shape,a.values,l.values,s),p=e.makeTensorInfo(c,s),m=e.texData.get(p.dataId);return m.values=u,p}let i;return z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Ln(KD,n.shape,o.shape):i=new Cn(KD,n.shape,o.shape),e.runWebGLProgram(i,[n,o],s)}var jD={kernelName:ni,backendName:"webgl",kernelFunc:u2};function XD(r,t,e){let n=[D0(r.shape),...R0(r.shape)],o={dtype:r.dtype,shape:n,dataId:r.dataId},s=[D0(t),...R0(t)],i=new Pu(s,n),a=!0,l=[n],u=e.runWebGLProgram(i,[o],r.dtype,l,a);return{dataId:u.dataId,shape:t,dtype:u.dtype}}function ne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{shape:s}=n,i=e,a=b.sizeFromShape(o.shape),l=b.inferFromImplicitShape(s,a),u=b.sizeFromShape(l);b.assert(a===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(o.dataId);return c.isPacked&&!ql(o.shape,l)&&!(c.texture!==null&&ql(c.shape,l))?XD(o,l,i):(i.incRef(o.dataId),{dataId:o.dataId,shape:l,dtype:o.dtype})}var YD={kernelName:Va,backendName:"webgl",kernelFunc:ne};var p2=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=t;this.outputShape=[o,i];let a=Math.floor(n/4)*4,l=n%4,u="sumValue += dot(values, ones);";if(e!=null){let p=1/e;u=`sumValue += dot(values * ${b.isInt(p)?p.toPrecision(2):p}, ones);`}let c="";s%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};var Od=class{constructor(t,e){this.variableNames=["x"];let{windowSize:n,batchSize:o,inSize:s,outSize:i}=t;this.outputShape=[o,i];let a="0.0",l="";e==="prod"?a="1.0":e==="min"?(a="1.0 / 1e-20",l="min"):e==="max"&&(a="-1.0 / 1e-20",l="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?u="sumValue":e==="prod"?u="prodValue":e==="all"?u="allValue":e==="any"&&(u="anyValue");let c=Math.floor(n/4)*4,p=n%4,m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";e==="all"?(a="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):e==="any"&&(a="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function kQ(r){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let e=t.length?t[t.length-1].outSize:r[1],n=N.computeOptimalWindowSize(e);t.push({inSize:e,windowSize:n,outSize:Math.ceil(e/n)})}return t}function Bn(r,t,e,n){let o=kQ(r.shape),s=r;for(let i=0;i<o.length;i++){let{inSize:a,windowSize:l,outSize:u}=o[i],c,p;e==="mean"?c=i===0?new p2({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},a):new p2({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u}):c=new Od({windowSize:l,inSize:a,batchSize:r.shape[0],outSize:u},e),p=s,s=n.runWebGLProgram(c,[s],t),p.dataId!==r.dataId&&n.disposeIntermediateTensorInfo(p)}return s}var Md=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[e[i]];this.outputShape=n,this.rank=n.length;let o=$e(this.rank),s=AQ(e);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${s}));
    }
    `}};function AQ(r){let t=r.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],n=new Array(t);for(let o=0;o<r.length;o++)n[r[o]]=e[o];return n.join()}var Pd=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(t.length);for(let c=0;c<n.length;c++)n[c]=t[e[c]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let o=$e(this.rank),s=f8("rc",this.rank),i=new Array(this.rank);for(let c=0;c<e.length;c++)i[e[c]]=s[c];let a=`vec2(${i.slice(-2).join()})`,l=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${s[this.rank-1]};
      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function $0(r,t,e){let n=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pd(r.shape,t):new Md(r.shape,t);return e.runWebGLProgram(n,[r],r.dtype)}function ZD(r,t,e,n){let o=t,s=r.shape.length,i=b.parseAxisParam(o,r.shape),a=i,l=N.getAxesPermutation(a,s),u=l!=null,c=r;u&&(c=$0(r,l,n),a=N.getInnerMostAxes(a.length,s)),N.assertAxesAreInnerMostDims("sum",a,s);let[p,m]=N.computeOutAndReduceShapes(c.shape,a),f=p;e&&(f=N.expandShapeToKeepDim(p,i));let d=b.sizeFromShape(m),h=b.sizeFromShape(r.shape)/d,x=ne({inputs:{x:c},attrs:{shape:[h,d]},backend:n}),y=ml(r.dtype),v=Bn(x,y,"sum",n),w=ne({inputs:{x:v},attrs:{shape:f},backend:n});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),u&&n.disposeIntermediateTensorInfo(c),w}function Xl(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n;return ZD(o,s,i,e)}var JD={kernelName:ja,backendName:"webgl",kernelFunc:Xl};function It(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{perm:s}=n,i=e,a=o.shape.length,l=new Array(a);for(let c=0;c<l.length;c++)l[c]=o.shape[s[c]];let u;if(i.shouldExecuteOnCPU([o])){let p=i.texData.get(o.dataId).values,m=jl(p,o.shape,o.dtype,s,l);u=i.makeTensorInfo(l,o.dtype);let f=i.texData.get(u.dataId);f.values=m}else u=$0(o,s,i);return u}var QD={kernelName:ns,backendName:"webgl",kernelFunc:It};var v8=1e3;function Yl({a:r,b:t,transposeA:e,transposeB:n,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:l=null}){let u=r.shape.length,c=t.shape.length,p=e?r.shape[u-2]:r.shape[u-1],m=n?t.shape[c-1]:t.shape[c-2],f=e?r.shape[u-1]:r.shape[u-2],d=n?t.shape[c-2]:t.shape[c-1],g=r.shape.slice(0,-2),h=t.shape.slice(0,-2),x=b.sizeFromShape(g),y=b.sizeFromShape(h),w=En.assertAndGetBroadcastShape(r.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,d]);b.assert(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${r.shape} and ${t.shape} and transposeA=${e} and transposeB=${n} must match.`);let I=e?[x,p,f]:[x,f,p],E=n?[y,d,m]:[y,m,d],_=ne({inputs:{x:r},backend:o,attrs:{shape:I}}),D=ne({inputs:{x:t},backend:o,attrs:{shape:E}}),M=[_,D],P=Math.max(x,y),V=e?_.shape[1]:_.shape[2],U=s!=null,q=i!=null,K=l==="leakyrelu",j=l!=null?Vi(l,!0):null,Y=U||q||K||j!=null,ee;if((f===1||d===1)&&V>v8&&Y===!1){let Q=_,ie=D;e&&(Q=It({inputs:{x:_},backend:o,attrs:{perm:[0,2,1]}}),M.push(Q)),n&&(ie=It({inputs:{x:D},backend:o,attrs:{perm:[0,2,1]}}),M.push(ie));let le=d!==1,pe=d===1,ae=Q;le&&(ae=ne({inputs:{x:Q},backend:o,attrs:{shape:[P,V,1]}}),M.push(ae));let fe=d===1?2:1,me=ie;pe&&(me=ne({inputs:{x:ie},backend:o,attrs:{shape:[P,1,V]}}),M.push(me));let xe=u2({inputs:{a:ae,b:me},backend:o});ee=Xl({inputs:{x:xe},backend:o,attrs:{axis:fe,keepDims:!0}}),M.push(xe)}else{let Q=or(r.dtype,t.dtype),ie=new zu(I,E,[P,f,d],e,n,U,j,q,K),le=[_,D];if(s!=null&&le.push(s),q&&le.push(i),K){let pe=o.makeTensorInfo([],"float32",b.createScalarValue(a,"float32"));le.push(pe),M.push(pe)}ee=o.runWebGLProgram(ie,le,Q)}let Z=ne({inputs:{x:ee},backend:o,attrs:{shape:w}});M.push(ee);for(let Q of M)o.disposeIntermediateTensorInfo(Q);return Z}function EQ(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s,bias:i,preluActivationWeights:a}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:p}=n;return Yl({a:o,b:s,transposeA:l,transposeB:u,backend:e,bias:i,preluActivationWeights:a,leakyreluAlpha:p,activation:c})}var eR={kernelName:ol,backendName:"webgl",kernelFunc:EQ};var tR="return abs(x);";function _Q(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])&&n.dtype!=="complex64"){let s=e.texData.get(n.dataId),i=Ed(s.values);return e.makeTensorInfo(n.shape,n.dtype,i)}let o;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Tn(n.shape,tR):o=new Rr(n.shape,tR),e.runWebGLProgram(o,[n],n.dtype)}var rR={kernelName:la,backendName:"webgl",kernelFunc:_Q};var DQ=fr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,RQ=be({opSnippet:DQ}),nR={kernelName:_s,backendName:"webgl",kernelFunc:RQ};var $Q=fr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,FQ=be({opSnippet:$Q}),oR={kernelName:Ds,backendName:"webgl",kernelFunc:FQ};var sR="return a + b;",OQ=nt({opSnippet:sR,packedOpSnippet:sR,supportsComplex:!0,cpuKernelImpl:M_}),iR={kernelName:ko,backendName:"webgl",kernelFunc:OQ};var Ld=class{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`float v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}};var zd=class{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((s,i)=>`T${i}`);let n=[];this.variableNames.forEach(s=>{n.push(`vec4 v${s} = get${s}AtOutCoords();`)});let o=this.variableNames.map(s=>`v${s}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}};function Bd(r){let{inputs:t,backend:e}=r,n=t;if(n.length===1)return jt({inputs:{x:n[0]},backend:e});if(n.length>z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){let l=Math.floor(n.length/2),u=Bd({inputs:n.slice(0,l),backend:e}),c=Bd({inputs:n.slice(l),backend:e});return Bd({inputs:[u,c],backend:e})}let o=n.map(l=>l.dtype).reduce((l,u)=>or(l,u)),s=n.map(l=>l.shape),a=z().getBool("WEBGL_PACK")?new zd(n[0].shape,s):new Ld(n[0].shape,s);return e.runWebGLProgram(a,n,o)}var aR={kernelName:ca,backendName:"webgl",kernelFunc:Bd};function MQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,l=b.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,a),p=o;c!=null&&(p=It({inputs:{x:o},backend:e,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,a)),N.assertAxesAreInnerMostDims("all",u,a);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(f),g=ne({inputs:{x:p},backend:e,attrs:{shape:[-1,d]}}),h=Bn(g,g.dtype,"all",e),x;if(i){let y=N.expandShapeToKeepDim(m,l);x=ne({inputs:{x:h},backend:e,attrs:{shape:y}})}else x=ne({inputs:{x:h},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(h),c!=null&&e.disposeIntermediateTensorInfo(p),x}var lR={kernelName:g1,backendName:"webgl",kernelFunc:MQ};function PQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,l=b.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,a),p=o;c!=null&&(p=It({inputs:{x:o},backend:e,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,a)),N.assertAxesAreInnerMostDims("any",u,a);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(f),g=ne({inputs:{x:p},backend:e,attrs:{shape:[-1,d]}}),h=Bn(g,g.dtype,"any",e),x;if(i){let y=N.expandShapeToKeepDim(m,l);x=ne({inputs:{x:h},backend:e,attrs:{shape:y}})}else x=ne({inputs:{x:h},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(h),c!=null&&e.disposeIntermediateTensorInfo(p),x}var cR={kernelName:x1,backendName:"webgl",kernelFunc:PQ};var Gd=class{constructor(t,e,n){this.variableNames=["A"];let{windowSize:o,batchSize:s,outSize:i}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];let a=e==="max"?">":"<",l=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};var Vd=class{constructor(t,e,n,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,b.assert(t.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let s=t[t.length-1],i=Math.ceil(s/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),o||this.variableNames.push("bestIndicesA");let a=this.outputShape,l=a.length,u=$e(l),c=Kt("coords",l),p,m;if(i===1){m=l+1;let D=$e(m);p=`
        ${D} sourceLocR = ${D}(${c.join()}, 0);
        ++${c[l-1]};
        ${D} sourceLocG = ${D}(${c.join()}, 0);
        ++${c[l-2]};
        ${D} sourceLocA = ${D}(${c.join()}, 0);
        --${c[l-1]};
        ${D} sourceLocB = ${D}(${c.join()}, 0);
        --${c[l-2]};`}else m=l,p=`
        ${u} sourceLocR = coords;
        ++${c[l-1]};
        ${u} sourceLocG = coords;
        ++${c[l-2]};
        ${u} sourceLocA = coords;
        --${c[l-1]};
        ${u} sourceLocB = coords;
        --${c[l-2]};`;let f=["x","y","z","w","u","v"].slice(0,m),d="."+f[m-1],g=f.map(D=>"int "+D),h=Kt("sourceLocR",m-1).concat("inIdx.r"),x=Kt("sourceLocG",m-1).concat("inIdx.g"),y=Kt("sourceLocB",m-1).concat("inIdx.b"),v=Kt("sourceLocA",m-1).concat("inIdx.a"),w=n==="max"?"greaterThan":"lessThan",I=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${h.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${v.join()})));`,E=`vec4(
            getAChannel(${h.join()}),
            hasNextCol ? getAChannel(${x.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,_=o?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${_}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${c[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${c[l-2]} < ${a[l-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},
          sourceLocB${d}, sourceLocA${d}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function uR(r,t,e,n=null){let o=t.shape[0],s=t.shape[1];n!=null&&(o=n.shape[0],s=n.shape[1]);let i=N.computeOptimalWindowSize(s),a={windowSize:i,inSize:s,batchSize:o,outSize:Math.ceil(s/i)},l=new Gd(a,e,n==null),u=[t];n!=null&&u.push(n);let c=r.runWebGLProgram(l,u,"int32");if(c.shape[1]===1)return c;let p=uR(r,t,e,c);return r.disposeIntermediateTensorInfo(c),p}function pR(r,t,e,n=null){let o=n!=null?n.shape:t.shape,s=o[o.length-1],i=N.computeOptimalWindowSize(s),a=new Vd(o,i,e,n==null),l=n==null?[t]:[t,n],u=r.runWebGLProgram(a,l,"int32");if(u.shape.length===t.shape.length){let c=pR(r,t,e,u);return r.disposeIntermediateTensorInfo(u),c}return u}function Ud(r,t,e,n){let o=[e];if(N.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),o,t.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=r.texData.get(t.dataId),a=i!==null&&i.isPacked,l=t;a&&(l=r.unpackTensor(t),s.push(l));let[u,c]=N.computeOutAndReduceShapes(l.shape,o),p=b.sizeFromShape(c),m=ne({inputs:{x:l},backend:r,attrs:{shape:[-1,p]}});s.push(m);let f=uR(r,m,n);s.push(f);let d=ne({inputs:{x:f},backend:r,attrs:{shape:u}});return s.forEach(g=>r.disposeIntermediateTensorInfo(g)),d}return pR(r,t,n)}function LQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=N.getAxesPermutation(i,o.shape.length),l=o,u=[];a!=null&&(l=It({inputs:{x:o},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let c=Ud(e,l,i[0],"max");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var mR={kernelName:ua,backendName:"webgl",kernelFunc:LQ};function zQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s}=n,i=b.parseAxisParam(s,o.shape),a=N.getAxesPermutation(i,o.shape.length),l=o,u=[];a!=null&&(l=It({inputs:{x:o},backend:e,attrs:{perm:a}}),u.push(l),i=N.getInnerMostAxes(i.length,l.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let c=Ud(e,l,i[0],"min");return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),c}var fR={kernelName:pa,backendName:"webgl",kernelFunc:zQ};var BQ=fr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,GQ=be({opSnippet:BQ}),dR={kernelName:Rs,backendName:"webgl",kernelFunc:GQ};var VQ=fr+"return log(x + sqrt(x * x + 1.0));",UQ=be({opSnippet:VQ}),hR={kernelName:$s,backendName:"webgl",kernelFunc:UQ};var WQ=fr+`
  return atan(x);
`,qQ=be({opSnippet:WQ}),gR={kernelName:Fs,backendName:"webgl",kernelFunc:qQ};var HQ=Lu+`
  return atan(a, b);
`,KQ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zn+`
  return result;
`,jQ=nt({opSnippet:HQ,packedOpSnippet:KQ}),xR={kernelName:Ms,backendName:"webgl",kernelFunc:jQ};var XQ=fr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,YQ=be({opSnippet:XQ}),yR={kernelName:Os,backendName:"webgl",kernelFunc:YQ};var qo=class{constructor(t,e,n,o=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideHeight,l=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,f=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;let g=e==="avg",h=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,x=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`,y="0.0";if(g||(y="-1.0 / 1e-20"),n){let D=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${d});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${D} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?s?h:x:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let v="max",w=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(w="avgValue / max(count, 1.0)");let I=Math.floor(i/4)*4,E=i%4,_=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${d});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${_}
          }

          int xC = xCCorner + ${I};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${_}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${_}
          }
        }
        setOutput(${w});
      }
    `}},F0=class{constructor(t,e,n,o=!1,s=!1){if(this.variableNames=["x"],e==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let i=t.filterWidth,a=t.strideDepth,l=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,f=t.effectiveFilterDepth,d=t.effectiveFilterHeight,g=t.effectiveFilterWidth,h=t.padInfo.front,x=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;let v=e==="avg",w="0.0";if(v||(w="-1.0 / 1e-20"),n){let P=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${u});
        const ivec3 pads = ivec3(${h}, ${x}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${d};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${P} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?s?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let I="max",E=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(E="avgValue / max(count, 1.0)");let _=Math.floor(i/4)*4,D=i%4,M=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${u});
      const ivec3 pads = ivec3(${h}, ${x}, ${y});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${_}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${M}
            }

            int xC = xCCorner + ${_};
            if (${D===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${D===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${M}
            } else if (${D===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${M}
            }
          }
        }
        setOutput(${E});
      }
    `}};function ZQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ws(o,"avgPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=n,u=1;b.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))return jt({inputs:{x:o},backend:e});let p=new qo(c,"avg",!1);return e.runWebGLProgram(p,[o],"float32")}var bR={kernelName:ma,backendName:"webgl",kernelFunc:ZQ};function JQ(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:l,dataFormat:u}=n,c=[1,1,1],p=N.computePool3DInfo(o.shape,s,i,c,a,l,u),m=new F0(p,"avg",!1);return e.runWebGLProgram(m,[o],"float32")}var vR={kernelName:fa,backendName:"webgl",kernelFunc:JQ};var Wd=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=l-1-t.padInfo.top,p=u-1-t.padInfo.left,m=1/(e*n);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},qd=class{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,f=t.effectiveFilterWidth,d=p-1-t.padInfo.front,g=m-1-t.padInfo.top,h=f-1-t.padInfo.left,x=1/(e*n*o);this.userCode=`
      const ivec3 pads = ivec3(${d}, ${g}, ${h});
      const float avgMultiplier = float(${x});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${s}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function QQ(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=N.computePool3DInfo(i.shape,a,l,p,u,c),f=new qd(m);return e.runWebGLProgram(f,[o],i.dtype)}var wR={kernelName:b1,backendName:"webgl",kernelFunc:QQ};function eee(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s;ws([o,s],"avgPoolGrad");let{filterSize:a,strides:l,pad:u}=n,c=N.computePool2DInfo(i.shape,a,l,1,u),p=new Wd(c);return e.runWebGLProgram(p,[o],i.dtype)}var TR={kernelName:y1,backendName:"webgl",kernelFunc:eee};function tee(r){let{inputs:t,backend:e,attrs:n}=r,{a:o,b:s}=t,{transposeA:i,transposeB:a}=n;return Yl({a:o,b:s,transposeA:i,transposeB:a,backend:e})}var CR={kernelName:da,backendName:"webgl",kernelFunc:tee};var Hd=class{constructor(t,e,n,o,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(t,e),N.assertAndGetBroadcastShape(t,n);let a="0.0";o!=null&&(N.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";s!=null&&(N.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};var Kd=class{constructor(t,e,n,o,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(t,e),N.assertAndGetBroadcastShape(t,n);let a="vec4(0.0)";o!=null&&(N.assertAndGetBroadcastShape(t,o),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";s!=null&&(N.assertAndGetBroadcastShape(t,s),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}};var ree=({inputs:r,backend:t,attrs:e})=>{let{x:n,mean:o,variance:s,offset:i,scale:a}=r;b.assert(o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),b.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),b.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=e;l==null&&(l=.001);let u=[n,o,s],c=null;i!=null&&(c=i.shape,u.push(i));let p=null;a!=null&&(p=a.shape,u.push(a));let m=z().getBool("WEBGL_PACK_NORMALIZATION")?new Kd(n.shape,o.shape,s.shape,c,p,l):new Hd(n.shape,o.shape,s.shape,c,p,l);return t.runWebGLProgram(m,u,u[0].dtype)},SR={kernelName:Ia,backendName:"webgl",kernelFunc:ree};var jd=class{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;let e=$e(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=nee(this.rank),o,s=t.map((i,a)=>`sourceLoc.${w8[a]} = start[${a}] + coords.${w8[a]};`);o=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${s.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${n}));
      }
    `}},w8=["x","y","z","w","u","v"];function nee(r){if(r===1)return"sourceLoc";if(r<=6)return w8.slice(0,r).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${r} is not yet supported`)}var Xd=class{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let e=$e(this.rank),n=Kt("coords",this.rank),o=Kt("sourceLoc",this.rank),s=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,i=`getChannel(getSource(${o.join()}), ${s})`,a=`
      result.x = ${i};
      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${i};
        --${o[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${i};
        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${i};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((c,p)=>`start[${p}]`).join()});`:t.map((c,p)=>`${o[p]} = ${n[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}};function oee(r,t,e,n){let o=n.texData.get(r.dataId),s=n.makeTensorInfo(e,r.dtype),i=n.texData.get(s.dataId);Object.assign(i,o),i.refCount=1,i.shape=e,i.dtype=r.dtype;let a=Cr.computeFlatOffset(t,b.computeStrides(r.shape));o.slice&&(a+=o.slice.flatOffset),i.slice={flatOffset:a,origDataId:o.slice&&o.slice.origDataId||r.dataId};let l=n.dataRefCount.get(i.slice.origDataId)||1;return n.dataRefCount.set(i.slice.origDataId,l+1),s}function Ho(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,size:i}=n,[a,l]=Cr.parseSliceParams(o,s,i);if(Cr.assertParamsValid(o,a,l),b.sizeFromShape(l)===0)return e.makeTensorInfo(l,o.dtype,[]);if(e.shouldExecuteOnCPU([o])||o.dtype==="string"){let p=e.texData.get(o.dataId),m=dD(p.values,a,l,o.shape,o.dtype);return e.makeTensorInfo(l,o.dtype,m)}let{isPacked:u}=e.texData.get(o.dataId),c=Cr.isSliceContinous(o.shape,a,l);if(u||!c){let p=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xd(l):new jd(l),m=[a];return e.runWebGLProgram(p,[o],o.dtype,m)}return e.uploadToGPU(o.dataId),oee(o,a,l,e)}var IR={kernelName:Ka,backendName:"webgl",kernelFunc:Ho};var see=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,crops:i}=n;b.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((y,v)=>y*v),l=N.getReshaped(o.shape,s,a),u=N.getPermuted(l.length,s.length),c=N.getReshapedPermuted(o.shape,s,a),p=N.getSliceBeginCoords(i,s.length),m=N.getSliceSize(c,i,s.length),f=[],d=ne({inputs:{x:o},backend:e,attrs:{shape:l}}),g=It({inputs:{x:d},backend:e,attrs:{perm:u}}),h=ne({inputs:{x:g},backend:e,attrs:{shape:c}}),x=Ho({inputs:{x:h},backend:e,attrs:{begin:p,size:m}});return f.push(d),f.push(g),f.push(h),f.forEach(y=>e.disposeIntermediateTensorInfo(y)),x},NR={kernelName:ha,backendName:"webgl",kernelFunc:see};function iee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i}=n,a=e.readSync(o.dataId),l=e.readSync(s.dataId),u=Ad(a,l,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,u)}var kR={kernelName:v1,backendName:"webgl",kernelFunc:iee};var aee=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,lee=`
  return float(int(a.r) & int(b.r));
`;function cee(r){let{inputs:t,backend:e}=r,{a:n,b:o}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=z().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([n,o])||i===1){let l=e.texData.get(n.dataId).values,u=e.texData.get(o.dataId).values,[c,p]=L_(n.shape,o.shape,l,u,n.dtype),m=e.makeTensorInfo(p,n.dtype),f=e.texData.get(m.dataId);return f.values=c,m}let a;return s?a=new Ln(aee,n.shape,o.shape,!1):a=new Cn(lee,n.shape,o.shape),e.runWebGLProgram(a,[n,o],n.dtype)}var AR={kernelName:j0,backendName:"webgl",kernelFunc:cee};function uee(r){let{inputs:t,backend:e}=r,{s0:n,s1:o}=t,s=e.readSync(n.dataId),i=e.readSync(o.dataId),a=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return e.makeTensorInfo([a.length],"int32",Int32Array.from(a))}var ER={kernelName:w1,backendName:"webgl",kernelFunc:uee};var pee="return float(a != b);",T8=nt({opSnippet:pee,cpuKernelImpl:sD,dtype:"bool"}),_R={kernelName:rl,backendName:"webgl",kernelFunc:T8};function Ui(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return jt({inputs:{x:o.complexTensorInfos.real},backend:e})}var DR={kernelName:ec,backendName:"webgl",kernelFunc:Ui};var mee="return float(int(x));";function RR(r,t){let e=new Rr(r.shape,mee),n=t.runWebGLProgram(e,[r],"int32");return{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}function C8(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dtype:s}=n;if(s==="complex64"){if(o.dtype==="complex64")return jt({inputs:{x:o},backend:e});let i=yt(o.shape),a=C8({inputs:{x:o},backend:e,attrs:{dtype:"float32"}}),l=Sn({inputs:{real:a,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(a),l}if(o.dtype==="complex64"){let i=Ui({inputs:{input:o},backend:e}),a=C8({inputs:{x:i},backend:e,attrs:{dtype:s}});return e.disposeIntermediateTensorInfo(i),a}if(!b.hasEncodingLoss(o.dtype,s)){let i=jt({inputs:{x:o},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(e.shouldExecuteOnCPU([o])){let i=e.texData.get(o.dataId).values,[a,l,u]=z_(i,o.shape,o.dtype,s);return e.makeTensorInfo(a,l,u)}if(s==="int32")return RR(o,e);if(s==="bool"){let i=e.makeTensorInfo([],"bool",b.getTypedArrayFromDType("bool",1)),l=T8({inputs:{a:o,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),l}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}var $R={kernelName:es,backendName:"webgl",kernelFunc:C8};var FR="return ceil(x);",fee=be({opSnippet:FR,packedOpSnippet:FR,cpuKernelImpl:B_}),OR={kernelName:Ps,backendName:"webgl",kernelFunc:fee};var Yd=class{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};var Zd=class{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function dee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{clipValueMin:s,clipValueMax:i}=n,a;z().getBool("WEBGL_PACK_CLIP")?a=new Zd(o.shape):a=new Yd(o.shape);let l=[[s],[i]];return e.runWebGLProgram(a,[o],o.dtype,l)}var MR={kernelName:Ls,backendName:"webgl",kernelFunc:dee};var Jd=class{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function PR(r,t){return{dataId:t.dataId,dtype:t.dtype,shape:r.shape}}function hee(r){let{inputs:t,backend:e}=r,{x:n}=t,o=e.texData.get(n.dataId),s=new Jd(n.shape),i=[PR(n,o.complexTensorInfos.real),PR(n,o.complexTensorInfos.imag)];return e.runWebGLProgram(s,i,i[0].dtype)}var LR={kernelName:ga,backendName:"webgl",kernelFunc:hee};var Qd=class{constructor(t){this.outputShape=[],this.outputShape=N.computeOutShape(t,1),this.variableNames=t.map((i,a)=>`T${a}`);let e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];let n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){let a=e[i-1];n.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${a}));`)}let o=e.length,s=e[e.length-1];n.push(`else setOutput(getT${o}(yR, yC-${s}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}};var th=class{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(t,e);let n=this.outputShape,o=n.length,s=$e(o),i=Kt("coords",o),a=["x","y","z","w","u","v"].slice(0,o);this.variableNames=t.map((g,h)=>`T${h}`);let l=new Array(t.length-1);l[0]=t[0][e];for(let g=1;g<l.length;g++)l[g]=l[g-1]+t[g][e];let u=a[e],c=a.slice(-2),p=a.join(),m=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${p}), vec2(${c.join()}));
        }`;for(let g=1;g<l.length;g++){let h=l[g-1];m+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${eh(a,u,h)}),
            vec2(${eh(c,u,h)}));
        }`}let f=l.length,d=l[l.length-1];m+=`
        return getChannel(
          getT${f}(${eh(a,u,d)}),
          vec2(${eh(c,u,d)}));`,this.userCode=`
      float getValue(${a.map(g=>"int "+g)}) {
        ${m}
      }

      void main() {
        ${s} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[o-1]} = ${i[o-1]} + 1;
        if (${i[o-1]} < ${n[o-1]}) {
          result.g = getValue(${i});
        }

        ${i[o-2]} = ${i[o-2]} + 1;
        if (${i[o-2]} < ${n[o-2]}) {
          result.a = getValue(${i});
        }

        ${i[o-1]} = ${i[o-1]} - 1;
        if (${i[o-2]} < ${n[o-2]} &&
            ${i[o-1]} < ${n[o-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}};function eh(r,t,e){let n=r.indexOf(t);return r.map((s,i)=>i===n?`${s} - ${e}`:s).join()}function Zl(r){let{inputs:t,backend:e}=r,{input:n}=t,o=e.texData.get(n.dataId);return jt({inputs:{x:o.complexTensorInfos.imag},backend:e})}var zR={kernelName:B1,backendName:"webgl",kernelFunc:Zl};function Bu(r,t,e){let n=r[0].dtype;if(n==="complex64"){let f=r.map(y=>Ui({inputs:{input:y},backend:e})),d=r.map(y=>Zl({inputs:{input:y},backend:e})),g=Bu(f,t,e),h=Bu(d,t,e),x=Sn({inputs:{real:g,imag:h},backend:e});return f.forEach(y=>e.disposeIntermediateTensorInfo(y)),d.forEach(y=>e.disposeIntermediateTensorInfo(y)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(h),x}let o=e.shouldExecuteOnCPU(r);if(n==="string"&&(o=!0),o){let f=r.map(w=>{let E=[-1,b.sizeFromShape(w.shape.slice(t))];return ne({inputs:{x:w},backend:e,attrs:{shape:E}})}),d=f.map(w=>({vals:e.readSync(w.dataId),shape:w.shape})),g=N.computeOutShape(f.map(w=>w.shape),1),h=f[0].shape[0]===1,x=G_(d,g,n,h),y=N.computeOutShape(r.map(w=>w.shape),t),v=e.makeTensorInfo(y,n,x);return f.forEach(w=>e.disposeIntermediateTensorInfo(w)),v}let s=r.filter(f=>b.sizeFromShape(f.shape)>0),i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let f=i?new Rr(r[0].shape,Ts):new Tn(r[0].shape,Ts);return e.runWebGLProgram(f,r,n)}let a=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>a){let f=[];for(let g=0;g<s.length;g+=a){let h=s.slice(g,g+a);f.push(Bu(h,t,e))}let d=Bu(f,t,e);for(let g of f)e.disposeIntermediateTensorInfo(g);return d}if(i){let f=new th(s.map(d=>d.shape),t);return e.runWebGLProgram(f,s,n)}let{tensors2D:l,outShape:u}=gee(s,t,e),c=new Qd(l.map(f=>f.shape)),p=e.runWebGLProgram(c,l,n);l.forEach(f=>e.disposeIntermediateTensorInfo(f));let m=ne({inputs:{x:p},attrs:{shape:u},backend:e});return e.disposeIntermediateTensorInfo(p),m}function gee(r,t,e){let n=N.computeOutShape(r.map(s=>s.shape),t);return{tensors2D:r.map(s=>ne({inputs:{x:s},attrs:{shape:[-1,b.sizeFromShape(s.shape.slice(t))]},backend:e})),outShape:n}}function S8(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n,s=b.parseAxisParam(o,t[0].shape)[0],i=t.map(u=>u.shape);N.assertParamsConsistent(i,s);let a=N.computeOutShape(t.map(u=>u.shape),s);if(b.sizeFromShape(a)===0)return e.makeTensorInfo(a,t[0].dtype,[]);let l=t.filter(u=>b.sizeFromShape(u.shape)>0);return l.length===1?jt({inputs:{x:l[0]},backend:e}):Bu(l,s,e)}var BR={kernelName:xa,backendName:"webgl",kernelFunc:S8};var Gu=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;let i=t.padInfo.top,a=t.padInfo.left,l=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,f=t.filterWidth,d=Math.floor(t.inChannels/4)*4,g=t.inChannels%4,h=t.dataFormat==="channelsLast",x=h?1:2,y=h?2:3,v=h?3:1,w="",I="";n&&(o?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:w=`
          float activation(float x) {
            ${n}
          }
        `,I="result = activation(result);");let E=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${x}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${d}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${h}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${h}) {
                dotProd +=
                    getX(batch, xR, xC, ${d}) *
                    getW(wR, wC, ${d}, d2);
              } else {
                dotProd +=
                    getX(batch, ${d}, xR, xC) *
                    getW(wR, wC, ${d}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2)
              );

              if (${h}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${d}, d2),
                getW(wR, wC, ${d} + 1, d2),
                getW(wR, wC, ${d} + 2, d2)
              );

              if (${h}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${d}),
                  getX(batch, xR, xC, ${d} + 1),
                  getX(batch, xR, xC, ${d} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${d}, xR, xC),
                  getX(batch, ${d} + 1, xR, xC),
                  getX(batch, ${d} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${I}
        setOutput(result);
      }
    `}},rh=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let e=t.padInfo.front,n=t.padInfo.top,o=t.padInfo.left,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,f=t.filterWidth,d=Math.floor(t.inChannels/4)*4,g=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${s}, ${i}, ${a});
      const ivec3 pads = ivec3(${e}, ${n}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${d}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${d}) *
                  getW(wF, wR, wC, ${d}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${d}),
                  getX(batch, xF, xR, xC, ${d} + 1),
                  getX(batch, xF, xR, xC, ${d} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${d}, d2),
                  getW(wF, wR, wC, ${d} + 1, d2),
                  getW(wF, wR, wC, ${d} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};var Vu=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=it(this.outputShape.length);let i=t.padInfo.left,a=t.strideWidth,l=t.dilationWidth,u=t.filterHeight,c=t.filterWidth,p=c,m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let h=0;h<c;h++)m+=`
           vec4 xTexelC${h*2};
           int xTexelC${h*2}Ready;
           vec4 xTexelC${h*2+1};
           int xTexelC${h*2+1}Ready;
           vec4 xC${h};`;m+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let h=0;h<c;h++)m+=`
           xTexelC${h*2} = vec4(0.0);
           xTexelC${h*2}Ready = 0;
           xTexelC${h*2+1} = vec4(0.0);
           xTexelC${h*2+1}Ready = 0;
           xC${h} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let h=0;h<(p+1)/2;h++){let x=h*2;if(m+=`
           xC = xCCorner + ${x*l};
           `,a===1){if(x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }
               `,l===1&&x>0?m+=`
                 xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                   } else {
                     xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xC${x} = xTexelC${x};
                 `,x+1<c)){let y=i%2===0?b.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                     xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${x+1}.zw = vec2(0.0);
                     }
                     xTexelC${x+1}Ready = 1;
                   }
                   `,l>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                     } else {
                      xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                     }
                     `:m+=`
                     xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                     `):y===1?m+=`
                     xC${x+1} = xTexelC${x};
                     `:m+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                       xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${x+1}.zw = vec2(0.0);
                       }
                       xTexelC${x+1}Ready = 1;
                     }

                     xC${x+1} = xTexelC${x+1};
                     `}}else x<c&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.0);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
               `,x+1<c&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                   xTexelC${x} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${x}.zw = vec2(0.0);
                   }
                   xTexelC${x}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                   xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${x+1}.zw = vec2(0.);
                   }
                   xTexelC${x+1}Ready = 1;
                 }

                 xC${x} = vec4(
                   xTexelC${x}.xy, xTexelC${x+1}.xy);
               `,x+1<c&&(m+=`
                   xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                 `)));x<c&&(m+=`
             wTexel = getW(r, ${x}, d1, d2);
             dotProd += xC${x}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${x}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,x+1<c&&(m+=`
               wTexel = getW(r, ${x+1}, d1, d2);
               dotProd += xC${x+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${x+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let f="",d="";n&&(o?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:s?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:f=`vec4 activation(vec4 x) {
           ${n}
         }`,d="result = activation(result);");let g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${d}
         setOutput(result);
       }
     `}};var nh=class{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=it(this.outputShape.length);let{dataFormat:n}=e,o=Ot(),s=n==="channelsLast",i=s?1:2,a=s?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`,u="";for(let c=0;c<=1;c++)for(let p=0;p<=1;p++)u+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${c};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${s}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}};function oh(r,t){let e=r.length;return e>=3?t?[...r.slice(0,-3),r[e-3]*r[e-2],r[e-1]]:[...r.slice(0,-3),r[e-3],r[e-2]*r[e-1]]:!t&&e===1&&r[0]>1?[r[0],1]:null}function sh({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let l=r.shape,u=n.texData.get(r.dataId),c=e.inChannels,p=l[0]*l[1]*l[2],m=e.outChannels,f=e.dataFormat==="channelsLast",d=!1,g=!1,h,x=[];if(s!=null){let w=oh(s.shape,f);w!=null&&(s=ne({inputs:{x:s},backend:n,attrs:{shape:w}}),x.push(s))}if(o!=null){let w=oh(o.shape,f);w!=null&&(o=ne({inputs:{x:o},backend:n,attrs:{shape:w}}),x.push(o))}if(!((p===1||m===1)&&c>v8)&&u.isPacked&&f&&u.texture!=null&&l[2]%2!==0&&b.arraysEqual(u.shape.slice(-3),l.slice(-3))){let w=l[0]*l[1]*(l[2]+1),I={dataId:r.dataId,shape:[1,w,e.inChannels],dtype:r.dtype},E=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,b.assert(ql(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);let _=ne({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}});x.push(_);let D=Yl({a:I,b:_,backend:n,transposeA:d,transposeB:g,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i}),M=n.texData.get(D.dataId);b.assert(M.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=E,M.shape=e.outShape,h=jt({inputs:{x:D},backend:n}),h.shape=e.outShape,x.push(D)}else{let w=e.outHeight*e.outWidth,I=ne({inputs:{x:r},backend:n,attrs:{shape:f?[e.batchSize,w,e.inChannels]:[e.batchSize,e.inChannels,w]}}),E=ne({inputs:{x:t},backend:n,attrs:{shape:[1,e.inChannels,e.outChannels]}}),_=Yl({a:f?I:E,b:f?E:I,transposeA:!f,transposeB:g,backend:n,bias:o,activation:a,preluActivationWeights:s,leakyreluAlpha:i});h=ne({inputs:{x:_},backend:n,attrs:{shape:e.outShape}}),x.push(I),x.push(E),x.push(_)}for(let w of x)n.disposeIntermediateTensorInfo(w);return h}function ih({x:r,filter:t,convInfo:e,backend:n,bias:o=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:a=null}){let{filterWidth:l,filterHeight:u,inChannels:c,outWidth:p,outHeight:m,dataFormat:f}=e,d=f==="channelsLast",g=l*u*c,h=m*p,x=[e.batchSize,g,h],y=!0,v=!1,w=[];if(s!=null){let Z=oh(s.shape,d);Z!=null&&(s=ne({inputs:{x:s},backend:n,attrs:{shape:Z}}),w.push(s))}if(o!=null){let Z=oh(o.shape,d);Z!=null&&(o=ne({inputs:{x:o},backend:n,attrs:{shape:Z}}),w.push(o))}let I=ne({inputs:{x:t},backend:n,attrs:{shape:[1,g,b.sizeFromShape(t.shape)/g]}});w.push(I);let E=new nh(x,e),_=[r.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],D=n.runWebGLProgram(E,[r],"float32",_),M=ne({inputs:{x:D},backend:n,attrs:{shape:x}});w.push(D),w.push(M);let P=o!=null,V=s!=null,U=a==="leakyrelu",q=a?Vi(a,!0):null,K=new zu(d?M.shape:I.shape,d?I.shape:M.shape,d?[e.batchSize,h,e.outChannels]:[e.batchSize,e.outChannels,h],y,v,P,q,V,U),j=d?[M,I]:[I,M];if(o&&j.push(o),V&&j.push(s),U){let Z=n.makeTensorInfo([],"float32",b.createScalarValue(i,"float32"));j.push(Z),w.push(Z)}let Y=n.runWebGLProgram(K,j,"float32"),ee=ne({inputs:{x:Y},backend:n,attrs:{shape:e.outShape}});w.push(Y);for(let Z of w)n.disposeIntermediateTensorInfo(Z);return ee}function xee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dataFormat:l,dilations:u,dimRoundingMode:c}=n,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,s.shape,i,u,a,c,!1,p),f;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))f=sh({x:o,filter:s,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){let g=new Vu(m),h=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];f=e.runWebGLProgram(g,[o,s],"float32",h)}else if(z().getBool("WEBGL_CONV_IM2COL"))f=ih({x:o,filter:s,convInfo:m,backend:e});else{let g=new Gu(m);f=e.runWebGLProgram(g,[o,s],"float32")}let d=ne({inputs:{x:f},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(f),d}var GR={kernelName:ya,backendName:"webgl",kernelFunc:xee};var ah=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},lh=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,i=t.dataFormat==="channelsLast",a=e-1-t.padInfo.top,l=n-1-t.padInfo.left,u=i?1:2,c=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},ch=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.padInfo.front,i=t.padInfo.top,a=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${s};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${a};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},uh=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterDepth,n=t.filterHeight,o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,a=t.strideWidth,l=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=o-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${s}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function yee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,dataFormat:l,dimRoundingMode:u,filterShape:c}=n,p=N.convertConv2DDataFormat(l),m=N.computeConv2DInfo(o.shape,c,i,1,a,u,!1,p),f=new ah(m);return e.runWebGLProgram(f,[o,s],"float32")}var VR={kernelName:C1,backendName:"webgl",kernelFunc:yee};var ph=class{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=it(this.outputShape.length);let e=t.filterHeight,n=t.filterWidth,o=e-1-t.padInfo.top,s=n-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${s});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function bee(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{inputShape:i,strides:a,pad:l,dataFormat:u,dimRoundingMode:c}=n,p=N.convertConv2DDataFormat(u),m=N.computeConv2DInfo(i,s.shape,a,1,l,c,!1,p);if(z().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){let f=[[m.strideHeight,m.strideWidth]],d=new ph(m);return e.runWebGLProgram(d,[o,s],"float32",f)}else{let f=new lh(m);return e.runWebGLProgram(f,[o,s],"float32")}}var UR={kernelName:ba,backendName:"webgl",kernelFunc:bee};function vee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:l}=n,u=N.computeConv3DInfo(o.shape,s.shape,i,l,a),c=new rh(u);return e.runWebGLProgram(c,[o,s],"float32")}var WR={kernelName:va,backendName:"webgl",kernelFunc:vee};function wee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,pad:a,filterShape:l}=n,u=N.computeConv3DInfo(o.shape,l,i,1,a),c=new ch(u);return e.runWebGLProgram(c,[o,s],"float32")}var qR={kernelName:S1,backendName:"webgl",kernelFunc:wee};function Tee(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{pad:i,strides:a,inputShape:l}=n,u=N.computeConv3DInfo(l,s.shape,a,1,i),c=new uh(u);return e.runWebGLProgram(c,[o,s],"float32")}var HR={kernelName:I1,backendName:"webgl",kernelFunc:Tee};var Cee=To+`
  return cos(x);
`,See=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${zn}
  return result;
`,Iee=be({opSnippet:Cee,packedOpSnippet:See}),KR={kernelName:zs,backendName:"webgl",kernelFunc:Iee};var Nee=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,kee=be({opSnippet:Nee}),jR={kernelName:Bs,backendName:"webgl",kernelFunc:kee};var mh=class{constructor(t,e,n,o,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[i,a,l,u]=t,[c]=e,[p,m]=n;this.outputShape=[c,p,m,u];let f=o==="bilinear"?1:0,[d,g]=[`${a-1}.0`,`${l-1}.0`],[h,x,y]=p>1?[`${(a-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[v,w,I]=m>1?[`${(l-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${h});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${x};
        float width_scale = ${w};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${d} ) {
          setOutput(float(${s}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${s}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};var Aee=r=>{let{inputs:t,backend:e,attrs:n}=r,{image:o,boxes:s,boxInd:i}=t,{cropSize:a,method:l,extrapolationValue:u}=n,c=new mh(o.shape,s.shape,a,l,u);return e.runWebGLProgram(c,[o,s,i],"float32")},XR={kernelName:k1,backendName:"webgl",kernelFunc:Aee};var Uu=function(r){return r.Prod="*",r.Sum="+",r}(Uu||{}),m2=class{constructor(t,e,n,o){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let s=this.outputShape.length,i=this.op===Uu.Prod?"1.0":"0.0",a=n?i:`getX(${YR(s,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1],u="",c="";n?(u=o?`end != ${l-1}`:"end != 0",c=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${l}`:"end >= pow2",c=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${$e(s)} coords = getOutputCoords();
        int end = ${ZR(s,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${c};
          ${ZR(s,"coords",this.op)} = idx;
          val ${this.op}= getX(${YR(s,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function YR(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.x, ${t}.y`;if(r===3)return`${t}.x, ${t}.y, ${t}.z`;if(r===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function ZR(r,t,e){if(r===1)return`${t}`;if(r===2)return`${t}.y`;if(r===3)return`${t}.z`;if(r===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${r} is not yet supported`)}function fh(r,t,e,n,o,s){let i=t.shape.length,a=N.getAxesPermutation([n],i),l=t;a!=null&&(l=It({inputs:{x:t},backend:e,attrs:{perm:a}}));let u=N.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${n}`);let c=l.shape[u],p=jt({inputs:{x:l},backend:e});for(let m=0;m<=Math.ceil(Math.log2(c))-1;m++){let f=new m2(r,l.shape,!1,s),d=[[m]],g=p;p=e.runWebGLProgram(f,[p],p.dtype,d),e.disposeIntermediateTensorInfo(g)}if(o){let m=new m2(r,l.shape,o,s),f=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(f)}if(a!=null){let m=N.getUndoAxesPermutation(a),f=It({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(l),f}return p}function Eee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;return fh(Uu.Prod,o,e,s,i,a)}var JR={kernelName:N1,backendName:"webgl",kernelFunc:Eee};function _ee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,exclusive:i,reverse:a}=n;return fh(Uu.Sum,o,e,s,i,a)}var QR={kernelName:wa,backendName:"webgl",kernelFunc:_ee};function Dee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,weights:s}=t,{size:i,binaryOutput:a}=n;if(o.shape.length===1){let l=e.readSync(o.dataId),u=e.readSync(s.dataId),c=Ad(l,u,s.dtype,s.shape,i);return e.makeTensorInfo([i],s.dtype,c)}else if(o.shape.length===2){let l=e.bufferSync(o),u=e.bufferSync(s),c=P_(l,u,i,a);return e.makeTensorInfo(c.shape,s.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}var e$={kernelName:A1,backendName:"webgl",kernelFunc:Dee};var dh=class{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function Ree(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockSize:s,dataFormat:i}=n,a=o.shape[0],l=i==="NHWC"?o.shape[1]:o.shape[2],u=i==="NHWC"?o.shape[2]:o.shape[3],c=i==="NHWC"?o.shape[3]:o.shape[1],p=l*s,m=u*s,f=c/(s*s),d=i==="NHWC"?[a,p,m,f]:[a,f,p,m],g=new dh(d,s,i);return e.runWebGLProgram(g,[o],o.dtype)}var t$={kernelName:E1,backendName:"webgl",kernelFunc:Ree};var Wu=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=it(this.outputShape.length);let i=t.filterHeight,a=t.filterWidth,l=t.outChannels/t.inChannels,u="",c="";n&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,c="result = activation(result);");let p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${c}
        setOutput(result);
      }
    `}};var qu=class{constructor(t,e=!1,n=null,o=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=it(this.outputShape.length);let i=t.outChannels/t.inChannels,a=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,p=t.filterWidth,m=p,f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let x=0;x<p;x++)f+=`
          vec4 xTexelC${x*2};
          int xTexelC${x*2}Ready;
          vec4 xTexelC${x*2+1};
          int xTexelC${x*2+1}Ready;
          vec4 xC${x};`;f+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let x=0;x<p;x++)f+=`
          xTexelC${x*2} = vec4(0.0);
          xTexelC${x*2}Ready = 0;
          xTexelC${x*2+1} = vec4(0.0);
          xTexelC${x*2+1}Ready = 0;
          xC${x} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let x=0;x<(m+1)/2;x++){let y=x*2;if(f+=`
          xC = xCCorner + ${y*u};
          `,l===1){if(y<p&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?f+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<p)){let v=a%2===0?b.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:f+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):v===1?f+=`
                    xC${y+1} = xTexelC${y};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<p&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<p&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<p&&(f+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<p&&(f+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<p&&(f+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let d="",g="";n&&(o?d=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:s?d=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:d=`vec4 activation(vec4 x) {
          ${n}
        }`,g="result = activation(result);");let h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${d}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${h}
        ${g}
        setOutput(result);
      }
    `}};function $ee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:l,dimRoundingMode:u}=n,c=l;c==null&&(c=[1,1]),b.assert(N.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=N.computeConv2DInfo(o.shape,s.shape,i,c,a,u,!0),m;z().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new qu(p):m=new Wu(p);let f=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[o,s],"float32",f)}var r$={kernelName:Ta,backendName:"webgl",kernelFunc:$ee};var hh=class{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;let e=t.strideHeight,n=t.strideWidth,o=t.padInfo.top,s=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${o};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${s};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},gh=class{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;let e=t.filterHeight,n=t.filterWidth,o=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.top,a=n-1-t.padInfo.left,l=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Fee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,dy:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,filterShape:c}=n,p=N.computeConv2DInfo(o.shape,c,i,a,l,u,!0),m=new hh(p);return e.runWebGLProgram(m,[o,s],"float32")}var n$={kernelName:_1,backendName:"webgl",kernelFunc:Fee};function Oee(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,filter:s}=t,{strides:i,dilations:a,pad:l,dimRoundingMode:u,inputShape:c}=n,p=N.computeConv2DInfo(c,s.shape,i,a,l,u,!0),m=new gh(p);return e.runWebGLProgram(m,[o,s],"float32")}var o$={kernelName:D1,backendName:"webgl",kernelFunc:Oee};var xh=class{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function Mee(r){let{inputs:t,backend:e}=r,{x:n}=t,o=[...n.shape,...n.shape],s=b.sizeFromShape(n.shape),i=ne({inputs:{x:n},backend:e,attrs:{shape:[s]}}),a=new xh(s),l=e.runWebGLProgram(a,[i],i.dtype),u=ne({inputs:{x:l},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}var s$={kernelName:R1,backendName:"webgl",kernelFunc:Mee};var yh=class{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;let{inHeight:e,inWidth:n,padInfo:o,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:l,dilationHeight:u,dilationWidth:c}=t,{top:p,left:m}=o;this.userCode=`
      const ivec2 strides = ivec2(${s}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function Pee(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s}=t,{strides:i,pad:a,dilations:l}=n,u=N.computeDilation2DInfo(o.shape,s.shape,i,a,"NHWC",l),c,p=new yh(u);c=e.runWebGLProgram(p,[o,s],"float32");let m=ne({inputs:{x:c},backend:e,attrs:{shape:u.outShape}});return e.disposeIntermediateTensorInfo(c),m}var i$={kernelName:Ca,backendName:"webgl",kernelFunc:Pee};function Lee(r){let{inputs:t,backend:e,attrs:n}=r,{equation:o}=n,s=t,{allDims:i,summedDims:a,idDims:l}=N.decodeEinsumEquation(o,s.length);N.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:c}=N.getEinsumComputePath(a,l),p=c.length,m=null,f=i.length,d=[];for(let g=0;g<p;++g){for(let h of c[g]){let{permutationIndices:x,expandDims:y}=N.getEinsumPermutation(f,l[h]),v;N.isIdentityPermutation(x)?v=s[h]:(v=It({inputs:{x:s[h]},backend:e,attrs:{perm:x}}),d.push(v));let w=v.shape.slice();for(let I=0;I<y.length;++I)w.splice(y[I],0,1);b.arraysEqual(v.shape,w)||(v=ne({inputs:{x:v},backend:e,attrs:{shape:w}}),d.push(v)),m===null?m=v:(m=u2({inputs:{a:v,b:m},backend:e}),d.push(m))}g<p-1&&(u[g]>=0&&(m=Xl({inputs:{x:m},backend:e,attrs:{axis:u[g]-(i.length-f),keepDims:!1}}),d.push(m)),f--)}for(let g of d)g!==m&&e.disposeIntermediateTensorInfo(g);return m}var a$={kernelName:$1,backendName:"webgl",kernelFunc:Lee};var zee="return (x >= 0.0) ? x : (exp(x) - 1.0);",Bee=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Gee=be({opSnippet:zee,packedOpSnippet:Bee}),l$={kernelName:Vs,backendName:"webgl",kernelFunc:Gee};var Vee="return (b >= 0.0) ? a : a * (b + 1.0);",Uee=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,Wee=r=>{let{inputs:t,backend:e}=r,{dy:n,y:o}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Ln(Uee,n.shape,o.shape):new Cn(Vee,n.shape,o.shape);return e.runWebGLProgram(s,[n,o],n.dtype)},c$={kernelName:F1,backendName:"webgl",kernelFunc:Wee};var qee=`
  return vec4(equal(a, b));
`,Hee="return float(a == b);",Kee=nt({opSnippet:Hee,packedOpSnippet:qee,dtype:"bool",cpuKernelImpl:V_}),u$={kernelName:X0,backendName:"webgl",kernelFunc:Kee};var jee=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,Xee=be({opSnippet:jee}),p$={kernelName:Us,backendName:"webgl",kernelFunc:Xee};var Yee=To+`
  return exp(x);
`,Zee=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,I8=be({opSnippet:Yee,packedOpSnippet:Zee,cpuKernelImpl:U_,dtype:"float32"}),m$={kernelName:Ws,backendName:"webgl",kernelFunc:I8};function bh(r){let{inputs:t,attrs:e,backend:n}=r,{dim:o}=e,{input:s}=t,i=s.shape.length,a=s.shape.slice(),l=o;return o<0&&(b.assert(-(i+1)<=o,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),l=i+o+1),a.splice(l,0,1),ne({inputs:{x:s},backend:n,attrs:{shape:a}})}var f$={kernelName:Sa,backendName:"webgl",kernelFunc:bh};var d$="return exp(x) - 1.0;",Jee=be({opSnippet:d$,packedOpSnippet:d$,cpuKernelImpl:W_}),h$={kernelName:qs,backendName:"webgl",kernelFunc:Jee};var f2=class{constructor(t,e,n){this.variableNames=["real","imag"];let o=e[1];this.outputShape=e;let s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${o}.0`:"1.0",a;if(t==="real")a="return real * expR - imag * expI;";else if(t==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${s};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function vh(r,t,e){let n=e.texData.get(r.dataId),o=b.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=o/s,a=ne({inputs:{x:r},backend:e,attrs:{shape:[i,s]}}),l=a.shape,u=new f2("real",l,t),c=new f2("imag",l,t),p=[{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:l},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:l}],m=e.runWebGLProgram(u,p,"float32"),f=e.runWebGLProgram(c,p,"float32"),d=Sn({inputs:{real:m,imag:f},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f);let g=ne({inputs:{x:d},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(d),g}function Qee(r){let{inputs:t,backend:e}=r,{input:n}=t;return vh(n,!1,e)}var g$={kernelName:O1,backendName:"webgl",kernelFunc:Qee};var wh=class{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function Wi(r){let{backend:t,attrs:e}=r,{shape:n,value:o}=e,{dtype:s}=e;if(s=s||b.inferDtype(o),s==="string"){let i=b.getArrayFromDType(s,b.sizeFromShape(n));return i.fill(o),t.makeTensorInfo(n,s,i)}else{let i=new wh(n,o),a=[[o]];return t.runWebGLProgram(i,[],s,a)}}var x$={kernelName:M1,backendName:"webgl",kernelFunc:Wi};var Th=class{constructor(t){this.variableNames=["Image"],this.outputShape=[];let e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var y$={kernelName:P1,backendName:"webgl",kernelFunc:({inputs:r,backend:t})=>{let{image:e}=r,n=t,o=new Th(e.shape);return n.runWebGLProgram(o,[e],e.dtype)}};var b$="return floor(x);",ete=be({opSnippet:b$,packedOpSnippet:b$,cpuKernelImpl:q_}),v$={kernelName:Hs,backendName:"webgl",kernelFunc:ete};var tte=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,rte=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,nte=nt({opSnippet:tte,packedOpSnippet:rte,dtype:"int32"}),w$={kernelName:Ks,backendName:"webgl",kernelFunc:nte};var Ch=class{constructor(t){this.variableNames=["A"];let e=Ot(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${n}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};var Sh=class{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let e=Ot(),[n,o]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${n}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}};var T$={kernelName:cy,backendName:"webgl",kernelFunc:ote},Hu,N8=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ote(r){let{inputs:t,backend:e,attrs:n}=r,{pixels:o}=t,{numChannels:s}=n,i=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[l,u]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],c=[u,l],p=[u,l,s];if(a||i){let g=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Hu==null||g!==N8)&&(N8=g,Hu=document.createElement("canvas").getContext("2d",{willReadFrequently:N8})),Hu.canvas.width=l,Hu.canvas.height=u,Hu.drawImage(o,0,0,l,u),o=Hu.canvas}let m=e.makeTensorInfo(c,"int32");e.texData.get(m.dataId).usage=jr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),o);let f=z().getBool("WEBGL_PACK")?new Sh(p):new Ch(p),d=e.runWebGLProgram(f,[m],"int32");return e.disposeData(m.dataId),d}function ste(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dataFormat:c,dilations:p,dimRoundingMode:m,activation:f,leakyreluAlpha:d}=n,g=N.convertConv2DDataFormat(c),h=N.computeConv2DInfo(o.shape,s.shape,l,p,u,m,!1,g),x,y=[],v=i!=null,w=a!=null,I=f==="leakyrelu",E=()=>{let D=[o,s],M=(P,V)=>{if(V==="NCHW"&&P.shape.length===1&&P.shape[0]!==1){let U=ne({inputs:{x:P},backend:e,attrs:{shape:[P.shape[0],1,1]}});return y.push(U),U}return P};if(v&&D.push(M(i,c)),w&&D.push(M(a,c)),I){let P=e.makeTensorInfo([],"float32",b.createScalarValue(d,"float32"));D.push(P),y.push(P)}return D};if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))x=sh({x:o,filter:s,convInfo:h,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else if(h.strideWidth<=2&&g==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){let D=f?Vi(f,!0):null,M=new Vu(h,v,D,w,I),P=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]],V=E();x=e.runWebGLProgram(M,V,"float32",P)}else if(z().getBool("WEBGL_CONV_IM2COL"))x=ih({x:o,filter:s,convInfo:h,backend:e,bias:i,activation:f,preluActivationWeights:a,leakyreluAlpha:d});else{let D=f?Vi(f,!1):null,M=new Gu(h,v,D,w,I),P=E();x=e.runWebGLProgram(M,P,"float32")}let _=ne({inputs:{x},backend:e,attrs:{shape:h.outShape}});return y.push(x),y.forEach(D=>e.disposeIntermediateTensorInfo(D)),_}var C$={kernelName:sl,backendName:"webgl",kernelFunc:ste};function ite(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,filter:s,bias:i,preluActivationWeights:a}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:p,activation:m,leakyreluAlpha:f}=n,d=[],g=c;g==null&&(g=[1,1]),b.assert(N.eitherStridesOrDilationsAreOne(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);let h=N.computeConv2DInfo(o.shape,s.shape,l,g,u,p,!0),x=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1,y=m?Vi(m,x):null,v=[o,s],w=i!=null,I=a!=null,E=m==="leakyrelu";if(w&&v.push(i),I&&v.push(a),E){let P=e.makeTensorInfo([],"float32",b.createScalarValue(f,"float32"));v.push(P),d.push(P)}let _;x?_=new qu(h,w,y,I,E):_=new Wu(h,w,y,I,E);let D=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]],M=e.runWebGLProgram(_,v,"float32",D);return d.forEach(P=>e.disposeIntermediateTensorInfo(P)),M}var S$={kernelName:il,backendName:"webgl",kernelFunc:ite};var Ih=class{constructor(t,e,n,o){this.sliceDim=t,this.strides=e,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=n;let s=$e(n.length),i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${s} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function ate(r){let{inputs:t,backend:e}=r,{params:n,indices:o}=t,s=o.shape,i=s[s.length-1],a=b.sizeFromShape(n.shape),[l,u,c,p]=N.prepareAndValidate(n,o),m=ne({inputs:{x:o},backend:e,attrs:{shape:[u,i]}}),f=ne({inputs:{x:n},backend:e,attrs:{shape:[b.sizeFromShape(n.shape)/c,c]}});if(e.shouldExecuteOnCPU([n,o])||n.dtype==="string"){let x=e.readSync(o.dataId),y=e.bufferSync(n),v=H_(x,y,n.dtype,u,i,c,p,n.shape,a);return e.makeTensorInfo(l,n.dtype,v.values)}let d=new Ih(i,p,[u,c],n.shape),g=e.runWebGLProgram(d,[f,m],f.dtype),h=ne({inputs:{x:g},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(g),h}var I$={kernelName:L1,backendName:"webgl",kernelFunc:ate};var Nh=class{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;let n=$e(this.rank),o=lte(t,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}};function lte(r,t){let e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let o=0;o<r.length;o++)o===2?n.push("index"):n.push(`${e[o]}`);return n.join()}function k8(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,indices:s}=t,{axis:i,batchDims:a}=n,l=b.parseAxisParam(i,o.shape)[0];if(z().get("DEBUG")){let y=e.readSync(s.dataId),v=o.shape[l];for(let w=0;w<y.length;++w){let I=y[w];b.assert(I<=v-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${v-1}]`)}}let u=N.segment_util.collectGatherOpShapeInfo(o,s,l,a),c=b.sizeFromShape(s.shape),p=[],m=ne({inputs:{x:o},backend:e,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=ne({inputs:{x:s},backend:e,attrs:{shape:[u.batchSize,c/u.batchSize]}});p.push(m),p.push(f);let d=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(e.shouldExecuteOnCPU([o,s])||o.dtype==="string"){let y=e.bufferSync(f),v=e.bufferSync(m),w=K_(v,y,d);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(u.outputShape,w.dtype,w.values)}let g=new Nh(m.shape,d),h=e.runWebGLProgram(g,[m,f],m.dtype);p.push(h);let x=ne({inputs:{x:h},backend:e,attrs:{shape:u.outputShape}});return p.forEach(y=>e.disposeIntermediateTensorInfo(y)),x}var N$={kernelName:Na,backendName:"webgl",kernelFunc:k8};var cte="return float(a > b);",ute=`
  return vec4(greaterThan(a, b));
`,pte=nt({opSnippet:cte,packedOpSnippet:ute,cpuKernelImpl:j_,dtype:"bool"}),k$={kernelName:Y0,backendName:"webgl",kernelFunc:pte};var mte="return float(a >= b);",fte=`
  return vec4(greaterThanEqual(a, b));
`,dte=nt({opSnippet:mte,packedOpSnippet:fte,dtype:"bool",cpuKernelImpl:X_}),A$={kernelName:js,backendName:"webgl",kernelFunc:dte};function hte(r){let{inputs:t,backend:e}=r,{input:n}=t;return vh(n,!0,e)}var E$={kernelName:z1,backendName:"webgl",kernelFunc:hte};var gte="return float(!isnan(x) && !isinf(x));",xte=be({opSnippet:gte,dtype:"bool"}),_$={kernelName:Xs,backendName:"webgl",kernelFunc:xte};var yte="return float(isinf(x));",bte=be({opSnippet:yte,dtype:"bool"}),D$={kernelName:Ys,backendName:"webgl",kernelFunc:bte};var vte="return float(isnan(x));",wte=be({opSnippet:vte,dtype:"bool"}),R$={kernelName:Zs,backendName:"webgl",kernelFunc:wte};var Tte="return float(a < b);",Cte=`
  return vec4(lessThan(a, b));
`,Ste=nt({opSnippet:Tte,packedOpSnippet:Cte,cpuKernelImpl:Y_,dtype:"bool"}),$$={kernelName:Z0,backendName:"webgl",kernelFunc:Ste};var Ite="return float(a <= b);",Nte=`
  return vec4(lessThanEqual(a, b));
`,kte=nt({opSnippet:Ite,packedOpSnippet:Nte,cpuKernelImpl:Z_,dtype:"bool"}),F$={kernelName:J0,backendName:"webgl",kernelFunc:kte};function Ate(r){let{backend:t,attrs:e}=r,{start:n,stop:o,num:s}=e,i=J_(n,o,s);return t.makeTensorInfo([i.length],"float32",i)}var O$={kernelName:G1,backendName:"webgl",kernelFunc:Ate};var Ete=To+`
  return x < 0.0 ? 0./0. : log(x);
`,_te=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Dte=be({opSnippet:Ete,packedOpSnippet:_te,cpuKernelImpl:Q_}),M$={kernelName:Js,backendName:"webgl",kernelFunc:Dte};var Rte=To+`
  return log(1.0 + x);
`,$te=be({opSnippet:Rte}),P$={kernelName:Qs,backendName:"webgl",kernelFunc:$te};var Fte="return float(a >= 1.0 && b >= 1.0);",Ote=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Mte=nt({opSnippet:Fte,packedOpSnippet:Ote,dtype:"bool"}),L$={kernelName:Q0,backendName:"webgl",kernelFunc:Mte};var Pte="return float(!(x >= 1.0));",Lte=be({opSnippet:Pte}),z$={kernelName:el,backendName:"webgl",kernelFunc:Lte};var zte="return float(a >= 1.0 || b >= 1.0);",Bte=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Gte=nt({opSnippet:zte,packedOpSnippet:Bte,dtype:"bool"}),B$={kernelName:tl,backendName:"webgl",kernelFunc:Gte};var kh=class{constructor(t,e,n,o,s){this.variableNames=["x"],this.outputShape=[];let i=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};var Ah=class{constructor(t,e,n,o,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let i=e,a=t[3]-1;this.outputShape=t;let l,u=`float(${n}) + float(${o}) * sum`;s===.5?l=`inversesqrt(${u})`:s===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${s}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}};var Vte=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{depthRadius:s,bias:i,alpha:a,beta:l}=n,u=z().getBool("WEBGL_PACK_NORMALIZATION")?new Ah(o.shape,s,i,a,l):new kh(o.shape,s,i,a,l);return e.runWebGLProgram(u,[o],o.dtype)},G$={kernelName:Aa,backendName:"webgl",kernelFunc:Vte};var Eh=class{constructor(t,e,n,o,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=o,this.beta=s,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${s})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${s});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};var Ute=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o,y:s,dy:i}=t,{depthRadius:a,bias:l,alpha:u,beta:c}=n,p=new Eh(o.shape,a,l,u,c);return e.runWebGLProgram(p,[o,s,i],o.dtype)},V$={kernelName:V1,backendName:"webgl",kernelFunc:Ute};function U$(r,t,e,n){let o=b.sizeFromShape(t),i=b.sizeFromShape(r.shape)/o,a=ne({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),l=Bn(a,r.dtype,"max",n),u=ne({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}function A8(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reductionIndices:s,keepDims:i}=n,a=o.shape.length,l=b.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,a),p=c!=null,m=e.shouldExecuteOnCPU([o]),f=o;if(p){if(m){let v=e.texData.get(f.dataId).values,w=new Array(a);for(let _=0;_<w.length;_++)w[_]=o.shape[c[_]];let I=jl(v,o.shape,o.dtype,c,w);f=e.makeTensorInfo(w,o.dtype);let E=e.texData.get(f.dataId);E.values=I}else f=$0(o,c,e);u=N.getInnerMostAxes(u.length,a)}N.assertAxesAreInnerMostDims("max",u,a);let[d,g]=N.computeOutAndReduceShapes(f.shape,u),h=d;i&&(h=N.expandShapeToKeepDim(d,l));let x;if(m){let v=e.texData.get(f.dataId).values,w=eD(v,b.sizeFromShape(g),h,o.dtype);x=e.makeTensorInfo(h,o.dtype);let I=e.texData.get(x.dataId);I.values=w}else x=U$(f,g,h,e);return p&&e.disposeIntermediateTensorInfo(f),x}var W$={kernelName:Ea,backendName:"webgl",kernelFunc:A8};var Wte=Lu+`
  return max(a, b);
`,qte=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zn+`
  return result;
`,Hte=nt({opSnippet:Wte,packedOpSnippet:qte,cpuKernelImpl:tD}),q$={kernelName:ei,backendName:"webgl",kernelFunc:Hte};function Kte(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;ws(o,"maxPool");let{filterSize:s,strides:i,pad:a,dimRoundingMode:l}=n,u=1;b.assert(N.eitherStridesOrDilationsAreOne(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);let c=N.computePool2DInfo(o.shape,s,i,u,a,l);if(c.filterWidth===1&&c.filterHeight===1&&b.arraysEqual(c.inShape,c.outShape))return jt({inputs:{x:o},backend:e});let p=new qo(c,"max",!1);return e.runWebGLProgram(p,[o],o.dtype)}var H$={kernelName:_a,backendName:"webgl",kernelFunc:Kte};function jte(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{filterSize:s,strides:i,pad:a,dataFormat:l,dimRoundingMode:u}=n,c=[1,1,1],p=N.computePool3DInfo(o.shape,s,i,c,a,u,l),m=new F0(p,"max",!1);return e.runWebGLProgram(m,[o],o.dtype)}var K$={kernelName:Da,backendName:"webgl",kernelFunc:jte};var _h=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideHeight,n=t.strideWidth,o=t.dilationHeight,s=t.effectiveFilterHeight,i=t.effectiveFilterWidth,a=s-1-t.padInfo.top,l=i-1-t.padInfo.left,u=s*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${s};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},Dh=class{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;let e=t.strideDepth,n=t.strideHeight,o=t.strideWidth,s=t.dilationDepth,i=t.dilationHeight,a=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,p=l-1-t.padInfo.front,m=u-1-t.padInfo.top,f=c-1-t.padInfo.left,d=l*u*c-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${s}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${d} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Xte(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s}=t,i=s,{filterSize:a,strides:l,pad:u,dimRoundingMode:c}=n,p=[1,1,1],m=N.computePool3DInfo(i.shape,a,l,p,u,c),f=new F0(m,"max",!0),d=e.runWebGLProgram(f,[i],i.dtype),g=new Dh(m),h=e.runWebGLProgram(g,[o,d],i.dtype);return e.disposeIntermediateTensorInfo(d),h}var j$={kernelName:W1,backendName:"webgl",kernelFunc:Xte};function Yte(r){let{inputs:t,backend:e,attrs:n}=r,{dy:o,input:s,output:i}=t,a=s;ws([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:c,dimRoundingMode:p}=n,m=N.computePool2DInfo(a.shape,l,u,1,c,p),f=!0,d=new qo(m,"max",f),g=e.runWebGLProgram(d,[a],a.dtype),h=new _h(m),x=e.runWebGLProgram(h,[o,g],a.dtype);return e.disposeIntermediateTensorInfo(g),x}var X$={kernelName:U1,backendName:"webgl",kernelFunc:Yte};function Y$(r,t,e,n){let o=new qo(e,"max",!1),s=n.runWebGLProgram(o,[r],"float32");o=new qo(e,"max",!0,!0,t);let i=n.runWebGLProgram(o,[r],"float32");return[s,i]}var Z$={kernelName:q1,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{filterSize:o,strides:s,pad:i,includeBatchInIndex:a}=t,l=e;b.assert(n.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${n.shape.length}.`);let u=[1,1];b.assert(N.eitherStridesOrDilationsAreOne(s,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`);let c=N.computePool2DInfo(n.shape,o,s,u,i),[p,m]=Y$(n,a,c,l);return[p,m]}};function J$(r,t,e,n){let o=b.sizeFromShape(t),i=b.sizeFromShape(r.shape)/o,a=ne({inputs:{x:r},attrs:{shape:[i,o]},backend:n}),l=Bn(a,"float32","mean",n),u=ne({inputs:{x:l},attrs:{shape:e},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}var Q$={kernelName:Ra,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{x:n}=r,{keepDims:o,axis:s}=t,i=e,a=n.shape.length,l=b.parseAxisParam(s,n.shape),u=l,c=N.getAxesPermutation(u,a),p=c!=null,m=i.shouldExecuteOnCPU([n]),f=[],d=n;if(p){if(m){let w=i.texData.get(d.dataId).values,I=new Array(a);for(let D=0;D<I.length;D++)I[D]=n.shape[c[D]];let E=jl(w,n.shape,n.dtype,c,I);d=i.makeTensorInfo(I,n.dtype);let _=i.texData.get(d.dataId);_.values=E}else d=$0(n,c,i);f.push(d),u=N.getInnerMostAxes(u.length,a)}N.assertAxesAreInnerMostDims("sum",u,a);let[g,h]=N.computeOutAndReduceShapes(d.shape,u),x=g;o&&(x=N.expandShapeToKeepDim(g,l));let y=J$(d,h,x,i);for(let v of f)i.disposeIntermediateTensorInfo(v);return y}};function Zte(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,l=b.parseAxisParam(s,o.shape),u=l,c=N.getAxesPermutation(u,a),p=o;c!=null&&(p=It({inputs:{x:o},backend:e,attrs:{perm:c}}),u=N.getInnerMostAxes(u.length,o.shape.length)),N.assertAxesAreInnerMostDims("min",u,a);let[m,f]=N.computeOutAndReduceShapes(p.shape,u),d=b.sizeFromShape(f),g=ne({inputs:{x:p},backend:e,attrs:{shape:[-1,d]}}),h=Bn(g,g.dtype,"min",e),x;if(i){let y=N.expandShapeToKeepDim(m,l);x=ne({inputs:{x:h},backend:e,attrs:{shape:y}})}else x=ne({inputs:{x:h},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(h),c!=null&&e.disposeIntermediateTensorInfo(p),x}var eF={kernelName:$a,backendName:"webgl",kernelFunc:Zte};var Jte=Lu+`
  return min(a, b);
`,Qte=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+zn+`
  return result;
`,ere=nt({opSnippet:Jte,packedOpSnippet:Qte,cpuKernelImpl:rD}),tF={kernelName:ti,backendName:"webgl",kernelFunc:ere};var Rh=class{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((c,p)=>c[0]+t[p]+c[1]);let o=t.length,s=$e(o),i=e.map(c=>c[0]).join(","),a=e.map((c,p)=>c[0]+t[p]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=n==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${s} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};var $h=class{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((d,g)=>d[0]+t[g]+d[1]);let o=t.length,s=$e(o),i=e.map(d=>d[0]).join(","),a=e.map((d,g)=>d[0]+t[g]).join(","),l=Kt("rc",o),u=Kt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=n==="reflect"?0:1,f="";if(o===1){let d=`
        ${s} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
      `}else{let d=`
        ${s} source = rc;
        ${s} lt = ${s}(lessThan(source, start));
        ${s} gte = ${s}(greaterThanEqual(source, end));
        ${s} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;f=`
        ${s} rc = outputLoc;
        ${d}
        result[0] = getChannel(getX(${u.join()}), ${p});
        ${l[o-1]} += 1;
        if(${c}) {
          ${d}
          result[1] = getChannel(getX(${u.join()}), ${p});
        }
        rc = outputLoc;
        ${l[o-2]} += 1;
        if(${l[o-2]} < ${this.outputShape[o-2]}) {
          ${d}
          result[2] = getChannel(getX(${u.join()}), ${p});
          ${l[o-1]} += 1;
          if(${c}) {
            ${d}
            result[3] = getChannel(getX(${u.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}};var tre=({inputs:r,backend:t,attrs:e})=>{let{x:n}=r,{paddings:o,mode:s}=e,i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $h(n.shape,o,s):new Rh(n.shape,o,s);return t.runWebGLProgram(i,[n],n.dtype)},rF={kernelName:Fa,backendName:"webgl",kernelFunc:tre};var rre=`if (b == 0.0) return NAN;
  return mod(a, b);`,nre=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+zn+`
  return result;
`,ore=nt({opSnippet:rre,packedOpSnippet:nre}),nF={kernelName:ri,backendName:"webgl",kernelFunc:ore};var Fh=class{constructor(t,e,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}};var sre=`
if (a == b) {
  return 1.0;
};
return a / b;`,ire=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,E8=nt({opSnippet:sre,packedOpSnippet:ire,checkOutOfBounds:!0}),oF={kernelName:Gs,backendName:"webgl",kernelFunc:E8};var sF="return a - b;",_8=nt({opSnippet:sF,packedOpSnippet:sF,supportsComplex:!0,cpuKernelImpl:CD}),iF={kernelName:yi,backendName:"webgl",kernelFunc:_8};function D8(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{dim:s}=n,i=b.parseAxisParam([s],o.shape),a=A8({inputs:{x:o},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),l=N.expandShapeToKeepDim(a.shape,i),u=ne({inputs:{x:a},backend:e,attrs:{shape:l}}),c=_8({inputs:{a:o,b:u},backend:e}),p=I8({inputs:{x:c},backend:e}),m=Xl({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),f=ne({inputs:{x:m},backend:e,attrs:{shape:l}}),d=E8({inputs:{a:p,b:f},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(u),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(f),d}var aF={kernelName:Za,backendName:"webgl",kernelFunc:D8};function are(r){let{inputs:t,backend:e,attrs:n}=r,{logits:o}=t,{numSamples:s,seed:i,normalized:a}=n,l=a?o:D8({inputs:{logits:o},backend:e,attrs:{dim:o.shape.length-1}}),u=l.shape[0],c=l.shape[1],p=new Fh(u,c,s),m=[[i]],f=e.runWebGLProgram(p,[l],"int32",m);return a||e.disposeIntermediateTensorInfo(l),f}var lF={kernelName:H1,backendName:"webgl",kernelFunc:are};var lre=fr+`
  return -x;
`,cre=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function ure(r){let{inputs:t,backend:e}=r,{x:n}=t;if(e.shouldExecuteOnCPU([n])){let s=e.texData.get(n.dataId),[i,a]=oD(s.values,n.shape,n.dtype);return e.makeTensorInfo(a,n.dtype,i)}let o;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Tn(n.shape,cre):o=new Rr(n.shape,lre),e.runWebGLProgram(o,[n],n.dtype)}var cF={kernelName:Oa,backendName:"webgl",kernelFunc:ure};var pre=zr.nonMaxSuppressionV3Impl;function mre(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l}=n,u=e.readSync(o.dataId),c=e.readSync(s.dataId),{selectedIndices:p}=pre(u,c,i,a,l);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}var uF={kernelName:K1,backendName:"webgl",kernelFunc:mre};var fre=zr.nonMaxSuppressionV4Impl;function dre(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:u}=n,c=e.readSync(o.dataId),p=e.readSync(s.dataId),{selectedIndices:m,validOutputs:f}=fre(c,p,i,a,l,u);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([f]))]}var pF={kernelName:j1,backendName:"webgl",kernelFunc:dre};var hre=zr.nonMaxSuppressionV5Impl;function gre(r){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:e,attrs:n}=r,{boxes:o,scores:s}=t,{maxOutputSize:i,iouThreshold:a,scoreThreshold:l,softNmsSigma:u}=n,c=e.readSync(o.dataId),p=e.readSync(s.dataId),m=i,f=a,d=l,g=u,{selectedIndices:h,selectedScores:x}=hre(c,p,m,f,d,g);return[e.makeTensorInfo([h.length],"int32",new Int32Array(h)),e.makeTensorInfo([x.length],"float32",new Float32Array(x))]}var mF={kernelName:X1,backendName:"webgl",kernelFunc:gre};var Oh=class{constructor(t,e,n,o){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${n}),
                      float(index == coords.y)));
      }
    `}};var xre=r=>{let{inputs:t,backend:e,attrs:n}=r,{indices:o}=t,{dtype:s,depth:i,onValue:a,offValue:l}=n,u=b.sizeFromShape(o.shape),c=new Oh(u,i,a,l),p=ne({inputs:{x:o},backend:e,attrs:{shape:[u]}}),m=e.runWebGLProgram(c,[p],s);e.disposeIntermediateTensorInfo(p);let f=[...o.shape,i],d=ne({inputs:{x:m},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(m),d},fF={kernelName:Pa,backendName:"webgl",kernelFunc:xre};function d2(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="complex64"){let o=Ui({inputs:{input:n},backend:e}),s=d2({inputs:{x:o},backend:e}),i=Zl({inputs:{input:n},backend:e}),a=d2({inputs:{x:i},backend:e}),l=Sn({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return Wi({attrs:{shape:n.shape,dtype:n.dtype,value:n.dtype==="string"?"":0},backend:e})}var dF={kernelName:e0,backendName:"webgl",kernelFunc:d2};function hF(r){let{inputs:t,backend:e}=r,{x:n}=t;if(n.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(n.dtype==="complex64"){let o=Ui({inputs:{input:n},backend:e}),s=hF({inputs:{x:o},backend:e}),i=Zl({inputs:{input:n},backend:e}),a=d2({inputs:{x:i},backend:e}),l=Sn({inputs:{real:s,imag:a},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(a),l}else return Wi({attrs:{shape:n.shape,dtype:n.dtype,value:1},backend:e})}var gF={kernelName:Ma,backendName:"webgl",kernelFunc:hF};function yre(r){let{inputs:t,backend:e,attrs:n}=r,{axis:o}=n;if(t.length===1)return bh({inputs:{input:t[0]},backend:e,attrs:{dim:o}});let s=t[0].shape,i=t[0].dtype;t.forEach(c=>{b.assertShapesMatch(s,c.shape,"All tensors passed to stack must have matching shapes"),b.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let a=[],l=t.map(c=>{let p=bh({inputs:{input:c},backend:e,attrs:{dim:o}});return a.push(p),p}),u=S8({inputs:l,backend:e,attrs:{axis:o}});return a.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}var xF={kernelName:La,backendName:"webgl",kernelFunc:yre};var Mh=class{constructor(t,e,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((u,c)=>u[0]+t[c]+u[1]);let o=t.length,s=$e(o),i=e.map(u=>u[0]).join(","),a=e.map((u,c)=>u[0]+t[c]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${s} start = ${s}(${i});
      ${s} end = ${s}(${a});

      void main() {
        ${s} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${s} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};var Ph=class{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((g,h)=>g[0]+t[h]+g[1]);let o=t.length,s=$e(o),i=e.map(g=>g[0]).join(","),a=e.map((g,h)=>g[0]+t[h]).join(","),l=Kt("rc",o),u=Kt("source",o),c=`${l[o-1]} < ${this.outputShape[o-1]}`,p=o===1?"source":`vec2(${u.slice(-2).join()})`,m=[`${s} rc = outputLoc;`,`${l[o-1]} += 1;
       if(${c}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${l[o-2]} += 1;
       if(${l[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${l[o-1]} += 1;
         if(${c}) {`],f=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="";for(let g=0,h=o===1?2:4;g<h;g++)d+=`
        ${m[g]}
        if (${f}) {
          result[${g}] = float(value);
        } else {
          ${s} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${p});
        }
      `;d+=o===1?"} ":"}}",this.userCode=`
      const ${s} start = ${s}(${i});
      const ${s} end = ${s}(${a});

      void main() {
        ${s} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}};var R8=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{paddings:s,constantValue:i}=n;if(b.sizeFromShape(o.shape)===0){let u=s.map((c,p)=>c[0]+o.shape[p]+c[1]);return Wi({backend:e,attrs:{shape:u,value:i,dtype:o.dtype}})}let a=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ph(o.shape,s,i):new Mh(o.shape,s,i),l=[[i]];return e.runWebGLProgram(a,[o],o.dtype,l)},yF={kernelName:za,backendName:"webgl",kernelFunc:R8};var bre=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,vre=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+zn+`
  return result;
`,wre=nt({opSnippet:bre,packedOpSnippet:vre}),bF={kernelName:oi,backendName:"webgl",kernelFunc:wre};function Tre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{axis:s,keepDims:i}=n,a=o.shape.length,l=[],u=b.parseAxisParam(s,o.shape),c=u,p=N.getAxesPermutation(c,a),m=o;p!=null&&(m=It({inputs:{x:o},backend:e,attrs:{perm:p}}),c=N.getInnerMostAxes(c.length,a),l.push(m)),N.assertAxesAreInnerMostDims("prod",c,a);let f;if(e.shouldExecuteOnCPU([m])){let d=e.texData.get(m.dataId).values,{outVals:g,outShape:h,outDtype:x}=iD(m.shape,m.dtype,d,c);f=e.makeTensorInfo(h,x,g)}else{let[d,g]=N.computeOutAndReduceShapes(m.shape,c),h=b.sizeFromShape(g),x=ne({inputs:{x:m},backend:e,attrs:{shape:[-1,h]}}),y=ml(o.dtype),v=Bn(x,y,"prod",e);f=ne({inputs:{x:v},backend:e,attrs:{shape:d}}),l.push(x),l.push(v)}if(i){l.push(f);let d=N.expandShapeToKeepDim(f.shape,u);f=ne({inputs:{x:f},backend:e,attrs:{shape:d}})}return l.forEach(d=>e.disposeIntermediateTensorInfo(d)),f}var vF={kernelName:Ga,backendName:"webgl",kernelFunc:Tre};function Cre(r){let{inputs:t,backend:e,attrs:n}=r,{paramsNestedSplits:o,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:a}=n,l=o.map(x=>e.readSync(x.dataId)),u=o.map(x=>x.shape),c=e.readSync(s.dataId),p=e.readSync(i.dataId),[m,f,d]=aD(l,u,c,s.shape,s.dtype,p,i.shape,a),g=m.map(x=>e.makeTensorInfo([x.length],"int32",x)),h=e.makeTensorInfo(d,s.dtype,f);return g.concat([h])}var wF={kernelName:Y1,backendName:"webgl",kernelFunc:Cre};function Sre(r){let{inputs:t,backend:e}=r,{starts:n,limits:o,deltas:s}=t,i=e.readSync(n.dataId),a=e.readSync(o.dataId),l=e.readSync(s.dataId),[u,c]=lD(i,n.shape,n.dtype,a,o.shape,l,s.shape),p=e.makeTensorInfo([u.length],"int32",u),m=e.makeTensorInfo([c.length],n.dtype,c);return[p,m]}var TF={kernelName:Z1,backendName:"webgl",kernelFunc:Sre};function Ire(r){let{inputs:t,backend:e,attrs:n}=r,{shape:o,values:s,defaultValue:i,rowPartitionTensors:a}=t,{rowPartitionTypes:l}=n,u=e.readSync(o.dataId),c=e.readSync(s.dataId),p=e.readSync(i.dataId),m=a.map(h=>e.readSync(h.dataId)),f=a.map(h=>h.shape),[d,g]=cD(u,o.shape,c,s.shape,s.dtype,p,i.shape,m,f,l);return e.makeTensorInfo(d,s.dtype,g)}var CF={kernelName:J1,backendName:"webgl",kernelFunc:Ire};var $8=r=>{let{backend:t,attrs:e}=r,{start:n,stop:o,step:s,dtype:i}=e,a=uD(n,o,s,i);return t.makeTensorInfo([a.length],i,a)},SF={kernelName:Q1,backendName:"webgl",kernelFunc:$8};var Nre="return 1.0 / x;",kre=be({opSnippet:Nre}),IF={kernelName:si,backendName:"webgl",kernelFunc:kre};var Are=fr+`
  return (x < 0.0) ? 0.0 : x;
`,Ere=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_re=be({opSnippet:Are,packedOpSnippet:Ere}),NF={kernelName:ii,backendName:"webgl",kernelFunc:_re};var Dre=fr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Rre=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$re=be({opSnippet:Dre,packedOpSnippet:Rre}),kF={kernelName:ai,backendName:"webgl",kernelFunc:$re};var Lh=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,n,u];let c=[o&&e>1?a-1:a,o&&n>1?l-1:l],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m;s?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};var zh=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,n,u];let c=[o&&e>1?a-1:a,o&&n>1?l-1:l],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m;s?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Fre(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[l,u]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zh(o.shape,l,u,s,i):new Lh(o.shape,l,u,s,i);return e.runWebGLProgram(c,[o],"float32")}var AF={kernelName:Wa,backendName:"webgl",kernelFunc:Fre};var Bh=class{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,o,s]=e,[,i,a]=t,l=[n&&i>1?o-1:o,n&&a>1?s-1:s],u=[n&&i>1?i-1:i,n&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Ore(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n,a=new Bh(s.shape,o.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var EF={kernelName:rc,backendName:"webgl",kernelFunc:Ore};var Gh=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,n,u];let c=[o&&e>1?a-1:a,o&&n>1?l-1:l],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/p[0]},
          ${c[1]/p[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};var Vh=class{constructor(t,e,n,o,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[i,a,l,u]=t;this.outputShape=[i,e,n,u];let c=[o&&e>1?a-1:a,o&&n>1?l-1:l],p=[o&&e>1?e-1:e,o&&n>1?n-1:n],m=o?"0.5":"0.0",f;s?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/p[0]},
          ${c[1]/p[1]},
          ${c[1]/p[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Mre(r){let{inputs:t,backend:e,attrs:n}=r,{images:o}=t,{alignCorners:s,halfPixelCenters:i,size:a}=n,[l,u]=a,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Vh(o.shape,l,u,s,i):new Gh(o.shape,l,u,s,i);return e.runWebGLProgram(c,[o],o.dtype)}var _F={kernelName:Ua,backendName:"webgl",kernelFunc:Mre};var Uh=class{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;let[,o,s]=e,[,i,a]=t,l=[n&&i>1?o-1:o,n&&a>1?s-1:s],u=[n&&i>1?i-1:i,n&&a>1?a-1:a],c=l[0]/u[0],p=l[1]/u[1],m=1/c,f=1/p,d=Math.ceil(m)*2+2,g=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${f});

        const int winHeight = int(${d});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Pre(r){let{inputs:t,backend:e,attrs:n}=r,{images:o,dy:s}=t,{alignCorners:i}=n,a=new Uh(s.shape,o.shape,i);return e.runWebGLProgram(a,[s],s.dtype)}var DF={kernelName:tc,backendName:"webgl",kernelFunc:Pre};var Wh=class{constructor(t,e){this.variableNames=["x"];let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}let o=a=>e.indexOf(a)!==-1&&t[a]!==1?`${t[a]} - coords[${a}] - 1`:`coords[${a}]`,s=t.map((a,l)=>o(l)).join(","),i=$e(n);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${s}));
      }
    `}};var qh=class{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;let o=Kt("rc",n),s=`${o[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${o[n-2]} + 1 < ${this.outputShape[n-2]}`,a=$e(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${s}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(o.slice())};
          if(${s}){
            result.g = ${u(o.slice())};
          }
          if(${i}) {
            result.b = ${c(o.slice())};
            if(${s}) {
              result.a = ${p(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(d){return m(d)}function u(d){return d[n-1]="("+d[n-1]+" + 1)",m(d)}function c(d){return d[n-2]="("+d[n-2]+" + 1)",m(d)}function p(d){return d[n-1]="("+d[n-1]+" + 1)",d[n-2]="("+d[n-2]+" + 1)",m(d)}function m(d){let g=t.map((y,v)=>f(v,d)),h=g.join(","),x=g.slice(-2).join(",");return`getChannel(getX(${h}), vec2(${x}))`}function f(d,g){return e.indexOf(d)!==-1&&t[d]!==1?`${t[d]} - ${g[d]} - 1`:`${g[d]}`}}};function Lre(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{dims:s}=n,i=o.shape.length,a=b.parseAxisParam(s,o.shape);if(i===0)return jt({inputs:{x:o},backend:e});let l=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qh(o.shape,a):new Wh(o.shape,a);return e.runWebGLProgram(l,[o],o.dtype)}var RF={kernelName:qa,backendName:"webgl",kernelFunc:Lre};var Hh=class{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=t[1],o=t[2];this.outputShape=t;let s="";typeof e=="number"?s=`float outputValue = ${e.toFixed(2)};`:s=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${s}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};var $F={kernelName:bc,backendName:"webgl",kernelFunc:({inputs:r,attrs:t,backend:e})=>{let{image:n}=r,{radians:o,fillValue:s,center:i}=t,a=e,l=new Hh(n.shape,s),[u,c]=N.getImageCenter(i,n.shape[1],n.shape[2]),p=[[u,c,Math.sin(o),Math.cos(o)]];return a.runWebGLProgram(l,[n],n.dtype,p)}};var zre=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Bre=be({opSnippet:zre}),FF={kernelName:li,backendName:"webgl",kernelFunc:Bre};var Gre="return inversesqrt(x);",Vre=be({opSnippet:Gre,cpuKernelImpl:pD}),OF={kernelName:ci,backendName:"webgl",kernelFunc:Vre};var O0=class{constructor(t,e,n,o,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;let u=$e(s.length),c=$e(i.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,f="";o===1?f="i":o===2&&(f="i, coords[1]");let d=`getUpdates(${f})`,g="";l&&(g="coords[0], coords[1]");let h=`getDefaultValue(${g})`,x=e>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${x};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(${h}, sum, float(found)));
        }
      `}};var Kh=class{constructor(t,e,n,o,s,i,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;let u=$e(s.length),c=$e(i.length),p="";n===1?p="i":n===2&&(p="i, j");let m=`getIndices(${p})`,f="";o===1?f="i":o===2&&(f="i, coords[1]");let d=`getUpdates(${f})`,g="";l&&(g="coords[0], coords[1]");let h=`getDefaultValue(${g})`,x=e>1?"strides[j]":"strides",y=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${s});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${x};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${d};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${h}, sum, found));
        }
      `}};function Ure(r){let{inputs:t,backend:e,attrs:n}=r,{indices:o,updates:s}=t,{shape:i}=n,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(s,o,i),m=[p/u,u];if(p===0)return e.makeTensorInfo(i,o.dtype);let f=ne({inputs:{x:o},backend:e,attrs:{shape:[l,a]}}),d=ne({inputs:{x:s},backend:e,attrs:{shape:[l,u]}}),g=e.makeTensorInfo([],"float32",new Float32Array([0])),h;z().getBool("WEBGL_PACK")?h=new Kh(l,a,f.shape.length,d.shape.length,c,m):h=new O0(l,a,f.shape.length,d.shape.length,c,m);let x=e.runWebGLProgram(h,[d,f,g],d.dtype),y=ne({inputs:{x},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(x),e.disposeIntermediateTensorInfo(g),y}var MF={kernelName:nc,backendName:"webgl",kernelFunc:Ure};var jh=class{constructor(t,e,n,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,n];let s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,a=z().getNumber("WEBGL_VERSION")===2?s:i,l=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Wre(r){let{inputs:t,backend:e,attrs:n}=r,{sortedSequence:o,values:s}=t,{side:i}=n,a=new jh(o.shape[0],o.shape[1],s.shape[1],i),l=[[o.shape[1]]];return e.runWebGLProgram(a,[o,s],"int32",l)}var PF={kernelName:sc,backendName:"webgl",kernelFunc:Wre};var Xh=class{constructor(t,e,n){this.variableNames=["c","a","b"],this.outputShape=e;let o,s;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)s="resRC",o="resRC";else{let a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let c=0;c<e.length;c++)u.push(`${a[c]}`),c<t&&l.push(`${a[c]}`);o=l.join(),s=u.join()}let i=$e(n);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${s}));
        } else {
          setOutput(getB(${s}));
        }
      }
    `}};function qre(r){let{inputs:t,backend:e}=r,{condition:n,t:o,e:s}=t,i=new Xh(n.shape.length,o.shape,o.shape.length);return e.runWebGLProgram(i,[n,o,s],or(o.dtype,s.dtype))}var LF={kernelName:Ha,backendName:"webgl",kernelFunc:qre};var Hre=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Kre=be({opSnippet:Hre}),zF={kernelName:ui,backendName:"webgl",kernelFunc:Kre};var jre=To+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Xre=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Yre=be({opSnippet:jre,packedOpSnippet:Xre,cpuKernelImpl:fD}),BF={kernelName:di,backendName:"webgl",kernelFunc:Yre};var Zre=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Jre=be({opSnippet:Zre}),GF={kernelName:fi,backendName:"webgl",kernelFunc:Jre};var Qre=To+`
  return sin(x);
`,ene=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${zn}
  return result;
`,tne=be({opSnippet:Qre,packedOpSnippet:ene}),VF={kernelName:pi,backendName:"webgl",kernelFunc:tne};var rne=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,nne=be({opSnippet:rne}),UF={kernelName:mi,backendName:"webgl",kernelFunc:nne};var one=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,sne=be({opSnippet:one}),WF={kernelName:hi,backendName:"webgl",kernelFunc:sne};var ine=r=>{let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{blockShape:s,paddings:i}=n;b.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let a=s.reduce((x,y)=>x*y),l=[[0,0]];l.push(...i);for(let x=1+s.length;x<o.shape.length;++x)l.push([0,0]);let u=[],c=R8({inputs:{x:o},backend:e,attrs:{paddings:l,constantValue:0}}),p=N.getReshaped(c.shape,s,a,!1),m=N.getPermuted(p.length,s.length,!1),f=N.getReshapedPermuted(c.shape,s,a,!1),d=ne({inputs:{x:c},backend:e,attrs:{shape:p}}),g=It({inputs:{x:d},backend:e,attrs:{perm:m}}),h=ne({inputs:{x:g},backend:e,attrs:{shape:f}});return u.push(c),u.push(d),u.push(g),u.forEach(x=>e.disposeIntermediateTensorInfo(x)),h},qF={kernelName:Xa,backendName:"webgl",kernelFunc:ine};function ane(r){let{inputs:t,backend:e}=r,{indices:n,values:o,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(n.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${n.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let a=e.readSync(n.dataId),l=e.readSync(o.dataId),u=e.readSync(s.dataId),c=e.readSync(i.dataId)[0],[p,m,f,d,g]=hD(a,n.shape,n.dtype,l,o.dtype,u,c);return[e.makeTensorInfo(m,n.dtype,p),e.makeTensorInfo([m[0]],o.dtype,f),e.makeTensorInfo([d.length],"bool",new Uint8Array(d.map(h=>Number(h)))),e.makeTensorInfo([g.length],n.dtype,new Int32Array(g))]}var HF={kernelName:ic,backendName:"webgl",kernelFunc:ane};function lne(r){let{inputs:t,backend:e}=r,{inputIndices:n,inputShape:o,newShape:s}=t;if(n.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${n.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(e.readSync(o.dataId)),a=e.readSync(n.dataId),l=Array.from(e.readSync(s.dataId)),[u,c,p]=gD(a,n.shape,n.dtype,i,l);return[e.makeTensorInfo(c,n.dtype,u),e.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}var KF={kernelName:ac,backendName:"webgl",kernelFunc:lne};function cne(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=e.readSync(n.dataId),a=e.readSync(o.dataId),l=e.readSync(s.dataId),[u,c]=_d(i,n.shape,n.dtype,a,l,!0);return e.makeTensorInfo(c,n.dtype,u)}var jF={kernelName:lc,backendName:"webgl",kernelFunc:cne};function une(r){let{inputs:t,backend:e}=r,{data:n,indices:o,segmentIds:s}=t;if(n.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=e.readSync(n.dataId),a=e.readSync(o.dataId),l=e.readSync(s.dataId),[u,c]=_d(i,n.shape,n.dtype,a,l);return e.makeTensorInfo(c,n.dtype,u)}var XF={kernelName:cc,backendName:"webgl",kernelFunc:une};function pne(r){let{inputs:t,backend:e,attrs:n}=r,{sparseIndices:o,sparseValues:s,defaultValue:i}=t,{outputShape:a}=n,{sliceRank:l,numUpdates:u,sliceSize:c,strides:p,outputSize:m}=N.calculateShapes(s,o,a),f=!1;if(s.dtype==="string"){let x=e.bufferSync(o),y=e.bufferSync(s),v=b.decodeString(e.readSync(i.dataId)[0]),w=mD(x,y,a,m,c,u,l,p,v,f);return e.makeTensorInfo(a,w.dtype,w.values)}let d=new O0(u,l,o.shape.length,s.shape.length,p,[m,1],f),g=e.runWebGLProgram(d,[s,o,i],s.dtype),h=ne({inputs:{x:g},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(g),h}var YF={kernelName:uc,backendName:"webgl",kernelFunc:pne};function mne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{numOrSizeSplits:s,axis:i}=n,a=b.parseAxisParam(i,o.shape)[0],l=N.prepareSplitSize(o,s,a),u=o.shape.length,c=new Array(u).fill(0),p=o.shape.slice();return l.map(m=>{let f=[...p];f[a]=m;let d=Ho({inputs:{x:o},backend:e,attrs:{begin:c,size:f}});return c[a]+=m,d})}var ZF={kernelName:Ya,backendName:"webgl",kernelFunc:mne};var JF="return sqrt(x);",fne=be({opSnippet:JF,packedOpSnippet:JF,cpuKernelImpl:xD}),QF={kernelName:gi,backendName:"webgl",kernelFunc:fne};var dne="return x * x;",hne=be({opSnippet:dne}),eO={kernelName:pc,backendName:"webgl",kernelFunc:hne};var tO="return (a - b) * (a - b);",gne=nt({opSnippet:tO,packedOpSnippet:tO}),rO={kernelName:xi,backendName:"webgl",kernelFunc:gne};function xne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t;if(o.dtype!=="string")throw new Error("Input must be of datatype string");let s=e.readSync(o.dataId),i=N.fromUint8ToStringArray(s),a=yD(i,"string",n);return e.makeTensorInfo(o.shape,"string",a)}var nO={kernelName:nl,backendName:"webgl",kernelFunc:xne};function yne({inputs:r,attrs:t,backend:e}){let{x:n}=r,o=fr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Rr(n.shape,o);return e.runWebGLProgram(s,[n],n.dtype)}var oO={kernelName:wi,backendName:"webgl",kernelFunc:yne};var Yh=class{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;let o=n.length,s=$e(n.length),i=$e(n.length),a="";if(o===1)a="coords * strides + begin";else{let l=0;a=n.map((u,c)=>(l++,n.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${l-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${s} begin = ${s}(${t});
      ${s} strides = ${s}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};function bne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{begin:s,end:i,strides:a,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:m}=n,{finalShapeSparse:f,finalShape:d,isIdentity:g,sliceDim0:h,isSimpleSlice:x,begin:y,end:v,strides:w}=Cr.sliceInfo(o.shape,s,i,a,l,u,c,p,m),I;if(g)I=ne({inputs:{x:o},backend:e,attrs:{shape:d}});else if(h||x){b.assert(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);let _=Cr.computeOutShape(y,v,w),D=Ho({inputs:{x:o},backend:e,attrs:{begin:y,size:_}});I=ne({inputs:{x:D},backend:e,attrs:{shape:d}}),e.disposeIntermediateTensorInfo(D)}else if(e.shouldExecuteOnCPU([o])){let D=e.readSync(o.dataId),M=ye(o.shape,o.dtype,D),P=bD(f,M,w,y);I=e.makeTensorInfo(d,o.dtype,P.values)}else{let D=new Yh(y,w,f);I=e.runWebGLProgram(D,[o],o.dtype)}let E=ne({inputs:{x:I},backend:e,attrs:{shape:d}});return e.disposeIntermediateTensorInfo(I),E}var sO={kernelName:mc,backendName:"webgl",kernelFunc:bne};function vne(r){let{inputs:t,backend:e,attrs:n}=r,{separator:o,nGramWidths:s,leftPad:i,rightPad:a,padWidth:l,preserveShortSequences:u}=n,{data:c,dataSplits:p}=t,m=e.readSync(c.dataId),f=e.readSync(p.dataId),[d,g]=vD(m,f,o,s,i,a,l,u);return[e.makeTensorInfo([d.length],"string",d),e.makeTensorInfo(p.shape,"int32",g)]}var iO={kernelName:fc,backendName:"webgl",kernelFunc:vne};function wne(r){let{inputs:t,backend:e,attrs:n}=r,{skipEmpty:o}=n,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let a=e.readSync(s.dataId),l=e.readSync(i.dataId)[0],[u,c,p]=wD(a,l,o),m=c.length;return[e.makeTensorInfo([m,2],"int32",u),e.makeTensorInfo([m],"string",c),e.makeTensorInfo([2],"int32",new Int32Array(p))]}var aO={kernelName:dc,backendName:"webgl",kernelFunc:wne};function Tne(r){let{inputs:t,backend:e,attrs:n}=r,{numBuckets:o}=n,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");let i=e.readSync(s.dataId),a=TD(i,o);return e.makeTensorInfo(s.shape,"int32",a)}var lO={kernelName:hc,backendName:"webgl",kernelFunc:Tne};var Cne="return tan(x);",Sne=be({opSnippet:Cne}),cO={kernelName:bi,backendName:"webgl",kernelFunc:Sne};var Ine=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Nne=be({opSnippet:Ine}),uO={kernelName:vi,backendName:"webgl",kernelFunc:Nne};function kne(r){let{inputs:t,backend:e,attrs:n}=r,{tensor:o,indices:s,updates:i}=t,{}=n,{sliceRank:a,numUpdates:l,sliceSize:u,strides:c,outputSize:p}=N.calculateShapes(i,s,o.shape),m=[p/u,u];if(p===0)return e.makeTensorInfo(o.shape,s.dtype);let f=ne({inputs:{x:s},backend:e,attrs:{shape:[l,a]}}),d=ne({inputs:{x:i},backend:e,attrs:{shape:[l,u]}}),g=ne({inputs:{x:o},backend:e,attrs:{shape:m}}),h=new O0(l,a,f.shape.length,d.shape.length,c,m,!1,!0),x=e.runWebGLProgram(h,[d,f,g],g.dtype),y=ne({inputs:{x},backend:e,attrs:{shape:o.shape}});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(x),y}var pO={kernelName:oc,backendName:"webgl",kernelFunc:kne};var Zh=class{constructor(t,e){this.variableNames=["A"];let n=new Array(t.length);for(let i=0;i<n.length;i++)n[i]=t[i]*e[i];this.outputShape=n,this.rank=n.length;let o=$e(this.rank),s=Ane(t);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${s}));
      }
    `}};function Ane(r){let t=r.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${r[0]})`;let e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],n=[];for(let o=0;o<r.length;o++)n.push(`imod(${e[o]}, ${r[o]})`);return n.join()}function F8(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{reps:s}=n;if(o.dtype==="string"||o.shape.length>5){let l=e.readSync(o.dataId),u=o.dtype==="string"?l.map(m=>b.decodeString(m)):l,c=ye(o.shape,o.dtype,u),p=SD(c,s);return e.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Zh(o.shape,s);return e.runWebGLProgram(i,[o],o.dtype)}var mO={kernelName:rs,backendName:"webgl",kernelFunc:F8};var Jh=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Qh=class{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Jl(r,t){t!==null&&r.disposeIntermediateTensorInfo(t)}function fO(r){let t=1;for(;t<r;)t*=2;return t}function Ene(r){let{inputs:t,backend:e,attrs:n}=r,{x:o}=t,{k:s,sorted:i}=n,a=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,c=u[u.length-1];if(e.shouldExecuteOnCPU([o])||c<a||s>l){let P=e.readSync(o.dataId),[V,U]=ID(P,u,o.dtype,s,i);return[e.makeTensorInfo(V.shape,V.dtype,V.values),e.makeTensorInfo(U.shape,U.dtype,U.values)]}if(s===0)return u[u.length-1]=0,[e.makeTensorInfo(u,o.dtype,[]),e.makeTensorInfo(u,"int32",[])];if(c===1)return[o,Wi({attrs:{shape:u,dtype:"int32",value:0},backend:e})];let p=e.texData.get(o.dataId),m=p!==null&&p.isPacked,f=m?e.unpackTensor(o):o,g=b.sizeFromShape(u)/c,h=ne({inputs:{x:f},attrs:{shape:[g,c]},backend:e});m&&Jl(e,f);let x=fO(s),y=fO(c),v=null,w=()=>v===null?[h,h]:[h,v],I=(P,V,U)=>{let q=w(),K=new Jh(U),Y=[[c],[v===null?1:0],[Number.NEGATIVE_INFINITY],[P],[V]],ee=v;v=e.runWebGLProgram(K,q,"int32",Y),Jl(e,ee)};for(let P=1;P<x;P*=2){let V=P*2;for(let U=P;U>=1;U/=2)I(V,U,[g,y])}for(let P=y;P>x;P/=2){let V=w(),U=new Qh([g,P/2]),K=[[c],[v===null?1:0],[x]],j=v;v=e.runWebGLProgram(U,V,"int32",K),Jl(e,j);let Y=x/2,ee=Y*2;for(let Z=Y;Z>=1;Z/=2)I(ee,Z,v.shape)}let E=v;v=Ho({inputs:{x:v},backend:e,attrs:{begin:0,size:[g,s]}}),Jl(e,E);let _=k8({inputs:{x:h,indices:v},backend:e,attrs:{axis:1,batchDims:1}});Jl(e,h);let D=u.slice(0,-1);D.push(s),E=v,v=ne({inputs:{x:v},attrs:{shape:D},backend:e}),Jl(e,E);let M=_;return _=ne({inputs:{x:_},attrs:{shape:D},backend:e}),Jl(e,M),[_,v]}var dO={kernelName:gc,backendName:"webgl",kernelFunc:Ene};var e4=class{constructor(t,e,n,o,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;let a=n==="nearest"?1:2,l;switch(o){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${s});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${s});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function _ne(r){let{inputs:t,backend:e,attrs:n}=r,{image:o,transforms:s}=t,{interpolation:i,fillMode:a,fillValue:l,outputShape:u}=n,[c,p,m,f]=o.shape,[d,g]=u??[p,m],h=[c,d,g,f],x=new e4(p,m,i,a,l,h);return e.runWebGLProgram(x,[o,s],"float32")}var hO={kernelName:xc,backendName:"webgl",kernelFunc:_ne};function Dne(r){let{inputs:t,attrs:e,backend:n}=r,{axis:o}=e,{x:s}=t;ws(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=n.readSync(s.dataId),{outputValues:a,outputShape:l,indices:u}=ND(i,o,s.shape,s.dtype);return[n.makeTensorInfo(l,s.dtype,a),n.makeTensorInfo([u.length],"int32",u)]}var gO={kernelName:yc,backendName:"webgl",kernelFunc:Dne};function Rne(r){let{inputs:t,backend:e,attrs:n}=r,{value:o}=t,{axis:s}=n;s<0&&(s+=o.shape.length);let i=o,a=i.shape.length,l=o.shape[s],u=new Array(a-1),c=0;for(let g=0;g<a;g++)g!==s&&(u[c++]=i.shape[g]);let p=[],m=new Array(a).fill(0),f=i.shape.slice();f[s]=1;let d=new Array(l);for(let g=0;g<d.length;g++){m[s]=g;let h=Ho({inputs:{x:i},backend:e,attrs:{begin:m,size:f}}),x=ne({inputs:{x:h},backend:e,attrs:{shape:u}});d[g]=x,p.push(h)}return p.forEach(g=>e.disposeIntermediateTensorInfo(g)),d}var xO={kernelName:Ja,backendName:"webgl",kernelFunc:Rne};var t4=class{constructor(t,e){this.variableNames=["x","segmentIds"];let n=t.windowSize,o=t.batchSize,s=t.inSize,i=t.numSegments,a=i*Math.ceil(s/n);this.outputShape=[o,a];let l="0.0",u="sumValue",c=Math.floor(n/4)*4,p=n%4,m=`
        sumValue += dot(values, segFilter);
    `,f="";s%n>0&&(f=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return initializationValue;
        }
      `);let d="";s%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${s}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${d}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${c};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${u});
      }
    `}};function $ne(r){let{inputs:t,backend:e,attrs:n}=r,{x:o,segmentIds:s}=t,{numSegments:i}=n,a=o.shape.length,l=[],u=0,c=N.getAxesPermutation([u],a),p=o;c!=null&&(p=It({inputs:{x:o},backend:e,attrs:{perm:c}}),l.push(p),u=N.getInnerMostAxes(1,a)[0]);let m=N.segment_util.computeOutShape(p.shape,u,i),f=b.sizeFromShape([p.shape[u]]),d=ne({inputs:{x:p},backend:e,attrs:{shape:[-1,f]}});l.push(d);let g=ml(o.dtype),h=(w,I,E,_,D)=>{let M=w.shape[0],P=w.shape[1],V=N.segment_util.segOpComputeOptimalWindowSize(P,D),U={windowSize:V,inSize:P,batchSize:M,numSegments:D},q=new t4(U,I),K=e.compileAndRun(q,[w,E],_);if(l.push(K),K.shape[1]===D)return K;let j=$8({backend:e,attrs:{start:0,stop:D,step:1,dtype:"float32"}}),Y=F8({inputs:{x:j},backend:e,attrs:{reps:[P/V]}});return l.push(j),l.push(Y),h(K,I,Y,_,D)},x=h(d,"unsortedSegmentSum",s,g,i),y=ne({inputs:{x},backend:e,attrs:{shape:m}}),v=y;if(c!=null){l.push(y);let w=N.getUndoAxesPermutation(c);v=It({inputs:{x:v},backend:e,attrs:{perm:w}})}return l.forEach(w=>e.disposeIntermediateTensorInfo(w)),v}var yO={kernelName:Qa,backendName:"webgl",kernelFunc:$ne};var Fne=[eR,rR,nR,oR,iR,aR,lR,cR,mR,fR,dR,hR,gR,xR,yR,bR,vR,wR,TR,CR,SR,NR,kR,AR,ER,$R,OR,MR,WD,LR,BR,GR,VR,UR,WR,qR,HR,KR,jR,XR,JR,QR,e$,t$,r$,n$,o$,s$,i$,a$,l$,c$,u$,p$,m$,f$,h$,g$,x$,y$,v$,w$,T$,C$,S$,I$,N$,k$,A$,UD,E$,zR,_$,D$,R$,qD,$$,F$,O$,M$,P$,L$,z$,B$,G$,V$,W$,q$,H$,K$,j$,X$,Z$,Q$,eF,tF,rF,nF,lF,jD,cF,uF,pF,mF,_R,fF,gF,xF,yF,bF,HD,vF,wF,TF,CF,SF,DR,oF,IF,NF,kF,YD,AF,EF,_F,DF,RF,$F,FF,OF,MF,PF,LF,zF,BF,GF,VF,UF,IR,aF,WF,qF,HF,KF,jF,XF,YF,ZF,QF,eO,rO,nO,oO,sO,iO,aO,lO,iF,JD,cO,uO,pO,mO,dO,hO,QD,gO,xO,yO,dF];for(let r of Fne)sm(r);var r4=class r{frequencyRanges={subBass:{min:20,max:60},bass:{min:60,max:250},lowMid:{min:250,max:500},mid:{min:500,max:2e3},highMid:{min:2e3,max:4e3},high:{min:4e3,max:12e3},veryHigh:{min:12e3,max:2e4}};energyThresholds={low:.3,medium:.6,high:.8};learningData=[];maxLearningEntries=100;hasAdjustedThresholds=!1;songSegmentHistory=[];maxSegmentHistory=20;yamnetModel;reinforcementLearning={transitionSuccess:new Map,userPreferences:new Map,genreCompatibility:new Map};loadYamnetModel(){return O(this,null,function*(){this.yamnetModel||(this.yamnetModel=yield l7("https://tfhub.dev/google/tfjs-model/yamnet/tfjs/1"))})}constructor(){this.loadLearningData(),this.loadYamnetModel()}analyzeAndSuggestFilters(t,e,n){return O(this,null,function*(){this.learningData.length>=10&&!this.hasAdjustedThresholds&&this.adjustThresholdsFromLearning();let o=new Uint8Array(t.length);for(let c=0;c<t.length;c++)o[c]=Math.floor((t[c]+1)*127.5);let s=this.calculateEnergyLevels(o,e),i=this.detectAudioCharacteristics(s),a=this.findSimilarAudioAnalysis(s,n),l=a&&a.userFeedback&&a.userFeedback.rating!==void 0&&a.userFeedback.rating>=4?this.combineFilters(this.suggestFilters(i,s),a.suggestedFilters,a.userFeedback?.adjustments?.filters):this.suggestFilters(i,s),u=a&&a.userFeedback&&a.userFeedback.rating!==void 0&&a.userFeedback.rating>=4?this.combineEffects(this.suggestEffects(i,s),a.suggestedEffects,a.userFeedback?.adjustments?.effects):this.suggestEffects(i,s);return this.storeAnalysisData({energyLevels:s,characteristics:i,suggestedFilters:l,suggestedEffects:u,metadata:n,timestamp:Date.now()}),{filters:l,effects:u}})}provideFeedback(t,e,n){let o=this.learningData.findIndex(s=>s.timestamp===t);o!==-1&&(this.learningData[o].userFeedback={rating:e,adjustments:n},this.saveLearningData(),this.learningData.filter(s=>s.userFeedback).length>=5&&this.adjustThresholdsFromLearning(),console.log("Feedback stored for future learning"))}loadLearningData(){try{let t=localStorage.getItem("aiAudioLearningData");t&&(this.learningData=JSON.parse(t),console.log(`Loaded ${this.learningData.length} entries of learning data`))}catch(t){console.error("Error loading learning data:",t),this.learningData=[]}}saveLearningData(){try{localStorage.setItem("aiAudioLearningData",JSON.stringify(this.learningData)),console.log(`Saved ${this.learningData.length} entries of learning data`)}catch(t){console.error("Error saving learning data:",t)}}storeAnalysisData(t){this.learningData.push(t),this.learningData.length>this.maxLearningEntries&&(this.learningData.sort((e,n)=>e.timestamp-n.timestamp),this.learningData=this.learningData.slice(this.learningData.length-this.maxLearningEntries)),this.saveLearningData()}findSimilarAudioAnalysis(t,e){if(this.learningData.length===0)return;let n=this.learningData.map(o=>{let s=0;for(let[i,a]of Object.entries(t))if(o.energyLevels[i]){let l=1-Math.abs(a-o.energyLevels[i]);s+=l}return s/=Object.keys(t).length,e&&o.metadata&&(e.genre&&o.metadata.genre&&e.genre===o.metadata.genre&&(s+=.2),e.artist&&o.metadata.artist&&e.artist===o.metadata.artist&&(s+=.1)),{data:o,score:s}});if(n.sort((o,s)=>s.score-o.score),n.length>0&&n[0].score>.8)return n[0].data}adjustThresholdsFromLearning(){let t=this.learningData.filter(s=>s.userFeedback&&s.userFeedback.rating>=3);if(t.length<5)return;let e={},n={};for(let s of t)for(let[i,a]of Object.entries(s.energyLevels))e[i]||(e[i]=0,n[i]=0),e[i]+=a,n[i]++;for(let s of Object.keys(e))e[s]/=n[s];let o=Object.values(e).reduce((s,i)=>s+i,0)/Object.values(e).length;this.energyThresholds.medium=.7*this.energyThresholds.medium+.3*o,this.energyThresholds.low=this.energyThresholds.medium*.5,this.energyThresholds.high=Math.min(this.energyThresholds.medium*1.5,.9),console.log("Adjusted thresholds based on learning data:",this.energyThresholds),this.hasAdjustedThresholds=!0}combineFilters(t,e,n){let o=[...t];if(e)for(let s of e){let i=o.findIndex(a=>a.type===s.type&&Math.abs(a.frequency-s.frequency)<a.frequency*.2);if(i!==-1){let a=o[i];o[i]=g2(Is({},a),{gain:(a.gain+s.gain)/2,Q:a.Q&&s.Q?(a.Q+s.Q)/2:a.Q||s.Q})}else o.push(s)}if(n)for(let s of n){let i=o.findIndex(a=>a.type===s.type&&Math.abs(a.frequency-s.frequency)<a.frequency*.2);i!==-1?o[i]=s:o.push(s)}return o}combineEffects(t,e,n){let o=Is({},t);return e&&(o.reverb=(o.reverb+e.reverb)/2,o.delay=(o.delay+e.delay)/2,o.delayTime=(o.delayTime+e.delayTime)/2,o.feedback=(o.feedback+e.feedback)/2),n&&(n.reverb!==void 0&&(o.reverb=n.reverb),n.delay!==void 0&&(o.delay=n.delay),n.delayTime!==void 0&&(o.delayTime=n.delayTime),n.feedback!==void 0&&(o.feedback=n.feedback)),o}calculateEnergyLevels(t,e){let n=t.length,o=e/(2*n),s={};for(let[i,{min:a,max:l}]of Object.entries(this.frequencyRanges)){let u=Math.floor(a/o),c=Math.min(Math.floor(l/o),n-1),p=0;for(let m=u;m<=c;m++)p+=t[m];s[i]=p/((c-u+1)*255)}return s}detectAudioCharacteristics(t){let e=t.subBass>this.energyThresholds.high||t.bass>this.energyThresholds.high,n=t.lowMid>this.energyThresholds.high||t.mid>this.energyThresholds.high,o=t.highMid>this.energyThresholds.high||t.high>this.energyThresholds.high,s=Object.values(t).reduce((p,m)=>p+m,0)/Object.values(t).length,i=Object.values(t).reduce((p,m)=>p+Math.pow(m-s,2),0)/Object.values(t).length,a=i<.05,l=i>.1,u=t.mid>this.energyThresholds.high&&t.high<this.energyThresholds.medium,c=t.high>this.energyThresholds.high&&t.mid<this.energyThresholds.medium;return{isBassy:e,isMidHeavy:n,isHighHeavy:o,isBalanced:a,isDynamic:l,needsClarity:u,needsWarmth:c}}suggestFilters(t,e){let n=[];return t.isBassy&&e.bass>.9&&n.push({type:"lowshelf",frequency:200,gain:-3}),!t.isBassy&&e.bass<.4&&n.push({type:"lowshelf",frequency:150,gain:3}),t.isMidHeavy&&t.needsClarity&&n.push({type:"peaking",frequency:1e3,gain:-2,Q:1}),!t.isMidHeavy&&t.needsWarmth&&n.push({type:"peaking",frequency:800,gain:2,Q:1}),!t.isHighHeavy&&e.high<.4&&n.push({type:"highshelf",frequency:8e3,gain:3}),t.isHighHeavy&&e.high>.9&&n.push({type:"highshelf",frequency:1e4,gain:-2}),n}suggestEffects(t,e){let n=.2,o=.1,s=.25,i=.2;return t.isHighHeavy?n=.15:t.isBassy?n=.1:t.isBalanced&&(n=.3),t.isDynamic?(o=.2,i=.3):t.isBassy&&(o=.05,i=.1),e.high>e.bass?s=.125:e.bass>e.high&&(s=.375),{reverb:n,delay:o,delayTime:s,feedback:i}}analyzeSongDynamics(t,e,n,o,s){let i=this.calculateEnergyLevels(t,e),a=this.detectAudioCharacteristics(i);return this.songSegmentHistory.push({timestamp:n,energyLevels:i,characteristics:a}),this.songSegmentHistory.length>this.maxSegmentHistory&&this.songSegmentHistory.shift(),this.analyzeSongProgression(n,o,s)}analyzeSongProgression(t,e,n){let o={filters:[],effects:{reverb:.2,delay:.1,delayTime:.25,feedback:.2}};if(this.songSegmentHistory.length<3)return o;let s=this.analyzeEnergyTrends(),i=this.detectSignificantChanges(),a=this.generateDynamicFilters(s,i,t),l=this.generateDynamicEffects(s,i,t);return{filters:a,effects:l}}analyzeEnergyTrends(){let t={increasing:[],decreasing:[],stable:[],average:{}};if(this.songSegmentHistory.length<3)return t;let e={},n={},o=["subBass","bass","lowMid","mid","highMid","high","veryHigh"];for(let s of o){let i=this.songSegmentHistory.map(g=>g.energyLevels[s]||0),a=i.reduce((g,h)=>g+h,0)/i.length;t.average[s]=a;let l=i.length,u=Array.from({length:l},(g,h)=>h),c=u.reduce((g,h)=>g+h,0),p=i.reduce((g,h)=>g+h,0),m=u.reduce((g,h,x)=>g+h*i[x],0),f=u.reduce((g,h)=>g+h*h,0),d=(l*m-c*p)/(l*f-c*c);d>.05?t.increasing.push(s):d<-.05?t.decreasing.push(s):t.stable.push(s)}return t}detectSignificantChanges(){let t=[];if(this.songSegmentHistory.length<3)return t;for(let e=1;e<this.songSegmentHistory.length;e++){let n=this.songSegmentHistory[e],o=this.songSegmentHistory[e-1],s=n.energyLevels.bass-o.energyLevels.bass,i=n.energyLevels.mid-o.energyLevels.mid,a=n.energyLevels.high-o.energyLevels.high,l=Math.abs(s)+Math.abs(i)+Math.abs(a);s>.3&&n.energyLevels.bass>.7?t.push({type:"drop",timeOffset:n.timestamp-this.songSegmentHistory[this.songSegmentHistory.length-1].timestamp,intensity:Math.min(s*2,1)}):i>.15&&a>.15?t.push({type:"build-up",timeOffset:n.timestamp-this.songSegmentHistory[this.songSegmentHistory.length-1].timestamp,intensity:Math.min(i+a,1)}):l<-.4?t.push({type:"breakdown",timeOffset:n.timestamp-this.songSegmentHistory[this.songSegmentHistory.length-1].timestamp,intensity:Math.min(Math.abs(l),1)}):l>.3&&t.push({type:"transition",timeOffset:n.timestamp-this.songSegmentHistory[this.songSegmentHistory.length-1].timestamp,intensity:Math.min(l,1)})}return t}generateDynamicFilters(t,e,n){let o=[];t.increasing.includes("bass")&&!t.increasing.includes("mid")&&o.push({type:"lowshelf",frequency:150,gain:3,applyAt:n+.5,duration:4}),t.decreasing.includes("high")&&t.average.high<.5&&o.push({type:"highshelf",frequency:8e3,gain:2,applyAt:n+.5,duration:3});for(let s of e)s.type==="build-up"?(o.push({type:"highshelf",frequency:4e3,gain:2*s.intensity,applyAt:n+.2,duration:2}),o.push({type:"peaking",frequency:1e3,gain:1.5*s.intensity,Q:1,applyAt:n+.5,duration:2})):s.type==="drop"?(o.push({type:"lowshelf",frequency:100,gain:4*s.intensity,applyAt:n+.1,duration:2.5}),o.push({type:"peaking",frequency:800,gain:-2*s.intensity,Q:1,applyAt:n+.1,duration:2})):s.type==="breakdown"?(o.push({type:"highshelf",frequency:6e3,gain:2*s.intensity,applyAt:n+.3,duration:3}),o.push({type:"lowshelf",frequency:200,gain:-1.5*s.intensity,applyAt:n+.3,duration:3})):s.type==="transition"&&o.push({type:"peaking",frequency:2e3,gain:3*s.intensity,Q:2,applyAt:n+.2,duration:1.5});return o}generateDynamicEffects(t,e,n){let o=.2,s=.1,i=.25,a=.2,l,u;t.increasing.includes("high")&&t.increasing.includes("mid")?o=.15:t.decreasing.includes("bass")&&t.decreasing.includes("mid")&&(o=.3);for(let c of e)c.type==="build-up"?(s=.2,a=.3+.2*c.intensity,i=.3,l=n+.2,u=2):c.type==="drop"?(o=.1,s=.05,a=.1,l=n+.1,u=2):c.type==="breakdown"?(o=.4,s=.15,i=.4,a=.25,l=n+.3,u=3):c.type==="transition"&&(s=.25,i=.2,a=.35,l=n+.2,u=1.5);return{reverb:o,delay:s,delayTime:i,feedback:a,applyAt:l,duration:u}}applyAIMixTransition(t,e,n,o){return O(this,null,function*(){console.log("Applying AI-driven mix transition with intelligent effects");let s=n.createAnalyser(),i=n.createAnalyser();t.connect(s),e.connect(i),s.fftSize=2048,i.fftSize=2048;let a=new Uint8Array(s.frequencyBinCount),l=new Uint8Array(i.frequencyBinCount);s.getByteFrequencyData(a),i.getByteFrequencyData(l);let u=yield this.analyzeAndSuggestFilters(new Float32Array(a),n.sampleRate),c=yield this.analyzeAndSuggestFilters(new Float32Array(l),n.sampleRate),p=[],m=n.currentTime,f=n.createBiquadFilter();f.type="lowshelf",f.frequency.value=200;let d=n.createBiquadFilter();d.type="peaking",d.frequency.value=1e3,d.Q.value=1;let g=n.createBiquadFilter();if(g.type="highshelf",g.frequency.value=3200,u.filters.some(h=>h.type==="lowshelf"&&h.gain>0)&&c.filters.some(h=>h.type==="lowshelf"&&h.gain<0)&&(f.gain.setValueAtTime(0,m),f.gain.linearRampToValueAtTime(-6,m+o*.8)),u.filters.some(h=>h.type==="highshelf"&&h.gain<0)&&c.filters.some(h=>h.type==="highshelf"&&h.gain>0)&&(g.gain.setValueAtTime(-6,m),g.gain.linearRampToValueAtTime(3,m+o*.6)),u.effects.delay>.2||c.effects.delay>.2){let h=n.createDelay(),x=n.createGain(),y=n.createGain(),v=Math.max(u.effects.delayTime,c.effects.delayTime);h.delayTime.value=v;let w=Math.max(u.effects.feedback,c.effects.feedback);x.gain.value=w,h.connect(x),x.connect(h),y.gain.setValueAtTime(.1,m),y.gain.linearRampToValueAtTime(.3,m+o*.5),y.gain.linearRampToValueAtTime(.1,m+o),console.log("Applied AI-driven delay effects for transition")}Math.abs(u.effects.reverb-c.effects.reverb)>.1&&console.log("Applied AI-driven reverb adjustments for transition"),console.log("AI-driven transition effects applied successfully")})}learnFromTransition(t,e,n,o){return O(this,null,function*(){let s=`${t.genre}-${e.genre}-${Math.round(t.bpm/10)*10}-${Math.round(e.bpm/10)*10}`,a=((this.reinforcementLearning.transitionSuccess.get(s)||5)+n)/2;if(this.reinforcementLearning.transitionSuccess.set(s,a),o){let l=o==="love"?2:o==="like"?1.5:.5;this.reinforcementLearning.transitionSuccess.set(s,a*l)}localStorage.setItem("djAI_learning",JSON.stringify(Object.fromEntries(this.reinforcementLearning.transitionSuccess)))})}predictOptimalTransition(t,e){let n={song:e[0],confidence:0,suggestedEffects:{},transitionDuration:8};for(let o of e){let s=`${t.genre}-${o.genre}-${Math.round(t.bpm/10)*10}-${Math.round(o.bpm/10)*10}`,i=this.reinforcementLearning.transitionSuccess.get(s)||5,a=this.calculateBPMCompatibility(t.bpm,o.bpm),l=this.calculateGenreCompatibility(t.genre,o.genre),u=this.calculateEmotionalCompatibility(t,o),c=(i*.4+a*.3+l*.2+u*.1)/10;c>n.confidence&&(n={song:o,confidence:c,suggestedEffects:this.generateSmartEffects(t,o),transitionDuration:this.calculateOptimalTransitionDuration(t,o)})}return n}calculateBPMCompatibility(t,e){let n=Math.abs(t-e);return n<=5?10:n<=10?8:n<=20?6:n<=30?4:2}calculateGenreCompatibility(t,e){return t===e?10:{house:{techno:8,"deep house":9,progressive:7,trance:6},techno:{house:8,minimal:9,progressive:7,industrial:6},trance:{progressive:9,uplifting:8,house:6,ambient:5},"hip-hop":{"r&b":8,trap:9,funk:7,soul:6},rock:{alternative:8,indie:7,metal:6,punk:7}}[t]?.[e]||3}calculateEmotionalCompatibility(t,e){let n=t.energy||.5,o=e.energy||.5,s=t.valence||.5,i=e.valence||.5,a=Math.abs(n-o),l=Math.abs(s-i);return Math.max(0,10-(a+l)*10)}generateSmartEffects(t,e){let n=Math.abs(t.bpm-e.bpm),o=t.genre===e.genre;return{crossfade:{duration:n>20?12:8,curve:o?"linear":"exponential"},eq:{lowCut:n>15?-3:0,highBoost:o?0:2},effects:{reverb:o?.1:.3,delay:n>10?.2:.1}}}calculateOptimalTransitionDuration(t,e){let n=Math.abs(t.bpm-e.bpm);return t.genre===e.genre&&n<=5?4:n<=10?6:n<=20?8:12}static \u0275fac=function(e){return new(e||r)};static \u0275prov=Qn({token:r,factory:r.\u0275fac,providedIn:"root"})};var Je=Vn(bO());var o4=class r{currentSound=null;nextSound=null;currentSoundData=null;nextSoundData=null;isTransitioning=!1;onTransitionComplete=null;constructor(){Je.Howler.autoUnlock=!0,Je.Howler.html5PoolSize=10}loadAndPlay(t,e,n){this.currentSound&&(this.currentSound.fade(this.currentSound.volume(),0,500),setTimeout(()=>{this.currentSound&&this.currentSound.stop()},500));let o=new Je.Howl({src:[t],html5:!1,preload:!0,volume:1,format:["mp3","wav","ogg"],onend:()=>{e&&e()},onload:()=>{n&&n()},onloaderror:(s,i)=>{console.error("Error loading sound:",i)},onplayerror:(s,i)=>{console.error("Error playing sound:",i),o.once("unlock",()=>{o.play()})}});return this.currentSound=o,this.currentSoundData={url:t,duration:0,onEnd:e,onLoad:n},o.play(),o.fade(0,1,1e3),o}preloadNext(t,e,n){let o=new Je.Howl({src:[t],html5:!1,preload:!0,volume:0,format:["mp3","wav","ogg"],onend:()=>{e&&e()},onload:()=>{n&&n(),this.nextSoundData&&(this.nextSoundData.duration=o.duration())}});return this.nextSound=o,this.nextSoundData={url:t,duration:0,onEnd:e,onLoad:n},o}applyReverb(t){if(!this.currentSound||!this.currentSound._sounds?.[0]?._node)return;let e=this.currentSound._sounds[0]._node,n=Je.Howler.ctx.createConvolver();n.buffer=this.generateImpulseResponse(2,t),e.connect(n),n.connect(Je.Howler.masterGain)}applyDelay(t){if(!this.currentSound||!this.currentSound._sounds?.[0]?._node)return;let e=this.currentSound._sounds[0]._node,n=Je.Howler.ctx.createDelay(5);n.delayTime.value=t,e.connect(n),n.connect(Je.Howler.masterGain)}apply3DPanner(){this.currentSound&&(this.currentSound.pannerAttr({panningModel:"HRTF",distanceModel:"inverse",refDistance:1,maxDistance:1e4,rolloffFactor:1,coneInnerAngle:360,coneOuterAngle:0,coneOuterGain:0}),this.currentSound.pos(0,0,-.5))}generateImpulseResponse(t,e){let n=Je.Howler.ctx.sampleRate,o=n*t,s=Je.Howler.ctx.createBuffer(2,o,n),i=s.getChannelData(0),a=s.getChannelData(1);for(let l=0;l<o;l++)i[l]=(Math.random()*2-1)*Math.pow(1-l/o,e),a[l]=(Math.random()*2-1)*Math.pow(1-l/o,e);return s}startTransition(t=10,e=0){if(!this.currentSound||!this.nextSound||this.isTransitioning)return;this.isTransitioning=!0,this.nextSound.seek(e),this.nextSound.play();let n=this.currentSound.seek(),s=this.currentSound.duration()-n,i=Math.min(s,t);this.nextSound.volume(0),this.performCrossfade(i)}performCrossfade(t){if(!this.currentSound||!this.nextSound)return;let e=50,n=t*1e3/e,o=0,s=setInterval(()=>{if(o++,o<=e){let i=o/e,a=Math.cos(i*Math.PI/2),l=Math.sin(i*Math.PI/2);this.currentSound?.volume(a),this.nextSound?.volume(l)}else clearInterval(s),this.currentSound?.volume(0),this.nextSound?.volume(1),this.currentSound?.stop(),this.currentSound=this.nextSound,this.currentSoundData=this.nextSoundData,this.nextSound=null,this.nextSoundData=null,this.isTransitioning=!1,this.onTransitionComplete&&this.onTransitionComplete()},n)}getCurrentPosition(){return this.currentSound?this.currentSound.seek():0}getCurrentDuration(){return this.currentSound?this.currentSound.duration():0}pause(){this.currentSound&&this.currentSound.pause()}resume(){this.currentSound&&this.currentSound.play()}setVolume(t,e=500){if(this.currentSound){let n=this.currentSound.volume();this.currentSound.fade(n,t,e)}}getCurrentSound(){return this.currentSound}getNextSound(){return this.nextSound}isInTransition(){return this.isTransitioning}setOnTransitionComplete(t){this.onTransitionComplete=t}effectChain=[];masterGain=null;applyAIEffectChain(t){if(!this.currentSound||!Je.Howler.ctx)return;this.clearEffectChain();let e=this.currentSound._sounds?.[0]?._node;if(!e)return;let n=e;if(this.masterGain=Je.Howler.ctx.createGain(),t.eq){let{bass:o,mid:s,treble:i}=t.eq,a=Je.Howler.ctx.createBiquadFilter();a.type="lowshelf",a.frequency.value=200,a.gain.value=o;let l=Je.Howler.ctx.createBiquadFilter();l.type="peaking",l.frequency.value=1e3,l.Q.value=1,l.gain.value=s;let u=Je.Howler.ctx.createBiquadFilter();u.type="highshelf",u.frequency.value=4e3,u.gain.value=i,n.connect(a),a.connect(l),l.connect(u),n=u,this.effectChain.push(a,l,u)}if(t.distortion&&t.distortion>0){let o=Je.Howler.ctx.createWaveShaper();o.curve=this.generateDistortionCurve(t.distortion),o.oversample="4x",n.connect(o),n=o,this.effectChain.push(o)}if(t.chorus&&t.chorus>0){let o=this.createChorusEffect(t.chorus);n.connect(o),n=o,this.effectChain.push(o)}if(t.phaser&&t.phaser>0){let o=this.createPhaserEffect(t.phaser);n.connect(o),n=o,this.effectChain.push(o)}if(t.delay&&t.delay>0){let o=this.createAdvancedDelay(t.delay);n.connect(o),n=o,this.effectChain.push(o)}if(t.reverb&&t.reverb>0){let o=this.createAdvancedReverb(t.reverb);n.connect(o),n=o,this.effectChain.push(o)}n.connect(this.masterGain),this.masterGain.connect(Je.Howler.ctx.destination)}createChorusEffect(t){let e=Je.Howler.ctx.createGain(),n=Je.Howler.ctx.createGain(),o=Je.Howler.ctx.createDelay(.1),s=Je.Howler.ctx.createOscillator(),i=Je.Howler.ctx.createGain();return s.frequency.value=.5,i.gain.value=.005*t,s.connect(i),i.connect(o.delayTime),e.connect(o),e.connect(n),o.connect(n),s.start(),{input:e,output:n}}generateDistortionCurve(t){let n=new Float32Array(44100),o=Math.PI/180;for(let s=0;s<44100;s++){let i=s*2/44100-1;n[s]=(3+t)*i*20*o/(Math.PI+t*Math.abs(i))}return n}createAdvancedDelay(t){let e=Je.Howler.ctx.createGain(),n=Je.Howler.ctx.createGain(),o=Je.Howler.ctx.createDelay(1),s=Je.Howler.ctx.createGain(),i=Je.Howler.ctx.createGain();return o.delayTime.value=t,s.gain.value=.3,i.gain.value=.5,e.connect(o),e.connect(n),o.connect(s),s.connect(o),o.connect(i),i.connect(n),{input:e,output:n}}createAdvancedReverb(t){let e=Je.Howler.ctx.createGain(),n=Je.Howler.ctx.createGain(),o=Je.Howler.ctx.createConvolver(),s=Je.Howler.ctx.createGain();return o.buffer=this.generateImpulseResponse(t,2),s.gain.value=t,e.connect(o),e.connect(n),o.connect(s),s.connect(n),{input:e,output:n}}createPhaserEffect(t){let e=Je.Howler.ctx.createGain(),n=Je.Howler.ctx.createGain(),o=Je.Howler.ctx.createBiquadFilter(),s=Je.Howler.ctx.createOscillator(),i=Je.Howler.ctx.createGain();return o.type="allpass",o.frequency.value=1e3,s.frequency.value=.3,i.gain.value=800*t,s.connect(i),i.connect(o.frequency),e.connect(o),o.connect(n),s.start(),{input:e,output:n}}clearEffectChain(){if(this.effectChain.forEach(t=>{try{t.disconnect()}catch{}}),this.effectChain=[],this.masterGain){try{this.masterGain.disconnect()}catch{}this.masterGain=null}}static \u0275fac=function(e){return new(e||r)};static \u0275prov=Qn({token:r,factory:r.\u0275fac,providedIn:"root"})};var Lne=(r,t)=>t.name;function zne(r,t){r&1&&(Xe(0,"button",3),Xi(),Xe(1,"svg",5),Vr(2,"path",6),tt(),l4(),Xe(3,"p",7),lr(4," Dj Mode "),tt()())}function Bne(r,t){r&1&&(Xi(),Xe(0,"svg",18),Vr(1,"path",19),tt())}function Gne(r,t){r&1&&(Xi(),Xe(0,"svg",18),Vr(1,"path",20),tt())}function Vne(r,t){if(r&1){let e=c4();Vr(0,"app-song-carousel",8),Xe(1,"div",9)(2,"div",10)(3,"div")(4,"p",11),lr(5,"PlayList"),tt(),Xe(6,"div",12)(7,"button",13),w2("click",function(){b2(e);let o=un();return v2(o.songs=[])}),Xi(),Xe(8,"svg",14),Vr(9,"path",15),tt()(),l4(),Xe(10,"p",16),lr(11),tt()()(),Xe(12,"button",17),w2("click",function(){b2(e);let o=un();return v2(o.playFirstSong())}),Xr(13,Bne,2,0,":svg:svg",18),Xr(14,Gne,2,0,":svg:svg",18),tt()()(),Vr(15,"app-list-song",8)}if(r&2){let e=un();Zi("songs",e.songs),et(11),Ko((e.selectedPlaylist==null?null:e.selectedPlaylist.name)||"Playlist"),et(2),Yr(e.songs[0].isPlaying?-1:13),et(),Yr(e.songs[0].isPlaying?14:-1),et(),Zi("songs",e.songs)}}function Une(r,t){if(r&1){let e=c4();Xe(0,"div",23),w2("click",function(){let o=b2(e).$implicit,s=un(2);return v2(s.loadPlaylistSongs(o))}),Xe(1,"div",24),Vr(2,"img",25),Xe(3,"div")(4,"p",26),lr(5),tt(),Xe(6,"p",27),lr(7),tt(),Xe(8,"p",28),lr(9),tt()()()()}if(r&2){let e=t.$implicit;et(2),Zi("alt",B8(e.name))("src",e.img,Ql),et(3),Ko(e.name),et(2),Ko(e.artist),et(2),Ji("",e.songs.length," songs")}}function Wne(r,t){if(r&1&&(Xe(0,"div",4)(1,"p"),lr(2,"PlayLists"),tt(),Xe(3,"div",21),t1(4,Une,10,6,"div",22,Lne),tt()()),r&2){let e=un();et(4),r1(e.playlistsApp)}}var vO=class r{constructor(t,e,n,o,s,i,a){this.albumArtService=t;this.bpmDetectionService=e;this.djTransitionService=n;this.metadataService=o;this.aiAudioProcessingService=s;this.howlerAudioService=i;this.emotionAnalysisService=a;this.populateSongsFromUrls();try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),console.log("AudioContext initialized for enhanced 3D audio with improved quality"),this.gainNode=this.audioContext.createGain(),this.gainNode.gain.value=1,this.gainNode.connect(this.audioContext.destination),this.listenerNode=this.audioContext.listener,this.listenerNode.positionX?(this.listenerNode.positionX.value=0,this.listenerNode.positionY.value=0,this.listenerNode.positionZ.value=0,this.listenerNode.forwardX.value=0,this.listenerNode.forwardY.value=0,this.listenerNode.forwardZ.value=-1,this.listenerNode.upX.value=0,this.listenerNode.upY.value=1,this.listenerNode.upZ.value=0):(this.listenerNode.setPosition(0,0,0),this.listenerNode.setOrientation(0,0,-1,0,1,0)),this.createReverbEffect()}catch(l){console.error("Error initializing AudioContext:",l)}}playlistsApp=[{name:"Ti\xEBsto Set #029",artist:"Tiesto",img:"https://geo-media.beatport.com/image_size/590x404/846683c6-4b4d-44db-8ebe-13d5d3cd5f92.jpg",songs:[{url:"https://zoneapi.cloud/music/Adagio%20For%20Strings.mp3"},{url:"https://zoneapi.cloud/music/C'mon%20(Original%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Coming%20Home%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Dawnbreaker%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Drifting%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Grapevine%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Light%20Years%20Away%20(Extended%20Radio%20Edit).mp3"},{url:"https://zoneapi.cloud/music/Lose%20Control%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Meet%20Her%20(Ti%C3%ABsto%20vs.%20Da%20Hool%20-%20Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/My%20Whistle%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Party%20Time%20(Extended%20Mix).mp3"},{url:"https://zoneapi.cloud/music/Pulverturm%20(Ti%C3%ABsto's%20Big%20Room%20Extended%20Remix).mp3"},{url:"https://zoneapi.cloud/music/Red%20Lights%20(Extended%20Version).mp3"},{url:"https://zoneapi.cloud/music/The%20Hypno.mp3"},{url:"https://zoneapi.cloud/music/WOW%20(Extended%20Mix).mp3"}]},{name:"Deorro Set #001",artist:"Deorro",img:"https://geo-media.beatport.com/image_size/590x404/651dd449-1d01-4a84-b352-c3a5caecb7fe.jpg",songs:[{url:"https://zoneapi.cloud/music/deorro/Five More Hours - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Flashlight - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Freak (feat. Steve Bays) - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Me Caes Muy Bien - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Perdoname - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Savage - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Yee - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/deorro/Yo Las Pongo - Original Mix.mp3"}]},{name:"Purple Disco Machine Set #004",artist:"Purple Disco Machine",img:"https://geo-media.beatport.com/image_size/590x404/7425b20c-6134-428c-b006-b0572f07a75f.jpg",songs:[{url:"https://zoneapi.cloud/music/purple/About Damn Time - Purple Disco Machine Extended Remix.mp3"},{url:"https://zoneapi.cloud/music/purple/All My Life - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/At Night - Purple Disco Machine Extended Remix.mp3"},{url:"https://zoneapi.cloud/music/purple/Body Funk - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/Coma Cat - Purple Disco Machine Extended Re-Work.mp3"},{url:"https://zoneapi.cloud/music/purple/Dished (Male Stripper) - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/Don't You Want Me - Purple Disco Machine Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/Drop The Pressure - Purple Disco Machine Remix.mp3"},{url:"https://zoneapi.cloud/music/purple/Emotion - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/Get Up 24 - Original Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/Heartbreaker - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/In My Arms - Extended Mix.mp3"},{url:"https://zoneapi.cloud/music/purple/link-ref-Groovejet.mp3"},{url:"https://zoneapi.cloud/music/purple/On My Mind - Purple Disco Machine Remix (Extended).mp3"},{url:"https://zoneapi.cloud/music/purple/Substitution - Extended.mp3"},{url:"https://zoneapi.cloud/music/purple/YoYo Disco - Purple Disco Machine Extended Remix.mp3"}]}];songList=[];songs=[];selectedPlaylist=null;loadPlaylistSongs(t){this.selectedPlaylist=t,this.songList=[],t&&t.songs&&t.songs.length>0&&(this.songList=[...t.songs],this.populateSongsFromUrls(t.artist))}currentAudioPlayer=null;nextAudioPlayer=null;updateInterval;transitionStarted=!1;transitionFallbackSet=!1;audioContext=null;currentSourceNode=null;nextSourceNode=null;currentPannerNode=null;nextPannerNode=null;gainNode=null;listenerNode=null;reverbNode=null;reverbGain=null;dryGain=null;currentDelayNode=null;currentFeedbackGain=null;currentDelayMix=null;currentDryMix=null;nextDelayNode=null;nextFeedbackGain=null;nextDelayMix=null;nextDryMix=null;analyzer=null;transitionNodes=null;updateProgressListener=()=>this.updateSongProgress();currentSongEndedListener=null;aiAnalysisInterval;previousBassEnergy=0;ngAfterViewInit(){this.initWaveBackground()}initWaveBackground(){let t=document.getElementById("wave-bg-canvas");if(!t)return;let e=t.getContext("2d");if(!e)return;let n=window.innerWidth,o=260;t.width=n,t.height=o,window.addEventListener("resize",()=>{n=window.innerWidth,t.width=n,t.height=o});let s=[{amplitude:32,wavelength:320,speed:.015,color:"rgba(0,255,180,0.18)"},{amplitude:18,wavelength:180,speed:.022,color:"rgba(0,180,255,0.13)"},{amplitude:12,wavelength:90,speed:.03,color:"rgba(255,255,255,0.09)"}];function i(l){e&&(e.clearRect(0,0,n,o),s.forEach((u,c)=>{e.beginPath();for(let p=0;p<=n;p+=2){let m=o/2+Math.sin(p/u.wavelength+l*u.speed+c)*u.amplitude;p===0?e.moveTo(p,m):e.lineTo(p,m)}e.strokeStyle=u.color,e.lineWidth=3,e.stroke()}))}function a(l){i(l/1e3),requestAnimationFrame(a)}a(0)}createReverbEffect(){return O(this,null,function*(){if(this.audioContext)try{this.reverbNode=this.audioContext.createConvolver(),this.reverbGain=this.audioContext.createGain(),this.reverbGain.gain.value=.05,this.dryGain=this.audioContext.createGain(),this.dryGain.gain.value=.95,this.reverbNode.connect(this.reverbGain),this.reverbGain.connect(this.gainNode),this.dryGain.connect(this.gainNode);let t=yield this.generateRoomImpulseResponse();this.reverbNode.buffer=t,console.log("Enhanced 3D audio initialized with minimal reverb")}catch(t){console.error("Failed to create enhanced 3D audio effect:",t)}})}generateRoomImpulseResponse(){return new Promise(t=>{if(!this.audioContext)throw new Error("AudioContext not initialized");let e=this.audioContext.sampleRate,n=.5*e,o=this.audioContext.createBuffer(2,n,e);for(let s=0;s<2;s++){let i=o.getChannelData(s);i[0]=1;for(let a=1;a<n;a++){let l=Math.exp(-a/(e*.2));i[a]=(Math.random()*2-1)*l*.02,a%2===0&&(i[a]*=.8)}}t(o)})}playFirstSong(){if(this.songs.length===0||!this.audioContext)return;let t=this.songs[0];if(this.transitionStarted=!1,this.howlerAudioService.getCurrentSound()){t.isPlaying?(this.howlerAudioService.pause(),t.isPlaying=!1,console.log("Paused Howler audio")):(this.howlerAudioService.resume(),t.isPlaying=!0,console.log("Resumed Howler audio"));return}if(this.initializeWithHowler()){console.log("Using Howler.js for enhanced audio quality and smoother transitions"),this.analyzeAndApplyEmotionEffects(t);return}if(this.currentAudioPlayer?this.currentAudioPlayer.src!==t.songUrl&&(this.currentAudioPlayer.pause(),this.currentAudioPlayer=new Audio(t.songUrl),this.currentAudioPlayer.crossOrigin="anonymous",this.detectBpm(this.currentAudioPlayer,t)):(this.currentAudioPlayer=new Audio(t.songUrl),this.currentAudioPlayer.crossOrigin="anonymous",this.detectBpm(this.currentAudioPlayer,t)),this.currentAudioPlayer&&(this.updateProgressListener&&this.currentAudioPlayer.removeEventListener("timeupdate",this.updateProgressListener),this.currentSongEndedListener&&this.currentAudioPlayer.removeEventListener("ended",this.currentSongEndedListener),this.currentSongEndedListener=()=>{console.log("Song ended event triggered");let n=!1;!this.transitionStarted&&this.songs.length>1?(console.log("Starting DJ transition on song end"),this.startDjTransition(),n=!0,setTimeout(()=>{!this.transitionStarted&&this.songs.length>1&&(console.log("Fallback: DJ transition did not start properly, moving to next song"),this.moveToNextSong())},300)):this.transitionStarted||(t.isPlaying=!1,t.currentTime="0:00",t.progress=0),this.transitionStarted&&this.songs.length>1?console.log("Transition already in progress, letting it handle the song change"):this.songs.length>1&&!n&&(console.log("Moving to next song without transition"),this.moveToNextSong())},this.currentAudioPlayer.addEventListener("timeupdate",this.updateProgressListener),this.currentAudioPlayer.addEventListener("ended",this.currentSongEndedListener),this.setupSpatialAudio(this.currentAudioPlayer,!0)),this.songs.length>1){let n=this.songs[1];this.nextAudioPlayer?this.nextAudioPlayer.src!==n.songUrl&&(this.nextAudioPlayer.pause(),this.nextAudioPlayer=new Audio(n.songUrl),this.nextAudioPlayer.crossOrigin="anonymous",this.detectBpm(this.nextAudioPlayer,n)):(this.nextAudioPlayer=new Audio(n.songUrl),this.nextAudioPlayer.crossOrigin="anonymous",this.detectBpm(this.nextAudioPlayer,n)),this.nextAudioPlayer.volume=0,this.setupSpatialAudio(this.nextAudioPlayer,!1)}else this.nextAudioPlayer&&(this.nextAudioPlayer.pause(),this.nextAudioPlayer=null);t.isPlaying?(this.currentAudioPlayer&&this.currentAudioPlayer.pause(),this.nextAudioPlayer&&this.transitionStarted&&this.nextAudioPlayer.pause(),t.isPlaying=!1,this.transitionStarted=!1):(this.audioContext&&this.audioContext.state==="suspended"&&this.audioContext.resume(),this.currentAudioPlayer&&(this.currentAudioPlayer.play(),this.analyzeAndApplyEmotionEffects(t)),t.isPlaying=!0)}setupSpatialAudio(t,e){if(!this.audioContext||!this.gainNode||!this.reverbNode||!this.reverbGain||!this.dryGain)return;e?(this.currentSourceNode&&this.currentSourceNode.disconnect(),this.currentPannerNode&&this.currentPannerNode.disconnect()):(this.nextSourceNode&&this.nextSourceNode.disconnect(),this.nextPannerNode&&this.nextPannerNode.disconnect());let n=this.audioContext.createMediaElementSource(t),o=this.createAudioProcessingChain(e),s=this.audioContext.createPanner();s.panningModel="HRTF",s.distanceModel="exponential",s.refDistance=1,s.maxDistance=2e4,s.rolloffFactor=1,s.coneInnerAngle=40,s.coneOuterAngle=180,s.coneOuterGain=.7,e?(s.positionX.value=0,s.positionY.value=.2,s.positionZ.value=-1.5,s.orientationX?(s.orientationX.value=0,s.orientationY.value=0,s.orientationZ.value=1):s.setOrientation(0,0,1)):(s.positionX.value=2,s.positionY.value=0,s.positionZ.value=0,s.orientationX?(s.orientationX.value=-.5,s.orientationY.value=0,s.orientationZ.value=-.5):s.setOrientation(-.5,0,-.5));let i=this.audioContext.createGain();n.connect(o.input),o.output.connect(i),i.connect(s);let a=this.audioContext.createGain();s.connect(a),a.connect(this.dryGain),a.connect(this.reverbNode),e?(this.currentSourceNode=n,this.currentPannerNode=s,this.currentDelayNode=o.delayNode,this.currentFeedbackGain=o.feedbackGain,this.currentDelayMix=o.delayMix,this.currentDryMix=o.dryMix):(this.nextSourceNode=n,this.nextPannerNode=s,this.nextDelayNode=o.delayNode,this.nextFeedbackGain=o.feedbackGain,this.nextDelayMix=o.delayMix,this.nextDryMix=o.dryMix)}createAudioProcessingChain(t){if(!this.audioContext)throw new Error("AudioContext not initialized");let e=this.audioContext.createGain();e.gain.value=.9;let n=this.audioContext.createBiquadFilter();n.type="lowshelf",n.frequency.value=60,n.gain.value=2;let o=this.audioContext.createBiquadFilter();o.type="peaking",o.frequency.value=120,o.Q.value=1.2,o.gain.value=3.5;let s=this.audioContext.createBiquadFilter();s.type="peaking",s.frequency.value=400,s.Q.value=1.5,s.gain.value=-1;let i=this.audioContext.createBiquadFilter();i.type="peaking",i.frequency.value=1200,i.Q.value=1.2,i.gain.value=2;let a=this.audioContext.createBiquadFilter();a.type="peaking",a.frequency.value=3e3,a.Q.value=1.5,a.gain.value=2.5;let l=this.audioContext.createBiquadFilter();l.type="peaking",l.frequency.value=7500,l.Q.value=1,l.gain.value=2.5;let u=this.audioContext.createBiquadFilter();u.type="highshelf",u.frequency.value=12e3,u.gain.value=3;let c=this.audioContext.createDynamicsCompressor();c.threshold.value=-24,c.knee.value=12,c.ratio.value=4,c.attack.value=.005,c.release.value=.2;let p=this.audioContext.createGain();p.gain.value=1;let m=this.audioContext.createDelay(2);m.delayTime.value=.01;let f=this.audioContext.createGain();f.gain.value=0;let d=this.audioContext.createGain();d.gain.value=0;let g=this.audioContext.createGain();g.gain.value=1,m.connect(f),f.connect(m),e.connect(n),n.connect(o),o.connect(s),s.connect(i),i.connect(a),a.connect(l),l.connect(u),u.connect(p),p.connect(g),p.connect(m),m.connect(d);let h=this.audioContext.createGain();return g.connect(h),d.connect(h),h.connect(c),{input:e,output:c,delayNode:m,feedbackGain:f,delayMix:d,dryMix:g}}moveToNextSong(){if(this.songs.shift(),this.songs.length>0){if(this.songs.length<2&&this.selectedPlaylist&&this.selectedPlaylist.songs.length>0){let e=Math.floor(Math.random()*this.selectedPlaylist.songs.length),n=this.selectedPlaylist.songs[e],o={title:"Loading...",artists:this.selectedPlaylist.artist,composer:"",duration:"--:--",currentTime:"0:00",coverUrl:"https://dj.beatport.com/picx/vinyl_default2.png",waveformData:Array(100).fill(0).map(()=>Math.floor(Math.random()*100)),songUrl:n.url,isPlaying:!1,progress:0,durationSeconds:0};this.songs.push(o),this.metadataService.extractMetadata(o.songUrl).subscribe(s=>{if(o.title=s.title||o.title,o.composer=s.composer||"",s.duration){let i=Math.floor(s.duration),a=Math.floor(i/60),l=i%60;o.duration=`${a}:${l.toString().padStart(2,"0")}`,o.durationSeconds=i}},s=>console.error("Error loading metadata for new song:",s)),console.log(`Added new random song for continuous playback: ${o.title}`)}let t=this.songs[0];if(this.transitionStarted=!1,this.howlerAudioService.getCurrentSound()){if(console.log("Moving to next song using Howler.js"),this.songs.length>1){let n=this.songs[1];this.howlerAudioService.preloadNext(n.songUrl,()=>{console.log(`Next song ended: "${n.title}"`),this.getHowlerEndedListener()()},()=>{console.log(`Preloaded next song: "${n.title}"`)})}let e=()=>{if(this.howlerAudioService.getCurrentSound()){let n=this.howlerAudioService.getCurrentSound(),o=n.seek(),s=n.duration();if(o&&s){let i=o/s*100,a=Math.floor(o/60),l=Math.floor(o%60),u=`${a}:${l.toString().padStart(2,"0")}`;t.currentTime=u,t.progress=i}n.playing()&&requestAnimationFrame(e)}};e(),this.analyzeAndApplyEmotionEffects(t);return}if(this.currentAudioPlayer=this.nextAudioPlayer,this.currentSourceNode=this.nextSourceNode,this.currentPannerNode=this.nextPannerNode,this.currentDelayNode=this.nextDelayNode,this.currentFeedbackGain=this.nextFeedbackGain,this.currentDelayMix=this.nextDelayMix,this.currentDryMix=this.nextDryMix,this.nextSourceNode=null,this.nextPannerNode=null,this.nextDelayNode=null,this.nextFeedbackGain=null,this.nextDelayMix=null,this.nextDryMix=null,this.analyzer&&this.currentSourceNode&&(this.analyzer.disconnect(),this.currentSourceNode.connect(this.analyzer)),this.currentAudioPlayer){this.currentAudioPlayer.volume=1,this.updateProgressListener&&this.currentAudioPlayer.removeEventListener("timeupdate",this.updateProgressListener),this.currentSongEndedListener&&this.currentAudioPlayer.removeEventListener("ended",this.currentSongEndedListener),this.currentSongEndedListener=()=>{console.log("Song ended event triggered in moveToNextSong"),t.isPlaying=!1,t.currentTime="0:00",t.progress=0,this.transitionStarted=!1;let n=!1;!this.transitionStarted&&this.songs.length>1&&this.nextAudioPlayer&&(console.log("Starting DJ transition on song end from moveToNextSong"),this.startDjTransition(),n=!0,setTimeout(()=>{!this.transitionStarted&&this.songs.length>1&&(console.log("Fallback: DJ transition did not start properly in moveToNextSong, moving to next song"),this.moveToNextSong())},300)),this.transitionStarted&&this.songs.length>1?console.log("Transition already in progress in moveToNextSong, letting it handle the song change"):this.songs.length>1&&!n&&(console.log("Moving to next song without transition from moveToNextSong"),this.moveToNextSong())},this.currentAudioPlayer.addEventListener("timeupdate",this.updateProgressListener),this.currentAudioPlayer.addEventListener("ended",this.currentSongEndedListener),this.currentPannerNode&&this.audioContext&&(this.currentPannerNode.positionX.value=0,this.currentPannerNode.positionY.value=.5,this.currentPannerNode.positionZ.value=-2,this.currentPannerNode.orientationX?(this.currentPannerNode.orientationX.value=0,this.currentPannerNode.orientationY.value=0,this.currentPannerNode.orientationZ.value=1):this.currentPannerNode.setOrientation(0,0,1),this.reverbGain&&this.dryGain&&(this.reverbGain.gain.value=.3,this.dryGain.gain.value=.7));let e=this.currentAudioPlayer.play();this.analyzeAndApplyEmotionEffects(t),e!==void 0&&e.catch(n=>{console.error("Error starting next song playback in moveToNextSong:",n),setTimeout(()=>{this.currentAudioPlayer?.play().catch(o=>console.error("Retry failed in moveToNextSong:",o))},100)})}if(this.songs.length>1){let e=this.songs[1];this.nextAudioPlayer=new Audio(e.songUrl),this.nextAudioPlayer.crossOrigin="anonymous",this.nextAudioPlayer.volume=0,this.setupSpatialAudio(this.nextAudioPlayer,!1)}else this.nextAudioPlayer=null;t.isPlaying=!0,t.progress=0,t.currentTime="0:00"}}updateSongProgress(){if(!this.currentAudioPlayer||this.songs.length===0)return;let t=this.songs[0],e=Math.floor(this.currentAudioPlayer.currentTime),n=Math.floor(e/60),o=e%60;if(t.currentTime=`${n}:${o.toString().padStart(2,"0")}`,t.progress=this.currentAudioPlayer.currentTime/this.currentAudioPlayer.duration*100,this.songs.length>1&&this.nextAudioPlayer&&!this.transitionStarted){let i=this.currentAudioPlayer.duration-this.currentAudioPlayer.currentTime;i<=20&&(console.log(`Starting AI-driven DJ transition with ${i.toFixed(2)} seconds remaining`),this.startDjTransition(),this.transitionFallbackSet||(this.transitionFallbackSet=!0,setTimeout(()=>{this.currentAudioPlayer&&this.songs.length>1&&!this.transitionStarted&&this.currentAudioPlayer.duration-this.currentAudioPlayer.currentTime<=5&&(console.log("Fallback: Song is about to end and DJ transition did not start properly, moving to next song"),this.moveToNextSong()),this.transitionFallbackSet=!1},1e3)))}this.detectAndEnhanceDrops()}preloadedAudioPlayers={};preloadUpcomingSongs(){for(let t=2;t<Math.min(this.songs.length,5);t++){let e=this.songs[t];if(this.preloadedAudioPlayers[t]&&this.preloadedAudioPlayers[t].src===e.songUrl)continue;console.log(`Preloading song ${t}: ${e.title}`);let n=new Audio(e.songUrl);n.crossOrigin="anonymous",n.preload="auto",t===2?(n.preload="auto",n.load()):(n.preload="auto",setTimeout(()=>n.load(),(t-2)*500)),this.preloadedAudioPlayers[t]=n,this.detectBpm(n,e)}}startDjTransition(){let t=this.howlerAudioService.getCurrentSound(),e=this.howlerAudioService.getNextSound();if(t&&e&&!this.howlerAudioService.isInTransition()){console.log("Starting professional DJ transition with Howler.js for enhanced audio quality"),this.transitionStarted=!0,this.preloadUpcomingSongs();let l=this.songs[0],u=this.songs[1],c=l.bpm||128,p=u.bpm||128;console.log(`Transition between songs using Howler: Current BPM: ${c}, Next BPM: ${p}`);let m=t.seek(),d=t.duration()-m,g=Math.min(d,20);this.howlerAudioService.startTransition(g),this.startSpatialTransition();return}if(!this.nextAudioPlayer||this.transitionStarted||!this.currentAudioPlayer||!this.audioContext)return;console.log("Starting professional DJ transition with BPM matching and EQ transitions (fallback method)"),this.transitionStarted=!0,this.preloadUpcomingSongs();let n=this.songs[0],o=this.songs[1],s=n.bpm||128,i=o.bpm||128;console.log(`Transition between songs: Current BPM: ${s}, Next BPM: ${i}`);let a=this.currentAudioPlayer.duration-this.currentAudioPlayer.currentTime;if(this.nextAudioPlayer.readyState<4&&(console.log("Ensuring next song is fully loaded before transition"),this.nextAudioPlayer.load(),this.nextAudioPlayer.readyState<4)){let l=setInterval(()=>{this.nextAudioPlayer&&this.nextAudioPlayer.readyState>=4&&(clearInterval(l),this.continueTransition(s,i,a))},100);setTimeout(()=>{clearInterval(l),console.log("Proceeding with transition even though next song may not be fully loaded"),this.continueTransition(s,i,a)},1500);return}this.djTransitionService&&this.aiAudioProcessingService&&this.currentSourceNode&&this.nextSourceNode&&this.transitionNodes?this.djTransitionService.startTransition(this.transitionNodes,s,i,a,this.audioContext,this.aiAudioProcessingService,this.currentSourceNode,this.nextSourceNode):this.continueTransition(s,i,a)}continueTransition(t,e,n){if(!this.nextAudioPlayer||!this.currentAudioPlayer||!this.audioContext)return;let o=this.djTransitionService.calculateOptimalStartTime(this.currentAudioPlayer.currentTime,this.currentAudioPlayer.duration,t,e);if(this.currentAudioPlayer.currentTime>=o)this.executeTransition(t,e,n);else{let s=(o-this.currentAudioPlayer.currentTime)*1e3;console.log(`Scheduling transition to start in ${s/1e3} seconds for optimal phrase alignment`),setTimeout(()=>{this.executeTransition(t,e,n)},s)}}executeTransition(t,e,n){if(!this.nextAudioPlayer||!this.currentAudioPlayer||!this.audioContext||!this.currentSourceNode||!this.nextSourceNode)return;this.nextAudioPlayer.readyState<3&&this.nextAudioPlayer.load();let o=this.nextAudioPlayer.play();o!==void 0&&o.catch(i=>{console.error("Error starting next song playback:",i),setTimeout(()=>{this.nextAudioPlayer?.play().catch(a=>console.error("Retry failed:",a))},100)});let s=this.djTransitionService.createTransition(this.currentSourceNode,this.nextSourceNode,t,e,this.audioContext);this.transitionNodes=s.transitionNodes,s.currentChain.connect(this.gainNode),s.nextChain.connect(this.gainNode),this.djTransitionService.startTransition(this.transitionNodes,t,e,n,this.audioContext),this.startSpatialTransition(),this.adjustVolumes()}initializeDelayEffect(){if(!this.audioContext||!this.currentDelayNode||!this.currentFeedbackGain||!this.currentDelayMix||!this.currentDryMix)return;let t=this.audioContext.currentTime;this.currentDelayNode.delayTime.setValueAtTime(.2,t),this.currentFeedbackGain.gain.setValueAtTime(0,t),this.currentDelayMix.gain.setValueAtTime(0,t),this.currentDryMix.gain.setValueAtTime(1,t),this.nextDelayNode&&this.nextFeedbackGain&&this.nextDelayMix&&this.nextDryMix&&(this.nextDelayNode.delayTime.setValueAtTime(.01,t),this.nextFeedbackGain.gain.setValueAtTime(0,t),this.nextDelayMix.gain.setValueAtTime(0,t),this.nextDryMix.gain.setValueAtTime(1,t))}startSpatialTransition(){if(!this.currentPannerNode||!this.nextPannerNode||!this.audioContext||!this.reverbGain||!this.dryGain)return;let t=this.audioContext.currentTime,e=20,n=e/4,o=e/2,s=e*3/4;this.currentPannerNode.positionX.setValueAtTime(0,t),this.currentPannerNode.positionY.setValueAtTime(.5,t),this.currentPannerNode.positionZ.setValueAtTime(-2,t),this.currentPannerNode.positionX.linearRampToValueAtTime(-1,t+n),this.currentPannerNode.positionY.linearRampToValueAtTime(.7,t+n),this.currentPannerNode.positionZ.linearRampToValueAtTime(-1.5,t+n),this.currentPannerNode.positionX.linearRampToValueAtTime(-2,t+o),this.currentPannerNode.positionY.linearRampToValueAtTime(.6,t+o),this.currentPannerNode.positionZ.linearRampToValueAtTime(-.5,t+o),this.currentPannerNode.positionX.linearRampToValueAtTime(-2.5,t+s),this.currentPannerNode.positionY.linearRampToValueAtTime(.3,t+s),this.currentPannerNode.positionZ.linearRampToValueAtTime(.5,t+s),this.currentPannerNode.positionX.linearRampToValueAtTime(-3,t+e),this.currentPannerNode.positionY.linearRampToValueAtTime(0,t+e),this.currentPannerNode.positionZ.linearRampToValueAtTime(1,t+e),this.currentPannerNode.orientationX&&(this.currentPannerNode.orientationX.setValueAtTime(0,t),this.currentPannerNode.orientationY.setValueAtTime(0,t),this.currentPannerNode.orientationZ.setValueAtTime(1,t),this.currentPannerNode.orientationX.linearRampToValueAtTime(.7,t+o),this.currentPannerNode.orientationZ.linearRampToValueAtTime(.7,t+o),this.currentPannerNode.orientationX.linearRampToValueAtTime(0,t+e),this.currentPannerNode.orientationZ.linearRampToValueAtTime(-1,t+e)),this.nextPannerNode.positionX.setValueAtTime(3,t),this.nextPannerNode.positionY.setValueAtTime(-.3,t),this.nextPannerNode.positionZ.setValueAtTime(1,t),this.nextPannerNode.positionX.linearRampToValueAtTime(2,t+n),this.nextPannerNode.positionY.linearRampToValueAtTime(0,t+n),this.nextPannerNode.positionZ.linearRampToValueAtTime(.5,t+n),this.nextPannerNode.positionX.linearRampToValueAtTime(1,t+o),this.nextPannerNode.positionY.linearRampToValueAtTime(.2,t+o),this.nextPannerNode.positionZ.linearRampToValueAtTime(0,t+o),this.nextPannerNode.positionX.linearRampToValueAtTime(.5,t+s),this.nextPannerNode.positionY.linearRampToValueAtTime(.4,t+s),this.nextPannerNode.positionZ.linearRampToValueAtTime(-1,t+s),this.nextPannerNode.positionX.linearRampToValueAtTime(0,t+e),this.nextPannerNode.positionY.linearRampToValueAtTime(.5,t+e),this.nextPannerNode.positionZ.linearRampToValueAtTime(-2,t+e),this.nextPannerNode.orientationX&&(this.nextPannerNode.orientationX.setValueAtTime(-.7,t),this.nextPannerNode.orientationY.setValueAtTime(0,t),this.nextPannerNode.orientationZ.setValueAtTime(-.7,t),this.nextPannerNode.orientationX.linearRampToValueAtTime(-.3,t+o),this.nextPannerNode.orientationZ.linearRampToValueAtTime(-.95,t+o),this.nextPannerNode.orientationX.linearRampToValueAtTime(0,t+e),this.nextPannerNode.orientationZ.linearRampToValueAtTime(1,t+e)),this.reverbGain.gain.setValueAtTime(.3,t),this.reverbGain.gain.linearRampToValueAtTime(.5,t+e),this.dryGain.gain.setValueAtTime(.7,t),this.dryGain.gain.linearRampToValueAtTime(.5,t+e)}adjustVolumes(){if(this.howlerAudioService.getCurrentSound()&&this.howlerAudioService.getNextSound()&&this.transitionStarted){let s=this.howlerAudioService.getCurrentSound(),i=s?s.duration()-s.seek():0;if(this.adjustDelayEffect(i),i<=0&&this.songs.length>1){this.moveToNextSong();return}i>0&&requestAnimationFrame(()=>this.adjustVolumes());return}if(!this.currentAudioPlayer||!this.nextAudioPlayer||!this.transitionStarted)return;let t=this.currentAudioPlayer.duration-this.currentAudioPlayer.currentTime,e=Math.max(0,Math.min(1,1-t/20)),n=Math.cos(e*Math.PI/2),o=Math.sin(e*Math.PI/2);if(this.currentAudioPlayer.volume=n,this.nextAudioPlayer.volume=o,this.adjustDelayEffect(t),t<.5&&this.nextAudioPlayer.volume<1&&(this.nextAudioPlayer.volume=1),t<=0&&this.songs.length>1){this.moveToNextSong();return}t>0&&requestAnimationFrame(()=>this.adjustVolumes())}adjustDelayEffect(t){if(!this.audioContext||!this.currentDelayNode||!this.currentFeedbackGain||!this.currentDelayMix||!this.currentDryMix||!this.currentAudioPlayer)return;let e=this.audioContext.currentTime;this.analyzer||(this.analyzer=this.audioContext.createAnalyser(),this.analyzer.fftSize=2048,this.currentSourceNode&&this.currentSourceNode.connect(this.analyzer));let n=this.analyzer.frequencyBinCount,o=new Uint8Array(n);this.analyzer.getByteFrequencyData(o);let s=this.calculateAverageEnergy(o,0,200),i=this.calculateAverageEnergy(o,200,2e3),a=this.calculateAverageEnergy(o,2e3,2e4),l=s/255,u=i/255,c=a/255,p=Math.max(0,Math.min(1,1-t/20));if(t<=10){let m=.2+p*.3,f=l*.1,d=m+f,g=.1+p*.3,h=u*.1,x=g+h,y=.1+p*.3,v=c*.1,w=y+v,I=1-w*.5;this.currentDelayNode.delayTime.linearRampToValueAtTime(d,e+.1),this.currentFeedbackGain.gain.linearRampToValueAtTime(x,e+.1),this.currentDelayMix.gain.linearRampToValueAtTime(w,e+.1),this.currentDryMix.gain.linearRampToValueAtTime(I,e+.1)}this.nextDelayNode&&this.nextFeedbackGain&&this.nextDelayMix&&this.nextDryMix&&(this.nextDelayNode.delayTime.setValueAtTime(.01,e),this.nextFeedbackGain.gain.setValueAtTime(0,e),this.nextDelayMix.gain.setValueAtTime(0,e),this.nextDryMix.gain.setValueAtTime(1,e))}calculateAverageEnergy(t,e,n){if(!this.audioContext||!this.analyzer)return 0;let o=this.audioContext.sampleRate,s=this.analyzer.frequencyBinCount,i=o/(2*s),a=Math.floor(e/i),l=Math.min(s-1,Math.floor(n/i)),u=0,c=0;for(let p=a;p<=l;p++)u+=t[p],c++;return c>0?u/c:0}previousMidEnergy=0;previousHighEnergy=0;dropDetected=!1;dropEffectActive=!1;dropEffectStartTime=0;dropEffectDuration=3;dropDetectionThreshold=.4;dropCooldownTime=10;lastDropTime=0;currentFilterNode=null;aiSuggestedFilters=[];lastAiAnalysisTime=0;dynamicFilters=[];dynamicAnalysisEnabled=!0;detectAndEnhanceDrops(){if(!this.audioContext||!this.currentAudioPlayer||!this.currentSourceNode)return;this.analyzer||(this.analyzer=this.audioContext.createAnalyser(),this.analyzer.fftSize=2048,this.currentSourceNode.connect(this.analyzer));let t=this.audioContext.currentTime,e=this.currentAudioPlayer.currentTime,n=this.currentAudioPlayer.duration||0,o=this.analyzer.frequencyBinCount,s=new Uint8Array(o);this.analyzer.getByteFrequencyData(s);let i=this.calculateAverageEnergy(s,20,250),a=this.calculateAverageEnergy(s,250,2e3),l=this.calculateAverageEnergy(s,2e3,2e4),u=i/255,c=a/255,p=l/255,m=u-this.previousBassEnergy,f=c-this.previousMidEnergy,d=p-this.previousHighEnergy;if(this.previousBassEnergy=u,this.previousMidEnergy=c,this.previousHighEnergy=p,this.processDynamicFilters(t),e-this.lastAiAnalysisTime>=this.aiAnalysisInterval){this.lastAiAnalysisTime=e;let v=this.songs.length>0?this.songs[0]:null,w;if(v){let I=["rock","pop","hip hop","rap","jazz","blues","country","electronic","dance","edm","techno","house","trance","ambient","folk","metal","classical","reggae","r&b","soul"],E=`${v.title} ${v.artists}`.toLowerCase();for(let _ of I)if(E.includes(_)){w=_;break}}this.dynamicAnalysisEnabled?this.applyDynamicFilters(s,e,n,v):this.applyAiSuggestedFilters(s)}if(e-this.lastDropTime<this.dropCooldownTime){this.dropEffectActive&&t-this.dropEffectStartTime>this.dropEffectDuration&&this.endDropEffect();return}let h=m+f+d,x=m>this.dropDetectionThreshold,y=u>.7||c>.7;!this.dropDetected&&x&&y&&h>this.dropDetectionThreshold?(console.log("Drop detected at",e,"seconds"),this.dropDetected=!0,this.lastDropTime=e,this.applyDropEffect()):this.dropDetected&&m<-.2&&(this.dropDetected=!1),this.dropEffectActive&&t-this.dropEffectStartTime>this.dropEffectDuration&&this.endDropEffect()}applyDynamicFilters(t,e,n,o){if(!this.audioContext||!this.currentSourceNode)return;let s=this.aiAudioProcessingService.analyzeSongDynamics(t,this.audioContext.sampleRate,e,n,o?{title:o.title,artist:o.artists,genre:o.genre}:void 0);console.log("AI suggested dynamic filters:",s.filters),console.log("AI suggested dynamic effects:",s.effects);for(let i of s.filters)if(i.applyAt!==void 0&&i.duration!==void 0){let a=this.audioContext.createBiquadFilter();a.type=i.type,a.frequency.value=i.frequency,a.gain.value=0,i.Q!==void 0&&(a.Q.value=i.Q),this.dynamicFilters.push({node:a,applyAt:i.applyAt,duration:i.duration,applied:!1}),console.log(`Scheduled dynamic filter to apply at ${i.applyAt.toFixed(2)}s for ${i.duration.toFixed(2)}s`)}if(this.reverbGain&&this.currentDelayNode&&this.currentFeedbackGain&&this.currentDelayMix&&this.currentDryMix){let i=s.effects;i.applyAt!==void 0&&i.duration!==void 0?(setTimeout(()=>{this.reverbGain.gain.setValueAtTime(this.reverbGain.gain.value,this.audioContext.currentTime),this.reverbGain.gain.linearRampToValueAtTime(i.reverb,this.audioContext.currentTime+.5),this.currentDelayNode.delayTime.setValueAtTime(this.currentDelayNode.delayTime.value,this.audioContext.currentTime),this.currentDelayNode.delayTime.linearRampToValueAtTime(i.delayTime,this.audioContext.currentTime+.5),this.currentFeedbackGain.gain.setValueAtTime(this.currentFeedbackGain.gain.value,this.audioContext.currentTime),this.currentFeedbackGain.gain.linearRampToValueAtTime(i.feedback,this.audioContext.currentTime+.5),this.currentDelayMix.gain.setValueAtTime(this.currentDelayMix.gain.value,this.audioContext.currentTime),this.currentDelayMix.gain.linearRampToValueAtTime(i.delay,this.audioContext.currentTime+.5),console.log("Applied dynamic effects"),setTimeout(()=>{this.reverbGain.gain.linearRampToValueAtTime(.2,this.audioContext.currentTime+1),this.currentDelayMix.gain.linearRampToValueAtTime(.1,this.audioContext.currentTime+1),console.log("Removed dynamic effects")},(i.duration||0)*1e3)},Math.max(0,(i.applyAt-e)*1e3)),console.log(`Scheduled dynamic effects to apply at ${i.applyAt.toFixed(2)}s for ${i.duration.toFixed(2)}s`)):(this.reverbGain.gain.setValueAtTime(this.reverbGain.gain.value,this.audioContext.currentTime),this.reverbGain.gain.linearRampToValueAtTime(i.reverb,this.audioContext.currentTime+1),this.currentDelayNode.delayTime.setValueAtTime(this.currentDelayNode.delayTime.value,this.audioContext.currentTime),this.currentDelayNode.delayTime.linearRampToValueAtTime(i.delayTime,this.audioContext.currentTime+1),this.currentFeedbackGain.gain.setValueAtTime(this.currentFeedbackGain.gain.value,this.audioContext.currentTime),this.currentFeedbackGain.gain.linearRampToValueAtTime(i.feedback,this.audioContext.currentTime+1),this.currentDelayMix.gain.setValueAtTime(this.currentDelayMix.gain.value,this.audioContext.currentTime),this.currentDelayMix.gain.linearRampToValueAtTime(i.delay,this.audioContext.currentTime+1),console.log("Applied AI-suggested effects immediately"))}}processDynamicFilters(t){if(!this.audioContext||!this.currentSourceNode)return;let e=this.currentAudioPlayer?.currentTime||0;for(let n=this.dynamicFilters.length-1;n>=0;n--){let o=this.dynamicFilters[n];if(!o.applied&&e>=o.applyAt)this.currentSourceNode.disconnect(),this.currentSourceNode.connect(o.node),this.gainNode?o.node.connect(this.gainNode):o.node.connect(this.audioContext.destination),o.node.gain.setValueAtTime(0,t),o.node.gain.linearRampToValueAtTime(o.node.gain.value,t+.5),o.applied=!0,console.log(`Applied dynamic filter at ${e.toFixed(2)}s`),setTimeout(()=>{this.audioContext&&o.node&&(o.node.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+.5),setTimeout(()=>{if(this.currentSourceNode&&this.gainNode&&o.node){this.currentSourceNode.disconnect(o.node),o.node.disconnect(this.gainNode),this.currentSourceNode.connect(this.gainNode);let s=this.dynamicFilters.indexOf(o);s!==-1&&this.dynamicFilters.splice(s,1),console.log(`Removed dynamic filter at ${this.currentAudioPlayer?.currentTime.toFixed(2)}s`)}},500))},o.duration*1e3);else if(o.applied&&e>=o.applyAt+o.duration+.5){let s=this.dynamicFilters.indexOf(o);s!==-1&&this.dynamicFilters.splice(s,1)}}}applyAiSuggestedFilters(t){return O(this,null,function*(){let e=new Float32Array(t.length);for(let o=0;o<t.length;o++)e[o]=t[o];let n=yield this.aiAudioProcessingService.analyzeAndSuggestFilters(e,this.audioContext?.sampleRate||44100,this.songs.length>0?{title:this.songs[0].title,artist:this.songs[0].artists,genre:this.songs[0].genre}:void 0);this.lastAiAnalysisTime=Date.now(),console.log("AI suggested filters:",n.filters),console.log("AI suggested effects:",n.effects);for(let o of this.aiSuggestedFilters)o.disconnect();if(this.aiSuggestedFilters=[],n.filters.length>0){if(!this.currentSourceNode)return;let o=this.currentSourceNode;for(let s of n.filters){let i=this.audioContext?.createBiquadFilter();if(!i)return;i.type=s.type,i.frequency.value=s.frequency,i.gain.value=s.gain,s.Q!==void 0&&(i.Q.value=s.Q),o.disconnect(),o.connect(i),o=i,this.aiSuggestedFilters.push(i)}this.gainNode&&o.connect(this.gainNode),console.log(`Applied ${n.filters.length} AI-suggested filters`)}this.reverbGain&&this.currentDelayNode&&this.currentFeedbackGain&&this.currentDelayMix&&this.currentDryMix&&(this.reverbGain.gain.setValueAtTime(this.reverbGain.gain.value,this.audioContext?.currentTime||0),this.reverbGain.gain.linearRampToValueAtTime(n.effects.reverb,(this.audioContext?.currentTime||0)+1),this.currentDelayNode.delayTime.setValueAtTime(this.currentDelayNode.delayTime.value,this.audioContext?.currentTime||0),this.currentDelayNode.delayTime.linearRampToValueAtTime(n.effects.delayTime,(this.audioContext?.currentTime||0)+1),this.currentFeedbackGain.gain.setValueAtTime(this.currentFeedbackGain.gain.value,this.audioContext?.currentTime||0),this.currentFeedbackGain.gain.linearRampToValueAtTime(n.effects.feedback,(this.audioContext?this.audioContext.currentTime:0)+1),this.currentDelayMix.gain.setValueAtTime(this.currentDelayMix.gain.value,this.audioContext?.currentTime||0),this.currentDelayMix.gain.linearRampToValueAtTime(n.effects.delay,(this.audioContext?this.audioContext.currentTime:0)+1),console.log("Applied AI-suggested effects"))})}provideAiFeedback(t,e){let n=this.lastAiAnalysisTime;n>0?(this.aiAudioProcessingService.provideFeedback(n,t,e),console.log(`Provided AI feedback with rating: ${t}`)):console.warn("No recent AI analysis found to provide feedback for")}applyDropEffect(){if(!this.audioContext||!this.currentDelayNode||!this.currentFeedbackGain||!this.currentDelayMix||!this.currentDryMix||!this.reverbGain||!this.dryGain)return;console.log("Applying drop effect"),this.dropEffectActive=!0,this.dropEffectStartTime=this.audioContext.currentTime;let t=this.dropEffectStartTime;this.reverbGain.gain.setValueAtTime(this.reverbGain.gain.value,t),this.reverbGain.gain.linearRampToValueAtTime(.5,t+.1),this.dryGain.gain.setValueAtTime(this.dryGain.gain.value,t),this.dryGain.gain.linearRampToValueAtTime(.8,t+.1),this.currentDelayNode.delayTime.setValueAtTime(this.currentDelayNode.delayTime.value,t),this.currentDelayNode.delayTime.linearRampToValueAtTime(.25,t+.1),this.currentFeedbackGain.gain.setValueAtTime(this.currentFeedbackGain.gain.value,t),this.currentFeedbackGain.gain.linearRampToValueAtTime(.4,t+.1),this.currentDelayMix.gain.setValueAtTime(this.currentDelayMix.gain.value,t),this.currentDelayMix.gain.linearRampToValueAtTime(.4,t+.1),this.currentDryMix.gain.setValueAtTime(this.currentDryMix.gain.value,t),this.currentDryMix.gain.linearRampToValueAtTime(.9,t+.1),this.currentFilterNode&&(this.currentFilterNode.frequency.setValueAtTime(200,t),this.currentFilterNode.frequency.exponentialRampToValueAtTime(8e3,t+.5),this.currentFilterNode.frequency.exponentialRampToValueAtTime(2e3,t+1.5),this.currentFilterNode.Q.setValueAtTime(1,t),this.currentFilterNode.Q.linearRampToValueAtTime(8,t+.5),this.currentFilterNode.Q.linearRampToValueAtTime(1,t+1.5))}endDropEffect(){if(!this.audioContext||!this.currentDelayNode||!this.currentFeedbackGain||!this.currentDelayMix||!this.currentDryMix||!this.reverbGain||!this.dryGain)return;console.log("Ending drop effect"),this.dropEffectActive=!1;let t=this.audioContext.currentTime;this.reverbGain.gain.linearRampToValueAtTime(.3,t+.5),this.dryGain.gain.linearRampToValueAtTime(.7,t+.5),this.currentDelayNode.delayTime.linearRampToValueAtTime(.2,t+.5),this.currentFeedbackGain.gain.linearRampToValueAtTime(.1,t+.5),this.currentDelayMix.gain.linearRampToValueAtTime(.1,t+.5),this.currentDryMix.gain.linearRampToValueAtTime(1,t+.5),this.currentFilterNode&&(this.currentFilterNode.frequency.linearRampToValueAtTime(2e4,t+.5),this.currentFilterNode.Q.linearRampToValueAtTime(1,t+.5))}decodeUrlWithEncodingDetection(t){try{let e=wO.detect(t);if(e&&e.confidence>.8){if(console.log(`Detected encoding: ${e.encoding} with confidence: ${e.confidence}`),e.encoding==="utf-8"||e.encoding==="ascii")return decodeURIComponent(t);console.log(`Using default decoding for ${e.encoding}`)}return decodeURIComponent(t)}catch(e){console.error("Error decoding URL with encoding detection:",e);try{return decodeURIComponent(t)}catch(n){return console.error("Error with default decoding, returning original URL:",n),t}}}populateSongsFromUrls(t="Tiesto"){let e=[...this.songList].sort(()=>Math.random()-.5),n=e.map(o=>{let s="--:--",a="0:00",l="https://dj.beatport.com/picx/vinyl_default2.png",u=Array(100).fill(0).map(()=>Math.floor(Math.random()*100));return{title:"Loading...",artists:t,composer:"",duration:s,currentTime:a,coverUrl:l,waveformData:u,songUrl:o.url,isPlaying:!1,progress:0,durationSeconds:0}});this.songs=n.map((o,s)=>{let i=e[s].url,u=(this.decodeUrlWithEncodingDetection(i).split("/").pop()||"").replace(".mp3",""),c="--:--",p=0,m=new Audio(i);return m.addEventListener("loadedmetadata",()=>{if(m.duration&&!isNaN(m.duration)&&isFinite(m.duration)){let f=Math.floor(m.duration),d=Math.floor(f/60),g=f%60;this.songs[s].duration=`${d}:${g.toString().padStart(2,"0")}`,this.songs[s].durationSeconds=f}}),g2(Is({},o),{title:u,duration:c,durationSeconds:p})}),e.forEach((o,s)=>{this.metadataService.extractMetadata(o.url).subscribe(i=>{if(s<this.songs.length){let a=Is({},this.songs[s]);a.title=i.title||a.title,a.artists=t,a.composer=i.composer||"",this.songs[s]=a,i.picture?a.coverUrl=i.picture:this.albumArtService.getAlbumArt(t,i.title||"").subscribe(l=>{l&&s<this.songs.length&&(this.songs[s].coverUrl=l)},l=>console.error("Error fetching album art:",l))}},i=>{if(console.error("Error extracting metadata:",i),s<this.songs.length){let u=(this.decodeUrlWithEncodingDetection(o.url).split("/").pop()||"").replace(".mp3",""),c="Unknown Title",p="",m=u.split(" - ");if(m.length>1)c=m[0],p=t;else{let f=u.match(/\((.*?)\)/);if(f){let d=f[1];!["original","extended","remix","mix","version","edit"].some(x=>d.toLowerCase().includes(x.toLowerCase()))?(c=u.replace(/\(.*?\)/,"").trim(),p=t):(c=u,p=t)}else c=u,p=t}this.songs[s].title=c,this.songs[s].artists=p}})}),this.fetchAlbumArtForSongs()}fetchAlbumArtForSongs(){setTimeout(()=>{console.log("Starting album art fetch after 1.5-second delay"),this.songs.forEach((t,e)=>{this.albumArtService.getAlbumArt(t.title,t.artists).subscribe(n=>{this.songs[e].coverUrl=n,console.log(`Fetched album art for "${t.title}" by ${t.artists}: ${n}`)})})},2e3)}getHowlerEndedListener(){return()=>{if(console.log("Howler song ended event triggered"),!this.transitionStarted&&this.songs.length>1)console.log("Starting DJ transition on song end (Howler)"),this.startDjTransition();else if(!this.transitionStarted){let t=this.songs[0];t&&(t.isPlaying=!1,t.currentTime="0:00",t.progress=0)}}}initializeWithHowler(){try{if(this.songs.length===0)return!1;let t=this.songs[0];this.howlerAudioService.setOnTransitionComplete(()=>{console.log("Howler transition completed, moving to next song"),this.moveToNextSong()});let e=()=>{console.log("Howler song ended event triggered"),!this.transitionStarted&&this.songs.length>1?(console.log("Starting DJ transition on song end (Howler)"),this.startDjTransition()):this.transitionStarted||(t.isPlaying=!1,t.currentTime="0:00",t.progress=0)},n=this.howlerAudioService.loadAndPlay(t.songUrl,e,()=>{console.log(`Howler loaded first song: "${t.title}"`),t.isPlaying=!0,this.aiAnalysisInterval=setInterval(()=>this.analyzeAndApplyAIEffects(),5e3);let o=()=>{if(this.howlerAudioService.getCurrentSound()){let s=this.howlerAudioService.getCurrentSound(),i=s.seek(),a=s.duration();if(i&&a){let l=i/a*100,u=Math.floor(i/60),c=Math.floor(i%60),p=`${u}:${c.toString().padStart(2,"0")}`;t.currentTime=p,t.progress=l;let m=a-i;m<=20&&!this.transitionStarted&&this.songs.length>1&&(console.log(`Starting DJ transition with ${m.toFixed(1)} seconds remaining (Howler)`),this.startDjTransition(),setTimeout(()=>{this.transitionStarted||(console.log("Fallback: Moving to next song after timeout (Howler)"),this.moveToNextSong())},(m+2)*1e3))}s.playing()&&requestAnimationFrame(o)}};o()});if(this.songs.length>1){let o=this.songs[1];this.howlerAudioService.preloadNext(o.songUrl,()=>{console.log(`Next song ended: "${o.title}"`),this.getHowlerEndedListener()()},()=>{console.log(`Preloaded next song: "${o.title}"`)})}return!0}catch(t){return console.error("Error initializing with Howler:",t),!1}}analyzeAndApplyAIEffects(){return O(this,null,function*(){let t=this.howlerAudioService.getCurrentSound();if(!t||!this.audioContext)return;let e=t._sounds?.[0]?._node;if(e)try{let n=this.audioContext.createMediaElementSource(e),o=this.audioContext.createAnalyser();o.fftSize=2048,n.connect(o),o.connect(this.audioContext.destination);let s=o.frequencyBinCount,i=new Float32Array(s);o.getFloatTimeDomainData(i);let a=yield this.aiAudioProcessingService.analyzeAndSuggestFilters(i,this.audioContext.sampleRate);a.effects.reverb>0&&(this.howlerAudioService.applyReverb(a.effects.reverb),console.log("Aplicando modo espacial con reverb:",a.effects.reverb)),a.effects.delay>0&&(this.howlerAudioService.applyDelay(a.effects.delay),console.log("Aplicando eco con delay:",a.effects.delay)),"spatial3D"in a.effects&&a.effects.spatial3D&&(this.howlerAudioService.apply3DPanner(),console.log("Aplicando modo 3D")),o.disconnect(),n.disconnect()}catch(n){console.error("Error connecting audio nodes:",n)}})}detectBpm(t,e){if(!this.audioContext)return;console.log(`Detecting BPM for "${e.title}" by ${e.artists}...`);let n=new Audio(e.songUrl);n.crossOrigin="anonymous",n.addEventListener("loadedmetadata",()=>{if(n.duration&&!isNaN(n.duration)&&isFinite(n.duration)){let c=Math.floor(n.duration),p=Math.floor(c/60),m=c%60;e.duration=`${p}:${m.toString().padStart(2,"0")}`,e.durationSeconds=c,console.log(`Updated duration for "${e.title}": ${e.duration} (${c}s)`)}});let o=new AudioContext,s=o.createMediaElementSource(n),i=o.createMediaStreamDestination();s.connect(i);let a=[],l;try{l=new MediaRecorder(i.stream)}catch(c){console.error("Error creating MediaRecorder:",c);return}l.ondataavailable=c=>{c.data.size>0&&a.push(c.data)},l.onstop=()=>O(this,null,function*(){let p=yield new Blob(a,{type:"audio/wav"}).arrayBuffer();try{let m=yield this.audioContext.decodeAudioData(p),f=yield this.bpmDetectionService.detectBpm(m);e.bpm=f,console.log(`Detected BPM for "${e.title}": ${f}`),o.close()}catch(m){console.error("Error detecting BPM:",m),e.bpm=128}}),l.start(),n.play();let u=Math.min(30,n.duration||30);setTimeout(()=>{n.pause(),l.stop(),n.src=""},u*1e3)}analyzeAndApplyEmotionEffects(t){return O(this,null,function*(){try{console.log(`Analyzing emotion for "${t.title}" by ${t.artists}...`);let e={tempo:t.bpm||120,energy:.7,frequencyData:new Uint8Array(1024).fill(128),spectralCentroid:1e3,spectralRolloff:5e3,zeroCrossingRate:.1},n=this.emotionAnalysisService.analyzeEmotion(e,{title:t.title,artist:t.artists,genre:t.genre||"unknown"});if(console.log(`Detected emotion: ${n.primaryEmotion} (${(n.confidence*100).toFixed(1)}% confidence)`),console.log(`Secondary emotion: ${n.secondaryEmotion}`),console.log(`Mood: ${n.characteristics.mood}`),console.log(`Energy level: ${n.characteristics.energy}`),this.audioContext&&this.gainNode){let o=this.emotionAnalysisService.applyEmotionEffects(this.audioContext,this.gainNode,n.primaryEmotion,n.intensity);console.log(`Applied ${o.length} emotion-based effect nodes`)}this.aiAudioProcessingService&&this.audioContext&&this.gainNode&&this.aiAudioProcessingService.applyAIMixTransition(this.gainNode,this.gainNode,this.audioContext,2),console.log(`Applied emotion-based effects for "${t.title}" - DJ enhancement complete`)}catch(e){console.error("Error analyzing emotion or applying effects:",e),console.log("Applying default DJ effects as fallback")}})}startRealTimeAnalysis(){if(!this.audioContext)return;let t=this.audioContext.createAnalyser();t.fftSize=2048;let e=t.frequencyBinCount,n=new Uint8Array(e),o=()=>{t.getByteFrequencyData(n);let s=this.calculateEnergyProfile(n),i=this.howlerAudioService.getCurrentPosition();this.predictAndApplyEffects(s,i),requestAnimationFrame(o)};o()}calculateEnergyProfile(t){let e=Math.floor(t.length*.1),n=Math.floor(t.length*.5),o=0,s=0,i=0;for(let u=0;u<e;u++)o+=t[u];for(let u=e;u<n;u++)s+=t[u];for(let u=n;u<t.length;u++)i+=t[u];o/=e,s/=n-e,i/=t.length-n;let a=(o+s+i)/3,l=this.detectEnergyTrend(a);return{bass:o,mid:s,treble:i,overall:a,trend:l}}detectEnergyTrend(t){if(!this.previousBassEnergy)return this.previousBassEnergy=t,"stable";let e=t-this.previousBassEnergy;return this.previousBassEnergy=t,e>10?"building":e<-10?"dropping":"stable"}predictAndApplyEffects(t,e){let n=this.songs[0];if(!n)return;let o=e/(n.durationSeconds||180),s={};o<.15?s={reverb:.3,delay:.2,eq:{bass:0,mid:1,treble:2}}:t.trend==="building"?s={delay:.4,phaser:.3,eq:{bass:2,mid:3,treble:4}}:t.trend==="dropping"&&t.overall>150?s={distortion:.1,reverb:.1,eq:{bass:5,mid:2,treble:3}}:o>.8&&(s={reverb:.5,delay:.3,chorus:.4,eq:{bass:-1,mid:0,treble:1}}),Object.keys(s).length>0&&this.howlerAudioService.applyAIEffectChain(s)}static \u0275fac=function(e){return new(e||r)(Yi(O2),Yi(M2),Yi(P2),Yi(tm),Yi(r4),Yi(o4),Yi(rg))};static \u0275cmp=e1({type:r,selectors:[["app-home"]],decls:8,vars:2,consts:[[1,"m-4","mb-10","flex","justify-between","items-center"],[1,"text-white","text-xl"],[1,"text-green-500"],[1,"bg-zinc-900","text-white","rounded-3xl","shadow-md","px-3","py-1","inline-flex"],[1,"text-gray-200","m-4"],["xmlns","http://www.w3.org/2000/svg","height","20px","viewBox","0 -960 960 960","width","20px","fill","#FFFFFF"],["d","M400-120q-66 0-113-47t-47-113q0-66 47-113t113-47q23 0 42.5 5.5T480-418v-422h240v160H560v400q0 66-47 113t-113 47Z"],[1,"-mt-0.5","ml-1","mr-2"],[3,"songs"],[1,"text-gray-200","pl-4","mt-4","mb-3"],[1,"flex","justify-between","items-center","w-full"],[1,"text-sm"],[1,"inline-flex"],[1,"m-2",3,"click"],["xmlns","http://www.w3.org/2000/svg","height","24px","viewBox","0 -960 960 960","width","24px","fill","#FFFFFF"],["d","M400-80 0-480l400-400 71 71-329 329 329 329-71 71Z"],[1,"font-semibold","mt-1","text-xl"],[1,"bg-emerald-500","z-50","rounded-full","mr-5","h-[50px]","w-[50px]","flex","items-center","justify-center",3,"click"],["xmlns","http://www.w3.org/2000/svg","height","35px","viewBox","0 -960 960 960","width","35px","fill","#000000"],["d","M320-200v-560l440 280-440 280Z"],["d","M560-200v-560h160v560H560Zm-320 0v-560h160v560H240Z"],[1,"grid","grid-cols-1","md:grid-cols-2","lg:grid-cols-3","gap-4","mt-3"],[1,"bg-zinc-900","rounded-lg","p-3","cursor-pointer","hover:bg-zinc-800","transition-colors"],[1,"bg-zinc-900","rounded-lg","p-3","cursor-pointer","hover:bg-zinc-800","transition-colors",3,"click"],[1,"flex","items-center"],[1,"w-16","h-16","rounded-md","object-cover","mr-3",3,"src","alt"],[1,"font-semibold","text-white"],[1,"text-gray-400","text-sm"],[1,"text-gray-500","text-xs"]],template:function(e,n){e&1&&(Xe(0,"div",0)(1,"p",1),lr(2,"Open"),Xe(3,"span",2),lr(4,"beat"),tt()(),Xr(5,zne,5,0,"button",3),tt(),Xr(6,Vne,16,5)(7,Wne,6,0,"div",4)),e&2&&(et(5),Yr(-1),et(),Yr(n.songs.length>1?6:7))},dependencies:[I2,N2],encapsulation:2})};export{vO as Home};
