import{a as x}from"./chunk-MFSGMIY7.js";import{c as I}from"./chunk-ACEJN2MV.js";import{a as A,g as z}from"./chunk-XQMGIZNC.js";import{A as B,B as D,b as g,f as r,s as U,t as m,v as $}from"./chunk-DKJ7BJEZ.js";import{e as f,f as d}from"./chunk-EQVTEUXC.js";var H=f($(),1);var T={text_utf8:0,binary:1,external_info:2,reserved:3},P={len:52,get:(t,e)=>({ID:x.get(t,e),version:r.get(t,e+4)/1e3,descriptorBytes:r.get(t,e+8),headerBytes:r.get(t,e+12),seekTableBytes:r.get(t,e+16),headerDataBytes:r.get(t,e+20),apeFrameDataBytes:r.get(t,e+24),apeFrameDataBytesHigh:r.get(t,e+28),terminatingDataBytes:r.get(t,e+32),fileMD5:new U(16).get(t,e+36)})},L={len:24,get:(t,e)=>({compressionLevel:g.get(t,e),formatFlags:g.get(t,e+2),blocksPerFrame:r.get(t,e+4),finalFrameBlocks:r.get(t,e+8),totalFrames:r.get(t,e+12),bitsPerSample:g.get(t,e+16),channel:g.get(t,e+18),sampleRate:r.get(t,e+20)})},s={len:32,get:(t,e)=>({ID:new m(8,"ascii").get(t,e),version:r.get(t,e+8),size:r.get(t,e+12),fields:r.get(t,e+16),flags:N(r.get(t,e+20))})},E={len:8,get:(t,e)=>({size:r.get(t,e),flags:N(r.get(t,e+4))})};function N(t){return{containsHeader:y(t,31),containsFooter:y(t,30),isHeader:y(t,29),readOnly:y(t,0),dataType:(t&6)>>1}}function y(t,e){return(t&1<<e)!==0}var p=(0,H.default)("music-metadata:parser:APEv2"),_="APEv2",v="APETAGEX",k=class extends B("APEv2"){};function q(t,e,a){return new F(t,e,a).tryParseApeHeader()}var F=class t extends D{constructor(){super(...arguments),this.ape={}}static calculateDuration(e){let a=e.totalFrames>1?e.blocksPerFrame*(e.totalFrames-1):0;return a+=e.finalFrameBlocks,a/e.sampleRate}static findApeFooterOffset(e,a){return d(this,null,function*(){let i=new Uint8Array(s.len),o=e.position;if(a<=s.len){p(`Offset is too small to read APE footer: offset=${a}`);return}if(a>s.len){yield e.readBuffer(i,{position:a-s.len}),e.setPosition(o);let n=s.get(i,0);if(n.ID==="APETAGEX")return n.flags.isHeader?p(`APE Header found at offset=${a-s.len}`):(p(`APE Footer found at offset=${a-s.len}`),a-=n.size),{footer:n,offset:a}}})}static parseTagFooter(e,a,i){let o=s.get(a,a.length-s.len);if(o.ID!==v)throw new k("Unexpected APEv2 Footer ID preamble value");return I(a),new t(e,I(a),i).parseTags(o)}tryParseApeHeader(){return d(this,null,function*(){if(this.tokenizer.fileInfo.size&&this.tokenizer.fileInfo.size-this.tokenizer.position<s.len){p("No APEv2 header found, end-of-file reached");return}let e=yield this.tokenizer.peekToken(s);if(e.ID===v)return yield this.tokenizer.ignore(s.len),this.parseTags(e);if(p(`APEv2 header not found at offset=${this.tokenizer.position}`),this.tokenizer.fileInfo.size){let a=this.tokenizer.fileInfo.size-this.tokenizer.position,i=new Uint8Array(a);return yield this.tokenizer.readBuffer(i),t.parseTagFooter(this.metadata,i,this.options)}})}parse(){return d(this,null,function*(){let e=yield this.tokenizer.readToken(P);if(e.ID!=="MAC ")throw new k("Unexpected descriptor ID");this.ape.descriptor=e;let a=e.descriptorBytes-P.len,i=yield a>0?this.parseDescriptorExpansion(a):this.parseHeader();return this.metadata.setAudioOnly(),yield this.tokenizer.ignore(i.forwardBytes),this.tryParseApeHeader()})}parseTags(e){return d(this,null,function*(){let a=new Uint8Array(256),i=e.size-s.len;p(`Parse APE tags at offset=${this.tokenizer.position}, size=${i}`);for(let o=0;o<e.fields;o++){if(i<E.len){this.metadata.addWarning(`APEv2 Tag-header: ${e.fields-o} items remaining, but no more tag data to read.`);break}let n=yield this.tokenizer.readToken(E);i-=E.len+n.size,yield this.tokenizer.peekBuffer(a,{length:Math.min(a.length,i)});let h=z(a,0,a.length),l=yield this.tokenizer.readToken(new m(h,"ascii"));switch(yield this.tokenizer.ignore(1),i-=l.length+1,n.flags.dataType){case T.text_utf8:{let u=(yield this.tokenizer.readToken(new m(n.size,"utf8"))).split(/\x00/g);yield Promise.all(u.map(w=>this.metadata.addTag(_,l,w)));break}case T.binary:if(this.options.skipCovers)yield this.tokenizer.ignore(n.size);else{let c=new Uint8Array(n.size);yield this.tokenizer.readBuffer(c),h=z(c,0,c.length);let u=A(c.slice(0,h)),w=c.slice(h+1);yield this.metadata.addTag(_,l,{description:u,data:w})}break;case T.external_info:p(`Ignore external info ${l}`),yield this.tokenizer.ignore(n.size);break;case T.reserved:p(`Ignore external info ${l}`),this.metadata.addWarning(`APEv2 header declares a reserved datatype for "${l}"`),yield this.tokenizer.ignore(n.size);break}}})}parseDescriptorExpansion(e){return d(this,null,function*(){return yield this.tokenizer.ignore(e),this.parseHeader()})}parseHeader(){return d(this,null,function*(){let e=yield this.tokenizer.readToken(L);if(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("container","Monkey's Audio"),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("numberOfChannels",e.channel),this.metadata.setFormat("duration",t.calculateDuration(e)),!this.ape.descriptor)throw new k("Missing APE descriptor");return{forwardBytes:this.ape.descriptor.seekTableBytes+this.ape.descriptor.headerDataBytes+this.ape.descriptor.apeFrameDataBytes+this.ape.descriptor.terminatingDataBytes}})}};export{k as a,q as b,F as c};
